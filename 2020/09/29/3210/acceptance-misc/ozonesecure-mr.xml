<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200929 13:55:21.612" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:09.542" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:14.223" level="INFO">${rc} = 255</msg>
<msg timestamp="20200929 13:51:14.223" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:14.224" starttime="20200929 13:51:09.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:14.225" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200929 13:51:14.225" starttime="20200929 13:51:14.224"></status>
</kw>
<msg timestamp="20200929 13:51:14.225" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:14.225" starttime="20200929 13:51:09.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:14.231" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:17.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:17.759" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:17.760" starttime="20200929 13:51:14.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:17.761" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 13:51:17.761" starttime="20200929 13:51:17.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:17.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:17.762" starttime="20200929 13:51:17.761"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:17.762" starttime="20200929 13:51:14.227"></status>
</kw>
<msg timestamp="20200929 13:51:17.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:17.763" starttime="20200929 13:51:14.227"></status>
</kw>
<msg timestamp="20200929 13:51:17.763" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:17.763" starttime="20200929 13:51:14.227"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200929 13:51:17.763" starttime="20200929 13:51:17.763"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:17.764" starttime="20200929 13:51:14.226"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:17.764" starttime="20200929 13:51:14.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:17.769" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:21.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:21.472" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:21.472" starttime="20200929 13:51:17.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:21.473" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 13:51:21.474" starttime="20200929 13:51:21.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:21.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:21.474" starttime="20200929 13:51:21.474"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:21.475" starttime="20200929 13:51:17.766"></status>
</kw>
<msg timestamp="20200929 13:51:21.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:21.475" starttime="20200929 13:51:17.766"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:21.475" starttime="20200929 13:51:17.765"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:21.476" starttime="20200929 13:51:17.764"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:21.476" starttime="20200929 13:51:17.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200929 13:51:21.476" starttime="20200929 13:51:21.476"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:21.483" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:25.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:25.379" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:25.379" starttime="20200929 13:51:21.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:25.380" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-29T13:51:21.201Z",
  "modificationTime" : "2020-09-29T13:51:21.201Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200929 13:51:25.380" starttime="20200929 13:51:25.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:25.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:25.381" starttime="20200929 13:51:25.380"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:25.381" starttime="20200929 13:51:21.477"></status>
</kw>
<msg timestamp="20200929 13:51:25.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:25.382" starttime="20200929 13:51:21.477"></status>
</kw>
<msg timestamp="20200929 13:51:25.382" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:25.382" starttime="20200929 13:51:21.476"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200929 13:51:25.382" starttime="20200929 13:51:25.382"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:51:25.387" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:51:25.387" starttime="20200929 13:51:25.386"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:51:25.388" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:51:25.388" starttime="20200929 13:51:25.387"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:25.390" starttime="20200929 13:51:25.386"></status>
</kw>
<msg timestamp="20200929 13:51:25.390" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:51:25.390" starttime="20200929 13:51:25.385"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:25.390" starttime="20200929 13:51:25.384"></status>
</kw>
<msg timestamp="20200929 13:51:25.390" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200929 13:51:25.390" starttime="20200929 13:51:25.383"></status>
</kw>
<msg timestamp="20200929 13:51:25.391" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200929 13:51:25.391" starttime="20200929 13:51:25.383"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:25.402" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:29.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:29.276" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:29.276" starttime="20200929 13:51:25.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:29.278" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 13:51:29.278" starttime="20200929 13:51:29.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:29.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:29.278" starttime="20200929 13:51:29.278"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:29.279" starttime="20200929 13:51:25.392"></status>
</kw>
<msg timestamp="20200929 13:51:29.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:29.279" starttime="20200929 13:51:25.391"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:29.279" starttime="20200929 13:51:25.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:29.284" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:37.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:37.647" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:37.647" starttime="20200929 13:51:29.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:37.649" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 13:51:37.649" starttime="20200929 13:51:37.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:37.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:37.649" starttime="20200929 13:51:37.649"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:37.650" starttime="20200929 13:51:29.281"></status>
</kw>
<msg timestamp="20200929 13:51:37.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:37.650" starttime="20200929 13:51:29.280"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:37.650" starttime="20200929 13:51:29.280"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:37.654" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:43.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:43.374" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:43.374" starttime="20200929 13:51:37.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:43.376" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 13:51:43.376" starttime="20200929 13:51:43.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:43.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:43.377" starttime="20200929 13:51:43.376"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:43.377" starttime="20200929 13:51:37.652"></status>
</kw>
<msg timestamp="20200929 13:51:43.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:43.377" starttime="20200929 13:51:37.651"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:43.377" starttime="20200929 13:51:37.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:43.382" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:49.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:49.217" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:49.218" starttime="20200929 13:51:43.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:49.219" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 13:51:49.219" starttime="20200929 13:51:49.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:49.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:49.220" starttime="20200929 13:51:49.219"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:49.220" starttime="20200929 13:51:43.379"></status>
</kw>
<msg timestamp="20200929 13:51:49.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:49.220" starttime="20200929 13:51:43.378"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:49.220" starttime="20200929 13:51:43.378"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:51:49.221" critical="yes" starttime="20200929 13:51:09.534"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:51:49.226" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:51:49.227" starttime="20200929 13:51:49.226"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:51:49.227" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:51:49.227" starttime="20200929 13:51:49.227"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:49.228" starttime="20200929 13:51:49.225"></status>
</kw>
<msg timestamp="20200929 13:51:49.228" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:51:49.228" starttime="20200929 13:51:49.225"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:49.228" starttime="20200929 13:51:49.224"></status>
</kw>
<msg timestamp="20200929 13:51:49.228" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:51:49.228" starttime="20200929 13:51:49.223"></status>
</kw>
<msg timestamp="20200929 13:51:49.229" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:51:49.229" starttime="20200929 13:51:49.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:49.233" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:52.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:52.689" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:52.689" starttime="20200929 13:51:49.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:52.691" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 13:51:52.691" starttime="20200929 13:51:52.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:52.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:52.692" starttime="20200929 13:51:52.691"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:52.692" starttime="20200929 13:51:49.230"></status>
</kw>
<msg timestamp="20200929 13:51:52.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:52.692" starttime="20200929 13:51:49.229"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:52.692" starttime="20200929 13:51:49.229"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:52.697" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:56.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:56.445" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200929 13:51:56.445" starttime="20200929 13:51:52.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:56.446" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200929 13:51:56.446" starttime="20200929 13:51:56.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:56.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:56.447" starttime="20200929 13:51:56.446"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:56.447" starttime="20200929 13:51:52.694"></status>
</kw>
<msg timestamp="20200929 13:51:56.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:56.447" starttime="20200929 13:51:52.693"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:56.448" starttime="20200929 13:51:52.693"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:51:56.448" critical="yes" starttime="20200929 13:51:49.222"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200929 13:51:56.450" starttime="20200929 13:51:09.466"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:53:46.028" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:53:46.028" starttime="20200929 13:53:46.027"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:53:46.028" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:53:46.028" starttime="20200929 13:53:46.028"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:46.029" starttime="20200929 13:53:46.026"></status>
</kw>
<msg timestamp="20200929 13:53:46.029" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:53:46.029" starttime="20200929 13:53:46.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:53:46.030" starttime="20200929 13:53:46.030"></status>
</kw>
<msg timestamp="20200929 13:53:46.030" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:53:46.030" starttime="20200929 13:53:46.029"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:46.030" starttime="20200929 13:53:46.024"></status>
</kw>
<msg timestamp="20200929 13:53:46.031" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:53:46.031" starttime="20200929 13:53:46.023"></status>
</kw>
<msg timestamp="20200929 13:53:46.031" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:53:46.031" starttime="20200929 13:53:46.023"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:53:46.032" level="INFO">${random} = 92555</msg>
<status status="PASS" endtime="20200929 13:53:46.032" starttime="20200929 13:53:46.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:53:46.035" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-92555 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:53:49.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:53:49.989" level="INFO">${output} = 2020-09-29 13:53:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:53:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200929 13:53:49.989" starttime="20200929 13:53:46.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:53:49.990" level="INFO">2020-09-29 13:53:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:53:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:53:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:53:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:53:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B3D23D282B53-&gt;53e1be72-9db5-4c61-9f2d-3a7f30f8cebd
2020-09-29 13:53:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200929 13:53:49.990" starttime="20200929 13:53:49.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:53:49.991" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:53:49.991" starttime="20200929 13:53:49.990"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:49.991" starttime="20200929 13:53:46.033"></status>
</kw>
<msg timestamp="20200929 13:53:49.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:53:49.991" starttime="20200929 13:53:46.032"></status>
</kw>
<msg timestamp="20200929 13:53:49.991" level="INFO">${result} = 2020-09-29 13:53:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:53:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200929 13:53:49.992" starttime="20200929 13:53:46.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:53:49.995" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:53:52.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:53:52.160" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:52 ofs://om/volume1/bucket1/ozone-89873
-rw-...</msg>
<status status="PASS" endtime="20200929 13:53:52.160" starttime="20200929 13:53:49.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:53:52.161" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:52 ofs://om/volume1/bucket1/ozone-89873
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:53 ofs://om/volume1/bucket1/ozone-92555
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:51 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:53 ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20200929 13:53:52.161" starttime="20200929 13:53:52.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:53:52.162" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:53:52.162" starttime="20200929 13:53:52.162"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:52.162" starttime="20200929 13:53:49.993"></status>
</kw>
<msg timestamp="20200929 13:53:52.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:53:52.163" starttime="20200929 13:53:49.992"></status>
</kw>
<msg timestamp="20200929 13:53:52.163" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:52 ofs://om/volume1/bucket1/ozone-89873
-rw-...</msg>
<status status="PASS" endtime="20200929 13:53:52.163" starttime="20200929 13:53:49.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:53:52.164" starttime="20200929 13:53:52.163"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 13:53:52.164" critical="yes" starttime="20200929 13:53:46.022"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200929 13:53:52.165" starttime="20200929 13:53:45.966"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:52:07.611" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:52:07.611" starttime="20200929 13:52:07.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:52:07.612" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:52:07.612" starttime="20200929 13:52:07.611"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:07.612" starttime="20200929 13:52:07.609"></status>
</kw>
<msg timestamp="20200929 13:52:07.612" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:52:07.612" starttime="20200929 13:52:07.608"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:07.612" starttime="20200929 13:52:07.608"></status>
</kw>
<msg timestamp="20200929 13:52:07.613" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:52:07.613" starttime="20200929 13:52:07.607"></status>
</kw>
<msg timestamp="20200929 13:52:07.613" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:52:07.613" starttime="20200929 13:52:07.606"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:52:07.613" level="INFO">${random} = 89873</msg>
<status status="PASS" endtime="20200929 13:52:07.614" starttime="20200929 13:52:07.613"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:52:07.617" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-89873 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:52:14.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:52:14.569" level="INFO">${output} = 2020-09-29 13:52:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:52:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200929 13:52:14.569" starttime="20200929 13:52:07.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:52:14.570" level="INFO">2020-09-29 13:52:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:52:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:52:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:52:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:52:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F7D70885244C-&gt;53e1be72-9db5-4c61-9f2d-3a7f30f8cebd
2020-09-29 13:52:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200929 13:52:14.570" starttime="20200929 13:52:14.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:52:14.571" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:52:14.571" starttime="20200929 13:52:14.570"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:14.571" starttime="20200929 13:52:07.615"></status>
</kw>
<msg timestamp="20200929 13:52:14.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:52:14.571" starttime="20200929 13:52:07.614"></status>
</kw>
<msg timestamp="20200929 13:52:14.572" level="INFO">${result} = 2020-09-29 13:52:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:52:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200929 13:52:14.572" starttime="20200929 13:52:07.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:52:14.575" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:52:16.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:52:16.676" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:52 o3fs://bucket1.volume1.om/ozone-89873
dr...</msg>
<status status="PASS" endtime="20200929 13:52:16.677" starttime="20200929 13:52:14.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:52:16.678" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:52 o3fs://bucket1.volume1.om/ozone-89873
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:51 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200929 13:52:16.678" starttime="20200929 13:52:16.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:52:16.678" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:52:16.679" starttime="20200929 13:52:16.678"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:16.679" starttime="20200929 13:52:14.573"></status>
</kw>
<msg timestamp="20200929 13:52:16.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:52:16.679" starttime="20200929 13:52:14.572"></status>
</kw>
<msg timestamp="20200929 13:52:16.679" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-29 13:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-29 13:52 o3fs://bucket1.volume1.om/ozone-89873
dr...</msg>
<status status="PASS" endtime="20200929 13:52:16.679" starttime="20200929 13:52:14.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:52:16.680" starttime="20200929 13:52:16.680"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200929 13:52:16.680" critical="yes" starttime="20200929 13:52:07.605"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200929 13:52:16.681" starttime="20200929 13:52:07.554"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:52:01.959" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:52:01.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:52:01.962" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20200929 13:52:01.962" starttime="20200929 13:52:01.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:52:01.963" level="INFO">rm</msg>
<status status="PASS" endtime="20200929 13:52:01.963" starttime="20200929 13:52:01.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:52:01.964" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:52:01.964" starttime="20200929 13:52:01.963"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:01.964" starttime="20200929 13:52:01.957"></status>
</kw>
<msg timestamp="20200929 13:52:01.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:52:01.964" starttime="20200929 13:52:01.956"></status>
</kw>
<msg timestamp="20200929 13:52:01.965" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20200929 13:52:01.965" starttime="20200929 13:52:01.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 13:52:01.966" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 13:52:01.967" starttime="20200929 13:52:01.965"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:52:01.972" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:52:01.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:52:01.990" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:52:01.990" starttime="20200929 13:52:01.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:52:01.991" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:52:01.991" starttime="20200929 13:52:01.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:52:01.991" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:52:01.992" starttime="20200929 13:52:01.991"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:01.992" starttime="20200929 13:52:01.968"></status>
</kw>
<msg timestamp="20200929 13:52:01.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:52:01.992" starttime="20200929 13:52:01.968"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:01.992" starttime="20200929 13:52:01.967"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:01.992" starttime="20200929 13:52:01.967"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:01.993" starttime="20200929 13:52:01.955"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:52:01.993" critical="yes" starttime="20200929 13:52:01.955"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200929 13:52:01.994" starttime="20200929 13:52:01.908"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:03.938" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:03.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:03.941" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20200929 13:51:03.941" starttime="20200929 13:51:03.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:03.942" level="INFO">om</msg>
<status status="PASS" endtime="20200929 13:51:03.942" starttime="20200929 13:51:03.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:03.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:03.943" starttime="20200929 13:51:03.942"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:03.943" starttime="20200929 13:51:03.932"></status>
</kw>
<msg timestamp="20200929 13:51:03.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:03.943" starttime="20200929 13:51:03.932"></status>
</kw>
<msg timestamp="20200929 13:51:03.944" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20200929 13:51:03.944" starttime="20200929 13:51:03.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200929 13:51:03.944" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200929 13:51:03.945" starttime="20200929 13:51:03.944"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:51:03.949" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:51:03.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:51:03.963" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200929 13:51:03.963" starttime="20200929 13:51:03.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:51:03.964" level="INFO"></msg>
<status status="PASS" endtime="20200929 13:51:03.964" starttime="20200929 13:51:03.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:51:03.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:51:03.965" starttime="20200929 13:51:03.964"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:03.965" starttime="20200929 13:51:03.946"></status>
</kw>
<msg timestamp="20200929 13:51:03.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:51:03.966" starttime="20200929 13:51:03.946"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:03.966" starttime="20200929 13:51:03.945"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:03.966" starttime="20200929 13:51:03.945"></status>
</kw>
<status status="PASS" endtime="20200929 13:51:03.966" starttime="20200929 13:51:03.930"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200929 13:51:03.967" critical="yes" starttime="20200929 13:51:03.929"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200929 13:51:03.968" starttime="20200929 13:51:03.862"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:53:57.734" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:53:57.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:53:57.742" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:53:57.742" starttime="20200929 13:53:57.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:53:57.743" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:53:57.743" starttime="20200929 13:53:57.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:53:57.744" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:53:57.744" starttime="20200929 13:53:57.743"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:57.744" starttime="20200929 13:53:57.732"></status>
</kw>
<msg timestamp="20200929 13:53:57.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:53:57.744" starttime="20200929 13:53:57.731"></status>
</kw>
<msg timestamp="20200929 13:53:57.745" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:53:57.745" starttime="20200929 13:53:57.731"></status>
</kw>
<msg timestamp="20200929 13:53:57.745" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:53:57.745" starttime="20200929 13:53:57.730"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:53:57.749" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:53:57.749" starttime="20200929 13:53:57.749"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:53:57.750" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:53:57.750" starttime="20200929 13:53:57.750"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:57.750" starttime="20200929 13:53:57.748"></status>
</kw>
<msg timestamp="20200929 13:53:57.751" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:53:57.751" starttime="20200929 13:53:57.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:53:57.752" starttime="20200929 13:53:57.751"></status>
</kw>
<msg timestamp="20200929 13:53:57.752" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:53:57.752" starttime="20200929 13:53:57.751"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:57.752" starttime="20200929 13:53:57.747"></status>
</kw>
<msg timestamp="20200929 13:53:57.752" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:53:57.752" starttime="20200929 13:53:57.746"></status>
</kw>
<msg timestamp="20200929 13:53:57.753" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:53:57.753" starttime="20200929 13:53:57.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:53:57.756" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:54:37.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:54:37.943" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:53:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:54:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200929 13:54:37.944" starttime="20200929 13:53:57.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:54:37.945" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:53:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:54:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:54:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:54:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:54:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BC6979B6CCD7-&gt;53e1be72-9db5-4c61-9f2d-3a7f30f8cebd
2020-09-29 13:54:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-29 13:54:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-09-29 13:54:01 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
2020-09-29 13:54:02 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387641937, maxDate=1601992441937, sequenceNumber=3, masterKeyId=2))
2020-09-29 13:54:02 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ea f7 90 d1 cd 2e 38 ea ff c2 f1 cf 2e 40 03 48 01 5a 0d 33 39 36 35 30 39 36 37 39 37 37 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-29 13:54:02 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387641937, maxDate=1601992441937, sequenceNumber=3, masterKeyId=2)
2020-09-29 13:54:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:54:02 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:54:02 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:54:02 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-29 13:54:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601387424498_0003
2020-09-29 13:54:05 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ea f7 90 d1 cd 2e 38 ea ff c2 f1 cf 2e 40 03 48 01 5a 0d 33 39 36 35 30 39 36 37 39 37 37 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387641937, maxDate=1601992441937, sequenceNumber=3, masterKeyId=2)]
2020-09-29 13:54:05 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:54:05 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-29 13:54:05 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-29 13:54:06 INFO  YarnClientImpl:311 - Submitted application application_1601387424498_0003
2020-09-29 13:54:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601387424498_0003/
2020-09-29 13:54:06 INFO  Job:1619 - Running job: job_1601387424498_0003
2020-09-29 13:54:16 INFO  Job:1640 - Job job_1601387424498_0003 running in uber mode : false
2020-09-29 13:54:16 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:54:27 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:54:28 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:54:29 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:54:34 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:54:37 INFO  Job:1658 - Job job_1601387424498_0003 completed successfully
2020-09-29 13:54:37 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1051977
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51194
		Total time spent by all reduces in occupied slots (ms)=8448
		Total time spent by all map tasks (ms)=25597
		Total time spent by all reduce tasks (ms)=4224
		Total vcore-milliseconds taken by all map tasks=25597
		Total vcore-milliseconds taken by all reduce tasks=4224
		Total megabyte-milliseconds taken by all map tasks=52422656
		Total megabyte-milliseconds taken by all reduce tasks=8650752
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1272
		CPU time spent (ms)=8170
		Physical memory (bytes) snapshot=1338839040
		Virtual memory (bytes) snapshot=14283317248
		Total committed heap usage (bytes)=1502085120
		Peak Map Physical memory (bytes)=370237440
		Peak Map Virtual memory (bytes)=3573055488
		Peak Reduce Physical memory (bytes)=361000960
		Peak Reduce Virtual memory (bytes)=3575930880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.012 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200929 13:54:37.945" starttime="20200929 13:54:37.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:54:37.946" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:54:37.946" starttime="20200929 13:54:37.945"></status>
</kw>
<status status="PASS" endtime="20200929 13:54:37.946" starttime="20200929 13:53:57.754"></status>
</kw>
<msg timestamp="20200929 13:54:37.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:54:37.946" starttime="20200929 13:53:57.753"></status>
</kw>
<msg timestamp="20200929 13:54:37.947" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:53:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:54:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200929 13:54:37.947" starttime="20200929 13:53:57.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:54:37.948" starttime="20200929 13:54:37.947"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:54:37.948" critical="yes" starttime="20200929 13:53:57.730"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:54:37.954" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:54:37.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:54:37.960" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:54:37.960" starttime="20200929 13:54:37.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:54:37.961" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:54:37.961" starttime="20200929 13:54:37.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:54:37.961" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:54:37.961" starttime="20200929 13:54:37.961"></status>
</kw>
<status status="PASS" endtime="20200929 13:54:37.962" starttime="20200929 13:54:37.951"></status>
</kw>
<msg timestamp="20200929 13:54:37.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:54:37.962" starttime="20200929 13:54:37.951"></status>
</kw>
<msg timestamp="20200929 13:54:37.962" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:54:37.962" starttime="20200929 13:54:37.950"></status>
</kw>
<msg timestamp="20200929 13:54:37.963" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:54:37.963" starttime="20200929 13:54:37.950"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:54:37.963" level="INFO">${random} = 44</msg>
<status status="PASS" endtime="20200929 13:54:37.963" starttime="20200929 13:54:37.963"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:54:37.967" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:54:37.967" starttime="20200929 13:54:37.967"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:54:37.968" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:54:37.968" starttime="20200929 13:54:37.968"></status>
</kw>
<status status="PASS" endtime="20200929 13:54:37.968" starttime="20200929 13:54:37.966"></status>
</kw>
<msg timestamp="20200929 13:54:37.968" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:54:37.968" starttime="20200929 13:54:37.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200929 13:54:37.970" starttime="20200929 13:54:37.969"></status>
</kw>
<msg timestamp="20200929 13:54:37.970" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200929 13:54:37.970" starttime="20200929 13:54:37.969"></status>
</kw>
<status status="PASS" endtime="20200929 13:54:37.970" starttime="20200929 13:54:37.965"></status>
</kw>
<msg timestamp="20200929 13:54:37.970" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:54:37.971" starttime="20200929 13:54:37.964"></status>
</kw>
<msg timestamp="20200929 13:54:37.971" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200929 13:54:37.971" starttime="20200929 13:54:37.963"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:54:37.974" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:54:37.975" starttime="20200929 13:54:37.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:54:37.975" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:54:37.975" starttime="20200929 13:54:37.975"></status>
</kw>
<status status="PASS" endtime="20200929 13:54:37.975" starttime="20200929 13:54:37.974"></status>
</kw>
<msg timestamp="20200929 13:54:37.976" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:54:37.976" starttime="20200929 13:54:37.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:54:37.978" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200929 13:54:37.978" starttime="20200929 13:54:37.977"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:54:37.978" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200929 13:54:37.978" starttime="20200929 13:54:37.978"></status>
</kw>
<status status="PASS" endtime="20200929 13:54:37.979" starttime="20200929 13:54:37.976"></status>
</kw>
<msg timestamp="20200929 13:54:37.979" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200929 13:54:37.979" starttime="20200929 13:54:37.976"></status>
</kw>
<status status="PASS" endtime="20200929 13:54:37.979" starttime="20200929 13:54:37.972"></status>
</kw>
<msg timestamp="20200929 13:54:37.979" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200929 13:54:37.979" starttime="20200929 13:54:37.972"></status>
</kw>
<msg timestamp="20200929 13:54:37.979" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200929 13:54:37.979" starttime="20200929 13:54:37.971"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200929 13:54:37.983" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200929 13:54:37.983" starttime="20200929 13:54:37.983"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:54:37.984" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200929 13:54:37.984" starttime="20200929 13:54:37.984"></status>
</kw>
<status status="PASS" endtime="20200929 13:54:37.984" starttime="20200929 13:54:37.982"></status>
</kw>
<msg timestamp="20200929 13:54:37.984" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200929 13:54:37.984" starttime="20200929 13:54:37.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:54:37.986" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200929 13:54:37.986" starttime="20200929 13:54:37.986"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:54:37.987" level="INFO">${result} = /wordcount-44.txt</msg>
<status status="PASS" endtime="20200929 13:54:37.987" starttime="20200929 13:54:37.986"></status>
</kw>
<status status="PASS" endtime="20200929 13:54:37.987" starttime="20200929 13:54:37.985"></status>
</kw>
<msg timestamp="20200929 13:54:37.987" level="INFO">${path_with_leading} = /wordcount-44.txt</msg>
<status status="PASS" endtime="20200929 13:54:37.987" starttime="20200929 13:54:37.985"></status>
</kw>
<status status="PASS" endtime="20200929 13:54:37.988" starttime="20200929 13:54:37.981"></status>
</kw>
<msg timestamp="20200929 13:54:37.988" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-44.txt</msg>
<status status="PASS" endtime="20200929 13:54:37.988" starttime="20200929 13:54:37.980"></status>
</kw>
<msg timestamp="20200929 13:54:37.988" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-44.txt</msg>
<status status="PASS" endtime="20200929 13:54:37.988" starttime="20200929 13:54:37.980"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:54:37.992" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-44.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:55:12.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:55:12.698" level="INFO">${output} = 2020-09-29 13:54:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-09-29 13:54:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
202...</msg>
<status status="PASS" endtime="20200929 13:55:12.698" starttime="20200929 13:54:37.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:55:12.699" level="INFO">2020-09-29 13:54:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-09-29 13:54:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
2020-09-29 13:54:40 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387680767, maxDate=1601992480767, sequenceNumber=4, masterKeyId=2))
2020-09-29 13:54:40 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b1 a7 93 d1 cd 2e 38 b1 af c5 f1 cf 2e 40 04 48 01 5a 0d 33 39 36 35 30 39 36 37 39 37 37 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-29 13:54:40 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387680767, maxDate=1601992480767, sequenceNumber=4, masterKeyId=2)
2020-09-29 13:54:40 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:54:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:54:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:54:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:54:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:54:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3A1D3A568EDF-&gt;53e1be72-9db5-4c61-9f2d-3a7f30f8cebd
2020-09-29 13:54:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-29 13:54:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:54:43 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:54:43 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-29 13:54:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601387424498_0004
2020-09-29 13:54:43 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b1 a7 93 d1 cd 2e 38 b1 af c5 f1 cf 2e 40 04 48 01 5a 0d 33 39 36 35 30 39 36 37 39 37 37 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387680767, maxDate=1601992480767, sequenceNumber=4, masterKeyId=2)]
2020-09-29 13:54:43 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:54:43 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-29 13:54:43 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-29 13:54:44 INFO  YarnClientImpl:311 - Submitted application application_1601387424498_0004
2020-09-29 13:54:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601387424498_0004/
2020-09-29 13:54:44 INFO  Job:1619 - Running job: job_1601387424498_0004
2020-09-29 13:54:53 INFO  Job:1640 - Job job_1601387424498_0004 running in uber mode : false
2020-09-29 13:54:53 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:55:05 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:55:06 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:55:07 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:55:11 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:55:12 INFO  Job:1658 - Job job_1601387424498_0004 completed successfully
2020-09-29 13:55:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114633
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51702
		Total time spent by all reduces in occupied slots (ms)=8272
		Total time spent by all map tasks (ms)=25851
		Total time spent by all reduce tasks (ms)=4136
		Total vcore-milliseconds taken by all map tasks=25851
		Total vcore-milliseconds taken by all reduce tasks=4136
		Total megabyte-milliseconds taken by all map tasks=52942848
		Total megabyte-milliseconds taken by all reduce tasks=8470528
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1146
		CPU time spent (ms)=8360
		Physical memory (bytes) snapshot=1213362176
		Virtual memory (bytes) snapshot=14278664192
		Total committed heap usage (bytes)=1131413504
		Peak Map Physical memory (bytes)=292212736
		Peak Map Virtual memory (bytes)=3572510720
		Peak Reduce Physical memory (bytes)=369639424
		Peak Reduce Virtual memory (bytes)=3581452288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200929 13:55:12.699" starttime="20200929 13:55:12.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:55:12.700" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:55:12.700" starttime="20200929 13:55:12.700"></status>
</kw>
<status status="PASS" endtime="20200929 13:55:12.700" starttime="20200929 13:54:37.989"></status>
</kw>
<msg timestamp="20200929 13:55:12.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:55:12.701" starttime="20200929 13:54:37.989"></status>
</kw>
<msg timestamp="20200929 13:55:12.702" level="INFO">${output} = 2020-09-29 13:54:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-09-29 13:54:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
202...</msg>
<status status="PASS" endtime="20200929 13:55:12.702" starttime="20200929 13:54:37.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200929 13:55:12.703" starttime="20200929 13:55:12.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:55:12.703" starttime="20200929 13:55:12.703"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:55:12.704" critical="yes" starttime="20200929 13:54:37.949"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200929 13:55:12.704" starttime="20200929 13:53:57.677"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:52:22.155" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:52:22.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:52:22.163" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:52:22.163" starttime="20200929 13:52:22.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:52:22.164" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:52:22.164" starttime="20200929 13:52:22.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:52:22.164" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:52:22.164" starttime="20200929 13:52:22.164"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:22.165" starttime="20200929 13:52:22.153"></status>
</kw>
<msg timestamp="20200929 13:52:22.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:52:22.165" starttime="20200929 13:52:22.152"></status>
</kw>
<msg timestamp="20200929 13:52:22.165" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:52:22.165" starttime="20200929 13:52:22.152"></status>
</kw>
<msg timestamp="20200929 13:52:22.165" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:52:22.165" starttime="20200929 13:52:22.151"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:52:22.169" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:52:22.170" starttime="20200929 13:52:22.169"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:52:22.170" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:52:22.170" starttime="20200929 13:52:22.170"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:22.170" starttime="20200929 13:52:22.168"></status>
</kw>
<msg timestamp="20200929 13:52:22.171" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:52:22.171" starttime="20200929 13:52:22.168"></status>
</kw>
<status status="PASS" endtime="20200929 13:52:22.171" starttime="20200929 13:52:22.167"></status>
</kw>
<msg timestamp="20200929 13:52:22.171" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:52:22.171" starttime="20200929 13:52:22.166"></status>
</kw>
<msg timestamp="20200929 13:52:22.171" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:52:22.171" starttime="20200929 13:52:22.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:52:22.175" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:53:02.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:53:02.012" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:52:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:52:24 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200929 13:53:02.013" starttime="20200929 13:52:22.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:53:02.014" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:52:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:52:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:52:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:52:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:52:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D8FCF35C812D-&gt;53e1be72-9db5-4c61-9f2d-3a7f30f8cebd
2020-09-29 13:52:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-29 13:52:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-09-29 13:52:26 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
2020-09-29 13:52:26 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387546726, maxDate=1601992346726, sequenceNumber=1, masterKeyId=2))
2020-09-29 13:52:26 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b5 8e 8b d1 cd 2e 38 b5 96 bd f1 cf 2e 40 01 48 01 5a 0d 33 39 36 35 30 39 36 37 39 37 37 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-29 13:52:26 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387546726, maxDate=1601992346726, sequenceNumber=1, masterKeyId=2)
2020-09-29 13:52:27 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:52:27 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:52:27 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-29 13:52:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601387424498_0001
2020-09-29 13:52:27 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b5 8e 8b d1 cd 2e 38 b5 96 bd f1 cf 2e 40 01 48 01 5a 0d 33 39 36 35 30 39 36 37 39 37 37 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387546726, maxDate=1601992346726, sequenceNumber=1, masterKeyId=2)]
2020-09-29 13:52:28 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:52:28 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-29 13:52:28 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-29 13:52:29 INFO  YarnClientImpl:311 - Submitted application application_1601387424498_0001
2020-09-29 13:52:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601387424498_0001/
2020-09-29 13:52:29 INFO  Job:1619 - Running job: job_1601387424498_0001
2020-09-29 13:52:42 INFO  Job:1640 - Job job_1601387424498_0001 running in uber mode : false
2020-09-29 13:52:42 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:52:53 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:52:55 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:52:56 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:53:00 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:53:01 INFO  Job:1658 - Job job_1601387424498_0001 completed successfully
2020-09-29 13:53:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052189
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51538
		Total time spent by all reduces in occupied slots (ms)=8590
		Total time spent by all map tasks (ms)=25769
		Total time spent by all reduce tasks (ms)=4295
		Total vcore-milliseconds taken by all map tasks=25769
		Total vcore-milliseconds taken by all reduce tasks=4295
		Total megabyte-milliseconds taken by all map tasks=52774912
		Total megabyte-milliseconds taken by all reduce tasks=8796160
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1134
		CPU time spent (ms)=8270
		Physical memory (bytes) snapshot=1297661952
		Virtual memory (bytes) snapshot=14290071552
		Total committed heap usage (bytes)=1362624512
		Peak Map Physical memory (bytes)=348782592
		Peak Map Virtual memory (bytes)=3573997568
		Peak Reduce Physical memory (bytes)=363315200
		Peak Reduce Virtual memory (bytes)=3569549312
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.402 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200929 13:53:02.014" starttime="20200929 13:53:02.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:53:02.015" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:53:02.015" starttime="20200929 13:53:02.014"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:02.015" starttime="20200929 13:52:22.172"></status>
</kw>
<msg timestamp="20200929 13:53:02.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:53:02.015" starttime="20200929 13:52:22.172"></status>
</kw>
<msg timestamp="20200929 13:53:02.016" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-29 13:52:24 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:52:24 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200929 13:53:02.016" starttime="20200929 13:52:22.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:53:02.017" starttime="20200929 13:53:02.016"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:53:02.017" critical="yes" starttime="20200929 13:52:22.151"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:53:02.022" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:53:02.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:53:02.030" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:53:02.030" starttime="20200929 13:53:02.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:53:02.031" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:53:02.031" starttime="20200929 13:53:02.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:53:02.032" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:53:02.032" starttime="20200929 13:53:02.031"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:02.032" starttime="20200929 13:53:02.020"></status>
</kw>
<msg timestamp="20200929 13:53:02.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:53:02.032" starttime="20200929 13:53:02.019"></status>
</kw>
<msg timestamp="20200929 13:53:02.033" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:53:02.033" starttime="20200929 13:53:02.019"></status>
</kw>
<msg timestamp="20200929 13:53:02.033" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200929 13:53:02.033" starttime="20200929 13:53:02.018"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200929 13:53:02.034" level="INFO">${random} = 45</msg>
<status status="PASS" endtime="20200929 13:53:02.034" starttime="20200929 13:53:02.033"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:53:02.038" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:53:02.038" starttime="20200929 13:53:02.038"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:53:02.039" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:53:02.039" starttime="20200929 13:53:02.038"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:02.039" starttime="20200929 13:53:02.037"></status>
</kw>
<msg timestamp="20200929 13:53:02.039" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:53:02.039" starttime="20200929 13:53:02.036"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:02.040" starttime="20200929 13:53:02.036"></status>
</kw>
<msg timestamp="20200929 13:53:02.040" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:53:02.040" starttime="20200929 13:53:02.035"></status>
</kw>
<msg timestamp="20200929 13:53:02.040" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200929 13:53:02.040" starttime="20200929 13:53:02.034"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:53:02.044" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:53:02.044" starttime="20200929 13:53:02.043"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:53:02.045" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:53:02.045" starttime="20200929 13:53:02.044"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:02.045" starttime="20200929 13:53:02.043"></status>
</kw>
<msg timestamp="20200929 13:53:02.045" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:53:02.045" starttime="20200929 13:53:02.042"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:02.045" starttime="20200929 13:53:02.041"></status>
</kw>
<msg timestamp="20200929 13:53:02.045" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200929 13:53:02.045" starttime="20200929 13:53:02.041"></status>
</kw>
<msg timestamp="20200929 13:53:02.046" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200929 13:53:02.046" starttime="20200929 13:53:02.040"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200929 13:53:02.050" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200929 13:53:02.050" starttime="20200929 13:53:02.049"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200929 13:53:02.050" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200929 13:53:02.050" starttime="20200929 13:53:02.050"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:02.051" starttime="20200929 13:53:02.048"></status>
</kw>
<msg timestamp="20200929 13:53:02.051" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200929 13:53:02.051" starttime="20200929 13:53:02.048"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:02.051" starttime="20200929 13:53:02.047"></status>
</kw>
<msg timestamp="20200929 13:53:02.051" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-45.txt</msg>
<status status="PASS" endtime="20200929 13:53:02.051" starttime="20200929 13:53:02.047"></status>
</kw>
<msg timestamp="20200929 13:53:02.051" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-45.txt</msg>
<status status="PASS" endtime="20200929 13:53:02.051" starttime="20200929 13:53:02.046"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200929 13:53:02.055" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-45.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200929 13:53:39.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20200929 13:53:39.950" level="INFO">${output} = 2020-09-29 13:53:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-09-29 13:53:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
202...</msg>
<status status="PASS" endtime="20200929 13:53:39.950" starttime="20200929 13:53:02.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200929 13:53:39.951" level="INFO">2020-09-29 13:53:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-09-29 13:53:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
2020-09-29 13:53:04 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387584676, maxDate=1601992384676, sequenceNumber=2, masterKeyId=2))
2020-09-29 13:53:04 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a8 b8 8d d1 cd 2e 38 a8 c0 bf f1 cf 2e 40 02 48 01 5a 0d 33 39 36 35 30 39 36 37 39 37 37 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-29 13:53:04 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387584676, maxDate=1601992384676, sequenceNumber=2, masterKeyId=2)
2020-09-29 13:53:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-29 13:53:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-29 13:53:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-29 13:53:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-29 13:53:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-29 13:53:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2B8DD11E049E-&gt;53e1be72-9db5-4c61-9f2d-3a7f30f8cebd
2020-09-29 13:53:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-29 13:53:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-29 13:53:06 INFO  JobSubmitter:202 - number of splits:3
2020-09-29 13:53:06 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-29 13:53:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1601387424498_0002
2020-09-29 13:53:07 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a8 b8 8d d1 cd 2e 38 a8 c0 bf f1 cf 2e 40 02 48 01 5a 0d 33 39 36 35 30 39 36 37 39 37 37 30 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1601387584676, maxDate=1601992384676, sequenceNumber=2, masterKeyId=2)]
2020-09-29 13:53:07 INFO  Configuration:2752 - resource-types.xml not found
2020-09-29 13:53:07 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-29 13:53:07 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-29 13:53:08 INFO  YarnClientImpl:311 - Submitted application application_1601387424498_0002
2020-09-29 13:53:08 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1601387424498_0002/
2020-09-29 13:53:08 INFO  Job:1619 - Running job: job_1601387424498_0002
2020-09-29 13:53:18 INFO  Job:1640 - Job job_1601387424498_0002 running in uber mode : false
2020-09-29 13:53:18 INFO  Job:1647 -  map 0% reduce 0%
2020-09-29 13:53:29 INFO  Job:1647 -  map 33% reduce 0%
2020-09-29 13:53:30 INFO  Job:1647 -  map 67% reduce 0%
2020-09-29 13:53:31 INFO  Job:1647 -  map 100% reduce 0%
2020-09-29 13:53:36 INFO  Job:1647 -  map 100% reduce 100%
2020-09-29 13:53:39 INFO  Job:1658 - Job job_1601387424498_0002 completed successfully
2020-09-29 13:53:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50478
		Total time spent by all reduces in occupied slots (ms)=8230
		Total time spent by all map tasks (ms)=25239
		Total time spent by all reduce tasks (ms)=4115
		Total vcore-milliseconds taken by all map tasks=25239
		Total vcore-milliseconds taken by all reduce tasks=4115
		Total megabyte-milliseconds taken by all map tasks=51689472
		Total megabyte-milliseconds taken by all reduce tasks=8427520
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1178
		CPU time spent (ms)=8540
		Physical memory (bytes) snapshot=1297862656
		Virtual memory (bytes) snapshot=14284304384
		Total committed heap usage (bytes)=1281359872
		Peak Map Physical memory (bytes)=345415680
		Peak Map Virtual memory (bytes)=3573104640
		Peak Reduce Physical memory (bytes)=363012096
		Peak Reduce Virtual memory (bytes)=3575373824
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200929 13:53:39.952" starttime="20200929 13:53:39.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200929 13:53:39.953" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200929 13:53:39.953" starttime="20200929 13:53:39.952"></status>
</kw>
<status status="PASS" endtime="20200929 13:53:39.953" starttime="20200929 13:53:02.053"></status>
</kw>
<msg timestamp="20200929 13:53:39.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200929 13:53:39.953" starttime="20200929 13:53:02.052"></status>
</kw>
<msg timestamp="20200929 13:53:39.955" level="INFO">${output} = 2020-09-29 13:53:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-09-29 13:53:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
202...</msg>
<status status="PASS" endtime="20200929 13:53:39.955" starttime="20200929 13:53:02.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200929 13:53:39.956" starttime="20200929 13:53:39.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200929 13:53:39.956" starttime="20200929 13:53:39.956"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200929 13:53:39.957" critical="yes" starttime="20200929 13:53:02.018"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200929 13:53:39.959" starttime="20200929 13:52:22.098"></status>
</suite>
<status status="PASS" elapsedtime="215390" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
