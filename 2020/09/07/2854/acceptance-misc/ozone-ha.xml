<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200907 07:28:18.284" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200907 07:26:55.254" level="INFO">${random} = 25840</msg>
<status status="PASS" endtime="20200907 07:26:55.255" starttime="20200907 07:26:55.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200907 07:26:55.255" level="INFO">${prefix} = 25840</msg>
<status status="PASS" endtime="20200907 07:26:55.255" starttime="20200907 07:26:55.255"></status>
</kw>
<status status="PASS" endtime="20200907 07:26:55.255" starttime="20200907 07:26:55.254"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:26:55.281" level="INFO">Running command 'ozone sh volume info /25840-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:01.990" level="INFO">${rc} = 255</msg>
<msg timestamp="20200907 07:27:01.990" level="INFO">${output} = VOLUME_NOT_FOUND Volume 25840-rpcbasic is not found</msg>
<status status="PASS" endtime="20200907 07:27:01.990" starttime="20200907 07:26:55.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:01.991" level="INFO">VOLUME_NOT_FOUND Volume 25840-rpcbasic is not found</msg>
<status status="PASS" endtime="20200907 07:27:01.991" starttime="20200907 07:27:01.990"></status>
</kw>
<msg timestamp="20200907 07:27:01.991" level="INFO">${result} = VOLUME_NOT_FOUND Volume 25840-rpcbasic is not found</msg>
<status status="PASS" endtime="20200907 07:27:01.991" starttime="20200907 07:26:55.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:01.992" starttime="20200907 07:27:01.991"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:01.995" level="INFO">Running command 'ozone sh volume create /25840-rpcbasic --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:04.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:04.602" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:04.602" starttime="20200907 07:27:01.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:04.603" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:04.603" starttime="20200907 07:27:04.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:04.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:04.604" starttime="20200907 07:27:04.604"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:04.604" starttime="20200907 07:27:01.993"></status>
</kw>
<msg timestamp="20200907 07:27:04.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:04.604" starttime="20200907 07:27:01.993"></status>
</kw>
<msg timestamp="20200907 07:27:04.605" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200907 07:27:04.605" starttime="20200907 07:27:01.992"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:04.605" starttime="20200907 07:27:04.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:04.611" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="25840-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:07.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:07.237" level="INFO">${output} = {
  "metadata": {},
  "name": "25840-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-07T07:27:04.317Z",
  "mo...</msg>
<status status="PASS" endtime="20200907 07:27:07.237" starttime="20200907 07:27:04.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:07.238" level="INFO">{
  "metadata": {},
  "name": "25840-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-07T07:27:04.317Z",
  "modificationTime": "2020-09-07T07:27:04.317Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200907 07:27:07.238" starttime="20200907 07:27:07.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:07.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:07.239" starttime="20200907 07:27:07.238"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:07.239" starttime="20200907 07:27:04.606"></status>
</kw>
<msg timestamp="20200907 07:27:07.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:07.240" starttime="20200907 07:27:04.606"></status>
</kw>
<msg timestamp="20200907 07:27:07.240" level="INFO">${result} = {
  "metadata": {},
  "name": "25840-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-07T07:27:04.317Z",
  "mo...</msg>
<status status="PASS" endtime="20200907 07:27:07.240" starttime="20200907 07:27:04.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:07.240" starttime="20200907 07:27:07.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:07.245" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="25840-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:09.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:09.399" level="INFO">${output} = {
  "metadata": {},
  "name": "25840-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-07T07:27:04.317Z",
  "mo...</msg>
<status status="PASS" endtime="20200907 07:27:09.399" starttime="20200907 07:27:07.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:09.400" level="INFO">{
  "metadata": {},
  "name": "25840-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-07T07:27:04.317Z",
  "modificationTime": "2020-09-07T07:27:04.317Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20200907 07:27:09.401" starttime="20200907 07:27:09.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:09.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:09.401" starttime="20200907 07:27:09.401"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:09.402" starttime="20200907 07:27:07.242"></status>
</kw>
<msg timestamp="20200907 07:27:09.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:09.402" starttime="20200907 07:27:07.241"></status>
</kw>
<msg timestamp="20200907 07:27:09.402" level="INFO">${result} = {
  "metadata": {},
  "name": "25840-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-09-07T07:27:04.317Z",
  "mo...</msg>
<status status="PASS" endtime="20200907 07:27:09.402" starttime="20200907 07:27:07.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:09.403" starttime="20200907 07:27:09.402"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --spaceQuota 10TB --bucketQuota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:09.407" level="INFO">Running command 'ozone sh volume update /25840-rpcbasic --spaceQuota 10TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:11.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:11.524" level="INFO">${output} = {
  "metadata" : { },
  "name" : "25840-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-07T07:27:04.317Z"...</msg>
<status status="PASS" endtime="20200907 07:27:11.524" starttime="20200907 07:27:09.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:11.526" level="INFO">{
  "metadata" : { },
  "name" : "25840-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : 10995116277760,
  "quotaInCounts" : 100,
  "creationTime" : "2020-09-07T07:27:04.317Z",
  "modificationTime" : "2020-09-07T07:27:11.264Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}</msg>
<status status="PASS" endtime="20200907 07:27:11.526" starttime="20200907 07:27:11.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:11.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:11.526" starttime="20200907 07:27:11.526"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:11.527" starttime="20200907 07:27:09.404"></status>
</kw>
<msg timestamp="20200907 07:27:11.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:11.527" starttime="20200907 07:27:09.403"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:11.527" starttime="20200907 07:27:09.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:11.531" level="INFO">Running command 'ozone sh volume info /25840-rpcbasic | jq -r '. | select(.name=="25840-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:13.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:13.637" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200907 07:27:13.637" starttime="20200907 07:27:11.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:13.639" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200907 07:27:13.639" starttime="20200907 07:27:13.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:13.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:13.639" starttime="20200907 07:27:13.639"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:13.640" starttime="20200907 07:27:11.528"></status>
</kw>
<msg timestamp="20200907 07:27:13.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:13.640" starttime="20200907 07:27:11.528"></status>
</kw>
<msg timestamp="20200907 07:27:13.640" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200907 07:27:13.640" starttime="20200907 07:27:11.527"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:13.641" starttime="20200907 07:27:13.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:13.645" level="INFO">Running command 'ozone sh bucket create /25840-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:15.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:15.629" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:15.629" starttime="20200907 07:27:13.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:15.632" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:15.632" starttime="20200907 07:27:15.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:15.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:15.633" starttime="20200907 07:27:15.632"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:15.633" starttime="20200907 07:27:13.642"></status>
</kw>
<msg timestamp="20200907 07:27:15.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:15.633" starttime="20200907 07:27:13.641"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:15.633" starttime="20200907 07:27:13.641"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:15.637" level="INFO">Running command 'ozone sh bucket info /25840-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:17.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:17.661" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200907 07:27:17.661" starttime="20200907 07:27:15.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:17.662" level="INFO">DISK</msg>
<status status="PASS" endtime="20200907 07:27:17.662" starttime="20200907 07:27:17.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:17.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:17.663" starttime="20200907 07:27:17.662"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:17.663" starttime="20200907 07:27:15.634"></status>
</kw>
<msg timestamp="20200907 07:27:17.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:17.663" starttime="20200907 07:27:15.634"></status>
</kw>
<msg timestamp="20200907 07:27:17.664" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200907 07:27:17.664" starttime="20200907 07:27:15.633"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:17.664" starttime="20200907 07:27:17.664"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:17.669" level="INFO">Running command 'ozone sh bucket list /25840-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:19.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:19.763" level="INFO">${output} = 25840-rpcbasic</msg>
<status status="PASS" endtime="20200907 07:27:19.763" starttime="20200907 07:27:17.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:19.764" level="INFO">25840-rpcbasic</msg>
<status status="PASS" endtime="20200907 07:27:19.764" starttime="20200907 07:27:19.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:19.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:19.765" starttime="20200907 07:27:19.764"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:19.765" starttime="20200907 07:27:17.665"></status>
</kw>
<msg timestamp="20200907 07:27:19.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:19.765" starttime="20200907 07:27:17.665"></status>
</kw>
<msg timestamp="20200907 07:27:19.765" level="INFO">${result} = 25840-rpcbasic</msg>
<status status="PASS" endtime="20200907 07:27:19.765" starttime="20200907 07:27:17.664"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:19.766" starttime="20200907 07:27:19.765"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:19.771" level="INFO">Running command 'ozone sh key put /25840-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:27.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:27.022" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:27.022" starttime="20200907 07:27:19.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:27.023" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:27.023" starttime="20200907 07:27:27.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:27.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:27.024" starttime="20200907 07:27:27.024"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:27.024" starttime="20200907 07:27:19.768"></status>
</kw>
<msg timestamp="20200907 07:27:27.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:27.024" starttime="20200907 07:27:19.767"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:27.025" starttime="20200907 07:27:19.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:27.028" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:27.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:27.031" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:27.031" starttime="20200907 07:27:27.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:27.032" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:27.032" starttime="20200907 07:27:27.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:27.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:27.033" starttime="20200907 07:27:27.032"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:27.033" starttime="20200907 07:27:27.025"></status>
</kw>
<msg timestamp="20200907 07:27:27.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:27.033" starttime="20200907 07:27:27.025"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:27.034" starttime="20200907 07:27:27.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:27.037" level="INFO">Running command 'ozone sh key get /25840-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:30.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:30.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:30.877" starttime="20200907 07:27:27.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:30.879" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:30.879" starttime="20200907 07:27:30.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:30.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:30.880" starttime="20200907 07:27:30.879"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:30.880" starttime="20200907 07:27:27.034"></status>
</kw>
<msg timestamp="20200907 07:27:30.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:30.880" starttime="20200907 07:27:27.034"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:30.881" starttime="20200907 07:27:27.034"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:30.884" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:30.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:30.887" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:30.887" starttime="20200907 07:27:30.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:30.888" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:30.888" starttime="20200907 07:27:30.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:30.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:30.889" starttime="20200907 07:27:30.888"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:30.889" starttime="20200907 07:27:30.882"></status>
</kw>
<msg timestamp="20200907 07:27:30.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:30.889" starttime="20200907 07:27:30.881"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:30.889" starttime="20200907 07:27:30.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:30.893" level="INFO">Running command 'ozone sh key put -t RATIS /25840-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:34.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:34.784" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:34.784" starttime="20200907 07:27:30.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:34.785" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:34.785" starttime="20200907 07:27:34.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:34.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:34.786" starttime="20200907 07:27:34.785"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:34.786" starttime="20200907 07:27:30.890"></status>
</kw>
<msg timestamp="20200907 07:27:34.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:34.786" starttime="20200907 07:27:30.890"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:34.786" starttime="20200907 07:27:30.889"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:34.791" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:34.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:34.793" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:34.793" starttime="20200907 07:27:34.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:34.794" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:34.794" starttime="20200907 07:27:34.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:34.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:34.794" starttime="20200907 07:27:34.794"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:34.795" starttime="20200907 07:27:34.787"></status>
</kw>
<msg timestamp="20200907 07:27:34.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:34.795" starttime="20200907 07:27:34.787"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:34.795" starttime="20200907 07:27:34.787"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:34.800" level="INFO">Running command 'ozone sh key get /25840-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:38.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:38.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:38.249" starttime="20200907 07:27:34.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:38.251" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:38.251" starttime="20200907 07:27:38.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:38.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:38.252" starttime="20200907 07:27:38.251"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:38.252" starttime="20200907 07:27:34.796"></status>
</kw>
<msg timestamp="20200907 07:27:38.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:38.252" starttime="20200907 07:27:34.796"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:38.253" starttime="20200907 07:27:34.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:38.256" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:38.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:38.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:38.259" starttime="20200907 07:27:38.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:38.260" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:38.260" starttime="20200907 07:27:38.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:38.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:38.260" starttime="20200907 07:27:38.260"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:38.261" starttime="20200907 07:27:38.253"></status>
</kw>
<msg timestamp="20200907 07:27:38.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:38.261" starttime="20200907 07:27:38.253"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:38.261" starttime="20200907 07:27:38.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:38.266" level="INFO">Running command 'ozone sh key info /25840-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:40.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:40.460" level="INFO">${output} = {
  "volumeName": "25840-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-07T07:27:32.773Z",
  "modificationTime": "2020-09-07T07:27:34.409Z",
...</msg>
<status status="PASS" endtime="20200907 07:27:40.460" starttime="20200907 07:27:38.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:40.461" level="INFO">{
  "volumeName": "25840-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-07T07:27:32.773Z",
  "modificationTime": "2020-09-07T07:27:34.409Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104822449948065800,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200907 07:27:40.461" starttime="20200907 07:27:40.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:40.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:40.462" starttime="20200907 07:27:40.462"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:40.462" starttime="20200907 07:27:38.262"></status>
</kw>
<msg timestamp="20200907 07:27:40.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:40.464" starttime="20200907 07:27:38.262"></status>
</kw>
<msg timestamp="20200907 07:27:40.464" level="INFO">${result} = {
  "volumeName": "25840-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-07T07:27:32.773Z",
  "modificationTime": "2020-09-07T07:27:34.409Z",
...</msg>
<status status="PASS" endtime="20200907 07:27:40.464" starttime="20200907 07:27:38.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:40.466" starttime="20200907 07:27:40.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:40.470" level="INFO">Running command 'ozone sh key delete /25840-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:42.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:42.392" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:42.393" starttime="20200907 07:27:40.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:42.394" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:42.394" starttime="20200907 07:27:42.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:42.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:42.394" starttime="20200907 07:27:42.394"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:42.395" starttime="20200907 07:27:40.467"></status>
</kw>
<msg timestamp="20200907 07:27:42.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:42.395" starttime="20200907 07:27:40.466"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:42.395" starttime="20200907 07:27:40.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:42.400" level="INFO">Running command 'ozone sh key cp /25840-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:46.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:46.322" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:46.322" starttime="20200907 07:27:42.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:46.323" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:46.323" starttime="20200907 07:27:46.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:46.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:46.324" starttime="20200907 07:27:46.323"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:46.324" starttime="20200907 07:27:42.396"></status>
</kw>
<msg timestamp="20200907 07:27:46.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:46.324" starttime="20200907 07:27:42.396"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:46.325" starttime="20200907 07:27:42.395"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:46.328" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:46.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:46.330" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:46.330" starttime="20200907 07:27:46.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:46.331" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:46.332" starttime="20200907 07:27:46.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:46.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:46.332" starttime="20200907 07:27:46.332"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:46.332" starttime="20200907 07:27:46.326"></status>
</kw>
<msg timestamp="20200907 07:27:46.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:46.333" starttime="20200907 07:27:46.325"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:46.333" starttime="20200907 07:27:46.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:46.337" level="INFO">Running command 'ozone sh key get /25840-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:49.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:49.816" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:49.816" starttime="20200907 07:27:46.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:49.817" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:49.817" starttime="20200907 07:27:49.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:49.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:49.818" starttime="20200907 07:27:49.818"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:49.818" starttime="20200907 07:27:46.334"></status>
</kw>
<msg timestamp="20200907 07:27:49.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:49.819" starttime="20200907 07:27:46.334"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:49.819" starttime="20200907 07:27:46.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:49.822" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:49.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:49.824" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:49.824" starttime="20200907 07:27:49.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:49.825" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:49.825" starttime="20200907 07:27:49.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:49.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:49.826" starttime="20200907 07:27:49.826"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:49.826" starttime="20200907 07:27:49.820"></status>
</kw>
<msg timestamp="20200907 07:27:49.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:49.826" starttime="20200907 07:27:49.819"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:49.827" starttime="20200907 07:27:49.819"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:49.831" level="INFO">Running command 'ozone sh key delete /25840-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:51.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:51.588" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:51.588" starttime="20200907 07:27:49.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:51.590" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:51.590" starttime="20200907 07:27:51.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:51.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:51.590" starttime="20200907 07:27:51.590"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:51.591" starttime="20200907 07:27:49.828"></status>
</kw>
<msg timestamp="20200907 07:27:51.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:51.591" starttime="20200907 07:27:49.827"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:51.591" starttime="20200907 07:27:49.827"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:51.595" level="INFO">Running command 'ozone sh key get /25840-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:53.506" level="INFO">${rc} = 255</msg>
<msg timestamp="20200907 07:27:53.506" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200907 07:27:53.506" starttime="20200907 07:27:51.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:53.507" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200907 07:27:53.507" starttime="20200907 07:27:53.507"></status>
</kw>
<msg timestamp="20200907 07:27:53.508" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200907 07:27:53.508" starttime="20200907 07:27:51.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:53.508" starttime="20200907 07:27:53.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:53.512" level="INFO">Running command 'ozone sh key get --force /25840-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:57.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:57.181" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:27:57.181" starttime="20200907 07:27:53.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:57.182" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:27:57.183" starttime="20200907 07:27:57.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:57.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:57.183" starttime="20200907 07:27:57.183"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:57.183" starttime="20200907 07:27:53.509"></status>
</kw>
<msg timestamp="20200907 07:27:57.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:57.184" starttime="20200907 07:27:53.509"></status>
</kw>
<msg timestamp="20200907 07:27:57.184" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200907 07:27:57.184" starttime="20200907 07:27:53.508"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:57.185" starttime="20200907 07:27:57.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:57.189" level="INFO">Running command 'ozone sh key info /25840-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:27:59.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:27:59.343" level="INFO">${output} = {
  "volumeName": "25840-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-07T07:27:21.696Z",
  "modificationTime": "2020-09-07T07:27:26.616Z",
  "rep...</msg>
<status status="PASS" endtime="20200907 07:27:59.343" starttime="20200907 07:27:57.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:27:59.344" level="INFO">{
  "volumeName": "25840-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-07T07:27:21.696Z",
  "modificationTime": "2020-09-07T07:27:26.616Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104822449220681730,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200907 07:27:59.344" starttime="20200907 07:27:59.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:27:59.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:27:59.344" starttime="20200907 07:27:59.344"></status>
</kw>
<status status="PASS" endtime="20200907 07:27:59.345" starttime="20200907 07:27:57.186"></status>
</kw>
<msg timestamp="20200907 07:27:59.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:27:59.345" starttime="20200907 07:27:57.186"></status>
</kw>
<msg timestamp="20200907 07:27:59.345" level="INFO">${result} = {
  "volumeName": "25840-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-07T07:27:21.696Z",
  "modificationTime": "2020-09-07T07:27:26.616Z",
  "rep...</msg>
<status status="PASS" endtime="20200907 07:27:59.345" starttime="20200907 07:27:57.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200907 07:27:59.346" starttime="20200907 07:27:59.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:27:59.351" level="INFO">Running command 'ozone sh key list /25840-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:28:01.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:28:01.432" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200907 07:28:01.432" starttime="20200907 07:27:59.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:28:01.433" level="INFO">key1</msg>
<status status="PASS" endtime="20200907 07:28:01.433" starttime="20200907 07:28:01.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:28:01.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:28:01.434" starttime="20200907 07:28:01.433"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:01.434" starttime="20200907 07:27:59.347"></status>
</kw>
<msg timestamp="20200907 07:28:01.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:28:01.434" starttime="20200907 07:27:59.346"></status>
</kw>
<msg timestamp="20200907 07:28:01.435" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200907 07:28:01.435" starttime="20200907 07:27:59.346"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200907 07:28:01.435" starttime="20200907 07:28:01.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:28:01.442" level="INFO">Running command 'ozone sh key rename /25840-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:28:03.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:28:03.320" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:28:03.320" starttime="20200907 07:28:01.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:28:03.321" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:28:03.321" starttime="20200907 07:28:03.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:28:03.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:28:03.322" starttime="20200907 07:28:03.322"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:03.322" starttime="20200907 07:28:01.436"></status>
</kw>
<msg timestamp="20200907 07:28:03.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:28:03.323" starttime="20200907 07:28:01.436"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:03.323" starttime="20200907 07:28:01.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:28:03.326" level="INFO">Running command 'ozone sh key list /25840-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:28:05.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:28:05.600" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200907 07:28:05.600" starttime="20200907 07:28:03.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:28:05.601" level="INFO">key2</msg>
<status status="PASS" endtime="20200907 07:28:05.601" starttime="20200907 07:28:05.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:28:05.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:28:05.602" starttime="20200907 07:28:05.601"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:05.602" starttime="20200907 07:28:03.324"></status>
</kw>
<msg timestamp="20200907 07:28:05.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:28:05.603" starttime="20200907 07:28:03.324"></status>
</kw>
<msg timestamp="20200907 07:28:05.603" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200907 07:28:05.603" starttime="20200907 07:28:03.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200907 07:28:05.603" starttime="20200907 07:28:05.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:28:05.608" level="INFO">Running command 'ozone sh key delete /25840-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:28:07.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:28:07.511" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:28:07.511" starttime="20200907 07:28:05.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:28:07.513" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:28:07.513" starttime="20200907 07:28:07.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:28:07.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:28:07.513" starttime="20200907 07:28:07.513"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:07.514" starttime="20200907 07:28:05.604"></status>
</kw>
<msg timestamp="20200907 07:28:07.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:28:07.514" starttime="20200907 07:28:05.604"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:07.514" starttime="20200907 07:28:05.603"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:07.514" starttime="20200907 07:27:19.766"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:07.514" starttime="20200907 07:27:19.766"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:28:07.519" level="INFO">Running command 'ozone sh bucket delete /25840-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:28:09.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:28:09.593" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:28:09.593" starttime="20200907 07:28:07.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:28:09.594" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:28:09.594" starttime="20200907 07:28:09.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:28:09.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:28:09.595" starttime="20200907 07:28:09.594"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:09.595" starttime="20200907 07:28:07.515"></status>
</kw>
<msg timestamp="20200907 07:28:09.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:28:09.595" starttime="20200907 07:28:07.515"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:09.596" starttime="20200907 07:28:07.514"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:28:09.599" level="INFO">Running command 'ozone sh volume delete /25840-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:28:11.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:28:11.418" level="INFO">${output} = Volume 25840-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200907 07:28:11.419" starttime="20200907 07:28:09.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:28:11.420" level="INFO">Volume 25840-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200907 07:28:11.420" starttime="20200907 07:28:11.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:28:11.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:28:11.420" starttime="20200907 07:28:11.420"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:11.421" starttime="20200907 07:28:09.597"></status>
</kw>
<msg timestamp="20200907 07:28:11.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:28:11.421" starttime="20200907 07:28:09.596"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:11.421" starttime="20200907 07:28:09.596"></status>
</kw>
<status status="PASS" endtime="20200907 07:28:11.421" starttime="20200907 07:26:55.260"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200907 07:28:11.421" critical="yes" starttime="20200907 07:26:55.256"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200907 07:28:11.423" starttime="20200907 07:26:55.076"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
