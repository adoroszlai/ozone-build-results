<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200907 07:57:50.801" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:08.967" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:13.002" level="INFO">${rc} = 255</msg>
<msg timestamp="20200907 07:54:13.002" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:13.002" starttime="20200907 07:54:08.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:13.003" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200907 07:54:13.003" starttime="20200907 07:54:13.002"></status>
</kw>
<msg timestamp="20200907 07:54:13.003" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:13.003" starttime="20200907 07:54:08.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:13.009" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:16.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:16.204" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:16.204" starttime="20200907 07:54:13.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:16.205" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200907 07:54:16.205" starttime="20200907 07:54:16.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:16.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:16.206" starttime="20200907 07:54:16.205"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:16.206" starttime="20200907 07:54:13.005"></status>
</kw>
<msg timestamp="20200907 07:54:16.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:16.207" starttime="20200907 07:54:13.005"></status>
</kw>
<msg timestamp="20200907 07:54:16.207" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:16.207" starttime="20200907 07:54:13.005"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200907 07:54:16.207" starttime="20200907 07:54:16.207"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:16.207" starttime="20200907 07:54:13.004"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:16.208" starttime="20200907 07:54:13.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:16.212" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:19.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:19.447" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:19.447" starttime="20200907 07:54:16.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:19.448" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200907 07:54:19.448" starttime="20200907 07:54:19.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:19.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:19.449" starttime="20200907 07:54:19.448"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:19.449" starttime="20200907 07:54:16.209"></status>
</kw>
<msg timestamp="20200907 07:54:19.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:19.449" starttime="20200907 07:54:16.209"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:19.449" starttime="20200907 07:54:16.209"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:19.449" starttime="20200907 07:54:16.208"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:19.449" starttime="20200907 07:54:16.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200907 07:54:19.450" starttime="20200907 07:54:19.450"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:19.453" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:22.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:22.797" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:22.797" starttime="20200907 07:54:19.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:22.798" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-07T07:54:19.275Z",
  "modificationTime" : "2020-09-07T07:54:19.275Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200907 07:54:22.798" starttime="20200907 07:54:22.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:22.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:22.799" starttime="20200907 07:54:22.798"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:22.799" starttime="20200907 07:54:19.451"></status>
</kw>
<msg timestamp="20200907 07:54:22.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:22.799" starttime="20200907 07:54:19.451"></status>
</kw>
<msg timestamp="20200907 07:54:22.799" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:22.799" starttime="20200907 07:54:19.450"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200907 07:54:22.800" starttime="20200907 07:54:22.800"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200907 07:54:22.803" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200907 07:54:22.803" starttime="20200907 07:54:22.803"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:54:22.804" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200907 07:54:22.804" starttime="20200907 07:54:22.804"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:22.804" starttime="20200907 07:54:22.803"></status>
</kw>
<msg timestamp="20200907 07:54:22.804" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200907 07:54:22.805" starttime="20200907 07:54:22.802"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:22.805" starttime="20200907 07:54:22.802"></status>
</kw>
<msg timestamp="20200907 07:54:22.805" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200907 07:54:22.805" starttime="20200907 07:54:22.801"></status>
</kw>
<msg timestamp="20200907 07:54:22.805" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200907 07:54:22.805" starttime="20200907 07:54:22.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:22.810" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:26.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:26.040" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:26.040" starttime="20200907 07:54:22.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:26.041" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200907 07:54:26.041" starttime="20200907 07:54:26.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:26.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:26.042" starttime="20200907 07:54:26.041"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:26.042" starttime="20200907 07:54:22.806"></status>
</kw>
<msg timestamp="20200907 07:54:26.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:26.042" starttime="20200907 07:54:22.806"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:26.042" starttime="20200907 07:54:22.805"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:26.046" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:33.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:33.169" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:33.170" starttime="20200907 07:54:26.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:33.171" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200907 07:54:33.171" starttime="20200907 07:54:33.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:33.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:33.171" starttime="20200907 07:54:33.171"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:33.172" starttime="20200907 07:54:26.043"></status>
</kw>
<msg timestamp="20200907 07:54:33.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:33.172" starttime="20200907 07:54:26.043"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:33.172" starttime="20200907 07:54:26.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:33.176" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:38.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:38.112" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:38.112" starttime="20200907 07:54:33.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:38.114" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200907 07:54:38.114" starttime="20200907 07:54:38.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:38.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:38.114" starttime="20200907 07:54:38.114"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:38.115" starttime="20200907 07:54:33.173"></status>
</kw>
<msg timestamp="20200907 07:54:38.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:38.115" starttime="20200907 07:54:33.173"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:38.115" starttime="20200907 07:54:33.172"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:38.119" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:43.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:43.395" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:43.395" starttime="20200907 07:54:38.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:43.396" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200907 07:54:43.397" starttime="20200907 07:54:43.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:43.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:43.397" starttime="20200907 07:54:43.397"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:43.398" starttime="20200907 07:54:38.116"></status>
</kw>
<msg timestamp="20200907 07:54:43.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:43.398" starttime="20200907 07:54:38.116"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:43.398" starttime="20200907 07:54:38.115"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200907 07:54:43.398" critical="yes" starttime="20200907 07:54:08.960"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200907 07:54:43.403" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200907 07:54:43.403" starttime="20200907 07:54:43.403"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:54:43.404" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200907 07:54:43.404" starttime="20200907 07:54:43.403"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:43.404" starttime="20200907 07:54:43.402"></status>
</kw>
<msg timestamp="20200907 07:54:43.404" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200907 07:54:43.404" starttime="20200907 07:54:43.402"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:43.404" starttime="20200907 07:54:43.401"></status>
</kw>
<msg timestamp="20200907 07:54:43.404" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200907 07:54:43.404" starttime="20200907 07:54:43.400"></status>
</kw>
<msg timestamp="20200907 07:54:43.405" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200907 07:54:43.405" starttime="20200907 07:54:43.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:43.408" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:46.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:46.654" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:46.654" starttime="20200907 07:54:43.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:46.655" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200907 07:54:46.655" starttime="20200907 07:54:46.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:46.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:46.656" starttime="20200907 07:54:46.656"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:46.656" starttime="20200907 07:54:43.405"></status>
</kw>
<msg timestamp="20200907 07:54:46.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:46.657" starttime="20200907 07:54:43.405"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:46.657" starttime="20200907 07:54:43.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:46.660" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:49.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:49.787" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200907 07:54:49.787" starttime="20200907 07:54:46.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:49.788" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200907 07:54:49.788" starttime="20200907 07:54:49.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:49.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:49.788" starttime="20200907 07:54:49.788"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:49.789" starttime="20200907 07:54:46.658"></status>
</kw>
<msg timestamp="20200907 07:54:49.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:49.789" starttime="20200907 07:54:46.658"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:49.789" starttime="20200907 07:54:46.657"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200907 07:54:49.789" critical="yes" starttime="20200907 07:54:43.399"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200907 07:54:49.791" starttime="20200907 07:54:08.910"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200907 07:56:29.570" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200907 07:56:29.570" starttime="20200907 07:56:29.569"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:56:29.571" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200907 07:56:29.571" starttime="20200907 07:56:29.570"></status>
</kw>
<status status="PASS" endtime="20200907 07:56:29.571" starttime="20200907 07:56:29.568"></status>
</kw>
<msg timestamp="20200907 07:56:29.571" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200907 07:56:29.571" starttime="20200907 07:56:29.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200907 07:56:29.572" starttime="20200907 07:56:29.572"></status>
</kw>
<msg timestamp="20200907 07:56:29.572" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200907 07:56:29.572" starttime="20200907 07:56:29.571"></status>
</kw>
<status status="PASS" endtime="20200907 07:56:29.572" starttime="20200907 07:56:29.567"></status>
</kw>
<msg timestamp="20200907 07:56:29.572" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200907 07:56:29.572" starttime="20200907 07:56:29.566"></status>
</kw>
<msg timestamp="20200907 07:56:29.573" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200907 07:56:29.573" starttime="20200907 07:56:29.566"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200907 07:56:29.573" level="INFO">${random} = 54290</msg>
<status status="PASS" endtime="20200907 07:56:29.573" starttime="20200907 07:56:29.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:56:29.576" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-54290 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:56:33.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:56:33.212" level="INFO">${output} = 2020-09-07 07:56:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:56:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200907 07:56:33.212" starttime="20200907 07:56:29.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:56:33.213" level="INFO">2020-09-07 07:56:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:56:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-07 07:56:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started</msg>
<status status="PASS" endtime="20200907 07:56:33.213" starttime="20200907 07:56:33.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:56:33.214" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:56:33.214" starttime="20200907 07:56:33.214"></status>
</kw>
<status status="PASS" endtime="20200907 07:56:33.214" starttime="20200907 07:56:29.574"></status>
</kw>
<msg timestamp="20200907 07:56:33.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:56:33.215" starttime="20200907 07:56:29.574"></status>
</kw>
<msg timestamp="20200907 07:56:33.215" level="INFO">${result} = 2020-09-07 07:56:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:56:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200907 07:56:33.215" starttime="20200907 07:56:29.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:56:33.218" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:56:35.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:56:35.294" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-07 07:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-07 07:55 ofs://om/volume1/bucket1/ozone-01432
-rw-...</msg>
<status status="PASS" endtime="20200907 07:56:35.294" starttime="20200907 07:56:33.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:56:35.295" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-07 07:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-07 07:55 ofs://om/volume1/bucket1/ozone-01432
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-07 07:56 ofs://om/volume1/bucket1/ozone-54290
drwxrwxrwx   - hadoop hadoop          0 2020-09-07 07:54 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-07 07:56 ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20200907 07:56:35.295" starttime="20200907 07:56:35.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:56:35.295" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:56:35.296" starttime="20200907 07:56:35.295"></status>
</kw>
<status status="PASS" endtime="20200907 07:56:35.296" starttime="20200907 07:56:33.216"></status>
</kw>
<msg timestamp="20200907 07:56:35.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:56:35.296" starttime="20200907 07:56:33.216"></status>
</kw>
<msg timestamp="20200907 07:56:35.296" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-07 07:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-07 07:55 ofs://om/volume1/bucket1/ozone-01432
-rw-...</msg>
<status status="PASS" endtime="20200907 07:56:35.296" starttime="20200907 07:56:33.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200907 07:56:35.297" starttime="20200907 07:56:35.296"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200907 07:56:35.297" critical="yes" starttime="20200907 07:56:29.565"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200907 07:56:35.298" starttime="20200907 07:56:29.522"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200907 07:54:59.097" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200907 07:54:59.097" starttime="20200907 07:54:59.096"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:54:59.098" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200907 07:54:59.098" starttime="20200907 07:54:59.097"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:59.098" starttime="20200907 07:54:59.095"></status>
</kw>
<msg timestamp="20200907 07:54:59.098" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200907 07:54:59.098" starttime="20200907 07:54:59.095"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:59.098" starttime="20200907 07:54:59.094"></status>
</kw>
<msg timestamp="20200907 07:54:59.099" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200907 07:54:59.099" starttime="20200907 07:54:59.094"></status>
</kw>
<msg timestamp="20200907 07:54:59.099" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200907 07:54:59.099" starttime="20200907 07:54:59.093"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200907 07:54:59.099" level="INFO">${random} = 01432</msg>
<status status="PASS" endtime="20200907 07:54:59.099" starttime="20200907 07:54:59.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:59.102" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-01432 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:55:03.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:55:03.034" level="INFO">${output} = 2020-09-07 07:55:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:55:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200907 07:55:03.034" starttime="20200907 07:54:59.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:55:03.035" level="INFO">2020-09-07 07:55:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:55:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-07 07:55:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started</msg>
<status status="PASS" endtime="20200907 07:55:03.035" starttime="20200907 07:55:03.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:55:03.035" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:55:03.035" starttime="20200907 07:55:03.035"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:03.036" starttime="20200907 07:54:59.100"></status>
</kw>
<msg timestamp="20200907 07:55:03.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:55:03.036" starttime="20200907 07:54:59.100"></status>
</kw>
<msg timestamp="20200907 07:55:03.036" level="INFO">${result} = 2020-09-07 07:55:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:55:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200907 07:55:03.036" starttime="20200907 07:54:59.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:55:03.039" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:55:04.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:55:04.993" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-07 07:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-07 07:55 o3fs://bucket1.volume1.om/ozone-01432
dr...</msg>
<status status="PASS" endtime="20200907 07:55:04.993" starttime="20200907 07:55:03.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:55:04.994" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-07 07:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-07 07:55 o3fs://bucket1.volume1.om/ozone-01432
drwxrwxrwx   - hadoop hadoop          0 2020-09-07 07:54 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200907 07:55:04.994" starttime="20200907 07:55:04.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:55:04.995" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:55:04.995" starttime="20200907 07:55:04.994"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:04.995" starttime="20200907 07:55:03.037"></status>
</kw>
<msg timestamp="20200907 07:55:04.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:55:04.995" starttime="20200907 07:55:03.037"></status>
</kw>
<msg timestamp="20200907 07:55:04.995" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-07 07:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-07 07:55 o3fs://bucket1.volume1.om/ozone-01432
dr...</msg>
<status status="PASS" endtime="20200907 07:55:04.995" starttime="20200907 07:55:03.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200907 07:55:04.996" starttime="20200907 07:55:04.995"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200907 07:55:04.996" critical="yes" starttime="20200907 07:54:59.092"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200907 07:55:04.997" starttime="20200907 07:54:59.051"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:54.418" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:54.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:54.421" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20200907 07:54:54.421" starttime="20200907 07:54:54.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:54.422" level="INFO">rm</msg>
<status status="PASS" endtime="20200907 07:54:54.422" starttime="20200907 07:54:54.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:54.423" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:54.423" starttime="20200907 07:54:54.422"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:54.423" starttime="20200907 07:54:54.416"></status>
</kw>
<msg timestamp="20200907 07:54:54.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:54.423" starttime="20200907 07:54:54.416"></status>
</kw>
<msg timestamp="20200907 07:54:54.423" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20200907 07:54:54.423" starttime="20200907 07:54:54.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200907 07:54:54.425" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200907 07:54:54.425" starttime="20200907 07:54:54.423"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:54.428" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:54.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:54.442" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:54:54.442" starttime="20200907 07:54:54.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:54.443" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:54:54.443" starttime="20200907 07:54:54.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:54.444" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:54.444" starttime="20200907 07:54:54.443"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:54.444" starttime="20200907 07:54:54.426"></status>
</kw>
<msg timestamp="20200907 07:54:54.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:54.444" starttime="20200907 07:54:54.426"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:54.444" starttime="20200907 07:54:54.425"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:54.445" starttime="20200907 07:54:54.425"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:54.445" starttime="20200907 07:54:54.415"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200907 07:54:54.445" critical="yes" starttime="20200907 07:54:54.415"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200907 07:54:54.446" starttime="20200907 07:54:54.376"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:04.217" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:04.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:04.219" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20200907 07:54:04.219" starttime="20200907 07:54:04.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:04.220" level="INFO">om</msg>
<status status="PASS" endtime="20200907 07:54:04.220" starttime="20200907 07:54:04.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:04.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:04.221" starttime="20200907 07:54:04.220"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:04.221" starttime="20200907 07:54:04.212"></status>
</kw>
<msg timestamp="20200907 07:54:04.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:04.221" starttime="20200907 07:54:04.212"></status>
</kw>
<msg timestamp="20200907 07:54:04.222" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20200907 07:54:04.222" starttime="20200907 07:54:04.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200907 07:54:04.222" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200907 07:54:04.222" starttime="20200907 07:54:04.222"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:54:04.227" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:54:04.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:54:04.237" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:54:04.237" starttime="20200907 07:54:04.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:54:04.238" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:54:04.238" starttime="20200907 07:54:04.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:54:04.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:54:04.239" starttime="20200907 07:54:04.238"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:04.239" starttime="20200907 07:54:04.224"></status>
</kw>
<msg timestamp="20200907 07:54:04.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:54:04.239" starttime="20200907 07:54:04.223"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:04.239" starttime="20200907 07:54:04.223"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:04.239" starttime="20200907 07:54:04.222"></status>
</kw>
<status status="PASS" endtime="20200907 07:54:04.239" starttime="20200907 07:54:04.211"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200907 07:54:04.239" critical="yes" starttime="20200907 07:54:04.210"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200907 07:54:04.241" starttime="20200907 07:54:04.162"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:56:39.959" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:56:39.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:56:39.966" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:56:39.966" starttime="20200907 07:56:39.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:56:39.967" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:56:39.967" starttime="20200907 07:56:39.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:56:39.968" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:56:39.968" starttime="20200907 07:56:39.967"></status>
</kw>
<status status="PASS" endtime="20200907 07:56:39.968" starttime="20200907 07:56:39.957"></status>
</kw>
<msg timestamp="20200907 07:56:39.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:56:39.968" starttime="20200907 07:56:39.957"></status>
</kw>
<msg timestamp="20200907 07:56:39.968" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:56:39.968" starttime="20200907 07:56:39.956"></status>
</kw>
<msg timestamp="20200907 07:56:39.968" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:56:39.968" starttime="20200907 07:56:39.956"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200907 07:56:39.972" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200907 07:56:39.972" starttime="20200907 07:56:39.971"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:56:39.972" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200907 07:56:39.972" starttime="20200907 07:56:39.972"></status>
</kw>
<status status="PASS" endtime="20200907 07:56:39.973" starttime="20200907 07:56:39.971"></status>
</kw>
<msg timestamp="20200907 07:56:39.973" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200907 07:56:39.973" starttime="20200907 07:56:39.971"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200907 07:56:39.974" starttime="20200907 07:56:39.973"></status>
</kw>
<msg timestamp="20200907 07:56:39.974" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200907 07:56:39.974" starttime="20200907 07:56:39.973"></status>
</kw>
<status status="PASS" endtime="20200907 07:56:39.974" starttime="20200907 07:56:39.970"></status>
</kw>
<msg timestamp="20200907 07:56:39.974" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200907 07:56:39.974" starttime="20200907 07:56:39.969"></status>
</kw>
<msg timestamp="20200907 07:56:39.974" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200907 07:56:39.974" starttime="20200907 07:56:39.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:56:39.977" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:57:11.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:57:11.691" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-07 07:56:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:56:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200907 07:57:11.691" starttime="20200907 07:56:39.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:57:11.692" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-07 07:56:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:56:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-07 07:56:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-07 07:56:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-09-07 07:56:43 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
2020-09-07 07:56:44 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465403932, maxDate=1600070203932, sequenceNumber=3, masterKeyId=2))
2020-09-07 07:56:44 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a1 eb c4 bc c6 2e 38 a1 f3 f6 dc c8 2e 40 03 48 01 5a 0d 36 33 30 37 31 33 38 31 33 32 35 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-07 07:56:44 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465403932, maxDate=1600070203932, sequenceNumber=3, masterKeyId=2)
2020-09-07 07:56:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-07 07:56:44 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-07 07:56:44 INFO  JobSubmitter:202 - number of splits:3
2020-09-07 07:56:44 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-07 07:56:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599465203997_0003
2020-09-07 07:56:44 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a1 eb c4 bc c6 2e 38 a1 f3 f6 dc c8 2e 40 03 48 01 5a 0d 36 33 30 37 31 33 38 31 33 32 35 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465403932, maxDate=1600070203932, sequenceNumber=3, masterKeyId=2)]
2020-09-07 07:56:44 INFO  Configuration:2752 - resource-types.xml not found
2020-09-07 07:56:44 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-07 07:56:44 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-07 07:56:45 INFO  YarnClientImpl:311 - Submitted application application_1599465203997_0003
2020-09-07 07:56:45 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599465203997_0003/
2020-09-07 07:56:45 INFO  Job:1619 - Running job: job_1599465203997_0003
2020-09-07 07:56:52 INFO  Job:1640 - Job job_1599465203997_0003 running in uber mode : false
2020-09-07 07:56:52 INFO  Job:1647 -  map 0% reduce 0%
2020-09-07 07:57:02 INFO  Job:1647 -  map 33% reduce 0%
2020-09-07 07:57:04 INFO  Job:1647 -  map 67% reduce 0%
2020-09-07 07:57:05 INFO  Job:1647 -  map 100% reduce 0%
2020-09-07 07:57:09 INFO  Job:1647 -  map 100% reduce 100%
2020-09-07 07:57:10 INFO  Job:1658 - Job job_1599465203997_0003 completed successfully
2020-09-07 07:57:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1051977
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45318
		Total time spent by all reduces in occupied slots (ms)=7790
		Total time spent by all map tasks (ms)=22659
		Total time spent by all reduce tasks (ms)=3895
		Total vcore-milliseconds taken by all map tasks=22659
		Total vcore-milliseconds taken by all reduce tasks=3895
		Total megabyte-milliseconds taken by all map tasks=46405632
		Total megabyte-milliseconds taken by all reduce tasks=7976960
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1022
		CPU time spent (ms)=7920
		Physical memory (bytes) snapshot=1311879168
		Virtual memory (bytes) snapshot=14299738112
		Total committed heap usage (bytes)=1126170624
		Peak Map Physical memory (bytes)=375685120
		Peak Map Virtual memory (bytes)=3576709120
		Peak Reduce Physical memory (bytes)=365723648
		Peak Reduce Virtual memory (bytes)=3579203584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 27.694 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200907 07:57:11.692" starttime="20200907 07:57:11.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:57:11.692" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:57:11.693" starttime="20200907 07:57:11.692"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:11.693" starttime="20200907 07:56:39.975"></status>
</kw>
<msg timestamp="20200907 07:57:11.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:57:11.693" starttime="20200907 07:56:39.975"></status>
</kw>
<msg timestamp="20200907 07:57:11.694" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-07 07:56:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:56:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200907 07:57:11.694" starttime="20200907 07:56:39.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200907 07:57:11.695" starttime="20200907 07:57:11.694"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200907 07:57:11.695" critical="yes" starttime="20200907 07:56:39.955"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:57:11.700" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:57:11.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:57:11.707" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:57:11.707" starttime="20200907 07:57:11.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:57:11.708" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:57:11.708" starttime="20200907 07:57:11.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:57:11.708" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:57:11.708" starttime="20200907 07:57:11.708"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:11.709" starttime="20200907 07:57:11.698"></status>
</kw>
<msg timestamp="20200907 07:57:11.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:57:11.709" starttime="20200907 07:57:11.697"></status>
</kw>
<msg timestamp="20200907 07:57:11.709" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:57:11.709" starttime="20200907 07:57:11.697"></status>
</kw>
<msg timestamp="20200907 07:57:11.709" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:57:11.709" starttime="20200907 07:57:11.696"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200907 07:57:11.710" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20200907 07:57:11.710" starttime="20200907 07:57:11.709"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200907 07:57:11.716" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200907 07:57:11.716" starttime="20200907 07:57:11.715"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:57:11.716" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200907 07:57:11.716" starttime="20200907 07:57:11.716"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:11.717" starttime="20200907 07:57:11.714"></status>
</kw>
<msg timestamp="20200907 07:57:11.717" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200907 07:57:11.717" starttime="20200907 07:57:11.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200907 07:57:11.718" starttime="20200907 07:57:11.718"></status>
</kw>
<msg timestamp="20200907 07:57:11.718" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200907 07:57:11.718" starttime="20200907 07:57:11.717"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:11.718" starttime="20200907 07:57:11.712"></status>
</kw>
<msg timestamp="20200907 07:57:11.718" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200907 07:57:11.718" starttime="20200907 07:57:11.711"></status>
</kw>
<msg timestamp="20200907 07:57:11.719" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200907 07:57:11.719" starttime="20200907 07:57:11.710"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200907 07:57:11.722" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200907 07:57:11.722" starttime="20200907 07:57:11.721"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:57:11.723" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200907 07:57:11.723" starttime="20200907 07:57:11.722"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:11.723" starttime="20200907 07:57:11.721"></status>
</kw>
<msg timestamp="20200907 07:57:11.723" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200907 07:57:11.723" starttime="20200907 07:57:11.721"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200907 07:57:11.725" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200907 07:57:11.725" starttime="20200907 07:57:11.724"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:57:11.725" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200907 07:57:11.725" starttime="20200907 07:57:11.725"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:11.726" starttime="20200907 07:57:11.724"></status>
</kw>
<msg timestamp="20200907 07:57:11.726" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200907 07:57:11.726" starttime="20200907 07:57:11.723"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:11.726" starttime="20200907 07:57:11.720"></status>
</kw>
<msg timestamp="20200907 07:57:11.726" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200907 07:57:11.726" starttime="20200907 07:57:11.719"></status>
</kw>
<msg timestamp="20200907 07:57:11.726" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200907 07:57:11.726" starttime="20200907 07:57:11.719"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200907 07:57:11.730" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200907 07:57:11.730" starttime="20200907 07:57:11.729"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:57:11.730" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200907 07:57:11.730" starttime="20200907 07:57:11.730"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:11.730" starttime="20200907 07:57:11.729"></status>
</kw>
<msg timestamp="20200907 07:57:11.730" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200907 07:57:11.731" starttime="20200907 07:57:11.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200907 07:57:11.732" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200907 07:57:11.732" starttime="20200907 07:57:11.732"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:57:11.733" level="INFO">${result} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20200907 07:57:11.733" starttime="20200907 07:57:11.732"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:11.733" starttime="20200907 07:57:11.731"></status>
</kw>
<msg timestamp="20200907 07:57:11.733" level="INFO">${path_with_leading} = /wordcount-55.txt</msg>
<status status="PASS" endtime="20200907 07:57:11.733" starttime="20200907 07:57:11.731"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:11.733" starttime="20200907 07:57:11.728"></status>
</kw>
<msg timestamp="20200907 07:57:11.733" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20200907 07:57:11.733" starttime="20200907 07:57:11.727"></status>
</kw>
<msg timestamp="20200907 07:57:11.734" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20200907 07:57:11.734" starttime="20200907 07:57:11.726"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:57:11.737" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:57:43.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:57:43.309" level="INFO">${output} = 2020-09-07 07:57:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-09-07 07:57:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
202...</msg>
<status status="PASS" endtime="20200907 07:57:43.309" starttime="20200907 07:57:11.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:57:43.310" level="INFO">2020-09-07 07:57:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-09-07 07:57:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
2020-09-07 07:57:14 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465434134, maxDate=1600070234134, sequenceNumber=4, masterKeyId=2))
2020-09-07 07:57:14 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 d7 c6 bc c6 2e 38 b4 df f8 dc c8 2e 40 04 48 01 5a 0d 36 33 30 37 31 33 38 31 33 32 35 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-07 07:57:14 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465434134, maxDate=1600070234134, sequenceNumber=4, masterKeyId=2)
2020-09-07 07:57:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-07 07:57:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:57:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-07 07:57:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-07 07:57:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-07 07:57:16 INFO  JobSubmitter:202 - number of splits:3
2020-09-07 07:57:16 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-07 07:57:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599465203997_0004
2020-09-07 07:57:16 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b4 d7 c6 bc c6 2e 38 b4 df f8 dc c8 2e 40 04 48 01 5a 0d 36 33 30 37 31 33 38 31 33 32 35 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465434134, maxDate=1600070234134, sequenceNumber=4, masterKeyId=2)]
2020-09-07 07:57:16 INFO  Configuration:2752 - resource-types.xml not found
2020-09-07 07:57:16 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-07 07:57:16 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-07 07:57:17 INFO  YarnClientImpl:311 - Submitted application application_1599465203997_0004
2020-09-07 07:57:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599465203997_0004/
2020-09-07 07:57:17 INFO  Job:1619 - Running job: job_1599465203997_0004
2020-09-07 07:57:25 INFO  Job:1640 - Job job_1599465203997_0004 running in uber mode : false
2020-09-07 07:57:25 INFO  Job:1647 -  map 0% reduce 0%
2020-09-07 07:57:35 INFO  Job:1647 -  map 33% reduce 0%
2020-09-07 07:57:37 INFO  Job:1647 -  map 67% reduce 0%
2020-09-07 07:57:38 INFO  Job:1647 -  map 100% reduce 0%
2020-09-07 07:57:42 INFO  Job:1647 -  map 100% reduce 100%
2020-09-07 07:57:42 INFO  Job:1658 - Job job_1599465203997_0004 completed successfully
2020-09-07 07:57:42 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114633
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48214
		Total time spent by all reduces in occupied slots (ms)=7822
		Total time spent by all map tasks (ms)=24107
		Total time spent by all reduce tasks (ms)=3911
		Total vcore-milliseconds taken by all map tasks=24107
		Total vcore-milliseconds taken by all reduce tasks=3911
		Total megabyte-milliseconds taken by all map tasks=49371136
		Total megabyte-milliseconds taken by all reduce tasks=8009728
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1172
		CPU time spent (ms)=7970
		Physical memory (bytes) snapshot=1387012096
		Virtual memory (bytes) snapshot=14286381056
		Total committed heap usage (bytes)=1179648000
		Peak Map Physical memory (bytes)=376475648
		Peak Map Virtual memory (bytes)=3576258560
		Peak Reduce Physical memory (bytes)=364646400
		Peak Reduce Virtual memory (bytes)=3570601984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200907 07:57:43.311" starttime="20200907 07:57:43.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:57:43.311" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:57:43.311" starttime="20200907 07:57:43.311"></status>
</kw>
<status status="PASS" endtime="20200907 07:57:43.311" starttime="20200907 07:57:11.735"></status>
</kw>
<msg timestamp="20200907 07:57:43.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:57:43.312" starttime="20200907 07:57:11.734"></status>
</kw>
<msg timestamp="20200907 07:57:43.312" level="INFO">${output} = 2020-09-07 07:57:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-09-07 07:57:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
202...</msg>
<status status="PASS" endtime="20200907 07:57:43.312" starttime="20200907 07:57:11.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200907 07:57:43.313" starttime="20200907 07:57:43.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200907 07:57:43.314" starttime="20200907 07:57:43.313"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200907 07:57:43.314" critical="yes" starttime="20200907 07:57:11.696"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200907 07:57:43.315" starttime="20200907 07:56:39.912"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:55:09.648" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:55:09.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:55:09.658" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:55:09.658" starttime="20200907 07:55:09.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:55:09.659" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:55:09.659" starttime="20200907 07:55:09.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:55:09.659" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:55:09.659" starttime="20200907 07:55:09.659"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:09.659" starttime="20200907 07:55:09.646"></status>
</kw>
<msg timestamp="20200907 07:55:09.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:55:09.660" starttime="20200907 07:55:09.646"></status>
</kw>
<msg timestamp="20200907 07:55:09.660" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:55:09.660" starttime="20200907 07:55:09.645"></status>
</kw>
<msg timestamp="20200907 07:55:09.660" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:55:09.660" starttime="20200907 07:55:09.645"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200907 07:55:09.664" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200907 07:55:09.664" starttime="20200907 07:55:09.663"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:55:09.664" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200907 07:55:09.664" starttime="20200907 07:55:09.664"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:09.664" starttime="20200907 07:55:09.663"></status>
</kw>
<msg timestamp="20200907 07:55:09.664" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200907 07:55:09.664" starttime="20200907 07:55:09.662"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:09.665" starttime="20200907 07:55:09.662"></status>
</kw>
<msg timestamp="20200907 07:55:09.665" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200907 07:55:09.665" starttime="20200907 07:55:09.661"></status>
</kw>
<msg timestamp="20200907 07:55:09.665" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200907 07:55:09.665" starttime="20200907 07:55:09.660"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:55:09.668" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:55:51.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:55:51.578" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-07 07:55:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:55:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200907 07:55:51.578" starttime="20200907 07:55:09.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:55:51.579" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-07 07:55:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:55:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-07 07:55:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-07 07:55:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-09-07 07:55:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
2020-09-07 07:55:13 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465313810, maxDate=1600070113810, sequenceNumber=1, masterKeyId=2))
2020-09-07 07:55:13 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f3 a9 bf bc c6 2e 38 f3 b1 f1 dc c8 2e 40 01 48 01 5a 0d 36 33 30 37 31 33 38 31 33 32 35 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-07 07:55:13 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465313810, maxDate=1600070113810, sequenceNumber=1, masterKeyId=2)
2020-09-07 07:55:14 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-07 07:55:14 INFO  JobSubmitter:202 - number of splits:3
2020-09-07 07:55:14 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-07 07:55:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599465203997_0001
2020-09-07 07:55:14 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f3 a9 bf bc c6 2e 38 f3 b1 f1 dc c8 2e 40 01 48 01 5a 0d 36 33 30 37 31 33 38 31 33 32 35 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465313810, maxDate=1600070113810, sequenceNumber=1, masterKeyId=2)]
2020-09-07 07:55:14 INFO  Configuration:2752 - resource-types.xml not found
2020-09-07 07:55:14 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-07 07:55:15 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-07 07:55:16 INFO  YarnClientImpl:311 - Submitted application application_1599465203997_0001
2020-09-07 07:55:16 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599465203997_0001/
2020-09-07 07:55:16 INFO  Job:1619 - Running job: job_1599465203997_0001
2020-09-07 07:55:26 INFO  Job:1640 - Job job_1599465203997_0001 running in uber mode : false
2020-09-07 07:55:26 INFO  Job:1647 -  map 0% reduce 0%
2020-09-07 07:55:37 INFO  Job:1647 -  map 33% reduce 0%
2020-09-07 07:55:38 INFO  Job:1647 -  map 67% reduce 0%
2020-09-07 07:55:39 INFO  Job:1647 -  map 100% reduce 0%
2020-09-07 07:55:47 INFO  Job:1647 -  map 100% reduce 100%
2020-09-07 07:55:50 INFO  Job:1658 - Job job_1599465203997_0001 completed successfully
2020-09-07 07:55:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052181
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46464
		Total time spent by all reduces in occupied slots (ms)=14786
		Total time spent by all map tasks (ms)=23232
		Total time spent by all reduce tasks (ms)=7393
		Total vcore-milliseconds taken by all map tasks=23232
		Total vcore-milliseconds taken by all reduce tasks=7393
		Total megabyte-milliseconds taken by all map tasks=47579136
		Total megabyte-milliseconds taken by all reduce tasks=15140864
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1161
		CPU time spent (ms)=7510
		Physical memory (bytes) snapshot=1239724032
		Virtual memory (bytes) snapshot=14297210880
		Total committed heap usage (bytes)=1040187392
		Peak Map Physical memory (bytes)=292667392
		Peak Map Virtual memory (bytes)=3577352192
		Peak Reduce Physical memory (bytes)=370573312
		Peak Reduce Virtual memory (bytes)=3574050816
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.916 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200907 07:55:51.580" starttime="20200907 07:55:51.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:55:51.580" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:55:51.580" starttime="20200907 07:55:51.580"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:51.581" starttime="20200907 07:55:09.666"></status>
</kw>
<msg timestamp="20200907 07:55:51.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:55:51.581" starttime="20200907 07:55:09.666"></status>
</kw>
<msg timestamp="20200907 07:55:51.582" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-07 07:55:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:55:11 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200907 07:55:51.582" starttime="20200907 07:55:09.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200907 07:55:51.582" starttime="20200907 07:55:51.582"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200907 07:55:51.582" critical="yes" starttime="20200907 07:55:09.644"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:55:51.586" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:55:51.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:55:51.592" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:55:51.592" starttime="20200907 07:55:51.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:55:51.593" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:55:51.593" starttime="20200907 07:55:51.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:55:51.594" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:55:51.594" starttime="20200907 07:55:51.593"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:51.594" starttime="20200907 07:55:51.584"></status>
</kw>
<msg timestamp="20200907 07:55:51.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:55:51.594" starttime="20200907 07:55:51.584"></status>
</kw>
<msg timestamp="20200907 07:55:51.594" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:55:51.595" starttime="20200907 07:55:51.584"></status>
</kw>
<msg timestamp="20200907 07:55:51.595" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200907 07:55:51.595" starttime="20200907 07:55:51.583"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200907 07:55:51.596" level="INFO">${random} = 40</msg>
<status status="PASS" endtime="20200907 07:55:51.596" starttime="20200907 07:55:51.595"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200907 07:55:51.600" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200907 07:55:51.600" starttime="20200907 07:55:51.599"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:55:51.600" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200907 07:55:51.601" starttime="20200907 07:55:51.600"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:51.601" starttime="20200907 07:55:51.599"></status>
</kw>
<msg timestamp="20200907 07:55:51.601" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200907 07:55:51.601" starttime="20200907 07:55:51.598"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:51.601" starttime="20200907 07:55:51.598"></status>
</kw>
<msg timestamp="20200907 07:55:51.601" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200907 07:55:51.601" starttime="20200907 07:55:51.597"></status>
</kw>
<msg timestamp="20200907 07:55:51.601" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200907 07:55:51.601" starttime="20200907 07:55:51.596"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200907 07:55:51.605" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200907 07:55:51.605" starttime="20200907 07:55:51.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:55:51.606" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200907 07:55:51.606" starttime="20200907 07:55:51.605"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:51.606" starttime="20200907 07:55:51.604"></status>
</kw>
<msg timestamp="20200907 07:55:51.606" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200907 07:55:51.606" starttime="20200907 07:55:51.603"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:51.606" starttime="20200907 07:55:51.603"></status>
</kw>
<msg timestamp="20200907 07:55:51.606" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200907 07:55:51.606" starttime="20200907 07:55:51.602"></status>
</kw>
<msg timestamp="20200907 07:55:51.606" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200907 07:55:51.606" starttime="20200907 07:55:51.601"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200907 07:55:51.610" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200907 07:55:51.610" starttime="20200907 07:55:51.609"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200907 07:55:51.610" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200907 07:55:51.610" starttime="20200907 07:55:51.610"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:51.611" starttime="20200907 07:55:51.609"></status>
</kw>
<msg timestamp="20200907 07:55:51.611" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200907 07:55:51.611" starttime="20200907 07:55:51.608"></status>
</kw>
<status status="PASS" endtime="20200907 07:55:51.611" starttime="20200907 07:55:51.608"></status>
</kw>
<msg timestamp="20200907 07:55:51.611" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-40.txt</msg>
<status status="PASS" endtime="20200907 07:55:51.611" starttime="20200907 07:55:51.607"></status>
</kw>
<msg timestamp="20200907 07:55:51.611" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-40.txt</msg>
<status status="PASS" endtime="20200907 07:55:51.611" starttime="20200907 07:55:51.607"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:55:51.615" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-40.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:56:24.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:56:24.323" level="INFO">${output} = 2020-09-07 07:55:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-09-07 07:55:53 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
202...</msg>
<status status="PASS" endtime="20200907 07:56:24.323" starttime="20200907 07:55:51.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:56:24.324" level="INFO">2020-09-07 07:55:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-09-07 07:55:53 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
2020-09-07 07:55:53 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465353813, maxDate=1600070153813, sequenceNumber=2, masterKeyId=2))
2020-09-07 07:55:53 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d9 e3 c1 bc c6 2e 38 d9 eb f3 dc c8 2e 40 02 48 01 5a 0d 36 33 30 37 31 33 38 31 33 32 35 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-07 07:55:53 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465353813, maxDate=1600070153813, sequenceNumber=2, masterKeyId=2)
2020-09-07 07:55:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-07 07:55:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-07 07:55:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-07 07:55:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-07 07:55:55 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-07 07:55:55 INFO  JobSubmitter:202 - number of splits:3
2020-09-07 07:55:55 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-07 07:55:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1599465203997_0002
2020-09-07 07:55:57 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d9 e3 c1 bc c6 2e 38 d9 eb f3 dc c8 2e 40 02 48 01 5a 0d 36 33 30 37 31 33 38 31 33 32 35 32 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1599465353813, maxDate=1600070153813, sequenceNumber=2, masterKeyId=2)]
2020-09-07 07:55:57 INFO  Configuration:2752 - resource-types.xml not found
2020-09-07 07:55:57 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-07 07:55:57 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-07 07:55:58 INFO  YarnClientImpl:311 - Submitted application application_1599465203997_0002
2020-09-07 07:55:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1599465203997_0002/
2020-09-07 07:55:58 INFO  Job:1619 - Running job: job_1599465203997_0002
2020-09-07 07:56:05 INFO  Job:1640 - Job job_1599465203997_0002 running in uber mode : false
2020-09-07 07:56:05 INFO  Job:1647 -  map 0% reduce 0%
2020-09-07 07:56:15 INFO  Job:1647 -  map 33% reduce 0%
2020-09-07 07:56:17 INFO  Job:1647 -  map 67% reduce 0%
2020-09-07 07:56:18 INFO  Job:1647 -  map 100% reduce 0%
2020-09-07 07:56:22 INFO  Job:1647 -  map 100% reduce 100%
2020-09-07 07:56:23 INFO  Job:1658 - Job job_1599465203997_0002 completed successfully
2020-09-07 07:56:23 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42266
		Total time spent by all reduces in occupied slots (ms)=9590
		Total time spent by all map tasks (ms)=21133
		Total time spent by all reduce tasks (ms)=4795
		Total vcore-milliseconds taken by all map tasks=21133
		Total vcore-milliseconds taken by all reduce tasks=4795
		Total megabyte-milliseconds taken by all map tasks=43280384
		Total megabyte-milliseconds taken by all reduce tasks=9820160
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=895
		CPU time spent (ms)=7390
		Physical memory (bytes) snapshot=1232314368
		Virtual memory (bytes) snapshot=14290878464
		Total committed heap usage (bytes)=1081606144
		Peak Map Physical memory (bytes)=291500032
		Peak Map Virtual memory (bytes)=3574685696
		Peak Reduce Physical memory (bytes)=374624256
		Peak Reduce Virtual memory (bytes)=3578646528
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200907 07:56:24.324" starttime="20200907 07:56:24.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:56:24.325" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:56:24.325" starttime="20200907 07:56:24.325"></status>
</kw>
<status status="PASS" endtime="20200907 07:56:24.325" starttime="20200907 07:55:51.613"></status>
</kw>
<msg timestamp="20200907 07:56:24.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:56:24.326" starttime="20200907 07:55:51.613"></status>
</kw>
<msg timestamp="20200907 07:56:24.326" level="INFO">${output} = 2020-09-07 07:55:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-09-07 07:55:53 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.5:10200
202...</msg>
<status status="PASS" endtime="20200907 07:56:24.326" starttime="20200907 07:55:51.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200907 07:56:24.327" starttime="20200907 07:56:24.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200907 07:56:24.328" starttime="20200907 07:56:24.327"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200907 07:56:24.328" critical="yes" starttime="20200907 07:55:51.583"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200907 07:56:24.330" starttime="20200907 07:55:09.602"></status>
</suite>
<status status="PASS" elapsedtime="190883" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
