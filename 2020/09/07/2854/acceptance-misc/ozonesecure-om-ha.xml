<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200907 08:00:01.074" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:59:27.518" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:59:36.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:59:36.934" level="INFO">${output} = 2020-09-07 07:59:29,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:29,217 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200907 07:59:36.934" starttime="20200907 07:59:27.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:59:36.935" level="INFO">2020-09-07 07:59:29,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:29,217 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-07 07:59:29,217 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-07 07:59:31,432 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-09-07 07:59:31,433 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-09-07 07:59:31,433 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-09-07 07:59:31,433 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-09-07 07:59:31,433 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-09-07 07:59:31,433 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-09-07 07:59:31,433 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-09-07 07:59:31,438 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-09-07 07:59:31,451 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-07 07:59:31,490 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-62844, with testuser/scm@EXAMPLE.COM as owner.
2020-09-07 07:59:31,860 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-62844/bucket-0-54739, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-07 07:59:32,459 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-07 07:59:33,537 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-07 07:59:34,322 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-07 07:59:34,547 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-07 07:59:35,547 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,372
Average Time spent in bucket creation: 00:00:00,232
Average Time spent in key creation: 00:00:01,058
Average Time spent in key write: 00:00:01,603
Total bytes written: 10240
Total Execution time: 00:00:07,151
***************************************************</msg>
<status status="PASS" endtime="20200907 07:59:36.935" starttime="20200907 07:59:36.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:59:36.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:59:36.936" starttime="20200907 07:59:36.935"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:36.936" starttime="20200907 07:59:27.514"></status>
</kw>
<msg timestamp="20200907 07:59:36.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:59:36.936" starttime="20200907 07:59:27.514"></status>
</kw>
<msg timestamp="20200907 07:59:36.936" level="INFO">${result} = 2020-09-07 07:59:29,000 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:29,217 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200907 07:59:36.936" starttime="20200907 07:59:27.513"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200907 07:59:36.937" starttime="20200907 07:59:36.937"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:36.937" starttime="20200907 07:59:36.937"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200907 07:59:36.938" critical="yes" starttime="20200907 07:59:27.512"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:59:36.943" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:59:44.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:59:44.306" level="INFO">${output} = 2020-09-07 07:59:38,464 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:38,622 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200907 07:59:44.306" starttime="20200907 07:59:36.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:59:44.308" level="INFO">2020-09-07 07:59:38,464 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:38,622 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-07 07:59:38,622 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-07 07:59:38,786 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gdgp7f5c8z
2020-09-07 07:59:38,800 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-07 07:59:39,806 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-07 07:59:40,219 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-09-07 07:59:40,281 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-07 07:59:40,806 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-07 07:59:40,985 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-07 07:59:41,807 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-07 07:59:42,807 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-07 07:59:43,808 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-07 07:59:43,950 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=2837.932177, max=2837.932177, mean=2837.932177, stddev=0.0, median=2837.932177, p75=2837.932177, p95=2837.932177, p98=2837.932177, p99=2837.932177, p999=2837.932177, mean_rate=0.2773675587090085, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-07 07:59:43,951 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2020-09-07 07:59:43,952 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-07 07:59:43,952 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200907 07:59:44.309" starttime="20200907 07:59:44.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:59:44.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:59:44.309" starttime="20200907 07:59:44.309"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:44.310" starttime="20200907 07:59:36.940"></status>
</kw>
<msg timestamp="20200907 07:59:44.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:59:44.310" starttime="20200907 07:59:36.940"></status>
</kw>
<msg timestamp="20200907 07:59:44.310" level="INFO">${result} = 2020-09-07 07:59:38,464 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:38,622 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200907 07:59:44.310" starttime="20200907 07:59:36.939"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200907 07:59:44.311" starttime="20200907 07:59:44.311"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:44.311" starttime="20200907 07:59:44.310"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200907 07:59:44.311" critical="yes" starttime="20200907 07:59:36.939"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:59:44.316" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:59:48.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:59:48.689" level="INFO">${output} = 2020-09-07 07:59:45,953 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:46,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200907 07:59:48.689" starttime="20200907 07:59:44.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:59:48.690" level="INFO">2020-09-07 07:59:45,953 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:46,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-07 07:59:46,093 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-07 07:59:46,241 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ere4ipxtjs
2020-09-07 07:59:46,278 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-07 07:59:47,290 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-07 07:59:48,290 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-07 07:59:48,647 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=214.630699, max=214.630699, mean=214.630699, stddev=0.0, median=214.630699, p75=214.630699, p95=214.630699, p98=214.630699, p99=214.630699, p999=214.630699, mean_rate=0.9723087337969404, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-07 07:59:48,649 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-09-07 07:59:48,650 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-07 07:59:48,650 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200907 07:59:48.690" starttime="20200907 07:59:48.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:59:48.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:59:48.691" starttime="20200907 07:59:48.690"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:48.691" starttime="20200907 07:59:44.314"></status>
</kw>
<msg timestamp="20200907 07:59:48.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:59:48.691" starttime="20200907 07:59:44.314"></status>
</kw>
<msg timestamp="20200907 07:59:48.692" level="INFO">${result} = 2020-09-07 07:59:45,953 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:46,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200907 07:59:48.692" starttime="20200907 07:59:44.313"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200907 07:59:48.693" starttime="20200907 07:59:48.692"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:48.693" starttime="20200907 07:59:48.692"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200907 07:59:48.693" critical="yes" starttime="20200907 07:59:44.312"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:59:48.698" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:59:53.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:59:53.134" level="INFO">${output} = 2020-09-07 07:59:50,239 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:50,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200907 07:59:53.134" starttime="20200907 07:59:48.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:59:53.135" level="INFO">2020-09-07 07:59:50,239 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:50,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-07 07:59:50,431 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-07 07:59:50,562 [main] INFO freon.BaseFreonGenerator: Executing test with prefix fskh2wvb5k
2020-09-07 07:59:50,580 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-07 07:59:51,585 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-07 07:59:52,586 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-07 07:59:53,095 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=73.184498, max=73.184498, mean=73.184498, stddev=0.0, median=73.184498, p75=73.184498, p95=73.184498, p98=73.184498, p99=73.184498, p999=73.184498, mean_rate=0.8877915871677784, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-07 07:59:53,095 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-09-07 07:59:53,096 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-07 07:59:53,096 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200907 07:59:53.136" starttime="20200907 07:59:53.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:59:53.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:59:53.136" starttime="20200907 07:59:53.136"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:53.136" starttime="20200907 07:59:48.695"></status>
</kw>
<msg timestamp="20200907 07:59:53.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:59:53.137" starttime="20200907 07:59:48.695"></status>
</kw>
<msg timestamp="20200907 07:59:53.137" level="INFO">${result} = 2020-09-07 07:59:50,239 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-07 07:59:50,431 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200907 07:59:53.137" starttime="20200907 07:59:48.694"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200907 07:59:53.138" starttime="20200907 07:59:53.138"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:53.138" starttime="20200907 07:59:53.137"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200907 07:59:53.138" critical="yes" starttime="20200907 07:59:48.694"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200907 07:59:53.140" starttime="20200907 07:59:27.488"></status>
</suite>
<status status="PASS" endtime="20200907 07:59:53.143" starttime="20200907 07:59:27.462"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:59:21.577" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:59:21.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:59:21.580" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200907 07:59:21.580" starttime="20200907 07:59:21.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:59:21.580" level="INFO">scm</msg>
<status status="PASS" endtime="20200907 07:59:21.581" starttime="20200907 07:59:21.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:59:21.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:59:21.582" starttime="20200907 07:59:21.581"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:21.582" starttime="20200907 07:59:21.572"></status>
</kw>
<msg timestamp="20200907 07:59:21.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:59:21.582" starttime="20200907 07:59:21.571"></status>
</kw>
<msg timestamp="20200907 07:59:21.583" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200907 07:59:21.588" starttime="20200907 07:59:21.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200907 07:59:21.589" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200907 07:59:21.589" starttime="20200907 07:59:21.588"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200907 07:59:21.598" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200907 07:59:21.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200907 07:59:21.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200907 07:59:21.612" starttime="20200907 07:59:21.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200907 07:59:21.612" level="INFO"></msg>
<status status="PASS" endtime="20200907 07:59:21.612" starttime="20200907 07:59:21.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200907 07:59:21.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200907 07:59:21.613" starttime="20200907 07:59:21.613"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:21.613" starttime="20200907 07:59:21.591"></status>
</kw>
<msg timestamp="20200907 07:59:21.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200907 07:59:21.614" starttime="20200907 07:59:21.591"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:21.614" starttime="20200907 07:59:21.590"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:21.614" starttime="20200907 07:59:21.589"></status>
</kw>
<status status="PASS" endtime="20200907 07:59:21.614" starttime="20200907 07:59:21.570"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200907 07:59:21.614" critical="yes" starttime="20200907 07:59:21.569"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200907 07:59:21.615" starttime="20200907 07:59:21.487"></status>
</suite>
<status status="PASS" elapsedtime="25809" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="5">Critical Tests</stat>
<stat fail="0" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="5">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
