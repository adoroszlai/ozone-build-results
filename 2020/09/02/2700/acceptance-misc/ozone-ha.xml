<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200902 02:29:29.236" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200902 02:28:02.356" level="INFO">${random} = 71874</msg>
<status status="PASS" endtime="20200902 02:28:02.356" starttime="20200902 02:28:02.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200902 02:28:02.357" level="INFO">${prefix} = 71874</msg>
<status status="PASS" endtime="20200902 02:28:02.357" starttime="20200902 02:28:02.356"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:02.357" starttime="20200902 02:28:02.353"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:02.367" level="INFO">Running command 'ozone sh volume info /71874-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:09.458" level="INFO">${rc} = 255</msg>
<msg timestamp="20200902 02:28:09.458" level="INFO">${output} = VOLUME_NOT_FOUND Volume 71874-rpcbasic is not found</msg>
<status status="PASS" endtime="20200902 02:28:09.458" starttime="20200902 02:28:02.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:09.459" level="INFO">VOLUME_NOT_FOUND Volume 71874-rpcbasic is not found</msg>
<status status="PASS" endtime="20200902 02:28:09.459" starttime="20200902 02:28:09.459"></status>
</kw>
<msg timestamp="20200902 02:28:09.460" level="INFO">${result} = VOLUME_NOT_FOUND Volume 71874-rpcbasic is not found</msg>
<status status="PASS" endtime="20200902 02:28:09.460" starttime="20200902 02:28:02.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200902 02:28:09.460" starttime="20200902 02:28:09.460"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:09.464" level="INFO">Running command 'ozone sh volume create /71874-rpcbasic --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:11.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:11.966" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:11.966" starttime="20200902 02:28:09.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:11.967" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:11.967" starttime="20200902 02:28:11.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:11.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:11.968" starttime="20200902 02:28:11.967"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:11.968" starttime="20200902 02:28:09.461"></status>
</kw>
<msg timestamp="20200902 02:28:11.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:11.968" starttime="20200902 02:28:09.461"></status>
</kw>
<msg timestamp="20200902 02:28:11.969" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200902 02:28:11.969" starttime="20200902 02:28:09.460"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200902 02:28:11.969" starttime="20200902 02:28:11.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:11.982" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="71874-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:14.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:14.744" level="INFO">${output} = {
  "metadata": {},
  "name": "71874-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-02T02:28:11.626Z",
  "modificationTime": "2020-09-02T02:28:11.626Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200902 02:28:14.745" starttime="20200902 02:28:11.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:14.748" level="INFO">{
  "metadata": {},
  "name": "71874-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-02T02:28:11.626Z",
  "modificationTime": "2020-09-02T02:28:11.626Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200902 02:28:14.748" starttime="20200902 02:28:14.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:14.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:14.749" starttime="20200902 02:28:14.748"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:14.749" starttime="20200902 02:28:11.979"></status>
</kw>
<msg timestamp="20200902 02:28:14.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:14.750" starttime="20200902 02:28:11.978"></status>
</kw>
<msg timestamp="20200902 02:28:14.750" level="INFO">${result} = {
  "metadata": {},
  "name": "71874-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-02T02:28:11.626Z",
  "modificationTime": "2020-09-02T02:28:11.626Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200902 02:28:14.750" starttime="20200902 02:28:11.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200902 02:28:14.751" starttime="20200902 02:28:14.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:14.758" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="71874-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:16.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:16.966" level="INFO">${output} = {
  "metadata": {},
  "name": "71874-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-02T02:28:11.626Z",
  "modificationTime": "2020-09-02T02:28:11.626Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200902 02:28:16.966" starttime="20200902 02:28:14.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:16.968" level="INFO">{
  "metadata": {},
  "name": "71874-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-02T02:28:11.626Z",
  "modificationTime": "2020-09-02T02:28:11.626Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200902 02:28:16.968" starttime="20200902 02:28:16.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:16.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:16.968" starttime="20200902 02:28:16.968"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:16.969" starttime="20200902 02:28:14.752"></status>
</kw>
<msg timestamp="20200902 02:28:16.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:16.969" starttime="20200902 02:28:14.752"></status>
</kw>
<msg timestamp="20200902 02:28:16.969" level="INFO">${result} = {
  "metadata": {},
  "name": "71874-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-02T02:28:11.626Z",
  "modificationTime": "2020-09-02T02:28:11.626Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200902 02:28:16.969" starttime="20200902 02:28:14.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200902 02:28:16.969" starttime="20200902 02:28:16.969"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:16.974" level="INFO">Running command 'ozone sh volume update /71874-rpcbasic --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:19.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:19.235" level="INFO">${output} = {
  "metadata" : { },
  "name" : "71874-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-09-02T02:28:11.626Z",
  "modificationTime" : "2020-09-02T02:28:18.875Z",
  "acls...</msg>
<status status="PASS" endtime="20200902 02:28:19.235" starttime="20200902 02:28:16.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:19.236" level="INFO">{
  "metadata" : { },
  "name" : "71874-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-09-02T02:28:11.626Z",
  "modificationTime" : "2020-09-02T02:28:18.875Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200902 02:28:19.237" starttime="20200902 02:28:19.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:19.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:19.237" starttime="20200902 02:28:19.237"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:19.237" starttime="20200902 02:28:16.971"></status>
</kw>
<msg timestamp="20200902 02:28:19.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:19.238" starttime="20200902 02:28:16.970"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:19.238" starttime="20200902 02:28:16.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:19.242" level="INFO">Running command 'ozone sh volume info /71874-rpcbasic | jq -r '. | select(.name=="71874-rpcbasic") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:21.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:21.502" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200902 02:28:21.502" starttime="20200902 02:28:19.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:21.503" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200902 02:28:21.503" starttime="20200902 02:28:21.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:21.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:21.504" starttime="20200902 02:28:21.504"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:21.504" starttime="20200902 02:28:19.239"></status>
</kw>
<msg timestamp="20200902 02:28:21.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:21.504" starttime="20200902 02:28:19.239"></status>
</kw>
<msg timestamp="20200902 02:28:21.505" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200902 02:28:21.505" starttime="20200902 02:28:19.238"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200902 02:28:21.505" starttime="20200902 02:28:21.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:21.510" level="INFO">Running command 'ozone sh bucket create /71874-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:23.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:23.652" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:23.652" starttime="20200902 02:28:21.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:23.653" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:23.653" starttime="20200902 02:28:23.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:23.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:23.654" starttime="20200902 02:28:23.653"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:23.654" starttime="20200902 02:28:21.506"></status>
</kw>
<msg timestamp="20200902 02:28:23.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:23.654" starttime="20200902 02:28:21.506"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:23.655" starttime="20200902 02:28:21.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:23.659" level="INFO">Running command 'ozone sh bucket info /71874-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:25.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:25.813" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200902 02:28:25.813" starttime="20200902 02:28:23.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:25.814" level="INFO">DISK</msg>
<status status="PASS" endtime="20200902 02:28:25.814" starttime="20200902 02:28:25.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:25.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:25.815" starttime="20200902 02:28:25.815"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:25.815" starttime="20200902 02:28:23.656"></status>
</kw>
<msg timestamp="20200902 02:28:25.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:25.816" starttime="20200902 02:28:23.656"></status>
</kw>
<msg timestamp="20200902 02:28:25.816" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200902 02:28:25.816" starttime="20200902 02:28:23.655"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200902 02:28:25.816" starttime="20200902 02:28:25.816"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:25.820" level="INFO">Running command 'ozone sh bucket list /71874-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:28.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:28.082" level="INFO">${output} = 71874-rpcbasic</msg>
<status status="PASS" endtime="20200902 02:28:28.083" starttime="20200902 02:28:25.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:28.084" level="INFO">71874-rpcbasic</msg>
<status status="PASS" endtime="20200902 02:28:28.084" starttime="20200902 02:28:28.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:28.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:28.085" starttime="20200902 02:28:28.084"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:28.085" starttime="20200902 02:28:25.818"></status>
</kw>
<msg timestamp="20200902 02:28:28.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:28.085" starttime="20200902 02:28:25.817"></status>
</kw>
<msg timestamp="20200902 02:28:28.085" level="INFO">${result} = 71874-rpcbasic</msg>
<status status="PASS" endtime="20200902 02:28:28.085" starttime="20200902 02:28:25.817"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200902 02:28:28.086" starttime="20200902 02:28:28.086"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:28.091" level="INFO">Running command 'ozone sh key put /71874-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:36.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:36.541" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:36.541" starttime="20200902 02:28:28.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:36.542" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:36.542" starttime="20200902 02:28:36.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:36.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:36.543" starttime="20200902 02:28:36.542"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:36.543" starttime="20200902 02:28:28.088"></status>
</kw>
<msg timestamp="20200902 02:28:36.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:36.543" starttime="20200902 02:28:28.088"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:36.544" starttime="20200902 02:28:28.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:36.547" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:36.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:36.550" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:36.550" starttime="20200902 02:28:36.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:36.551" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:36.551" starttime="20200902 02:28:36.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:36.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:36.551" starttime="20200902 02:28:36.551"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:36.552" starttime="20200902 02:28:36.544"></status>
</kw>
<msg timestamp="20200902 02:28:36.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:36.552" starttime="20200902 02:28:36.544"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:36.552" starttime="20200902 02:28:36.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:36.555" level="INFO">Running command 'ozone sh key get /71874-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:40.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:40.160" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:40.160" starttime="20200902 02:28:36.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:40.161" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:40.162" starttime="20200902 02:28:40.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:40.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:40.162" starttime="20200902 02:28:40.162"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:40.163" starttime="20200902 02:28:36.553"></status>
</kw>
<msg timestamp="20200902 02:28:40.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:40.163" starttime="20200902 02:28:36.553"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:40.163" starttime="20200902 02:28:36.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:40.168" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:40.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:40.171" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:40.171" starttime="20200902 02:28:40.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:40.172" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:40.172" starttime="20200902 02:28:40.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:40.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:40.173" starttime="20200902 02:28:40.172"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:40.173" starttime="20200902 02:28:40.164"></status>
</kw>
<msg timestamp="20200902 02:28:40.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:40.173" starttime="20200902 02:28:40.164"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:40.173" starttime="20200902 02:28:40.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:40.178" level="INFO">Running command 'ozone sh key put -t RATIS /71874-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:44.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:44.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:44.144" starttime="20200902 02:28:40.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:44.145" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:44.145" starttime="20200902 02:28:44.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:44.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:44.146" starttime="20200902 02:28:44.145"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:44.146" starttime="20200902 02:28:40.174"></status>
</kw>
<msg timestamp="20200902 02:28:44.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:44.146" starttime="20200902 02:28:40.174"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:44.146" starttime="20200902 02:28:40.173"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:44.150" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:44.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:44.152" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:44.152" starttime="20200902 02:28:44.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:44.153" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:44.153" starttime="20200902 02:28:44.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:44.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:44.154" starttime="20200902 02:28:44.154"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:44.154" starttime="20200902 02:28:44.147"></status>
</kw>
<msg timestamp="20200902 02:28:44.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:44.155" starttime="20200902 02:28:44.147"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:44.155" starttime="20200902 02:28:44.147"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:44.158" level="INFO">Running command 'ozone sh key get /71874-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:47.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:47.677" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:47.677" starttime="20200902 02:28:44.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:47.678" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:47.678" starttime="20200902 02:28:47.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:47.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:47.679" starttime="20200902 02:28:47.679"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:47.679" starttime="20200902 02:28:44.156"></status>
</kw>
<msg timestamp="20200902 02:28:47.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:47.680" starttime="20200902 02:28:44.155"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:47.680" starttime="20200902 02:28:44.155"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:47.684" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:47.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:47.686" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:47.687" starttime="20200902 02:28:47.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:47.687" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:47.687" starttime="20200902 02:28:47.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:47.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:47.688" starttime="20200902 02:28:47.688"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:47.688" starttime="20200902 02:28:47.681"></status>
</kw>
<msg timestamp="20200902 02:28:47.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:47.688" starttime="20200902 02:28:47.680"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:47.689" starttime="20200902 02:28:47.680"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:47.693" level="INFO">Running command 'ozone sh key info /71874-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:49.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:49.810" level="INFO">${output} = {
  "volumeName": "71874-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-02T02:28:42.162Z",
  "modificationTime": "2020-09-02T02:28:43.763Z",
...</msg>
<status status="PASS" endtime="20200902 02:28:49.810" starttime="20200902 02:28:47.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:49.811" level="INFO">{
  "volumeName": "71874-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-02T02:28:42.162Z",
  "modificationTime": "2020-09-02T02:28:43.763Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104792963295477760,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200902 02:28:49.811" starttime="20200902 02:28:49.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:49.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:49.812" starttime="20200902 02:28:49.812"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:49.812" starttime="20200902 02:28:47.690"></status>
</kw>
<msg timestamp="20200902 02:28:49.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:49.813" starttime="20200902 02:28:47.690"></status>
</kw>
<msg timestamp="20200902 02:28:49.813" level="INFO">${result} = {
  "volumeName": "71874-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-02T02:28:42.162Z",
  "modificationTime": "2020-09-02T02:28:43.763Z",
...</msg>
<status status="PASS" endtime="20200902 02:28:49.813" starttime="20200902 02:28:47.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200902 02:28:49.813" starttime="20200902 02:28:49.813"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:49.818" level="INFO">Running command 'ozone sh key delete /71874-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:51.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:51.878" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:51.878" starttime="20200902 02:28:49.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:51.879" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:51.879" starttime="20200902 02:28:51.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:51.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:51.880" starttime="20200902 02:28:51.879"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:51.880" starttime="20200902 02:28:49.814"></status>
</kw>
<msg timestamp="20200902 02:28:51.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:51.880" starttime="20200902 02:28:49.814"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:51.880" starttime="20200902 02:28:49.813"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:51.884" level="INFO">Running command 'ozone sh key cp /71874-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:55.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:55.927" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:55.927" starttime="20200902 02:28:51.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:55.928" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:55.929" starttime="20200902 02:28:55.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:55.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:55.929" starttime="20200902 02:28:55.929"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:55.929" starttime="20200902 02:28:51.881"></status>
</kw>
<msg timestamp="20200902 02:28:55.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:55.930" starttime="20200902 02:28:51.881"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:55.930" starttime="20200902 02:28:51.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:55.935" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:55.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:55.936" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:55.936" starttime="20200902 02:28:55.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:55.937" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:55.937" starttime="20200902 02:28:55.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:55.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:55.938" starttime="20200902 02:28:55.937"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:55.938" starttime="20200902 02:28:55.931"></status>
</kw>
<msg timestamp="20200902 02:28:55.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:55.938" starttime="20200902 02:28:55.931"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:55.938" starttime="20200902 02:28:55.930"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:55.942" level="INFO">Running command 'ozone sh key get /71874-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:59.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:59.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:59.420" starttime="20200902 02:28:55.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:59.421" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:59.421" starttime="20200902 02:28:59.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:59.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:59.422" starttime="20200902 02:28:59.421"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:59.422" starttime="20200902 02:28:55.939"></status>
</kw>
<msg timestamp="20200902 02:28:59.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:59.422" starttime="20200902 02:28:55.939"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:59.422" starttime="20200902 02:28:55.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:59.426" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:28:59.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:28:59.429" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:28:59.429" starttime="20200902 02:28:59.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:28:59.430" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:28:59.430" starttime="20200902 02:28:59.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:28:59.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:28:59.431" starttime="20200902 02:28:59.430"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:59.431" starttime="20200902 02:28:59.423"></status>
</kw>
<msg timestamp="20200902 02:28:59.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:28:59.431" starttime="20200902 02:28:59.423"></status>
</kw>
<status status="PASS" endtime="20200902 02:28:59.431" starttime="20200902 02:28:59.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:28:59.435" level="INFO">Running command 'ozone sh key delete /71874-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:29:01.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:29:01.363" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:29:01.364" starttime="20200902 02:28:59.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:29:01.365" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:29:01.365" starttime="20200902 02:29:01.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:29:01.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:29:01.366" starttime="20200902 02:29:01.366"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:01.367" starttime="20200902 02:28:59.432"></status>
</kw>
<msg timestamp="20200902 02:29:01.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:29:01.367" starttime="20200902 02:28:59.432"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:01.367" starttime="20200902 02:28:59.431"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:29:01.370" level="INFO">Running command 'ozone sh key get /71874-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:29:03.448" level="INFO">${rc} = 255</msg>
<msg timestamp="20200902 02:29:03.449" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200902 02:29:03.449" starttime="20200902 02:29:01.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:29:03.450" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200902 02:29:03.450" starttime="20200902 02:29:03.449"></status>
</kw>
<msg timestamp="20200902 02:29:03.450" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200902 02:29:03.450" starttime="20200902 02:29:01.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200902 02:29:03.451" starttime="20200902 02:29:03.451"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:29:03.455" level="INFO">Running command 'ozone sh key get --force /71874-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:29:07.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:29:07.056" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:29:07.056" starttime="20200902 02:29:03.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:29:07.057" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:29:07.057" starttime="20200902 02:29:07.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:29:07.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:29:07.058" starttime="20200902 02:29:07.057"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:07.058" starttime="20200902 02:29:03.453"></status>
</kw>
<msg timestamp="20200902 02:29:07.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:29:07.058" starttime="20200902 02:29:03.452"></status>
</kw>
<msg timestamp="20200902 02:29:07.059" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200902 02:29:07.059" starttime="20200902 02:29:03.451"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200902 02:29:07.059" starttime="20200902 02:29:07.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:29:07.064" level="INFO">Running command 'ozone sh key info /71874-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:29:09.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:29:09.219" level="INFO">${output} = {
  "volumeName": "71874-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-02T02:28:30.166Z",
  "modificationTime": "2020-09-02T02:28:36.045Z",
  "rep...</msg>
<status status="PASS" endtime="20200902 02:29:09.219" starttime="20200902 02:29:07.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:29:09.221" level="INFO">{
  "volumeName": "71874-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-02T02:28:30.166Z",
  "modificationTime": "2020-09-02T02:28:36.045Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104792962506162180,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200902 02:29:09.221" starttime="20200902 02:29:09.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:29:09.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:29:09.221" starttime="20200902 02:29:09.221"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:09.222" starttime="20200902 02:29:07.061"></status>
</kw>
<msg timestamp="20200902 02:29:09.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:29:09.222" starttime="20200902 02:29:07.060"></status>
</kw>
<msg timestamp="20200902 02:29:09.222" level="INFO">${result} = {
  "volumeName": "71874-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-02T02:28:30.166Z",
  "modificationTime": "2020-09-02T02:28:36.045Z",
  "rep...</msg>
<status status="PASS" endtime="20200902 02:29:09.222" starttime="20200902 02:29:07.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200902 02:29:09.222" starttime="20200902 02:29:09.222"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:29:09.227" level="INFO">Running command 'ozone sh key list /71874-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:29:11.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:29:11.539" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200902 02:29:11.539" starttime="20200902 02:29:09.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:29:11.541" level="INFO">key1</msg>
<status status="PASS" endtime="20200902 02:29:11.541" starttime="20200902 02:29:11.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:29:11.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:29:11.542" starttime="20200902 02:29:11.541"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:11.542" starttime="20200902 02:29:09.224"></status>
</kw>
<msg timestamp="20200902 02:29:11.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:29:11.542" starttime="20200902 02:29:09.223"></status>
</kw>
<msg timestamp="20200902 02:29:11.542" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200902 02:29:11.543" starttime="20200902 02:29:09.223"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200902 02:29:11.543" starttime="20200902 02:29:11.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:29:11.548" level="INFO">Running command 'ozone sh key rename /71874-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:29:13.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:29:13.683" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:29:13.683" starttime="20200902 02:29:11.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:29:13.684" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:29:13.684" starttime="20200902 02:29:13.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:29:13.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:29:13.685" starttime="20200902 02:29:13.684"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:13.685" starttime="20200902 02:29:11.544"></status>
</kw>
<msg timestamp="20200902 02:29:13.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:29:13.685" starttime="20200902 02:29:11.544"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:13.685" starttime="20200902 02:29:11.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:29:13.691" level="INFO">Running command 'ozone sh key list /71874-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:29:15.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:29:15.811" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200902 02:29:15.811" starttime="20200902 02:29:13.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:29:15.812" level="INFO">key2</msg>
<status status="PASS" endtime="20200902 02:29:15.812" starttime="20200902 02:29:15.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:29:15.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:29:15.813" starttime="20200902 02:29:15.812"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:15.813" starttime="20200902 02:29:13.686"></status>
</kw>
<msg timestamp="20200902 02:29:15.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:29:15.813" starttime="20200902 02:29:13.686"></status>
</kw>
<msg timestamp="20200902 02:29:15.814" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200902 02:29:15.814" starttime="20200902 02:29:13.685"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200902 02:29:15.814" starttime="20200902 02:29:15.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:29:15.818" level="INFO">Running command 'ozone sh key delete /71874-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:29:17.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:29:17.873" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:29:17.873" starttime="20200902 02:29:15.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:29:17.874" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:29:17.874" starttime="20200902 02:29:17.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:29:17.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:29:17.875" starttime="20200902 02:29:17.875"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:17.875" starttime="20200902 02:29:15.815"></status>
</kw>
<msg timestamp="20200902 02:29:17.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:29:17.876" starttime="20200902 02:29:15.815"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:17.876" starttime="20200902 02:29:15.814"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:17.876" starttime="20200902 02:28:28.087"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:17.876" starttime="20200902 02:28:28.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:29:17.881" level="INFO">Running command 'ozone sh bucket delete /71874-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:29:19.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:29:19.998" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:29:19.998" starttime="20200902 02:29:17.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:29:19.999" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:29:20.000" starttime="20200902 02:29:19.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:29:20.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:29:20.000" starttime="20200902 02:29:20.000"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:20.001" starttime="20200902 02:29:17.877"></status>
</kw>
<msg timestamp="20200902 02:29:20.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:29:20.001" starttime="20200902 02:29:17.877"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:20.001" starttime="20200902 02:29:17.876"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:29:20.006" level="INFO">Running command 'ozone sh volume delete /71874-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:29:22.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:29:22.092" level="INFO">${output} = Volume 71874-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200902 02:29:22.092" starttime="20200902 02:29:20.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:29:22.093" level="INFO">Volume 71874-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200902 02:29:22.094" starttime="20200902 02:29:22.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:29:22.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:29:22.094" starttime="20200902 02:29:22.094"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:22.095" starttime="20200902 02:29:20.002"></status>
</kw>
<msg timestamp="20200902 02:29:22.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:29:22.095" starttime="20200902 02:29:20.002"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:22.095" starttime="20200902 02:29:20.001"></status>
</kw>
<status status="PASS" endtime="20200902 02:29:22.095" starttime="20200902 02:28:02.358"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200902 02:29:22.096" critical="yes" starttime="20200902 02:28:02.357"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200902 02:29:22.097" starttime="20200902 02:28:02.217"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
