<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200902 02:54:52.467" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:54:15.260" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:54:25.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:54:26.000" level="INFO">${output} = 2020-09-02 02:54:17,055 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:17,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200902 02:54:26.000" starttime="20200902 02:54:15.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:54:26.001" level="INFO">2020-09-02 02:54:17,055 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:17,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-02 02:54:17,243 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-02 02:54:20,158 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-09-02 02:54:20,159 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-09-02 02:54:20,159 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-09-02 02:54:20,159 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-09-02 02:54:20,159 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-09-02 02:54:20,159 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-09-02 02:54:20,159 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-09-02 02:54:20,168 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-09-02 02:54:20,176 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-02 02:54:20,257 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-79270, with testuser/scm@EXAMPLE.COM as owner.
2020-09-02 02:54:20,771 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79270/bucket-0-16091, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-02 02:54:21,187 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-02 02:54:22,188 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-02 02:54:23,194 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-02 02:54:23,642 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-02 02:54:24,195 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,531
Average Time spent in bucket creation: 00:00:00,260
Average Time spent in key creation: 00:00:01,258
Average Time spent in key write: 00:00:01,742
Total bytes written: 10240
Total Execution time: 00:00:08,127
***************************************************</msg>
<status status="PASS" endtime="20200902 02:54:26.001" starttime="20200902 02:54:26.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:54:26.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:54:26.008" starttime="20200902 02:54:26.001"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:26.008" starttime="20200902 02:54:15.254"></status>
</kw>
<msg timestamp="20200902 02:54:26.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:54:26.009" starttime="20200902 02:54:15.253"></status>
</kw>
<msg timestamp="20200902 02:54:26.010" level="INFO">${result} = 2020-09-02 02:54:17,055 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:17,243 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200902 02:54:26.010" starttime="20200902 02:54:15.252"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200902 02:54:26.011" starttime="20200902 02:54:26.011"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:26.011" starttime="20200902 02:54:26.010"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200902 02:54:26.012" critical="yes" starttime="20200902 02:54:15.252"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:54:26.018" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:54:34.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:54:34.379" level="INFO">${output} = 2020-09-02 02:54:27,723 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:27,993 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200902 02:54:34.379" starttime="20200902 02:54:26.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:54:34.381" level="INFO">2020-09-02 02:54:27,723 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:27,993 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-02 02:54:27,993 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-02 02:54:28,159 [main] INFO freon.BaseFreonGenerator: Executing test with prefix tpfqblc3kn
2020-09-02 02:54:28,184 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-02 02:54:29,195 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-02 02:54:29,711 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-09-02 02:54:29,778 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-02 02:54:30,195 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-02 02:54:30,543 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-02 02:54:31,195 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-02 02:54:32,196 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-02 02:54:33,196 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-02 02:54:34,017 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3005.12902, max=3005.12902, mean=3005.12902, stddev=0.0, median=3005.12902, p75=3005.12902, p95=3005.12902, p98=3005.12902, p99=3005.12902, p999=3005.12902, mean_rate=0.2396031327185693, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-02 02:54:34,017 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-09-02 02:54:34,038 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-02 02:54:34,038 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200902 02:54:34.382" starttime="20200902 02:54:34.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:54:34.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:54:34.382" starttime="20200902 02:54:34.382"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:34.383" starttime="20200902 02:54:26.015"></status>
</kw>
<msg timestamp="20200902 02:54:34.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:54:34.383" starttime="20200902 02:54:26.014"></status>
</kw>
<msg timestamp="20200902 02:54:34.383" level="INFO">${result} = 2020-09-02 02:54:27,723 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:27,993 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200902 02:54:34.383" starttime="20200902 02:54:26.014"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200902 02:54:34.384" starttime="20200902 02:54:34.384"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:34.384" starttime="20200902 02:54:34.383"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200902 02:54:34.384" critical="yes" starttime="20200902 02:54:26.013"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:54:34.389" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:54:39.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:54:39.087" level="INFO">${output} = 2020-09-02 02:54:36,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:36,310 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200902 02:54:39.087" starttime="20200902 02:54:34.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:54:39.088" level="INFO">2020-09-02 02:54:36,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:36,310 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-02 02:54:36,310 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-02 02:54:36,451 [main] INFO freon.BaseFreonGenerator: Executing test with prefix d4lcmafifu
2020-09-02 02:54:36,470 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-02 02:54:37,479 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-02 02:54:38,480 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-02 02:54:39,063 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=214.162997, max=214.162997, mean=214.162997, stddev=0.0, median=214.162997, p75=214.162997, p95=214.162997, p98=214.162997, p99=214.162997, p999=214.162997, mean_rate=0.8719079567366107, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-02 02:54:39,064 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-09-02 02:54:39,064 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-02 02:54:39,064 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200902 02:54:39.088" starttime="20200902 02:54:39.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:54:39.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:54:39.089" starttime="20200902 02:54:39.089"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:39.089" starttime="20200902 02:54:34.387"></status>
</kw>
<msg timestamp="20200902 02:54:39.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:54:39.090" starttime="20200902 02:54:34.387"></status>
</kw>
<msg timestamp="20200902 02:54:39.090" level="INFO">${result} = 2020-09-02 02:54:36,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:36,310 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200902 02:54:39.090" starttime="20200902 02:54:34.386"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200902 02:54:39.091" starttime="20200902 02:54:39.091"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:39.091" starttime="20200902 02:54:39.090"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200902 02:54:39.091" critical="yes" starttime="20200902 02:54:34.385"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:54:39.096" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:54:43.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:54:43.687" level="INFO">${output} = 2020-09-02 02:54:40,749 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:40,973 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200902 02:54:43.687" starttime="20200902 02:54:39.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:54:43.688" level="INFO">2020-09-02 02:54:40,749 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:40,973 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-02 02:54:40,973 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-02 02:54:41,136 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ghkyspzhn1
2020-09-02 02:54:41,166 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-02 02:54:42,167 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-02 02:54:43,167 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-02 02:54:43,643 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=65.989692, max=65.989692, mean=65.989692, stddev=0.0, median=65.989692, p75=65.989692, p95=65.989692, p98=65.989692, p99=65.989692, p999=65.989692, mean_rate=0.8950641729147695, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-02 02:54:43,644 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-09-02 02:54:43,652 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-02 02:54:43,652 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200902 02:54:43.688" starttime="20200902 02:54:43.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:54:43.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:54:43.689" starttime="20200902 02:54:43.688"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:43.689" starttime="20200902 02:54:39.094"></status>
</kw>
<msg timestamp="20200902 02:54:43.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:54:43.689" starttime="20200902 02:54:39.094"></status>
</kw>
<msg timestamp="20200902 02:54:43.690" level="INFO">${result} = 2020-09-02 02:54:40,749 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-02 02:54:40,973 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200902 02:54:43.690" starttime="20200902 02:54:39.093"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200902 02:54:43.691" starttime="20200902 02:54:43.691"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:43.691" starttime="20200902 02:54:43.690"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200902 02:54:43.691" critical="yes" starttime="20200902 02:54:39.092"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200902 02:54:43.694" starttime="20200902 02:54:15.225"></status>
</suite>
<status status="PASS" endtime="20200902 02:54:43.697" starttime="20200902 02:54:15.199"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:54:07.569" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:54:07.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:54:07.574" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200902 02:54:07.574" starttime="20200902 02:54:07.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:54:07.575" level="INFO">scm</msg>
<status status="PASS" endtime="20200902 02:54:07.575" starttime="20200902 02:54:07.574"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:54:07.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:54:07.575" starttime="20200902 02:54:07.575"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:07.576" starttime="20200902 02:54:07.556"></status>
</kw>
<msg timestamp="20200902 02:54:07.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:54:07.576" starttime="20200902 02:54:07.556"></status>
</kw>
<msg timestamp="20200902 02:54:07.576" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200902 02:54:07.576" starttime="20200902 02:54:07.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200902 02:54:07.578" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200902 02:54:07.578" starttime="20200902 02:54:07.576"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200902 02:54:07.588" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200902 02:54:07.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200902 02:54:07.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200902 02:54:07.611" starttime="20200902 02:54:07.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200902 02:54:07.612" level="INFO"></msg>
<status status="PASS" endtime="20200902 02:54:07.612" starttime="20200902 02:54:07.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200902 02:54:07.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200902 02:54:07.613" starttime="20200902 02:54:07.612"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:07.613" starttime="20200902 02:54:07.580"></status>
</kw>
<msg timestamp="20200902 02:54:07.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200902 02:54:07.613" starttime="20200902 02:54:07.579"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:07.613" starttime="20200902 02:54:07.579"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:07.613" starttime="20200902 02:54:07.578"></status>
</kw>
<status status="PASS" endtime="20200902 02:54:07.613" starttime="20200902 02:54:07.554"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200902 02:54:07.614" critical="yes" starttime="20200902 02:54:07.552"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200902 02:54:07.619" starttime="20200902 02:54:07.445"></status>
</suite>
<status status="PASS" elapsedtime="28672" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="5">Critical Tests</stat>
<stat fail="0" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="5">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
