<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200903 04:07:41.410" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200903 04:06:16.296" level="INFO">${random} = 93463</msg>
<status status="PASS" endtime="20200903 04:06:16.296" starttime="20200903 04:06:16.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200903 04:06:16.296" level="INFO">${prefix} = 93463</msg>
<status status="PASS" endtime="20200903 04:06:16.296" starttime="20200903 04:06:16.296"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:16.297" starttime="20200903 04:06:16.295"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:16.316" level="INFO">Running command 'ozone sh volume info /93463-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:22.869" level="INFO">${rc} = 255</msg>
<msg timestamp="20200903 04:06:22.869" level="INFO">${output} = VOLUME_NOT_FOUND Volume 93463-rpcbasic is not found</msg>
<status status="PASS" endtime="20200903 04:06:22.869" starttime="20200903 04:06:16.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:22.870" level="INFO">VOLUME_NOT_FOUND Volume 93463-rpcbasic is not found</msg>
<status status="PASS" endtime="20200903 04:06:22.870" starttime="20200903 04:06:22.869"></status>
</kw>
<msg timestamp="20200903 04:06:22.871" level="INFO">${result} = VOLUME_NOT_FOUND Volume 93463-rpcbasic is not found</msg>
<status status="PASS" endtime="20200903 04:06:22.871" starttime="20200903 04:06:16.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200903 04:06:22.871" starttime="20200903 04:06:22.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:22.875" level="INFO">Running command 'ozone sh volume create /93463-rpcbasic --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:25.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:25.046" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:06:25.046" starttime="20200903 04:06:22.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:25.047" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:06:25.047" starttime="20200903 04:06:25.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:25.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:25.048" starttime="20200903 04:06:25.047"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:25.048" starttime="20200903 04:06:22.872"></status>
</kw>
<msg timestamp="20200903 04:06:25.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:25.053" starttime="20200903 04:06:22.872"></status>
</kw>
<msg timestamp="20200903 04:06:25.053" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200903 04:06:25.053" starttime="20200903 04:06:22.871"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:06:25.054" starttime="20200903 04:06:25.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:25.058" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="93463-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:27.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:27.515" level="INFO">${output} = {
  "metadata": {},
  "name": "93463-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T04:06:24.768Z",
  "modificationTime": "2020-09-03T04:06:24.768Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200903 04:06:27.515" starttime="20200903 04:06:25.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:27.517" level="INFO">{
  "metadata": {},
  "name": "93463-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T04:06:24.768Z",
  "modificationTime": "2020-09-03T04:06:24.768Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200903 04:06:27.517" starttime="20200903 04:06:27.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:27.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:27.518" starttime="20200903 04:06:27.517"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:27.518" starttime="20200903 04:06:25.055"></status>
</kw>
<msg timestamp="20200903 04:06:27.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:27.518" starttime="20200903 04:06:25.055"></status>
</kw>
<msg timestamp="20200903 04:06:27.518" level="INFO">${result} = {
  "metadata": {},
  "name": "93463-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T04:06:24.768Z",
  "modificationTime": "2020-09-03T04:06:24.768Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200903 04:06:27.518" starttime="20200903 04:06:25.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200903 04:06:27.519" starttime="20200903 04:06:27.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:27.524" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="93463-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:29.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:29.807" level="INFO">${output} = {
  "metadata": {},
  "name": "93463-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T04:06:24.768Z",
  "modificationTime": "2020-09-03T04:06:24.768Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200903 04:06:29.807" starttime="20200903 04:06:27.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:29.808" level="INFO">{
  "metadata": {},
  "name": "93463-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T04:06:24.768Z",
  "modificationTime": "2020-09-03T04:06:24.768Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200903 04:06:29.808" starttime="20200903 04:06:29.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:29.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:29.809" starttime="20200903 04:06:29.808"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:29.809" starttime="20200903 04:06:27.520"></status>
</kw>
<msg timestamp="20200903 04:06:29.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:29.809" starttime="20200903 04:06:27.520"></status>
</kw>
<msg timestamp="20200903 04:06:29.810" level="INFO">${result} = {
  "metadata": {},
  "name": "93463-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T04:06:24.768Z",
  "modificationTime": "2020-09-03T04:06:24.768Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200903 04:06:29.810" starttime="20200903 04:06:27.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200903 04:06:29.810" starttime="20200903 04:06:29.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:29.814" level="INFO">Running command 'ozone sh volume update /93463-rpcbasic --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:32.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:32.067" level="INFO">${output} = {
  "metadata" : { },
  "name" : "93463-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-09-03T04:06:24.768Z",
  "modificationTime" : "2020-09-03T04:06:31.758Z",
  "acls...</msg>
<status status="PASS" endtime="20200903 04:06:32.067" starttime="20200903 04:06:29.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:32.068" level="INFO">{
  "metadata" : { },
  "name" : "93463-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-09-03T04:06:24.768Z",
  "modificationTime" : "2020-09-03T04:06:31.758Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200903 04:06:32.068" starttime="20200903 04:06:32.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:32.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:32.069" starttime="20200903 04:06:32.068"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:32.069" starttime="20200903 04:06:29.811"></status>
</kw>
<msg timestamp="20200903 04:06:32.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:32.070" starttime="20200903 04:06:29.811"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:32.070" starttime="20200903 04:06:29.810"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:32.077" level="INFO">Running command 'ozone sh volume info /93463-rpcbasic | jq -r '. | select(.name=="93463-rpcbasic") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:34.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:34.296" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200903 04:06:34.296" starttime="20200903 04:06:32.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:34.297" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200903 04:06:34.297" starttime="20200903 04:06:34.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:34.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:34.298" starttime="20200903 04:06:34.298"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:34.299" starttime="20200903 04:06:32.073"></status>
</kw>
<msg timestamp="20200903 04:06:34.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:34.299" starttime="20200903 04:06:32.072"></status>
</kw>
<msg timestamp="20200903 04:06:34.299" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200903 04:06:34.299" starttime="20200903 04:06:32.070"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200903 04:06:34.300" starttime="20200903 04:06:34.299"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:34.306" level="INFO">Running command 'ozone sh bucket create /93463-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:36.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:36.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:06:36.447" starttime="20200903 04:06:34.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:36.448" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:06:36.448" starttime="20200903 04:06:36.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:36.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:36.449" starttime="20200903 04:06:36.448"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:36.449" starttime="20200903 04:06:34.301"></status>
</kw>
<msg timestamp="20200903 04:06:36.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:36.449" starttime="20200903 04:06:34.300"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:36.449" starttime="20200903 04:06:34.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:36.454" level="INFO">Running command 'ozone sh bucket info /93463-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:38.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:38.599" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200903 04:06:38.599" starttime="20200903 04:06:36.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:38.600" level="INFO">DISK</msg>
<status status="PASS" endtime="20200903 04:06:38.600" starttime="20200903 04:06:38.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:38.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:38.601" starttime="20200903 04:06:38.601"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:38.601" starttime="20200903 04:06:36.451"></status>
</kw>
<msg timestamp="20200903 04:06:38.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:38.602" starttime="20200903 04:06:36.450"></status>
</kw>
<msg timestamp="20200903 04:06:38.602" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200903 04:06:38.602" starttime="20200903 04:06:36.450"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200903 04:06:38.602" starttime="20200903 04:06:38.602"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:38.607" level="INFO">Running command 'ozone sh bucket list /93463-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:40.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:40.936" level="INFO">${output} = 93463-rpcbasic</msg>
<status status="PASS" endtime="20200903 04:06:40.936" starttime="20200903 04:06:38.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:40.937" level="INFO">93463-rpcbasic</msg>
<status status="PASS" endtime="20200903 04:06:40.937" starttime="20200903 04:06:40.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:40.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:40.938" starttime="20200903 04:06:40.937"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:40.938" starttime="20200903 04:06:38.604"></status>
</kw>
<msg timestamp="20200903 04:06:40.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:40.938" starttime="20200903 04:06:38.603"></status>
</kw>
<msg timestamp="20200903 04:06:40.939" level="INFO">${result} = 93463-rpcbasic</msg>
<status status="PASS" endtime="20200903 04:06:40.939" starttime="20200903 04:06:38.602"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200903 04:06:40.939" starttime="20200903 04:06:40.939"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:40.946" level="INFO">Running command 'ozone sh key put /93463-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:46.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:46.683" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:06:46.683" starttime="20200903 04:06:40.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:46.684" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:06:46.684" starttime="20200903 04:06:46.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:46.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:46.685" starttime="20200903 04:06:46.684"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:46.685" starttime="20200903 04:06:40.941"></status>
</kw>
<msg timestamp="20200903 04:06:46.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:46.685" starttime="20200903 04:06:40.941"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:46.686" starttime="20200903 04:06:40.940"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:46.689" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:46.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:46.692" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:06:46.692" starttime="20200903 04:06:46.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:46.693" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:06:46.693" starttime="20200903 04:06:46.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:46.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:46.693" starttime="20200903 04:06:46.693"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:46.694" starttime="20200903 04:06:46.687"></status>
</kw>
<msg timestamp="20200903 04:06:46.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:46.694" starttime="20200903 04:06:46.686"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:46.694" starttime="20200903 04:06:46.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:46.707" level="INFO">Running command 'ozone sh key get /93463-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:50.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:50.533" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:06:50.533" starttime="20200903 04:06:46.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:50.534" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:06:50.534" starttime="20200903 04:06:50.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:50.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:50.535" starttime="20200903 04:06:50.534"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:50.535" starttime="20200903 04:06:46.696"></status>
</kw>
<msg timestamp="20200903 04:06:50.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:50.535" starttime="20200903 04:06:46.695"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:50.535" starttime="20200903 04:06:46.695"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:50.539" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:50.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:50.542" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:06:50.542" starttime="20200903 04:06:50.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:50.543" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:06:50.543" starttime="20200903 04:06:50.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:50.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:50.544" starttime="20200903 04:06:50.543"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:50.544" starttime="20200903 04:06:50.536"></status>
</kw>
<msg timestamp="20200903 04:06:50.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:50.544" starttime="20200903 04:06:50.536"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:50.544" starttime="20200903 04:06:50.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:50.550" level="INFO">Running command 'ozone sh key put -t RATIS /93463-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:54.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:54.626" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:06:54.626" starttime="20200903 04:06:50.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:54.628" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:06:54.628" starttime="20200903 04:06:54.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:54.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:54.629" starttime="20200903 04:06:54.628"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:54.629" starttime="20200903 04:06:50.545"></status>
</kw>
<msg timestamp="20200903 04:06:54.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:54.629" starttime="20200903 04:06:50.545"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:54.629" starttime="20200903 04:06:50.545"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:54.633" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:54.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:54.635" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:06:54.635" starttime="20200903 04:06:54.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:54.636" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:06:54.636" starttime="20200903 04:06:54.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:54.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:54.637" starttime="20200903 04:06:54.637"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:54.637" starttime="20200903 04:06:54.630"></status>
</kw>
<msg timestamp="20200903 04:06:54.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:54.638" starttime="20200903 04:06:54.630"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:54.638" starttime="20200903 04:06:54.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:54.642" level="INFO">Running command 'ozone sh key get /93463-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:58.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:58.248" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:06:58.248" starttime="20200903 04:06:54.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:58.249" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:06:58.249" starttime="20200903 04:06:58.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:58.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:58.250" starttime="20200903 04:06:58.250"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:58.250" starttime="20200903 04:06:54.639"></status>
</kw>
<msg timestamp="20200903 04:06:58.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:58.251" starttime="20200903 04:06:54.638"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:58.251" starttime="20200903 04:06:54.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:58.254" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:06:58.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:06:58.257" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:06:58.257" starttime="20200903 04:06:58.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:06:58.258" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:06:58.258" starttime="20200903 04:06:58.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:06:58.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:06:58.259" starttime="20200903 04:06:58.258"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:58.259" starttime="20200903 04:06:58.252"></status>
</kw>
<msg timestamp="20200903 04:06:58.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:06:58.259" starttime="20200903 04:06:58.251"></status>
</kw>
<status status="PASS" endtime="20200903 04:06:58.259" starttime="20200903 04:06:58.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:06:58.263" level="INFO">Running command 'ozone sh key info /93463-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:00.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:00.450" level="INFO">${output} = {
  "volumeName": "93463-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-03T04:06:52.490Z",
  "modificationTime": "2020-09-03T04:06:54.254Z",
...</msg>
<status status="PASS" endtime="20200903 04:07:00.450" starttime="20200903 04:06:58.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:00.451" level="INFO">{
  "volumeName": "93463-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-03T04:06:52.490Z",
  "modificationTime": "2020-09-03T04:06:54.254Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104799011634413570,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200903 04:07:00.451" starttime="20200903 04:07:00.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:00.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:00.452" starttime="20200903 04:07:00.452"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:00.452" starttime="20200903 04:06:58.260"></status>
</kw>
<msg timestamp="20200903 04:07:00.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:00.453" starttime="20200903 04:06:58.260"></status>
</kw>
<msg timestamp="20200903 04:07:00.453" level="INFO">${result} = {
  "volumeName": "93463-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-03T04:06:52.490Z",
  "modificationTime": "2020-09-03T04:06:54.254Z",
...</msg>
<status status="PASS" endtime="20200903 04:07:00.453" starttime="20200903 04:06:58.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200903 04:07:00.454" starttime="20200903 04:07:00.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:00.458" level="INFO">Running command 'ozone sh key delete /93463-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:02.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:02.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:07:02.590" starttime="20200903 04:07:00.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:02.591" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:07:02.591" starttime="20200903 04:07:02.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:02.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:02.592" starttime="20200903 04:07:02.591"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:02.592" starttime="20200903 04:07:00.455"></status>
</kw>
<msg timestamp="20200903 04:07:02.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:02.592" starttime="20200903 04:07:00.454"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:02.593" starttime="20200903 04:07:00.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:02.597" level="INFO">Running command 'ozone sh key cp /93463-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:06.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:06.748" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:07:06.748" starttime="20200903 04:07:02.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:06.749" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:07:06.749" starttime="20200903 04:07:06.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:06.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:06.750" starttime="20200903 04:07:06.749"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:06.750" starttime="20200903 04:07:02.594"></status>
</kw>
<msg timestamp="20200903 04:07:06.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:06.750" starttime="20200903 04:07:02.593"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:06.750" starttime="20200903 04:07:02.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:06.757" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:06.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:06.761" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:07:06.761" starttime="20200903 04:07:06.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:06.762" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:07:06.762" starttime="20200903 04:07:06.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:06.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:06.763" starttime="20200903 04:07:06.762"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:06.763" starttime="20200903 04:07:06.751"></status>
</kw>
<msg timestamp="20200903 04:07:06.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:06.763" starttime="20200903 04:07:06.751"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:06.764" starttime="20200903 04:07:06.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:06.768" level="INFO">Running command 'ozone sh key get /93463-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:10.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:10.726" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:07:10.726" starttime="20200903 04:07:06.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:10.728" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:07:10.728" starttime="20200903 04:07:10.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:10.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:10.729" starttime="20200903 04:07:10.728"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:10.729" starttime="20200903 04:07:06.765"></status>
</kw>
<msg timestamp="20200903 04:07:10.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:10.729" starttime="20200903 04:07:06.764"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:10.729" starttime="20200903 04:07:06.764"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:10.734" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:10.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:10.736" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:07:10.736" starttime="20200903 04:07:10.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:10.737" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:07:10.737" starttime="20200903 04:07:10.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:10.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:10.738" starttime="20200903 04:07:10.737"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:10.738" starttime="20200903 04:07:10.730"></status>
</kw>
<msg timestamp="20200903 04:07:10.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:10.738" starttime="20200903 04:07:10.730"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:10.738" starttime="20200903 04:07:10.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:10.742" level="INFO">Running command 'ozone sh key delete /93463-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:12.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:12.889" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:07:12.889" starttime="20200903 04:07:10.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:12.890" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:07:12.890" starttime="20200903 04:07:12.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:12.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:12.891" starttime="20200903 04:07:12.890"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:12.891" starttime="20200903 04:07:10.739"></status>
</kw>
<msg timestamp="20200903 04:07:12.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:12.892" starttime="20200903 04:07:10.739"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:12.892" starttime="20200903 04:07:10.738"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:12.895" level="INFO">Running command 'ozone sh key get /93463-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:15.084" level="INFO">${rc} = 255</msg>
<msg timestamp="20200903 04:07:15.084" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200903 04:07:15.084" starttime="20200903 04:07:12.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:15.085" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200903 04:07:15.086" starttime="20200903 04:07:15.085"></status>
</kw>
<msg timestamp="20200903 04:07:15.086" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200903 04:07:15.086" starttime="20200903 04:07:12.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200903 04:07:15.087" starttime="20200903 04:07:15.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:15.091" level="INFO">Running command 'ozone sh key get --force /93463-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:18.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:18.960" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:07:18.960" starttime="20200903 04:07:15.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:18.961" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:07:18.961" starttime="20200903 04:07:18.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:18.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:18.962" starttime="20200903 04:07:18.962"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:18.962" starttime="20200903 04:07:15.088"></status>
</kw>
<msg timestamp="20200903 04:07:18.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:18.963" starttime="20200903 04:07:15.088"></status>
</kw>
<msg timestamp="20200903 04:07:18.963" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200903 04:07:18.963" starttime="20200903 04:07:15.087"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200903 04:07:18.963" starttime="20200903 04:07:18.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:18.968" level="INFO">Running command 'ozone sh key info /93463-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:21.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:21.379" level="INFO">${output} = {
  "volumeName": "93463-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-03T04:06:42.990Z",
  "modificationTime": "2020-09-03T04:06:46.182Z",
  "rep...</msg>
<status status="PASS" endtime="20200903 04:07:21.379" starttime="20200903 04:07:18.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:21.380" level="INFO">{
  "volumeName": "93463-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-03T04:06:42.990Z",
  "modificationTime": "2020-09-03T04:06:46.182Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104799011010117630,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200903 04:07:21.380" starttime="20200903 04:07:21.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:21.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:21.381" starttime="20200903 04:07:21.381"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:21.381" starttime="20200903 04:07:18.965"></status>
</kw>
<msg timestamp="20200903 04:07:21.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:21.382" starttime="20200903 04:07:18.964"></status>
</kw>
<msg timestamp="20200903 04:07:21.382" level="INFO">${result} = {
  "volumeName": "93463-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-03T04:06:42.990Z",
  "modificationTime": "2020-09-03T04:06:46.182Z",
  "rep...</msg>
<status status="PASS" endtime="20200903 04:07:21.382" starttime="20200903 04:07:18.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200903 04:07:21.382" starttime="20200903 04:07:21.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:21.388" level="INFO">Running command 'ozone sh key list /93463-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:23.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:23.757" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200903 04:07:23.758" starttime="20200903 04:07:21.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:23.759" level="INFO">key1</msg>
<status status="PASS" endtime="20200903 04:07:23.759" starttime="20200903 04:07:23.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:23.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:23.759" starttime="20200903 04:07:23.759"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:23.760" starttime="20200903 04:07:21.384"></status>
</kw>
<msg timestamp="20200903 04:07:23.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:23.760" starttime="20200903 04:07:21.383"></status>
</kw>
<msg timestamp="20200903 04:07:23.760" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200903 04:07:23.760" starttime="20200903 04:07:21.383"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200903 04:07:23.761" starttime="20200903 04:07:23.760"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:23.765" level="INFO">Running command 'ozone sh key rename /93463-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:25.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:25.927" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:07:25.927" starttime="20200903 04:07:23.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:25.929" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:07:25.929" starttime="20200903 04:07:25.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:25.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:25.930" starttime="20200903 04:07:25.930"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:25.930" starttime="20200903 04:07:23.762"></status>
</kw>
<msg timestamp="20200903 04:07:25.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:25.931" starttime="20200903 04:07:23.762"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:25.931" starttime="20200903 04:07:23.761"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:25.937" level="INFO">Running command 'ozone sh key list /93463-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:28.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:28.164" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200903 04:07:28.164" starttime="20200903 04:07:25.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:28.166" level="INFO">key2</msg>
<status status="PASS" endtime="20200903 04:07:28.166" starttime="20200903 04:07:28.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:28.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:28.167" starttime="20200903 04:07:28.166"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:28.167" starttime="20200903 04:07:25.932"></status>
</kw>
<msg timestamp="20200903 04:07:28.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:28.167" starttime="20200903 04:07:25.932"></status>
</kw>
<msg timestamp="20200903 04:07:28.168" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200903 04:07:28.168" starttime="20200903 04:07:25.931"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200903 04:07:28.168" starttime="20200903 04:07:28.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:28.173" level="INFO">Running command 'ozone sh key delete /93463-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:30.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:30.295" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:07:30.295" starttime="20200903 04:07:28.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:30.296" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:07:30.296" starttime="20200903 04:07:30.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:30.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:30.297" starttime="20200903 04:07:30.296"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:30.297" starttime="20200903 04:07:28.169"></status>
</kw>
<msg timestamp="20200903 04:07:30.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:30.297" starttime="20200903 04:07:28.169"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:30.297" starttime="20200903 04:07:28.168"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:30.297" starttime="20200903 04:06:40.940"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:30.298" starttime="20200903 04:06:40.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:30.301" level="INFO">Running command 'ozone sh bucket delete /93463-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:32.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:32.339" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:07:32.339" starttime="20200903 04:07:30.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:32.340" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:07:32.340" starttime="20200903 04:07:32.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:32.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:32.341" starttime="20200903 04:07:32.340"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:32.341" starttime="20200903 04:07:30.299"></status>
</kw>
<msg timestamp="20200903 04:07:32.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:32.341" starttime="20200903 04:07:30.298"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:32.342" starttime="20200903 04:07:30.298"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:07:32.347" level="INFO">Running command 'ozone sh volume delete /93463-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:07:34.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:07:34.510" level="INFO">${output} = Volume 93463-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200903 04:07:34.510" starttime="20200903 04:07:32.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:07:34.511" level="INFO">Volume 93463-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200903 04:07:34.511" starttime="20200903 04:07:34.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:07:34.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:07:34.511" starttime="20200903 04:07:34.511"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:34.512" starttime="20200903 04:07:32.343"></status>
</kw>
<msg timestamp="20200903 04:07:34.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:07:34.512" starttime="20200903 04:07:32.342"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:34.512" starttime="20200903 04:07:32.342"></status>
</kw>
<status status="PASS" endtime="20200903 04:07:34.512" starttime="20200903 04:06:16.301"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200903 04:07:34.513" critical="yes" starttime="20200903 04:06:16.297"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200903 04:07:34.514" starttime="20200903 04:06:16.126"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
