<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200903 04:24:55.383" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20200903 04:21:40.584" starttime="20200903 04:21:40.583"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:21:40.591" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:21:40.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:21:40.692" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 03 Sep 2020 04:21:40 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 03 Sep 2020 03:51:42 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200903 04:21:40.692" starttime="20200903 04:21:40.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:21:40.693" level="INFO">HTTP/1.1 200 OK
Date: Thu, 03 Sep 2020 04:21:40 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 03 Sep 2020 03:51:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200903 04:21:40.693" starttime="20200903 04:21:40.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:21:40.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:21:40.694" starttime="20200903 04:21:40.693"></status>
</kw>
<status status="PASS" endtime="20200903 04:21:40.694" starttime="20200903 04:21:40.585"></status>
</kw>
<msg timestamp="20200903 04:21:40.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:21:40.694" starttime="20200903 04:21:40.585"></status>
</kw>
<msg timestamp="20200903 04:21:40.699" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 03 Sep 2020 04:21:40 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 03 Sep 2020 03:51:42 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200903 04:21:40.699" starttime="20200903 04:21:40.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200903 04:21:40.699" starttime="20200903 04:21:40.699"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:21:40.700" critical="yes" starttime="20200903 04:21:40.583"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200903 04:21:40.705" starttime="20200903 04:21:40.705"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:21:40.709" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:23:10.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:23:10.099" level="INFO">${output} = 2020-09-03 04:21:42,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:21:42,820 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:23:10.099" starttime="20200903 04:21:40.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:23:10.100" level="INFO">2020-09-03 04:21:42,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:21:42,820 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-03 04:21:42,820 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-03 04:21:44,779 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-09-03 04:21:44,780 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-09-03 04:21:44,780 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-09-03 04:21:44,780 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-09-03 04:21:44,781 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-09-03 04:21:44,781 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-09-03 04:21:44,781 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-09-03 04:21:44,788 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-09-03 04:21:44,789 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-09-03 04:21:44,798 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-09-03 04:21:44,833 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-24832, with hadoop as owner.
2020-09-03 04:21:45,073 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-00284, with hadoop as owner.
2020-09-03 04:21:45,086 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-23870, with hadoop as owner.
2020-09-03 04:21:45,096 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-03018, with hadoop as owner.
2020-09-03 04:21:45,109 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-17732, with hadoop as owner.
2020-09-03 04:21:45,125 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24832/bucket-0-73144, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,228 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00284/bucket-0-54426, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,244 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-23870/bucket-0-17370, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,253 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-03018/bucket-0-13939, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,261 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17732/bucket-0-12436, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,268 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24832/bucket-1-21304, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,272 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00284/bucket-1-54990, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,278 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-23870/bucket-1-64878, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,285 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-03018/bucket-1-59527, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,292 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17732/bucket-1-78356, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,299 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24832/bucket-2-86090, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,304 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00284/bucket-2-99510, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,312 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-23870/bucket-2-59139, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,317 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-03018/bucket-2-47172, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,339 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17732/bucket-2-67492, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,345 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24832/bucket-3-60914, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,350 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00284/bucket-3-41289, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,360 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-23870/bucket-3-98417, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,367 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-03018/bucket-3-42752, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,372 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17732/bucket-3-88392, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,378 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-24832/bucket-4-63191, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,382 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00284/bucket-4-04458, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,386 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-23870/bucket-4-93374, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,391 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-03018/bucket-4-00168, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,396 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17732/bucket-4-15146, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:21:45,804 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-09-03 04:21:46,463 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-03 04:21:46,804 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-03 04:21:47,805 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-03 04:21:48,806 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-03 04:21:49,812 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-09-03 04:21:50,813 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-09-03 04:21:51,813 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-09-03 04:21:52,814 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-09-03 04:21:53,814 [Thread-7] INFO freon.ProgressBar: Progress: 8.00 % (10 out of 125)
2020-09-03 04:21:54,815 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-09-03 04:21:55,815 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-09-03 04:21:56,816 [Thread-7] INFO freon.ProgressBar: Progress: 14.40 % (18 out of 125)
2020-09-03 04:21:57,816 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-09-03 04:21:58,817 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-09-03 04:21:59,819 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-09-03 04:22:00,819 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-09-03 04:22:01,819 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-09-03 04:22:02,820 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-09-03 04:22:03,820 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-09-03 04:22:04,821 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-09-03 04:22:05,821 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-09-03 04:22:06,824 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-09-03 04:22:07,824 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-09-03 04:22:08,825 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-09-03 04:22:09,825 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-09-03 04:22:10,826 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-09-03 04:22:11,826 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-09-03 04:22:12,827 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-09-03 04:22:13,827 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-09-03 04:22:14,827 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-09-03 04:22:15,828 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-09-03 04:22:16,829 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-09-03 04:22:17,829 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2020-09-03 04:22:18,830 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-09-03 04:22:19,830 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-09-03 04:22:20,830 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-09-03 04:22:21,831 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-09-03 04:22:22,831 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-09-03 04:22:23,832 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-09-03 04:22:24,832 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-09-03 04:22:25,833 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-09-03 04:22:26,833 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-09-03 04:22:27,833 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-09-03 04:22:28,834 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-09-03 04:22:29,834 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-09-03 04:22:30,835 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-09-03 04:22:31,836 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-09-03 04:22:32,837 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-09-03 04:22:33,837 [Thread-7] INFO freon.ProgressBar: Progress: 64.80 % (81 out of 125)
2020-09-03 04:22:34,838 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-09-03 04:22:35,838 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-09-03 04:22:36,839 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-09-03 04:22:37,839 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-09-03 04:22:38,840 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-09-03 04:22:39,843 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-09-03 04:22:40,843 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-09-03 04:22:41,843 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-09-03 04:22:42,844 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-09-03 04:22:43,844 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-09-03 04:22:44,845 [Thread-7] INFO freon.ProgressBar: Progress: 72.80 % (91 out of 125)
2020-09-03 04:22:45,845 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-09-03 04:22:46,846 [Thread-7] INFO freon.ProgressBar: Progress: 74.40 % (93 out of 125)
2020-09-03 04:22:47,846 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-09-03 04:22:48,847 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-09-03 04:22:49,847 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-09-03 04:22:50,848 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-09-03 04:22:51,848 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-09-03 04:22:52,852 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-09-03 04:22:53,853 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-09-03 04:22:54,853 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-09-03 04:22:55,854 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-09-03 04:22:56,854 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-09-03 04:22:57,855 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-09-03 04:22:58,856 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-09-03 04:22:59,856 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-09-03 04:23:00,857 [Thread-7] INFO freon.ProgressBar: Progress: 92.00 % (115 out of 125)
2020-09-03 04:23:01,857 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-09-03 04:23:02,858 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-09-03 04:23:03,858 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-09-03 04:23:04,859 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,288
Average Time spent in bucket creation: 00:00:00,192
Average Time spent in key creation: 00:00:01,931
Average Time spent in key write: 00:00:01,110
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:26,717
***************************************************</msg>
<status status="PASS" endtime="20200903 04:23:10.101" starttime="20200903 04:23:10.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:23:10.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:23:10.102" starttime="20200903 04:23:10.101"></status>
</kw>
<status status="PASS" endtime="20200903 04:23:10.103" starttime="20200903 04:21:40.706"></status>
</kw>
<msg timestamp="20200903 04:23:10.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:23:10.103" starttime="20200903 04:21:40.706"></status>
</kw>
<msg timestamp="20200903 04:23:10.104" level="INFO">${result} = 2020-09-03 04:21:42,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:21:42,820 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:23:10.104" starttime="20200903 04:21:40.705"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200903 04:23:10.105" starttime="20200903 04:23:10.105"></status>
</kw>
<status status="PASS" endtime="20200903 04:23:10.105" starttime="20200903 04:23:10.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200903 04:23:10.106" starttime="20200903 04:23:10.105"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:23:10.106" critical="yes" starttime="20200903 04:21:40.704"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:23:10.107" starttime="20200903 04:21:40.532"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:23:14.440" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:23:16.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:23:16.978" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20200903 04:23:16.978" starttime="20200903 04:23:14.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:23:16.979" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20200903 04:23:16.979" starttime="20200903 04:23:16.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:23:16.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:23:16.980" starttime="20200903 04:23:16.980"></status>
</kw>
<status status="PASS" endtime="20200903 04:23:16.980" starttime="20200903 04:23:14.434"></status>
</kw>
<msg timestamp="20200903 04:23:16.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:23:16.981" starttime="20200903 04:23:14.434"></status>
</kw>
<msg timestamp="20200903 04:23:16.981" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20200903 04:23:16.981" starttime="20200903 04:23:14.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20200903 04:23:16.982" starttime="20200903 04:23:16.981"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:23:16.982" critical="yes" starttime="20200903 04:23:14.432"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:23:16.988" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:23:19.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:23:19.332" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topolog...</msg>
<status status="PASS" endtime="20200903 04:23:19.333" starttime="20200903 04:23:16.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:23:19.334" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20200903 04:23:19.334" starttime="20200903 04:23:19.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:23:19.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:23:19.334" starttime="20200903 04:23:19.334"></status>
</kw>
<status status="PASS" endtime="20200903 04:23:19.335" starttime="20200903 04:23:16.984"></status>
</kw>
<msg timestamp="20200903 04:23:19.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:23:19.335" starttime="20200903 04:23:16.984"></status>
</kw>
<msg timestamp="20200903 04:23:19.335" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topolog...</msg>
<status status="PASS" endtime="20200903 04:23:19.335" starttime="20200903 04:23:16.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20200903 04:23:19.336" starttime="20200903 04:23:19.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20200903 04:23:19.336" starttime="20200903 04:23:19.336"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:23:19.336" critical="yes" starttime="20200903 04:23:16.983"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:23:19.337" starttime="20200903 04:23:14.383"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1 --quota 100TB</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:23:23.702" level="INFO">Running command 'ozone sh volume create topvol1 --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:23:26.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:23:26.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:23:26.524" starttime="20200903 04:23:23.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:23:26.525" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:23:26.525" starttime="20200903 04:23:26.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:23:26.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:23:26.526" starttime="20200903 04:23:26.525"></status>
</kw>
<status status="PASS" endtime="20200903 04:23:26.526" starttime="20200903 04:23:23.696"></status>
</kw>
<msg timestamp="20200903 04:23:26.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:23:26.526" starttime="20200903 04:23:23.696"></status>
</kw>
<msg timestamp="20200903 04:23:26.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:23:26.526" starttime="20200903 04:23:23.696"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:23:26.527" starttime="20200903 04:23:26.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:23:26.531" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:23:29.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:23:29.470" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:23:29.470" starttime="20200903 04:23:26.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:23:29.472" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:23:29.473" starttime="20200903 04:23:29.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:23:29.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:23:29.473" starttime="20200903 04:23:29.473"></status>
</kw>
<status status="PASS" endtime="20200903 04:23:29.474" starttime="20200903 04:23:26.528"></status>
</kw>
<msg timestamp="20200903 04:23:29.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:23:29.474" starttime="20200903 04:23:26.528"></status>
</kw>
<msg timestamp="20200903 04:23:29.474" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:23:29.474" starttime="20200903 04:23:26.527"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:23:29.475" starttime="20200903 04:23:29.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:23:29.478" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:23:34.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:23:34.330" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:23:34.330" starttime="20200903 04:23:29.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:23:34.331" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:23:34.332" starttime="20200903 04:23:34.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:23:34.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:23:34.332" starttime="20200903 04:23:34.332"></status>
</kw>
<status status="PASS" endtime="20200903 04:23:34.332" starttime="20200903 04:23:29.476"></status>
</kw>
<msg timestamp="20200903 04:23:34.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:23:34.333" starttime="20200903 04:23:29.475"></status>
</kw>
<msg timestamp="20200903 04:23:34.333" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:23:34.333" starttime="20200903 04:23:29.475"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:23:34.333" starttime="20200903 04:23:34.333"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:23:34.334" critical="yes" starttime="20200903 04:23:23.694"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:23:34.335" starttime="20200903 04:23:23.646"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200903 04:24:14.651" level="INFO">${random} = 77234</msg>
<status status="PASS" endtime="20200903 04:24:14.651" starttime="20200903 04:24:14.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:24:14.658" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-77234 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:24:49.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:24:49.181" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:24:49.181" starttime="20200903 04:24:14.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:24:49.182" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:24:49.182" starttime="20200903 04:24:49.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:24:49.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:24:49.183" starttime="20200903 04:24:49.183"></status>
</kw>
<status status="PASS" endtime="20200903 04:24:49.183" starttime="20200903 04:24:14.653"></status>
</kw>
<msg timestamp="20200903 04:24:49.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:24:49.184" starttime="20200903 04:24:14.653"></status>
</kw>
<msg timestamp="20200903 04:24:49.184" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:24:49.184" starttime="20200903 04:24:14.651"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:24:49.184" starttime="20200903 04:24:49.184"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:24:49.185" critical="yes" starttime="20200903 04:24:14.649"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:24:49.186" starttime="20200903 04:24:14.597"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200903 04:23:40.531" level="INFO">${random} = 30847</msg>
<status status="PASS" endtime="20200903 04:23:40.531" starttime="20200903 04:23:40.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:23:40.538" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-30847 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:23:45.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:23:45.253" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:23:45.253" starttime="20200903 04:23:40.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:23:45.254" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:23:45.255" starttime="20200903 04:23:45.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:23:45.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:23:45.255" starttime="20200903 04:23:45.255"></status>
</kw>
<status status="PASS" endtime="20200903 04:23:45.256" starttime="20200903 04:23:40.533"></status>
</kw>
<msg timestamp="20200903 04:23:45.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:23:45.256" starttime="20200903 04:23:40.532"></status>
</kw>
<msg timestamp="20200903 04:23:45.256" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:23:45.256" starttime="20200903 04:23:40.531"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:23:45.257" starttime="20200903 04:23:45.256"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:23:45.257" critical="yes" starttime="20200903 04:23:40.530"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:23:45.258" starttime="20200903 04:23:40.481"></status>
</suite>
<status status="PASS" elapsedtime="144584" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
