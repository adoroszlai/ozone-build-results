<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200903 04:09:37.338" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:09:01.307" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:09:11.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:09:11.159" level="INFO">${output} = 2020-09-03 04:09:02,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:03,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:09:11.159" starttime="20200903 04:09:01.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:09:11.160" level="INFO">2020-09-03 04:09:02,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:03,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-03 04:09:03,081 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-03 04:09:05,644 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-09-03 04:09:05,645 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-09-03 04:09:05,645 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-09-03 04:09:05,645 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-09-03 04:09:05,645 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-09-03 04:09:05,645 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-09-03 04:09:05,645 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-09-03 04:09:05,655 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-09-03 04:09:05,666 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:05,695 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-45660, with testuser/scm@EXAMPLE.COM as owner.
2020-09-03 04:09:06,254 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-45660/bucket-0-31435, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:09:06,680 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:07,681 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:08,683 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:08,714 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-03 04:09:09,683 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,525
Average Time spent in bucket creation: 00:00:00,185
Average Time spent in key creation: 00:00:01,048
Average Time spent in key write: 00:00:01,539
Total bytes written: 10240
Total Execution time: 00:00:07,555
***************************************************</msg>
<status status="PASS" endtime="20200903 04:09:11.160" starttime="20200903 04:09:11.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:09:11.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:09:11.161" starttime="20200903 04:09:11.161"></status>
</kw>
<status status="PASS" endtime="20200903 04:09:11.161" starttime="20200903 04:09:01.302"></status>
</kw>
<msg timestamp="20200903 04:09:11.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:09:11.161" starttime="20200903 04:09:01.302"></status>
</kw>
<msg timestamp="20200903 04:09:11.162" level="INFO">${result} = 2020-09-03 04:09:02,889 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:03,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:09:11.162" starttime="20200903 04:09:01.301"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200903 04:09:11.163" starttime="20200903 04:09:11.162"></status>
</kw>
<status status="PASS" endtime="20200903 04:09:11.163" starttime="20200903 04:09:11.162"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:09:11.163" critical="yes" starttime="20200903 04:09:01.301"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:09:11.168" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:09:20.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:09:20.406" level="INFO">${output} = 2020-09-03 04:09:12,504 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:12,640 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:09:20.407" starttime="20200903 04:09:11.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:09:20.409" level="INFO">2020-09-03 04:09:12,504 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:12,640 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-03 04:09:12,640 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-03 04:09:12,809 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 4k2oepl6rg
2020-09-03 04:09:12,824 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-03 04:09:13,830 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:14,136 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-09-03 04:09:14,210 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 04:09:14,751 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-03 04:09:14,830 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:15,830 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:16,831 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:17,831 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:18,832 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:19,832 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-03 04:09:19,984 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=4932.733463, max=4932.733463, mean=4932.733463, stddev=0.0, median=4932.733463, p75=4932.733463, p95=4932.733463, p98=4932.733463, p99=4932.733463, p999=4932.733463, mean_rate=0.17490155512930688, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2020-09-03 04:09:19,984 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2020-09-03 04:09:19,984 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-03 04:09:19,984 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200903 04:09:20.409" starttime="20200903 04:09:20.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:09:20.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:09:20.409" starttime="20200903 04:09:20.409"></status>
</kw>
<status status="PASS" endtime="20200903 04:09:20.410" starttime="20200903 04:09:11.166"></status>
</kw>
<msg timestamp="20200903 04:09:20.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:09:20.410" starttime="20200903 04:09:11.165"></status>
</kw>
<msg timestamp="20200903 04:09:20.410" level="INFO">${result} = 2020-09-03 04:09:12,504 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:12,640 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:09:20.410" starttime="20200903 04:09:11.165"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200903 04:09:20.411" starttime="20200903 04:09:20.411"></status>
</kw>
<status status="PASS" endtime="20200903 04:09:20.411" starttime="20200903 04:09:20.410"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:09:20.411" critical="yes" starttime="20200903 04:09:11.164"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:09:20.416" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:09:24.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:09:24.749" level="INFO">${output} = 2020-09-03 04:09:21,897 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:22,073 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:09:24.749" starttime="20200903 04:09:20.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:09:24.750" level="INFO">2020-09-03 04:09:21,897 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:22,073 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-03 04:09:22,073 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-03 04:09:22,225 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zflvvo3qnp
2020-09-03 04:09:22,240 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-03 04:09:23,260 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:24,261 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-03 04:09:24,686 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=174.521011, max=174.521011, mean=174.521011, stddev=0.0, median=174.521011, p75=174.521011, p95=174.521011, p98=174.521011, p99=174.521011, p999=174.521011, mean_rate=0.9651735473391791, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-03 04:09:24,691 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-09-03 04:09:24,692 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-03 04:09:24,692 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200903 04:09:24.750" starttime="20200903 04:09:24.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:09:24.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:09:24.751" starttime="20200903 04:09:24.750"></status>
</kw>
<status status="PASS" endtime="20200903 04:09:24.751" starttime="20200903 04:09:20.414"></status>
</kw>
<msg timestamp="20200903 04:09:24.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:09:24.751" starttime="20200903 04:09:20.413"></status>
</kw>
<msg timestamp="20200903 04:09:24.752" level="INFO">${result} = 2020-09-03 04:09:21,897 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:22,073 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:09:24.752" starttime="20200903 04:09:20.413"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200903 04:09:24.752" starttime="20200903 04:09:24.752"></status>
</kw>
<status status="PASS" endtime="20200903 04:09:24.753" starttime="20200903 04:09:24.752"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:09:24.753" critical="yes" starttime="20200903 04:09:20.412"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:09:24.758" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:09:29.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:09:29.071" level="INFO">${output} = 2020-09-03 04:09:26,351 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:26,598 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:09:29.071" starttime="20200903 04:09:24.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:09:29.072" level="INFO">2020-09-03 04:09:26,351 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:26,598 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-03 04:09:26,599 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-03 04:09:26,751 [main] INFO freon.BaseFreonGenerator: Executing test with prefix svcjwcrdj0
2020-09-03 04:09:26,762 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-03 04:09:27,764 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-03 04:09:28,765 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-03 04:09:29,032 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=61.14946, max=61.14946, mean=61.14946, stddev=0.0, median=61.14946, p75=61.14946, p95=61.14946, p98=61.14946, p99=61.14946, p999=61.14946, mean_rate=0.9750684342517429, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-03 04:09:29,033 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-09-03 04:09:29,042 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-03 04:09:29,042 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200903 04:09:29.073" starttime="20200903 04:09:29.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:09:29.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:09:29.073" starttime="20200903 04:09:29.073"></status>
</kw>
<status status="PASS" endtime="20200903 04:09:29.073" starttime="20200903 04:09:24.755"></status>
</kw>
<msg timestamp="20200903 04:09:29.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:09:29.074" starttime="20200903 04:09:24.755"></status>
</kw>
<msg timestamp="20200903 04:09:29.074" level="INFO">${result} = 2020-09-03 04:09:26,351 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 04:09:26,598 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:09:29.074" starttime="20200903 04:09:24.754"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200903 04:09:29.075" starttime="20200903 04:09:29.075"></status>
</kw>
<status status="PASS" endtime="20200903 04:09:29.075" starttime="20200903 04:09:29.074"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:09:29.075" critical="yes" starttime="20200903 04:09:24.753"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:09:29.076" starttime="20200903 04:09:01.277"></status>
</suite>
<status status="PASS" endtime="20200903 04:09:29.079" starttime="20200903 04:09:01.251"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:08:56.344" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:08:56.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:08:56.346" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200903 04:08:56.346" starttime="20200903 04:08:56.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:08:56.347" level="INFO">scm</msg>
<status status="PASS" endtime="20200903 04:08:56.347" starttime="20200903 04:08:56.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:08:56.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:08:56.348" starttime="20200903 04:08:56.348"></status>
</kw>
<status status="PASS" endtime="20200903 04:08:56.348" starttime="20200903 04:08:56.340"></status>
</kw>
<msg timestamp="20200903 04:08:56.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:08:56.349" starttime="20200903 04:08:56.340"></status>
</kw>
<msg timestamp="20200903 04:08:56.349" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200903 04:08:56.349" starttime="20200903 04:08:56.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200903 04:08:56.349" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200903 04:08:56.349" starttime="20200903 04:08:56.349"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:08:56.354" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:08:56.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:08:56.363" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:08:56.363" starttime="20200903 04:08:56.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:08:56.364" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:08:56.364" starttime="20200903 04:08:56.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:08:56.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:08:56.365" starttime="20200903 04:08:56.364"></status>
</kw>
<status status="PASS" endtime="20200903 04:08:56.365" starttime="20200903 04:08:56.351"></status>
</kw>
<msg timestamp="20200903 04:08:56.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:08:56.365" starttime="20200903 04:08:56.351"></status>
</kw>
<status status="PASS" endtime="20200903 04:08:56.365" starttime="20200903 04:08:56.350"></status>
</kw>
<status status="PASS" endtime="20200903 04:08:56.366" starttime="20200903 04:08:56.350"></status>
</kw>
<status status="PASS" endtime="20200903 04:08:56.366" starttime="20200903 04:08:56.339"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200903 04:08:56.366" critical="yes" starttime="20200903 04:08:56.338"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200903 04:08:56.367" starttime="20200903 04:08:56.290"></status>
</suite>
<status status="PASS" elapsedtime="27905" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="5">Critical Tests</stat>
<stat fail="0" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="5">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
