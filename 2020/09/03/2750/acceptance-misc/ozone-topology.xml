<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200903 04:02:06.556" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20200903 03:59:23.225" starttime="20200903 03:59:23.224"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:59:23.238" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:59:23.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:59:23.305" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 03 Sep 2020 03:59:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 03 Sep 2020 03:33:58 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200903 03:59:23.305" starttime="20200903 03:59:23.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:59:23.306" level="INFO">HTTP/1.1 200 OK
Date: Thu, 03 Sep 2020 03:59:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 03 Sep 2020 03:33:58 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200903 03:59:23.306" starttime="20200903 03:59:23.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:59:23.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:59:23.307" starttime="20200903 03:59:23.306"></status>
</kw>
<status status="PASS" endtime="20200903 03:59:23.307" starttime="20200903 03:59:23.226"></status>
</kw>
<msg timestamp="20200903 03:59:23.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:59:23.307" starttime="20200903 03:59:23.225"></status>
</kw>
<msg timestamp="20200903 03:59:23.307" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 03 Sep 2020 03:59:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 03 Sep 2020 03:33:58 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200903 03:59:23.307" starttime="20200903 03:59:23.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200903 03:59:23.308" starttime="20200903 03:59:23.307"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 03:59:23.308" critical="yes" starttime="20200903 03:59:23.223"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200903 03:59:23.310" starttime="20200903 03:59:23.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:59:23.313" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:00:25.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:00:25.661" level="INFO">${output} = 2020-09-03 03:59:24,944 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 03:59:25,190 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:00:25.661" starttime="20200903 03:59:23.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:00:25.662" level="INFO">2020-09-03 03:59:24,944 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 03:59:25,190 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-03 03:59:25,190 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-03 03:59:26,953 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-09-03 03:59:26,954 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-09-03 03:59:26,954 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-09-03 03:59:26,954 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-09-03 03:59:26,955 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-09-03 03:59:26,955 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-09-03 03:59:26,955 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-09-03 03:59:26,959 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-09-03 03:59:26,963 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-09-03 03:59:26,977 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-09-03 03:59:27,002 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-88300, with hadoop as owner.
2020-09-03 03:59:27,279 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-63050, with hadoop as owner.
2020-09-03 03:59:27,292 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-17022, with hadoop as owner.
2020-09-03 03:59:27,302 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-97422, with hadoop as owner.
2020-09-03 03:59:27,311 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-76241, with hadoop as owner.
2020-09-03 03:59:27,333 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88300/bucket-0-30665, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,404 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-63050/bucket-0-71789, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,420 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-17022/bucket-0-19636, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,427 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-97422/bucket-0-16916, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,434 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-76241/bucket-0-81314, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,442 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88300/bucket-1-94045, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,450 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-63050/bucket-1-91142, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,457 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-17022/bucket-1-10927, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,462 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-97422/bucket-1-85974, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,475 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-76241/bucket-1-53465, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,482 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88300/bucket-2-97574, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,487 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-63050/bucket-2-85080, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,494 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-17022/bucket-2-11249, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,503 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-97422/bucket-2-88911, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,511 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-76241/bucket-2-45667, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,522 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88300/bucket-3-13935, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,528 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-63050/bucket-3-32531, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,532 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-17022/bucket-3-23971, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,536 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-97422/bucket-3-60733, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,544 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-76241/bucket-3-65478, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,551 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-88300/bucket-4-18853, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,560 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-63050/bucket-4-68039, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,564 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-17022/bucket-4-18952, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,570 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-97422/bucket-4-52531, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,574 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-76241/bucket-4-83491, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-03 03:59:27,981 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-09-03 03:59:28,768 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-03 03:59:28,982 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-03 03:59:29,982 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-03 03:59:30,984 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-09-03 03:59:31,984 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-09-03 03:59:32,985 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-09-03 03:59:33,989 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-09-03 03:59:34,991 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-09-03 03:59:35,991 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-09-03 03:59:36,992 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-09-03 03:59:37,992 [Thread-7] INFO freon.ProgressBar: Progress: 20.00 % (25 out of 125)
2020-09-03 03:59:38,993 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-09-03 03:59:39,993 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-09-03 03:59:40,994 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-09-03 03:59:41,998 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-09-03 03:59:42,998 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-09-03 03:59:43,999 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-09-03 03:59:44,999 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-09-03 03:59:46,000 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-09-03 03:59:47,000 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-09-03 03:59:48,001 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-09-03 03:59:49,003 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-09-03 03:59:50,004 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-09-03 03:59:51,004 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-09-03 03:59:52,005 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-09-03 03:59:53,006 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-09-03 03:59:54,006 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-09-03 03:59:55,007 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-09-03 03:59:56,007 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-09-03 03:59:57,008 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-09-03 03:59:58,008 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-09-03 03:59:59,009 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-09-03 04:00:00,010 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-09-03 04:00:01,010 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-09-03 04:00:02,011 [Thread-7] INFO freon.ProgressBar: Progress: 61.60 % (77 out of 125)
2020-09-03 04:00:03,011 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-09-03 04:00:04,012 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-09-03 04:00:05,013 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-09-03 04:00:06,013 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-09-03 04:00:07,014 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-09-03 04:00:08,014 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-09-03 04:00:09,015 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-09-03 04:00:10,016 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-09-03 04:00:11,016 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-09-03 04:00:12,017 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-09-03 04:00:13,017 [Thread-7] INFO freon.ProgressBar: Progress: 76.00 % (95 out of 125)
2020-09-03 04:00:14,018 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-09-03 04:00:15,018 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-09-03 04:00:16,021 [Thread-7] INFO freon.ProgressBar: Progress: 79.20 % (99 out of 125)
2020-09-03 04:00:17,021 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-09-03 04:00:18,022 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-09-03 04:00:19,023 [Thread-7] INFO freon.ProgressBar: Progress: 97.60 % (122 out of 125)
2020-09-03 04:00:20,023 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-09-03 04:00:21,023 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,301
Average Time spent in bucket creation: 00:00:00,157
Average Time spent in key creation: 00:00:01,975
Average Time spent in key write: 00:00:00,976
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:59,935
***************************************************</msg>
<status status="PASS" endtime="20200903 04:00:25.663" starttime="20200903 04:00:25.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:00:25.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:00:25.663" starttime="20200903 04:00:25.663"></status>
</kw>
<status status="PASS" endtime="20200903 04:00:25.664" starttime="20200903 03:59:23.311"></status>
</kw>
<msg timestamp="20200903 04:00:25.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:00:25.664" starttime="20200903 03:59:23.311"></status>
</kw>
<msg timestamp="20200903 04:00:25.664" level="INFO">${result} = 2020-09-03 03:59:24,944 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-03 03:59:25,190 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200903 04:00:25.664" starttime="20200903 03:59:23.310"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200903 04:00:25.665" starttime="20200903 04:00:25.665"></status>
</kw>
<status status="PASS" endtime="20200903 04:00:25.665" starttime="20200903 04:00:25.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200903 04:00:25.666" starttime="20200903 04:00:25.665"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:00:25.666" critical="yes" starttime="20200903 03:59:23.309"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:00:25.667" starttime="20200903 03:59:23.176"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:00:29.736" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:00:31.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:00:31.999" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20200903 04:00:31.999" starttime="20200903 04:00:29.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:00:32.000" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20200903 04:00:32.001" starttime="20200903 04:00:32.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:00:32.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:00:32.001" starttime="20200903 04:00:32.001"></status>
</kw>
<status status="PASS" endtime="20200903 04:00:32.001" starttime="20200903 04:00:29.731"></status>
</kw>
<msg timestamp="20200903 04:00:32.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:00:32.002" starttime="20200903 04:00:29.730"></status>
</kw>
<msg timestamp="20200903 04:00:32.002" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20200903 04:00:32.002" starttime="20200903 04:00:29.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20200903 04:00:32.003" starttime="20200903 04:00:32.002"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:00:32.003" critical="yes" starttime="20200903 04:00:29.729"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:00:32.009" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:00:34.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:00:34.217" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20200903 04:00:34.217" starttime="20200903 04:00:32.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:00:34.218" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20200903 04:00:34.218" starttime="20200903 04:00:34.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:00:34.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:00:34.219" starttime="20200903 04:00:34.218"></status>
</kw>
<status status="PASS" endtime="20200903 04:00:34.219" starttime="20200903 04:00:32.005"></status>
</kw>
<msg timestamp="20200903 04:00:34.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:00:34.219" starttime="20200903 04:00:32.005"></status>
</kw>
<msg timestamp="20200903 04:00:34.220" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20200903 04:00:34.220" starttime="20200903 04:00:32.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20200903 04:00:34.220" starttime="20200903 04:00:34.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20200903 04:00:34.221" starttime="20200903 04:00:34.220"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:00:34.221" critical="yes" starttime="20200903 04:00:32.004"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:00:34.222" starttime="20200903 04:00:29.682"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1 --quota 100TB</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:00:38.251" level="INFO">Running command 'ozone sh volume create topvol1 --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:00:40.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:00:40.851" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:00:40.851" starttime="20200903 04:00:38.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:00:40.852" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:00:40.852" starttime="20200903 04:00:40.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:00:40.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:00:40.853" starttime="20200903 04:00:40.852"></status>
</kw>
<status status="PASS" endtime="20200903 04:00:40.853" starttime="20200903 04:00:38.247"></status>
</kw>
<msg timestamp="20200903 04:00:40.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:00:40.853" starttime="20200903 04:00:38.246"></status>
</kw>
<msg timestamp="20200903 04:00:40.854" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:00:40.854" starttime="20200903 04:00:38.246"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:00:40.854" starttime="20200903 04:00:40.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:00:40.858" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:00:43.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:00:43.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:00:43.696" starttime="20200903 04:00:40.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:00:43.697" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:00:43.697" starttime="20200903 04:00:43.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:00:43.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:00:43.697" starttime="20200903 04:00:43.697"></status>
</kw>
<status status="PASS" endtime="20200903 04:00:43.697" starttime="20200903 04:00:40.855"></status>
</kw>
<msg timestamp="20200903 04:00:43.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:00:43.698" starttime="20200903 04:00:40.855"></status>
</kw>
<msg timestamp="20200903 04:00:43.698" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:00:43.698" starttime="20200903 04:00:40.854"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:00:43.698" starttime="20200903 04:00:43.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:00:43.703" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:00:48.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:00:48.280" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:00:48.280" starttime="20200903 04:00:43.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:00:48.281" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:00:48.281" starttime="20200903 04:00:48.280"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:00:48.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:00:48.282" starttime="20200903 04:00:48.281"></status>
</kw>
<status status="PASS" endtime="20200903 04:00:48.282" starttime="20200903 04:00:43.699"></status>
</kw>
<msg timestamp="20200903 04:00:48.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:00:48.282" starttime="20200903 04:00:43.699"></status>
</kw>
<msg timestamp="20200903 04:00:48.282" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:00:48.282" starttime="20200903 04:00:43.699"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:00:48.283" starttime="20200903 04:00:48.283"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:00:48.283" critical="yes" starttime="20200903 04:00:38.245"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:00:48.285" starttime="20200903 04:00:38.199"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200903 04:01:56.095" level="INFO">${random} = 35073</msg>
<status status="PASS" endtime="20200903 04:01:56.095" starttime="20200903 04:01:56.094"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:01:56.101" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-35073 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:02:00.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:02:00.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:02:00.556" starttime="20200903 04:01:56.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:02:00.557" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:02:00.557" starttime="20200903 04:02:00.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:02:00.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:02:00.558" starttime="20200903 04:02:00.557"></status>
</kw>
<status status="PASS" endtime="20200903 04:02:00.558" starttime="20200903 04:01:56.096"></status>
</kw>
<msg timestamp="20200903 04:02:00.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:02:00.558" starttime="20200903 04:01:56.096"></status>
</kw>
<msg timestamp="20200903 04:02:00.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:02:00.558" starttime="20200903 04:01:56.095"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:02:00.559" starttime="20200903 04:02:00.559"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:02:00.559" critical="yes" starttime="20200903 04:01:56.093"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:02:00.560" starttime="20200903 04:01:56.046"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200903 04:00:54.114" level="INFO">${random} = 12271</msg>
<status status="PASS" endtime="20200903 04:00:54.114" starttime="20200903 04:00:54.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 04:00:54.119" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-12271 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 04:01:28.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 04:01:28.236" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:01:28.236" starttime="20200903 04:00:54.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 04:01:28.237" level="INFO"></msg>
<status status="PASS" endtime="20200903 04:01:28.237" starttime="20200903 04:01:28.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 04:01:28.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 04:01:28.238" starttime="20200903 04:01:28.237"></status>
</kw>
<status status="PASS" endtime="20200903 04:01:28.238" starttime="20200903 04:00:54.115"></status>
</kw>
<msg timestamp="20200903 04:01:28.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 04:01:28.238" starttime="20200903 04:00:54.115"></status>
</kw>
<msg timestamp="20200903 04:01:28.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 04:01:28.239" starttime="20200903 04:00:54.114"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 04:01:28.239" starttime="20200903 04:01:28.239"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200903 04:01:28.239" critical="yes" starttime="20200903 04:00:54.112"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200903 04:01:28.240" starttime="20200903 04:00:54.067"></status>
</suite>
<status status="PASS" elapsedtime="115804" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
