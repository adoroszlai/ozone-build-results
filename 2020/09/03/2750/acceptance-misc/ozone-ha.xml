<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200903 03:46:18.323" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200903 03:44:58.952" level="INFO">${random} = 38697</msg>
<status status="PASS" endtime="20200903 03:44:58.952" starttime="20200903 03:44:58.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200903 03:44:58.952" level="INFO">${prefix} = 38697</msg>
<status status="PASS" endtime="20200903 03:44:58.952" starttime="20200903 03:44:58.952"></status>
</kw>
<status status="PASS" endtime="20200903 03:44:58.953" starttime="20200903 03:44:58.951"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:44:58.961" level="INFO">Running command 'ozone sh volume info /38697-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:05.023" level="INFO">${rc} = 255</msg>
<msg timestamp="20200903 03:45:05.023" level="INFO">${output} = VOLUME_NOT_FOUND Volume 38697-rpcbasic is not found</msg>
<status status="PASS" endtime="20200903 03:45:05.023" starttime="20200903 03:44:58.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:05.024" level="INFO">VOLUME_NOT_FOUND Volume 38697-rpcbasic is not found</msg>
<status status="PASS" endtime="20200903 03:45:05.025" starttime="20200903 03:45:05.024"></status>
</kw>
<msg timestamp="20200903 03:45:05.025" level="INFO">${result} = VOLUME_NOT_FOUND Volume 38697-rpcbasic is not found</msg>
<status status="PASS" endtime="20200903 03:45:05.025" starttime="20200903 03:44:58.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200903 03:45:05.025" starttime="20200903 03:45:05.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:05.029" level="INFO">Running command 'ozone sh volume create /38697-rpcbasic --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:07.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:07.295" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:07.295" starttime="20200903 03:45:05.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:07.296" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:07.296" starttime="20200903 03:45:07.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:07.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:07.297" starttime="20200903 03:45:07.297"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:07.297" starttime="20200903 03:45:05.026"></status>
</kw>
<msg timestamp="20200903 03:45:07.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:07.298" starttime="20200903 03:45:05.026"></status>
</kw>
<msg timestamp="20200903 03:45:07.298" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200903 03:45:07.298" starttime="20200903 03:45:05.025"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200903 03:45:07.298" starttime="20200903 03:45:07.298"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:07.305" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="38697-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:10.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:10.023" level="INFO">${output} = {
  "metadata": {},
  "name": "38697-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T03:45:07.142Z",
  "modificationTime": "2020-09-03T03:45:07.142Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200903 03:45:10.023" starttime="20200903 03:45:07.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:10.025" level="INFO">{
  "metadata": {},
  "name": "38697-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T03:45:07.142Z",
  "modificationTime": "2020-09-03T03:45:07.142Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200903 03:45:10.025" starttime="20200903 03:45:10.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:10.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:10.025" starttime="20200903 03:45:10.025"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:10.026" starttime="20200903 03:45:07.300"></status>
</kw>
<msg timestamp="20200903 03:45:10.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:10.026" starttime="20200903 03:45:07.299"></status>
</kw>
<msg timestamp="20200903 03:45:10.026" level="INFO">${result} = {
  "metadata": {},
  "name": "38697-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T03:45:07.142Z",
  "modificationTime": "2020-09-03T03:45:07.142Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200903 03:45:10.026" starttime="20200903 03:45:07.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200903 03:45:10.027" starttime="20200903 03:45:10.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:10.031" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="38697-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:12.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:12.069" level="INFO">${output} = {
  "metadata": {},
  "name": "38697-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T03:45:07.142Z",
  "modificationTime": "2020-09-03T03:45:07.142Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200903 03:45:12.069" starttime="20200903 03:45:10.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:12.070" level="INFO">{
  "metadata": {},
  "name": "38697-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T03:45:07.142Z",
  "modificationTime": "2020-09-03T03:45:07.142Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200903 03:45:12.071" starttime="20200903 03:45:12.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:12.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:12.071" starttime="20200903 03:45:12.071"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:12.071" starttime="20200903 03:45:10.028"></status>
</kw>
<msg timestamp="20200903 03:45:12.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:12.072" starttime="20200903 03:45:10.027"></status>
</kw>
<msg timestamp="20200903 03:45:12.072" level="INFO">${result} = {
  "metadata": {},
  "name": "38697-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-09-03T03:45:07.142Z",
  "modificationTime": "2020-09-03T03:45:07.142Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200903 03:45:12.072" starttime="20200903 03:45:10.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200903 03:45:12.072" starttime="20200903 03:45:12.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:12.077" level="INFO">Running command 'ozone sh volume update /38697-rpcbasic --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:14.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:14.116" level="INFO">${output} = {
  "metadata" : { },
  "name" : "38697-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-09-03T03:45:07.142Z",
  "modificationTime" : "2020-09-03T03:45:13.843Z",
  "acls...</msg>
<status status="PASS" endtime="20200903 03:45:14.116" starttime="20200903 03:45:12.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:14.117" level="INFO">{
  "metadata" : { },
  "name" : "38697-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-09-03T03:45:07.142Z",
  "modificationTime" : "2020-09-03T03:45:13.843Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200903 03:45:14.117" starttime="20200903 03:45:14.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:14.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:14.118" starttime="20200903 03:45:14.117"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:14.118" starttime="20200903 03:45:12.073"></status>
</kw>
<msg timestamp="20200903 03:45:14.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:14.118" starttime="20200903 03:45:12.073"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:14.118" starttime="20200903 03:45:12.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:14.123" level="INFO">Running command 'ozone sh volume info /38697-rpcbasic | jq -r '. | select(.name=="38697-rpcbasic") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:15.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:15.986" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200903 03:45:15.986" starttime="20200903 03:45:14.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:15.987" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200903 03:45:15.987" starttime="20200903 03:45:15.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:15.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:15.988" starttime="20200903 03:45:15.987"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:15.988" starttime="20200903 03:45:14.119"></status>
</kw>
<msg timestamp="20200903 03:45:15.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:15.988" starttime="20200903 03:45:14.119"></status>
</kw>
<msg timestamp="20200903 03:45:15.988" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200903 03:45:15.988" starttime="20200903 03:45:14.118"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200903 03:45:15.989" starttime="20200903 03:45:15.989"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:15.994" level="INFO">Running command 'ozone sh bucket create /38697-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:17.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:17.886" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:17.886" starttime="20200903 03:45:15.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:17.887" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:17.887" starttime="20200903 03:45:17.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:17.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:17.888" starttime="20200903 03:45:17.888"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:17.888" starttime="20200903 03:45:15.990"></status>
</kw>
<msg timestamp="20200903 03:45:17.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:17.889" starttime="20200903 03:45:15.990"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:17.889" starttime="20200903 03:45:15.989"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:17.893" level="INFO">Running command 'ozone sh bucket info /38697-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:20.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:20.026" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200903 03:45:20.026" starttime="20200903 03:45:17.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:20.027" level="INFO">DISK</msg>
<status status="PASS" endtime="20200903 03:45:20.027" starttime="20200903 03:45:20.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:20.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:20.028" starttime="20200903 03:45:20.027"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:20.028" starttime="20200903 03:45:17.890"></status>
</kw>
<msg timestamp="20200903 03:45:20.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:20.028" starttime="20200903 03:45:17.890"></status>
</kw>
<msg timestamp="20200903 03:45:20.028" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200903 03:45:20.028" starttime="20200903 03:45:17.889"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200903 03:45:20.029" starttime="20200903 03:45:20.028"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:20.034" level="INFO">Running command 'ozone sh bucket list /38697-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:21.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:21.964" level="INFO">${output} = 38697-rpcbasic</msg>
<status status="PASS" endtime="20200903 03:45:21.964" starttime="20200903 03:45:20.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:21.965" level="INFO">38697-rpcbasic</msg>
<status status="PASS" endtime="20200903 03:45:21.965" starttime="20200903 03:45:21.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:21.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:21.966" starttime="20200903 03:45:21.965"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:21.966" starttime="20200903 03:45:20.030"></status>
</kw>
<msg timestamp="20200903 03:45:21.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:21.966" starttime="20200903 03:45:20.030"></status>
</kw>
<msg timestamp="20200903 03:45:21.967" level="INFO">${result} = 38697-rpcbasic</msg>
<status status="PASS" endtime="20200903 03:45:21.967" starttime="20200903 03:45:20.029"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200903 03:45:21.967" starttime="20200903 03:45:21.967"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:21.973" level="INFO">Running command 'ozone sh key put /38697-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:27.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:27.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:27.240" starttime="20200903 03:45:21.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:27.241" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:27.242" starttime="20200903 03:45:27.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:27.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:27.242" starttime="20200903 03:45:27.242"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:27.242" starttime="20200903 03:45:21.969"></status>
</kw>
<msg timestamp="20200903 03:45:27.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:27.243" starttime="20200903 03:45:21.969"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:27.243" starttime="20200903 03:45:21.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:27.251" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:27.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:27.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:27.265" starttime="20200903 03:45:27.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:27.266" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:27.266" starttime="20200903 03:45:27.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:27.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:27.267" starttime="20200903 03:45:27.266"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:27.267" starttime="20200903 03:45:27.244"></status>
</kw>
<msg timestamp="20200903 03:45:27.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:27.267" starttime="20200903 03:45:27.243"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:27.267" starttime="20200903 03:45:27.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:27.271" level="INFO">Running command 'ozone sh key get /38697-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:31.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:31.064" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:31.064" starttime="20200903 03:45:27.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:31.065" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:31.066" starttime="20200903 03:45:31.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:31.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:31.066" starttime="20200903 03:45:31.066"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:31.067" starttime="20200903 03:45:27.268"></status>
</kw>
<msg timestamp="20200903 03:45:31.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:31.067" starttime="20200903 03:45:27.268"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:31.067" starttime="20200903 03:45:27.267"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:31.070" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:31.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:31.074" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:31.074" starttime="20200903 03:45:31.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:31.075" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:31.075" starttime="20200903 03:45:31.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:31.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:31.075" starttime="20200903 03:45:31.075"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:31.076" starttime="20200903 03:45:31.068"></status>
</kw>
<msg timestamp="20200903 03:45:31.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:31.076" starttime="20200903 03:45:31.068"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:31.076" starttime="20200903 03:45:31.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:31.079" level="INFO">Running command 'ozone sh key put -t RATIS /38697-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:37.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:37.386" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:37.386" starttime="20200903 03:45:31.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:37.387" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:37.387" starttime="20200903 03:45:37.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:37.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:37.388" starttime="20200903 03:45:37.387"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:37.388" starttime="20200903 03:45:31.077"></status>
</kw>
<msg timestamp="20200903 03:45:37.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:37.388" starttime="20200903 03:45:31.077"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:37.388" starttime="20200903 03:45:31.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:37.392" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:37.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:37.394" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:37.394" starttime="20200903 03:45:37.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:37.395" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:37.395" starttime="20200903 03:45:37.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:37.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:37.396" starttime="20200903 03:45:37.395"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:37.396" starttime="20200903 03:45:37.389"></status>
</kw>
<msg timestamp="20200903 03:45:37.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:37.396" starttime="20200903 03:45:37.389"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:37.396" starttime="20200903 03:45:37.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:37.400" level="INFO">Running command 'ozone sh key get /38697-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:40.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:40.654" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:40.654" starttime="20200903 03:45:37.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:40.656" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:40.656" starttime="20200903 03:45:40.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:40.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:40.656" starttime="20200903 03:45:40.656"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:40.657" starttime="20200903 03:45:37.397"></status>
</kw>
<msg timestamp="20200903 03:45:40.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:40.657" starttime="20200903 03:45:37.397"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:40.657" starttime="20200903 03:45:37.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:40.660" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:40.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:40.663" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:40.663" starttime="20200903 03:45:40.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:40.664" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:40.664" starttime="20200903 03:45:40.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:40.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:40.664" starttime="20200903 03:45:40.664"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:40.664" starttime="20200903 03:45:40.658"></status>
</kw>
<msg timestamp="20200903 03:45:40.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:40.665" starttime="20200903 03:45:40.658"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:40.665" starttime="20200903 03:45:40.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:40.668" level="INFO">Running command 'ozone sh key info /38697-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:42.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:42.676" level="INFO">${output} = {
  "volumeName": "38697-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-03T03:45:33.033Z",
  "modificationTime": "2020-09-03T03:45:36.902Z",
...</msg>
<status status="PASS" endtime="20200903 03:45:42.676" starttime="20200903 03:45:40.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:42.677" level="INFO">{
  "volumeName": "38697-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-03T03:45:33.033Z",
  "modificationTime": "2020-09-03T03:45:36.902Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104798927783854080,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200903 03:45:42.677" starttime="20200903 03:45:42.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:42.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:42.678" starttime="20200903 03:45:42.678"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:42.678" starttime="20200903 03:45:40.666"></status>
</kw>
<msg timestamp="20200903 03:45:42.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:42.679" starttime="20200903 03:45:40.666"></status>
</kw>
<msg timestamp="20200903 03:45:42.679" level="INFO">${result} = {
  "volumeName": "38697-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-09-03T03:45:33.033Z",
  "modificationTime": "2020-09-03T03:45:36.902Z",
...</msg>
<status status="PASS" endtime="20200903 03:45:42.679" starttime="20200903 03:45:40.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200903 03:45:42.680" starttime="20200903 03:45:42.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:42.684" level="INFO">Running command 'ozone sh key delete /38697-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:44.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:44.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:44.590" starttime="20200903 03:45:42.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:44.591" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:44.591" starttime="20200903 03:45:44.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:44.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:44.592" starttime="20200903 03:45:44.592"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:44.592" starttime="20200903 03:45:42.681"></status>
</kw>
<msg timestamp="20200903 03:45:44.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:44.593" starttime="20200903 03:45:42.680"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:44.593" starttime="20200903 03:45:42.680"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:44.597" level="INFO">Running command 'ozone sh key cp /38697-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:48.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:48.360" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:48.360" starttime="20200903 03:45:44.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:48.361" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:48.362" starttime="20200903 03:45:48.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:48.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:48.362" starttime="20200903 03:45:48.362"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:48.362" starttime="20200903 03:45:44.594"></status>
</kw>
<msg timestamp="20200903 03:45:48.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:48.363" starttime="20200903 03:45:44.593"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:48.363" starttime="20200903 03:45:44.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:48.366" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:48.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:48.368" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:48.368" starttime="20200903 03:45:48.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:48.369" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:48.369" starttime="20200903 03:45:48.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:48.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:48.370" starttime="20200903 03:45:48.369"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:48.370" starttime="20200903 03:45:48.364"></status>
</kw>
<msg timestamp="20200903 03:45:48.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:48.370" starttime="20200903 03:45:48.363"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:48.371" starttime="20200903 03:45:48.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:48.374" level="INFO">Running command 'ozone sh key get /38697-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:51.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:51.627" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:51.627" starttime="20200903 03:45:48.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:51.628" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:51.628" starttime="20200903 03:45:51.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:51.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:51.628" starttime="20200903 03:45:51.628"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:51.629" starttime="20200903 03:45:48.371"></status>
</kw>
<msg timestamp="20200903 03:45:51.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:51.629" starttime="20200903 03:45:48.371"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:51.629" starttime="20200903 03:45:48.371"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:51.632" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:51.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:51.635" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:51.635" starttime="20200903 03:45:51.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:51.636" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:51.636" starttime="20200903 03:45:51.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:51.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:51.636" starttime="20200903 03:45:51.636"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:51.637" starttime="20200903 03:45:51.630"></status>
</kw>
<msg timestamp="20200903 03:45:51.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:51.637" starttime="20200903 03:45:51.630"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:51.637" starttime="20200903 03:45:51.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:51.640" level="INFO">Running command 'ozone sh key delete /38697-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:53.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:53.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:53.488" starttime="20200903 03:45:51.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:53.489" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:53.489" starttime="20200903 03:45:53.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:53.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:53.490" starttime="20200903 03:45:53.489"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:53.490" starttime="20200903 03:45:51.638"></status>
</kw>
<msg timestamp="20200903 03:45:53.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:53.490" starttime="20200903 03:45:51.638"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:53.490" starttime="20200903 03:45:51.637"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:53.494" level="INFO">Running command 'ozone sh key get /38697-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:55.337" level="INFO">${rc} = 255</msg>
<msg timestamp="20200903 03:45:55.337" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200903 03:45:55.337" starttime="20200903 03:45:53.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:55.338" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200903 03:45:55.338" starttime="20200903 03:45:55.337"></status>
</kw>
<msg timestamp="20200903 03:45:55.338" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200903 03:45:55.338" starttime="20200903 03:45:53.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200903 03:45:55.339" starttime="20200903 03:45:55.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:55.343" level="INFO">Running command 'ozone sh key get --force /38697-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:45:58.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:45:58.829" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:45:58.829" starttime="20200903 03:45:55.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:45:58.830" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:45:58.830" starttime="20200903 03:45:58.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:45:58.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:45:58.831" starttime="20200903 03:45:58.830"></status>
</kw>
<status status="PASS" endtime="20200903 03:45:58.831" starttime="20200903 03:45:55.340"></status>
</kw>
<msg timestamp="20200903 03:45:58.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:45:58.831" starttime="20200903 03:45:55.340"></status>
</kw>
<msg timestamp="20200903 03:45:58.831" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200903 03:45:58.832" starttime="20200903 03:45:55.339"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200903 03:45:58.832" starttime="20200903 03:45:58.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:45:58.837" level="INFO">Running command 'ozone sh key info /38697-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:46:00.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:46:00.848" level="INFO">${output} = {
  "volumeName": "38697-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-03T03:45:23.881Z",
  "modificationTime": "2020-09-03T03:45:26.719Z",
  "rep...</msg>
<status status="PASS" endtime="20200903 03:46:00.848" starttime="20200903 03:45:58.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:46:00.849" level="INFO">{
  "volumeName": "38697-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-03T03:45:23.881Z",
  "modificationTime": "2020-09-03T03:45:26.719Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104798927182364670,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200903 03:46:00.849" starttime="20200903 03:46:00.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:46:00.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:46:00.850" starttime="20200903 03:46:00.849"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:00.850" starttime="20200903 03:45:58.834"></status>
</kw>
<msg timestamp="20200903 03:46:00.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:46:00.850" starttime="20200903 03:45:58.833"></status>
</kw>
<msg timestamp="20200903 03:46:00.851" level="INFO">${result} = {
  "volumeName": "38697-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-09-03T03:45:23.881Z",
  "modificationTime": "2020-09-03T03:45:26.719Z",
  "rep...</msg>
<status status="PASS" endtime="20200903 03:46:00.851" starttime="20200903 03:45:58.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200903 03:46:00.851" starttime="20200903 03:46:00.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:46:00.855" level="INFO">Running command 'ozone sh key list /38697-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:46:02.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:46:02.861" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200903 03:46:02.861" starttime="20200903 03:46:00.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:46:02.862" level="INFO">key1</msg>
<status status="PASS" endtime="20200903 03:46:02.863" starttime="20200903 03:46:02.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:46:02.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:46:02.863" starttime="20200903 03:46:02.863"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:02.863" starttime="20200903 03:46:00.852"></status>
</kw>
<msg timestamp="20200903 03:46:02.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:46:02.864" starttime="20200903 03:46:00.852"></status>
</kw>
<msg timestamp="20200903 03:46:02.864" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200903 03:46:02.864" starttime="20200903 03:46:00.851"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200903 03:46:02.864" starttime="20200903 03:46:02.864"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:46:02.868" level="INFO">Running command 'ozone sh key rename /38697-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:46:04.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:46:04.691" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:46:04.691" starttime="20200903 03:46:02.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:46:04.692" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:46:04.692" starttime="20200903 03:46:04.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:46:04.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:46:04.693" starttime="20200903 03:46:04.693"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:04.693" starttime="20200903 03:46:02.865"></status>
</kw>
<msg timestamp="20200903 03:46:04.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:46:04.694" starttime="20200903 03:46:02.865"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:04.694" starttime="20200903 03:46:02.865"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:46:04.698" level="INFO">Running command 'ozone sh key list /38697-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:46:06.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:46:06.645" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200903 03:46:06.645" starttime="20200903 03:46:04.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:46:06.646" level="INFO">key2</msg>
<status status="PASS" endtime="20200903 03:46:06.646" starttime="20200903 03:46:06.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:46:06.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:46:06.647" starttime="20200903 03:46:06.647"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:06.648" starttime="20200903 03:46:04.695"></status>
</kw>
<msg timestamp="20200903 03:46:06.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:46:06.648" starttime="20200903 03:46:04.695"></status>
</kw>
<msg timestamp="20200903 03:46:06.648" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200903 03:46:06.648" starttime="20200903 03:46:04.694"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200903 03:46:06.649" starttime="20200903 03:46:06.648"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:46:06.653" level="INFO">Running command 'ozone sh key delete /38697-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:46:08.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:46:08.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:46:08.447" starttime="20200903 03:46:06.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:46:08.448" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:46:08.448" starttime="20200903 03:46:08.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:46:08.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:46:08.449" starttime="20200903 03:46:08.448"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:08.449" starttime="20200903 03:46:06.650"></status>
</kw>
<msg timestamp="20200903 03:46:08.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:46:08.449" starttime="20200903 03:46:06.649"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:08.449" starttime="20200903 03:46:06.649"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:08.450" starttime="20200903 03:45:21.968"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:08.450" starttime="20200903 03:45:21.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:46:08.453" level="INFO">Running command 'ozone sh bucket delete /38697-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:46:10.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:46:10.218" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200903 03:46:10.219" starttime="20200903 03:46:08.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:46:10.220" level="INFO"></msg>
<status status="PASS" endtime="20200903 03:46:10.220" starttime="20200903 03:46:10.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:46:10.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:46:10.220" starttime="20200903 03:46:10.220"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:10.221" starttime="20200903 03:46:08.451"></status>
</kw>
<msg timestamp="20200903 03:46:10.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:46:10.221" starttime="20200903 03:46:08.450"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:10.221" starttime="20200903 03:46:08.450"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200903 03:46:10.226" level="INFO">Running command 'ozone sh volume delete /38697-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200903 03:46:11.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200903 03:46:11.988" level="INFO">${output} = Volume 38697-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200903 03:46:11.988" starttime="20200903 03:46:10.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200903 03:46:11.989" level="INFO">Volume 38697-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200903 03:46:11.989" starttime="20200903 03:46:11.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200903 03:46:11.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200903 03:46:11.990" starttime="20200903 03:46:11.989"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:11.990" starttime="20200903 03:46:10.222"></status>
</kw>
<msg timestamp="20200903 03:46:11.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200903 03:46:11.991" starttime="20200903 03:46:10.222"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:11.991" starttime="20200903 03:46:10.221"></status>
</kw>
<status status="PASS" endtime="20200903 03:46:11.991" starttime="20200903 03:44:58.954"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200903 03:46:11.991" critical="yes" starttime="20200903 03:44:58.953"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200903 03:46:11.992" starttime="20200903 03:44:58.855"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
