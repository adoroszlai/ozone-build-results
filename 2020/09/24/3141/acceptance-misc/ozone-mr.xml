<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200924 11:05:24.515" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:28.555" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:52:30.572" level="INFO">${rc} = 255</msg>
<msg timestamp="20200924 10:52:30.572" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200924 10:52:30.572" starttime="20200924 10:52:28.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:52:30.573" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200924 10:52:30.573" starttime="20200924 10:52:30.572"></status>
</kw>
<msg timestamp="20200924 10:52:30.573" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200924 10:52:30.573" starttime="20200924 10:52:28.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:30.579" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:52:32.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:52:32.354" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:52:32.354" starttime="20200924 10:52:30.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:52:32.355" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:52:32.356" starttime="20200924 10:52:32.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:52:32.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:52:32.356" starttime="20200924 10:52:32.356"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:32.357" starttime="20200924 10:52:30.575"></status>
</kw>
<msg timestamp="20200924 10:52:32.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:52:32.357" starttime="20200924 10:52:30.575"></status>
</kw>
<msg timestamp="20200924 10:52:32.357" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200924 10:52:32.357" starttime="20200924 10:52:30.575"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200924 10:52:32.358" starttime="20200924 10:52:32.357"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:32.358" starttime="20200924 10:52:30.574"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:32.358" starttime="20200924 10:52:30.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:32.362" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:52:34.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:52:34.208" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:52:34.208" starttime="20200924 10:52:32.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:52:34.209" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:52:34.209" starttime="20200924 10:52:34.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:52:34.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:52:34.210" starttime="20200924 10:52:34.210"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:34.210" starttime="20200924 10:52:32.359"></status>
</kw>
<msg timestamp="20200924 10:52:34.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:52:34.211" starttime="20200924 10:52:32.359"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:34.211" starttime="20200924 10:52:32.359"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:34.211" starttime="20200924 10:52:32.358"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:34.211" starttime="20200924 10:52:32.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200924 10:52:34.212" starttime="20200924 10:52:34.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:34.217" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:52:36.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:52:36.100" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-24T10:52:34.087Z",
  "modificat...</msg>
<status status="PASS" endtime="20200924 10:52:36.100" starttime="20200924 10:52:34.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:52:36.101" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-24T10:52:34.087Z",
  "modificationTime" : "2020-09-24T10:52:34.087Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200924 10:52:36.101" starttime="20200924 10:52:36.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:52:36.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:52:36.102" starttime="20200924 10:52:36.101"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:36.102" starttime="20200924 10:52:34.213"></status>
</kw>
<msg timestamp="20200924 10:52:36.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:52:36.102" starttime="20200924 10:52:34.212"></status>
</kw>
<msg timestamp="20200924 10:52:36.103" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-24T10:52:34.087Z",
  "modificat...</msg>
<status status="PASS" endtime="20200924 10:52:36.103" starttime="20200924 10:52:34.212"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200924 10:52:36.103" starttime="20200924 10:52:36.103"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:52:36.107" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:52:36.107" starttime="20200924 10:52:36.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:52:36.107" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:52:36.107" starttime="20200924 10:52:36.107"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:36.108" starttime="20200924 10:52:36.106"></status>
</kw>
<msg timestamp="20200924 10:52:36.108" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:52:36.108" starttime="20200924 10:52:36.105"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:36.108" starttime="20200924 10:52:36.105"></status>
</kw>
<msg timestamp="20200924 10:52:36.108" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200924 10:52:36.108" starttime="20200924 10:52:36.104"></status>
</kw>
<msg timestamp="20200924 10:52:36.108" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200924 10:52:36.108" starttime="20200924 10:52:36.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:36.112" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:52:38.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:52:38.035" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:52:38.035" starttime="20200924 10:52:36.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:52:38.036" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:52:38.036" starttime="20200924 10:52:38.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:52:38.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:52:38.037" starttime="20200924 10:52:38.036"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:38.037" starttime="20200924 10:52:36.109"></status>
</kw>
<msg timestamp="20200924 10:52:38.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:52:38.037" starttime="20200924 10:52:36.109"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:38.037" starttime="20200924 10:52:36.108"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:38.041" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:52:43.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:52:43.022" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:52:43.022" starttime="20200924 10:52:38.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:52:43.023" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:52:43.023" starttime="20200924 10:52:43.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:52:43.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:52:43.024" starttime="20200924 10:52:43.023"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:43.024" starttime="20200924 10:52:38.038"></status>
</kw>
<msg timestamp="20200924 10:52:43.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:52:43.024" starttime="20200924 10:52:38.038"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:43.025" starttime="20200924 10:52:38.037"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:43.028" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:52:46.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:52:46.595" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:52:46.595" starttime="20200924 10:52:43.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:52:46.596" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:52:46.596" starttime="20200924 10:52:46.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:52:46.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:52:46.597" starttime="20200924 10:52:46.596"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:46.597" starttime="20200924 10:52:43.026"></status>
</kw>
<msg timestamp="20200924 10:52:46.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:52:46.597" starttime="20200924 10:52:43.025"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:46.597" starttime="20200924 10:52:43.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:46.600" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:52:50.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:52:50.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:52:50.238" starttime="20200924 10:52:46.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:52:50.239" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:52:50.239" starttime="20200924 10:52:50.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:52:50.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:52:50.240" starttime="20200924 10:52:50.239"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:50.240" starttime="20200924 10:52:46.598"></status>
</kw>
<msg timestamp="20200924 10:52:50.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:52:50.240" starttime="20200924 10:52:46.598"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:50.240" starttime="20200924 10:52:46.597"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200924 10:52:50.240" critical="yes" starttime="20200924 10:52:28.549"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:52:50.245" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:52:50.245" starttime="20200924 10:52:50.244"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:52:50.245" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:52:50.245" starttime="20200924 10:52:50.245"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:50.246" starttime="20200924 10:52:50.244"></status>
</kw>
<msg timestamp="20200924 10:52:50.246" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:52:50.246" starttime="20200924 10:52:50.243"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:50.246" starttime="20200924 10:52:50.243"></status>
</kw>
<msg timestamp="20200924 10:52:50.246" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 10:52:50.246" starttime="20200924 10:52:50.242"></status>
</kw>
<msg timestamp="20200924 10:52:50.246" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 10:52:50.246" starttime="20200924 10:52:50.242"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:50.249" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:52:52.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:52:52.137" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:52:52.137" starttime="20200924 10:52:50.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:52:52.138" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:52:52.139" starttime="20200924 10:52:52.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:52:52.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:52:52.139" starttime="20200924 10:52:52.139"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:52.139" starttime="20200924 10:52:50.247"></status>
</kw>
<msg timestamp="20200924 10:52:52.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:52:52.140" starttime="20200924 10:52:50.247"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:52.140" starttime="20200924 10:52:50.246"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:52.144" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:52:53.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:52:53.925" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:52:53.925" starttime="20200924 10:52:52.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:52:53.926" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:52:53.926" starttime="20200924 10:52:53.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:52:53.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:52:53.926" starttime="20200924 10:52:53.926"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:53.927" starttime="20200924 10:52:52.141"></status>
</kw>
<msg timestamp="20200924 10:52:53.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:52:53.927" starttime="20200924 10:52:52.141"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:53.927" starttime="20200924 10:52:52.140"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200924 10:52:53.927" critical="yes" starttime="20200924 10:52:50.241"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200924 10:52:53.928" starttime="20200924 10:52:28.502"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 10:54:25.374" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 10:54:25.374" starttime="20200924 10:54:25.373"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:54:25.374" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 10:54:25.374" starttime="20200924 10:54:25.374"></status>
</kw>
<status status="PASS" endtime="20200924 10:54:25.374" starttime="20200924 10:54:25.373"></status>
</kw>
<msg timestamp="20200924 10:54:25.374" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 10:54:25.374" starttime="20200924 10:54:25.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 10:54:25.375" starttime="20200924 10:54:25.375"></status>
</kw>
<msg timestamp="20200924 10:54:25.375" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 10:54:25.375" starttime="20200924 10:54:25.375"></status>
</kw>
<status status="PASS" endtime="20200924 10:54:25.376" starttime="20200924 10:54:25.372"></status>
</kw>
<msg timestamp="20200924 10:54:25.376" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:54:25.376" starttime="20200924 10:54:25.372"></status>
</kw>
<msg timestamp="20200924 10:54:25.376" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:54:25.376" starttime="20200924 10:54:25.370"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 10:54:25.376" level="INFO">${random} = 93854</msg>
<status status="PASS" endtime="20200924 10:54:25.376" starttime="20200924 10:54:25.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:54:25.381" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-93854 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:54:28.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:54:28.393" level="INFO">${output} = 2020-09-24 10:54:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:54:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-24 ...</msg>
<status status="PASS" endtime="20200924 10:54:28.393" starttime="20200924 10:54:25.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:54:28.394" level="INFO">2020-09-24 10:54:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:54:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-24 10:54:27 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-24 10:54:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:54:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E0966C149F2C-&gt;f629a8e7-eb14-496f-b28f-9582543f0c42
2020-09-24 10:54:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200924 10:54:28.394" starttime="20200924 10:54:28.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:54:28.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:54:28.395" starttime="20200924 10:54:28.394"></status>
</kw>
<status status="PASS" endtime="20200924 10:54:28.395" starttime="20200924 10:54:25.377"></status>
</kw>
<msg timestamp="20200924 10:54:28.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:54:28.395" starttime="20200924 10:54:25.377"></status>
</kw>
<msg timestamp="20200924 10:54:28.395" level="INFO">${result} = 2020-09-24 10:54:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:54:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-24 ...</msg>
<status status="PASS" endtime="20200924 10:54:28.395" starttime="20200924 10:54:25.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:54:28.399" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:54:30.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:54:30.039" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:52 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-24 10:53 ofs://om/volume1/bucket1/ozone-18684
-rw-...</msg>
<status status="PASS" endtime="20200924 10:54:30.039" starttime="20200924 10:54:28.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:54:30.040" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:52 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-24 10:53 ofs://om/volume1/bucket1/ozone-18684
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-24 10:54 ofs://om/volume1/bucket1/ozone-93854
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:52 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:53 ofs://om/volume1/bucket1/wordcount-83.txt</msg>
<status status="PASS" endtime="20200924 10:54:30.040" starttime="20200924 10:54:30.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:54:30.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:54:30.041" starttime="20200924 10:54:30.040"></status>
</kw>
<status status="PASS" endtime="20200924 10:54:30.041" starttime="20200924 10:54:28.396"></status>
</kw>
<msg timestamp="20200924 10:54:30.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:54:30.041" starttime="20200924 10:54:28.396"></status>
</kw>
<msg timestamp="20200924 10:54:30.041" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:52 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-24 10:53 ofs://om/volume1/bucket1/ozone-18684
-rw-...</msg>
<status status="PASS" endtime="20200924 10:54:30.041" starttime="20200924 10:54:28.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200924 10:54:30.042" starttime="20200924 10:54:30.042"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200924 10:54:30.042" critical="yes" starttime="20200924 10:54:25.370"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200924 10:54:30.043" starttime="20200924 10:54:25.320"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:52:58.383" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:52:58.383" starttime="20200924 10:52:58.383"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:52:58.384" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:52:58.384" starttime="20200924 10:52:58.383"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:58.384" starttime="20200924 10:52:58.382"></status>
</kw>
<msg timestamp="20200924 10:52:58.384" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:52:58.384" starttime="20200924 10:52:58.382"></status>
</kw>
<status status="PASS" endtime="20200924 10:52:58.384" starttime="20200924 10:52:58.382"></status>
</kw>
<msg timestamp="20200924 10:52:58.384" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:52:58.384" starttime="20200924 10:52:58.381"></status>
</kw>
<msg timestamp="20200924 10:52:58.384" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:52:58.384" starttime="20200924 10:52:58.380"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 10:52:58.385" level="INFO">${random} = 18684</msg>
<status status="PASS" endtime="20200924 10:52:58.385" starttime="20200924 10:52:58.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:52:58.390" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-18684 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:53:01.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:53:01.474" level="INFO">${output} = 2020-09-24 10:53:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:53:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-24 ...</msg>
<status status="PASS" endtime="20200924 10:53:01.474" starttime="20200924 10:52:58.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:53:01.475" level="INFO">2020-09-24 10:53:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:53:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-24 10:53:00 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-24 10:53:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:53:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DC7112DCF3FE-&gt;f629a8e7-eb14-496f-b28f-9582543f0c42
2020-09-24 10:53:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200924 10:53:01.475" starttime="20200924 10:53:01.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:53:01.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:53:01.476" starttime="20200924 10:53:01.475"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:01.476" starttime="20200924 10:52:58.386"></status>
</kw>
<msg timestamp="20200924 10:53:01.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:53:01.476" starttime="20200924 10:52:58.385"></status>
</kw>
<msg timestamp="20200924 10:53:01.476" level="INFO">${result} = 2020-09-24 10:53:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:53:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-24 ...</msg>
<status status="PASS" endtime="20200924 10:53:01.476" starttime="20200924 10:52:58.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:53:01.480" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:53:03.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:53:03.145" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:52 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-24 10:53 o3fs://bucket1.volume1.om/ozone-18684
dr...</msg>
<status status="PASS" endtime="20200924 10:53:03.145" starttime="20200924 10:53:01.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:53:03.146" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:52 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-24 10:53 o3fs://bucket1.volume1.om/ozone-18684
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:52 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 10:53:03.147" starttime="20200924 10:53:03.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:53:03.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:53:03.147" starttime="20200924 10:53:03.147"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:03.147" starttime="20200924 10:53:01.477"></status>
</kw>
<msg timestamp="20200924 10:53:03.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:53:03.148" starttime="20200924 10:53:01.477"></status>
</kw>
<msg timestamp="20200924 10:53:03.148" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:52 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-24 10:53 o3fs://bucket1.volume1.om/ozone-18684
dr...</msg>
<status status="PASS" endtime="20200924 10:53:03.148" starttime="20200924 10:53:01.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200924 10:53:03.148" starttime="20200924 10:53:03.148"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200924 10:53:03.149" critical="yes" starttime="20200924 10:52:58.380"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200924 10:53:03.149" starttime="20200924 10:52:58.336"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:54:34.461" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:54:34.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:54:34.464" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:54:34.464" starttime="20200924 10:54:34.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:54:34.465" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:54:34.465" starttime="20200924 10:54:34.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:54:34.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:54:34.465" starttime="20200924 10:54:34.465"></status>
</kw>
<status status="PASS" endtime="20200924 10:54:34.465" starttime="20200924 10:54:34.454"></status>
</kw>
<msg timestamp="20200924 10:54:34.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:54:34.466" starttime="20200924 10:54:34.454"></status>
</kw>
<msg timestamp="20200924 10:54:34.466" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:54:34.466" starttime="20200924 10:54:34.454"></status>
</kw>
<msg timestamp="20200924 10:54:34.466" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:54:34.466" starttime="20200924 10:54:34.454"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 10:54:34.469" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 10:54:34.469" starttime="20200924 10:54:34.468"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:54:34.469" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 10:54:34.469" starttime="20200924 10:54:34.469"></status>
</kw>
<status status="PASS" endtime="20200924 10:54:34.469" starttime="20200924 10:54:34.468"></status>
</kw>
<msg timestamp="20200924 10:54:34.469" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 10:54:34.470" starttime="20200924 10:54:34.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 10:54:34.470" starttime="20200924 10:54:34.470"></status>
</kw>
<msg timestamp="20200924 10:54:34.470" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 10:54:34.470" starttime="20200924 10:54:34.470"></status>
</kw>
<status status="PASS" endtime="20200924 10:54:34.471" starttime="20200924 10:54:34.467"></status>
</kw>
<msg timestamp="20200924 10:54:34.471" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:54:34.471" starttime="20200924 10:54:34.467"></status>
</kw>
<msg timestamp="20200924 10:54:34.471" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:54:34.471" starttime="20200924 10:54:34.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:54:34.474" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:55:09.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:55:09.548" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:54:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:54:36 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200924 10:55:09.548" starttime="20200924 10:54:34.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:55:09.549" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:54:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:54:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-24 10:54:36 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-24 10:54:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:54:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F439A9D90152-&gt;f629a8e7-eb14-496f-b28f-9582543f0c42
2020-09-24 10:54:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-24 10:54:39 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-24 10:54:39 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 10:54:40 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-24 10:54:40 INFO  JobSubmitter:198 - number of splits:3
2020-09-24 10:54:40 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600944685746_0003
2020-09-24 10:54:40 INFO  YarnClientImpl:273 - Submitted application application_1600944685746_0003
2020-09-24 10:54:40 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600944685746_0003/
2020-09-24 10:54:40 INFO  Job:1339 - Running job: job_1600944685746_0003
2020-09-24 10:54:47 INFO  Job:1360 - Job job_1600944685746_0003 running in uber mode : false
2020-09-24 10:54:47 INFO  Job:1367 -  map 0% reduce 0%
2020-09-24 10:54:53 INFO  Job:1367 -  map 33% reduce 0%
2020-09-24 10:54:58 INFO  Job:1367 -  map 67% reduce 0%
2020-09-24 10:55:03 INFO  Job:1367 -  map 100% reduce 0%
2020-09-24 10:55:07 INFO  Job:1367 -  map 100% reduce 100%
2020-09-24 10:55:08 INFO  Job:1378 - Job job_1600944685746_0003 completed successfully
2020-09-24 10:55:09 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=613533
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35692
		Total time spent by all reduces in occupied slots (ms)=12968
		Total time spent by all map tasks (ms)=8923
		Total time spent by all reduce tasks (ms)=3242
		Total vcore-milliseconds taken by all map tasks=8923
		Total vcore-milliseconds taken by all reduce tasks=3242
		Total megabyte-milliseconds taken by all map tasks=36548608
		Total megabyte-milliseconds taken by all reduce tasks=13279232
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=550
		CPU time spent (ms)=5820
		Physical memory (bytes) snapshot=1096122368
		Virtual memory (bytes) snapshot=16030371840
		Total committed heap usage (bytes)=1053818880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.315 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200924 10:55:09.550" starttime="20200924 10:55:09.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:55:09.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:55:09.550" starttime="20200924 10:55:09.550"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:09.550" starttime="20200924 10:54:34.472"></status>
</kw>
<msg timestamp="20200924 10:55:09.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:55:09.550" starttime="20200924 10:54:34.471"></status>
</kw>
<msg timestamp="20200924 10:55:09.551" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:54:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:54:36 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200924 10:55:09.551" starttime="20200924 10:54:34.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 10:55:09.551" starttime="20200924 10:55:09.551"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 10:55:09.552" critical="yes" starttime="20200924 10:54:34.453"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:55:09.556" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:55:09.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:55:09.562" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:55:09.562" starttime="20200924 10:55:09.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:55:09.563" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:55:09.563" starttime="20200924 10:55:09.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:55:09.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:55:09.564" starttime="20200924 10:55:09.563"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:09.564" starttime="20200924 10:55:09.554"></status>
</kw>
<msg timestamp="20200924 10:55:09.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:55:09.564" starttime="20200924 10:55:09.554"></status>
</kw>
<msg timestamp="20200924 10:55:09.564" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:55:09.564" starttime="20200924 10:55:09.553"></status>
</kw>
<msg timestamp="20200924 10:55:09.564" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:55:09.564" starttime="20200924 10:55:09.553"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 10:55:09.565" level="INFO">${random} = 13</msg>
<status status="PASS" endtime="20200924 10:55:09.565" starttime="20200924 10:55:09.565"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 10:55:09.568" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 10:55:09.568" starttime="20200924 10:55:09.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:55:09.568" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 10:55:09.569" starttime="20200924 10:55:09.568"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:09.569" starttime="20200924 10:55:09.567"></status>
</kw>
<msg timestamp="20200924 10:55:09.569" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 10:55:09.569" starttime="20200924 10:55:09.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 10:55:09.570" starttime="20200924 10:55:09.569"></status>
</kw>
<msg timestamp="20200924 10:55:09.570" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 10:55:09.570" starttime="20200924 10:55:09.569"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:09.570" starttime="20200924 10:55:09.566"></status>
</kw>
<msg timestamp="20200924 10:55:09.570" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:55:09.570" starttime="20200924 10:55:09.566"></status>
</kw>
<msg timestamp="20200924 10:55:09.570" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:55:09.570" starttime="20200924 10:55:09.565"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 10:55:09.573" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 10:55:09.573" starttime="20200924 10:55:09.573"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:55:09.573" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 10:55:09.573" starttime="20200924 10:55:09.573"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:09.574" starttime="20200924 10:55:09.572"></status>
</kw>
<msg timestamp="20200924 10:55:09.574" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 10:55:09.574" starttime="20200924 10:55:09.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:55:09.575" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200924 10:55:09.575" starttime="20200924 10:55:09.575"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:55:09.576" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200924 10:55:09.576" starttime="20200924 10:55:09.575"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:09.576" starttime="20200924 10:55:09.574"></status>
</kw>
<msg timestamp="20200924 10:55:09.576" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200924 10:55:09.576" starttime="20200924 10:55:09.574"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:09.576" starttime="20200924 10:55:09.571"></status>
</kw>
<msg timestamp="20200924 10:55:09.576" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200924 10:55:09.576" starttime="20200924 10:55:09.571"></status>
</kw>
<msg timestamp="20200924 10:55:09.577" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200924 10:55:09.577" starttime="20200924 10:55:09.570"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 10:55:09.581" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 10:55:09.581" starttime="20200924 10:55:09.580"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:55:09.581" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 10:55:09.581" starttime="20200924 10:55:09.581"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:09.582" starttime="20200924 10:55:09.580"></status>
</kw>
<msg timestamp="20200924 10:55:09.582" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 10:55:09.582" starttime="20200924 10:55:09.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:55:09.583" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200924 10:55:09.583" starttime="20200924 10:55:09.583"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:55:09.583" level="INFO">${result} = /wordcount-13.txt</msg>
<status status="PASS" endtime="20200924 10:55:09.583" starttime="20200924 10:55:09.583"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:09.584" starttime="20200924 10:55:09.582"></status>
</kw>
<msg timestamp="20200924 10:55:09.584" level="INFO">${path_with_leading} = /wordcount-13.txt</msg>
<status status="PASS" endtime="20200924 10:55:09.584" starttime="20200924 10:55:09.582"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:09.584" starttime="20200924 10:55:09.579"></status>
</kw>
<msg timestamp="20200924 10:55:09.584" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-13.txt</msg>
<status status="PASS" endtime="20200924 10:55:09.584" starttime="20200924 10:55:09.579"></status>
</kw>
<msg timestamp="20200924 10:55:09.584" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-13.txt</msg>
<status status="PASS" endtime="20200924 10:55:09.584" starttime="20200924 10:55:09.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:55:09.587" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-13.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:55:42.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:55:42.846" level="INFO">${output} = 2020-09-24 10:55:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-24 10:55:11 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200924 10:55:42.846" starttime="20200924 10:55:09.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:55:42.847" level="INFO">2020-09-24 10:55:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-24 10:55:11 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 10:55:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:55:11 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-24 10:55:11 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-24 10:55:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:55:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-455D6715EB41-&gt;f629a8e7-eb14-496f-b28f-9582543f0c42
2020-09-24 10:55:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-24 10:55:12 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-24 10:55:12 INFO  JobSubmitter:198 - number of splits:3
2020-09-24 10:55:12 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600944685746_0004
2020-09-24 10:55:13 INFO  YarnClientImpl:273 - Submitted application application_1600944685746_0004
2020-09-24 10:55:13 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600944685746_0004/
2020-09-24 10:55:13 INFO  Job:1339 - Running job: job_1600944685746_0004
2020-09-24 10:55:21 INFO  Job:1360 - Job job_1600944685746_0004 running in uber mode : false
2020-09-24 10:55:21 INFO  Job:1367 -  map 0% reduce 0%
2020-09-24 10:55:27 INFO  Job:1367 -  map 33% reduce 0%
2020-09-24 10:55:32 INFO  Job:1367 -  map 67% reduce 0%
2020-09-24 10:55:36 INFO  Job:1367 -  map 100% reduce 0%
2020-09-24 10:55:39 INFO  Job:1367 -  map 100% reduce 100%
2020-09-24 10:55:42 INFO  Job:1378 - Job job_1600944685746_0004 completed successfully
2020-09-24 10:55:42 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676285
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35004
		Total time spent by all reduces in occupied slots (ms)=13040
		Total time spent by all map tasks (ms)=8751
		Total time spent by all reduce tasks (ms)=3260
		Total vcore-milliseconds taken by all map tasks=8751
		Total vcore-milliseconds taken by all reduce tasks=3260
		Total megabyte-milliseconds taken by all map tasks=35844096
		Total megabyte-milliseconds taken by all reduce tasks=13352960
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=549
		CPU time spent (ms)=5790
		Physical memory (bytes) snapshot=1063194624
		Virtual memory (bytes) snapshot=16008822784
		Total committed heap usage (bytes)=1043333120
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200924 10:55:42.848" starttime="20200924 10:55:42.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:55:42.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:55:42.848" starttime="20200924 10:55:42.848"></status>
</kw>
<status status="PASS" endtime="20200924 10:55:42.848" starttime="20200924 10:55:09.585"></status>
</kw>
<msg timestamp="20200924 10:55:42.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:55:42.849" starttime="20200924 10:55:09.585"></status>
</kw>
<msg timestamp="20200924 10:55:42.849" level="INFO">${output} = 2020-09-24 10:55:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-24 10:55:11 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200924 10:55:42.849" starttime="20200924 10:55:09.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200924 10:55:42.850" starttime="20200924 10:55:42.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 10:55:42.850" starttime="20200924 10:55:42.850"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 10:55:42.850" critical="yes" starttime="20200924 10:55:09.552"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200924 10:55:42.851" starttime="20200924 10:54:34.413"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:53:07.521" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:53:07.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:53:07.528" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:53:07.528" starttime="20200924 10:53:07.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:53:07.528" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:53:07.528" starttime="20200924 10:53:07.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:53:07.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:53:07.529" starttime="20200924 10:53:07.529"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:07.529" starttime="20200924 10:53:07.517"></status>
</kw>
<msg timestamp="20200924 10:53:07.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:53:07.529" starttime="20200924 10:53:07.517"></status>
</kw>
<msg timestamp="20200924 10:53:07.530" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:53:07.530" starttime="20200924 10:53:07.517"></status>
</kw>
<msg timestamp="20200924 10:53:07.530" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:53:07.530" starttime="20200924 10:53:07.516"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:53:07.533" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:53:07.533" starttime="20200924 10:53:07.532"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:53:07.533" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:53:07.533" starttime="20200924 10:53:07.533"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:07.534" starttime="20200924 10:53:07.532"></status>
</kw>
<msg timestamp="20200924 10:53:07.534" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:53:07.534" starttime="20200924 10:53:07.531"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:07.534" starttime="20200924 10:53:07.531"></status>
</kw>
<msg timestamp="20200924 10:53:07.534" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:53:07.534" starttime="20200924 10:53:07.530"></status>
</kw>
<msg timestamp="20200924 10:53:07.534" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:53:07.534" starttime="20200924 10:53:07.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:53:07.537" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:53:42.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:53:42.449" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:53:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:53:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200924 10:53:42.449" starttime="20200924 10:53:07.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:53:42.451" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:53:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:53:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-24 10:53:09 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-24 10:53:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:53:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-731A30C09A83-&gt;f629a8e7-eb14-496f-b28f-9582543f0c42
2020-09-24 10:53:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-24 10:53:10 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-24 10:53:10 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-24 10:53:10 INFO  JobSubmitter:198 - number of splits:3
2020-09-24 10:53:11 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600944685746_0001
2020-09-24 10:53:11 INFO  YarnClientImpl:273 - Submitted application application_1600944685746_0001
2020-09-24 10:53:11 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600944685746_0001/
2020-09-24 10:53:11 INFO  Job:1339 - Running job: job_1600944685746_0001
2020-09-24 10:53:20 INFO  Job:1360 - Job job_1600944685746_0001 running in uber mode : false
2020-09-24 10:53:20 INFO  Job:1367 -  map 0% reduce 0%
2020-09-24 10:53:26 INFO  Job:1367 -  map 33% reduce 0%
2020-09-24 10:53:31 INFO  Job:1367 -  map 67% reduce 0%
2020-09-24 10:53:35 INFO  Job:1367 -  map 100% reduce 0%
2020-09-24 10:53:38 INFO  Job:1367 -  map 100% reduce 100%
2020-09-24 10:53:41 INFO  Job:1378 - Job job_1600944685746_0001 completed successfully
2020-09-24 10:53:41 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=613745
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35100
		Total time spent by all reduces in occupied slots (ms)=13360
		Total time spent by all map tasks (ms)=8775
		Total time spent by all reduce tasks (ms)=3340
		Total vcore-milliseconds taken by all map tasks=8775
		Total vcore-milliseconds taken by all reduce tasks=3340
		Total megabyte-milliseconds taken by all map tasks=35942400
		Total megabyte-milliseconds taken by all reduce tasks=13680640
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=567
		CPU time spent (ms)=5590
		Physical memory (bytes) snapshot=1080729600
		Virtual memory (bytes) snapshot=16025088000
		Total committed heap usage (bytes)=1042284544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.487 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200924 10:53:42.451" starttime="20200924 10:53:42.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:53:42.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:53:42.452" starttime="20200924 10:53:42.451"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:42.452" starttime="20200924 10:53:07.535"></status>
</kw>
<msg timestamp="20200924 10:53:42.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:53:42.452" starttime="20200924 10:53:07.535"></status>
</kw>
<msg timestamp="20200924 10:53:42.453" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:53:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:53:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200924 10:53:42.453" starttime="20200924 10:53:07.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 10:53:42.453" starttime="20200924 10:53:42.453"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 10:53:42.453" critical="yes" starttime="20200924 10:53:07.516"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:53:42.458" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:53:42.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:53:42.463" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:53:42.463" starttime="20200924 10:53:42.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:53:42.464" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:53:42.464" starttime="20200924 10:53:42.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:53:42.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:53:42.465" starttime="20200924 10:53:42.464"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:42.465" starttime="20200924 10:53:42.456"></status>
</kw>
<msg timestamp="20200924 10:53:42.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:53:42.465" starttime="20200924 10:53:42.455"></status>
</kw>
<msg timestamp="20200924 10:53:42.465" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:53:42.465" starttime="20200924 10:53:42.455"></status>
</kw>
<msg timestamp="20200924 10:53:42.465" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200924 10:53:42.465" starttime="20200924 10:53:42.455"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 10:53:42.466" level="INFO">${random} = 83</msg>
<status status="PASS" endtime="20200924 10:53:42.466" starttime="20200924 10:53:42.466"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:53:42.469" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:53:42.469" starttime="20200924 10:53:42.469"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:53:42.470" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:53:42.470" starttime="20200924 10:53:42.469"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:42.470" starttime="20200924 10:53:42.468"></status>
</kw>
<msg timestamp="20200924 10:53:42.470" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:53:42.470" starttime="20200924 10:53:42.468"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:42.470" starttime="20200924 10:53:42.467"></status>
</kw>
<msg timestamp="20200924 10:53:42.470" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:53:42.470" starttime="20200924 10:53:42.467"></status>
</kw>
<msg timestamp="20200924 10:53:42.470" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:53:42.470" starttime="20200924 10:53:42.466"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:53:42.473" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:53:42.473" starttime="20200924 10:53:42.472"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:53:42.473" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:53:42.473" starttime="20200924 10:53:42.473"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:42.473" starttime="20200924 10:53:42.472"></status>
</kw>
<msg timestamp="20200924 10:53:42.473" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:53:42.473" starttime="20200924 10:53:42.472"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:42.474" starttime="20200924 10:53:42.471"></status>
</kw>
<msg timestamp="20200924 10:53:42.474" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200924 10:53:42.474" starttime="20200924 10:53:42.471"></status>
</kw>
<msg timestamp="20200924 10:53:42.474" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200924 10:53:42.474" starttime="20200924 10:53:42.470"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:53:42.476" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:53:42.476" starttime="20200924 10:53:42.476"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:53:42.477" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:53:42.477" starttime="20200924 10:53:42.476"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:42.477" starttime="20200924 10:53:42.476"></status>
</kw>
<msg timestamp="20200924 10:53:42.477" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:53:42.477" starttime="20200924 10:53:42.475"></status>
</kw>
<status status="PASS" endtime="20200924 10:53:42.477" starttime="20200924 10:53:42.475"></status>
</kw>
<msg timestamp="20200924 10:53:42.477" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-83.txt</msg>
<status status="PASS" endtime="20200924 10:53:42.477" starttime="20200924 10:53:42.474"></status>
</kw>
<msg timestamp="20200924 10:53:42.477" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-83.txt</msg>
<status status="PASS" endtime="20200924 10:53:42.477" starttime="20200924 10:53:42.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:53:42.481" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-83.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:54:21.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:54:21.002" level="INFO">${output} = 2020-09-24 10:53:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-24 10:53:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200924 10:54:21.002" starttime="20200924 10:53:42.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:54:21.003" level="INFO">2020-09-24 10:53:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-24 10:53:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 10:53:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:53:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-24 10:53:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-24 10:53:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:53:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C137E5B12BE2-&gt;f629a8e7-eb14-496f-b28f-9582543f0c42
2020-09-24 10:53:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-24 10:53:45 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-24 10:53:45 INFO  JobSubmitter:198 - number of splits:3
2020-09-24 10:53:45 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600944685746_0002
2020-09-24 10:53:46 INFO  YarnClientImpl:273 - Submitted application application_1600944685746_0002
2020-09-24 10:53:46 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600944685746_0002/
2020-09-24 10:53:46 INFO  Job:1339 - Running job: job_1600944685746_0002
2020-09-24 10:53:54 INFO  Job:1360 - Job job_1600944685746_0002 running in uber mode : false
2020-09-24 10:53:54 INFO  Job:1367 -  map 0% reduce 0%
2020-09-24 10:54:00 INFO  Job:1367 -  map 33% reduce 0%
2020-09-24 10:54:05 INFO  Job:1367 -  map 67% reduce 0%
2020-09-24 10:54:10 INFO  Job:1367 -  map 100% reduce 0%
2020-09-24 10:54:14 INFO  Job:1367 -  map 100% reduce 100%
2020-09-24 10:54:20 INFO  Job:1378 - Job job_1600944685746_0002 completed successfully
2020-09-24 10:54:20 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37356
		Total time spent by all reduces in occupied slots (ms)=12820
		Total time spent by all map tasks (ms)=9339
		Total time spent by all reduce tasks (ms)=3205
		Total vcore-milliseconds taken by all map tasks=9339
		Total vcore-milliseconds taken by all reduce tasks=3205
		Total megabyte-milliseconds taken by all map tasks=38252544
		Total megabyte-milliseconds taken by all reduce tasks=13127680
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=611
		CPU time spent (ms)=6770
		Physical memory (bytes) snapshot=1137930240
		Virtual memory (bytes) snapshot=16072777728
		Total committed heap usage (bytes)=1063256064
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200924 10:54:21.003" starttime="20200924 10:54:21.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:54:21.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:54:21.004" starttime="20200924 10:54:21.003"></status>
</kw>
<status status="PASS" endtime="20200924 10:54:21.004" starttime="20200924 10:53:42.478"></status>
</kw>
<msg timestamp="20200924 10:54:21.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:54:21.004" starttime="20200924 10:53:42.478"></status>
</kw>
<msg timestamp="20200924 10:54:21.005" level="INFO">${output} = 2020-09-24 10:53:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-09-24 10:53:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200924 10:54:21.005" starttime="20200924 10:53:42.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200924 10:54:21.005" starttime="20200924 10:54:21.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 10:54:21.006" starttime="20200924 10:54:21.005"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 10:54:21.006" critical="yes" starttime="20200924 10:53:42.454"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200924 10:54:21.007" starttime="20200924 10:53:07.471"></status>
</suite>
<status status="PASS" elapsedtime="176936" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:18.172" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:20.188" level="INFO">${rc} = 255</msg>
<msg timestamp="20200924 10:57:20.188" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200924 10:57:20.188" starttime="20200924 10:57:18.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:20.189" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200924 10:57:20.189" starttime="20200924 10:57:20.188"></status>
</kw>
<msg timestamp="20200924 10:57:20.189" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200924 10:57:20.189" starttime="20200924 10:57:18.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:20.194" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:22.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:22.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:57:22.019" starttime="20200924 10:57:20.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:22.020" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:57:22.020" starttime="20200924 10:57:22.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:22.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:22.021" starttime="20200924 10:57:22.020"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:22.021" starttime="20200924 10:57:20.191"></status>
</kw>
<msg timestamp="20200924 10:57:22.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:22.021" starttime="20200924 10:57:20.191"></status>
</kw>
<msg timestamp="20200924 10:57:22.021" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200924 10:57:22.021" starttime="20200924 10:57:20.190"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200924 10:57:22.022" starttime="20200924 10:57:22.021"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:22.022" starttime="20200924 10:57:20.190"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:22.022" starttime="20200924 10:57:20.190"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:22.026" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:23.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:23.812" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:57:23.812" starttime="20200924 10:57:22.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:23.813" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:57:23.813" starttime="20200924 10:57:23.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:23.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:23.814" starttime="20200924 10:57:23.813"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:23.814" starttime="20200924 10:57:22.024"></status>
</kw>
<msg timestamp="20200924 10:57:23.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:23.814" starttime="20200924 10:57:22.023"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:23.814" starttime="20200924 10:57:22.023"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:23.815" starttime="20200924 10:57:22.022"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:23.815" starttime="20200924 10:57:22.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200924 10:57:23.815" starttime="20200924 10:57:23.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:23.820" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:25.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:25.780" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-24T10:57:23.780Z",
  "modificat...</msg>
<status status="PASS" endtime="20200924 10:57:25.780" starttime="20200924 10:57:23.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:25.781" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-24T10:57:23.780Z",
  "modificationTime" : "2020-09-24T10:57:23.780Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200924 10:57:25.781" starttime="20200924 10:57:25.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:25.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:25.782" starttime="20200924 10:57:25.782"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:25.782" starttime="20200924 10:57:23.816"></status>
</kw>
<msg timestamp="20200924 10:57:25.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:25.783" starttime="20200924 10:57:23.816"></status>
</kw>
<msg timestamp="20200924 10:57:25.783" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-24T10:57:23.780Z",
  "modificat...</msg>
<status status="PASS" endtime="20200924 10:57:25.783" starttime="20200924 10:57:23.815"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200924 10:57:25.783" starttime="20200924 10:57:25.783"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:57:25.787" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:57:25.787" starttime="20200924 10:57:25.786"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:57:25.787" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:57:25.787" starttime="20200924 10:57:25.787"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:25.788" starttime="20200924 10:57:25.786"></status>
</kw>
<msg timestamp="20200924 10:57:25.788" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:57:25.788" starttime="20200924 10:57:25.786"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:25.788" starttime="20200924 10:57:25.785"></status>
</kw>
<msg timestamp="20200924 10:57:25.788" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200924 10:57:25.788" starttime="20200924 10:57:25.784"></status>
</kw>
<msg timestamp="20200924 10:57:25.788" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200924 10:57:25.788" starttime="20200924 10:57:25.783"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:25.792" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:27.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:27.696" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:57:27.696" starttime="20200924 10:57:25.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:27.697" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:57:27.697" starttime="20200924 10:57:27.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:27.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:27.698" starttime="20200924 10:57:27.697"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:27.698" starttime="20200924 10:57:25.789"></status>
</kw>
<msg timestamp="20200924 10:57:27.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:27.698" starttime="20200924 10:57:25.789"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:27.698" starttime="20200924 10:57:25.788"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:27.702" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:32.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:32.387" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:57:32.388" starttime="20200924 10:57:27.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:32.389" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:57:32.389" starttime="20200924 10:57:32.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:32.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:32.389" starttime="20200924 10:57:32.389"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:32.390" starttime="20200924 10:57:27.699"></status>
</kw>
<msg timestamp="20200924 10:57:32.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:32.390" starttime="20200924 10:57:27.699"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:32.390" starttime="20200924 10:57:27.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:32.394" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:35.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:35.980" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:57:35.980" starttime="20200924 10:57:32.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:35.982" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:57:35.982" starttime="20200924 10:57:35.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:35.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:35.982" starttime="20200924 10:57:35.982"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:35.983" starttime="20200924 10:57:32.391"></status>
</kw>
<msg timestamp="20200924 10:57:35.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:35.983" starttime="20200924 10:57:32.391"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:35.983" starttime="20200924 10:57:32.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:35.988" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:39.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:39.466" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:57:39.466" starttime="20200924 10:57:35.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:39.468" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:57:39.468" starttime="20200924 10:57:39.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:39.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:39.468" starttime="20200924 10:57:39.468"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:39.468" starttime="20200924 10:57:35.984"></status>
</kw>
<msg timestamp="20200924 10:57:39.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:39.469" starttime="20200924 10:57:35.984"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:39.469" starttime="20200924 10:57:35.983"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200924 10:57:39.469" critical="yes" starttime="20200924 10:57:18.165"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:57:39.473" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:57:39.473" starttime="20200924 10:57:39.473"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:57:39.474" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:57:39.474" starttime="20200924 10:57:39.473"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:39.474" starttime="20200924 10:57:39.472"></status>
</kw>
<msg timestamp="20200924 10:57:39.474" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:57:39.474" starttime="20200924 10:57:39.472"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:39.474" starttime="20200924 10:57:39.471"></status>
</kw>
<msg timestamp="20200924 10:57:39.474" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 10:57:39.474" starttime="20200924 10:57:39.471"></status>
</kw>
<msg timestamp="20200924 10:57:39.474" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 10:57:39.474" starttime="20200924 10:57:39.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:39.477" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:41.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:41.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:57:41.524" starttime="20200924 10:57:39.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:41.525" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:57:41.525" starttime="20200924 10:57:41.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:41.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:41.526" starttime="20200924 10:57:41.526"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:41.526" starttime="20200924 10:57:39.475"></status>
</kw>
<msg timestamp="20200924 10:57:41.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:41.527" starttime="20200924 10:57:39.475"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:41.527" starttime="20200924 10:57:39.475"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:41.530" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:43.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:43.540" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:57:43.540" starttime="20200924 10:57:41.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:43.541" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:57:43.541" starttime="20200924 10:57:43.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:43.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:43.542" starttime="20200924 10:57:43.542"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:43.542" starttime="20200924 10:57:41.528"></status>
</kw>
<msg timestamp="20200924 10:57:43.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:43.543" starttime="20200924 10:57:41.527"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:43.543" starttime="20200924 10:57:41.527"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200924 10:57:43.543" critical="yes" starttime="20200924 10:57:39.470"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200924 10:57:43.544" starttime="20200924 10:57:18.116"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 10:59:15.087" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 10:59:15.087" starttime="20200924 10:59:15.086"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:59:15.087" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 10:59:15.087" starttime="20200924 10:59:15.087"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:15.087" starttime="20200924 10:59:15.086"></status>
</kw>
<msg timestamp="20200924 10:59:15.087" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 10:59:15.088" starttime="20200924 10:59:15.086"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 10:59:15.088" starttime="20200924 10:59:15.088"></status>
</kw>
<msg timestamp="20200924 10:59:15.089" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 10:59:15.089" starttime="20200924 10:59:15.088"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:15.089" starttime="20200924 10:59:15.085"></status>
</kw>
<msg timestamp="20200924 10:59:15.089" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:59:15.089" starttime="20200924 10:59:15.085"></status>
</kw>
<msg timestamp="20200924 10:59:15.089" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:59:15.089" starttime="20200924 10:59:15.083"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 10:59:15.090" level="INFO">${random} = 16070</msg>
<status status="PASS" endtime="20200924 10:59:15.090" starttime="20200924 10:59:15.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:59:15.095" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-16070 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:59:18.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:59:18.215" level="INFO">${output} = 2020-09-24 10:59:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 10:59:18.215" starttime="20200924 10:59:15.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:59:18.216" level="INFO">2020-09-24 10:59:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:16 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-24 10:59:16 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:59:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 10:59:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 10:59:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:59:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DBA376EFADB8-&gt;46946d02-6bff-4290-8014-97c49d9dba0f
2020-09-24 10:59:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-24 10:59:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200924 10:59:18.216" starttime="20200924 10:59:18.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:59:18.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:59:18.217" starttime="20200924 10:59:18.216"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:18.217" starttime="20200924 10:59:15.090"></status>
</kw>
<msg timestamp="20200924 10:59:18.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:59:18.217" starttime="20200924 10:59:15.090"></status>
</kw>
<msg timestamp="20200924 10:59:18.217" level="INFO">${result} = 2020-09-24 10:59:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:16 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 10:59:18.217" starttime="20200924 10:59:15.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:59:18.221" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:59:19.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:59:19.728" level="INFO">${output} = 2020-09-24 10:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 10:59:19.728" starttime="20200924 10:59:18.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:59:19.729" level="INFO">2020-09-24 10:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:19 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-24 10:57 ofs://om/volume1/bucket1/ozone-00233
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-24 10:59 ofs://om/volume1/bucket1/ozone-16070
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:57 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:58 ofs://om/volume1/bucket1/wordcount-66.txt
2020-09-24 10:59:19 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200924 10:59:19.729" starttime="20200924 10:59:19.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:59:19.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:59:19.730" starttime="20200924 10:59:19.729"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:19.730" starttime="20200924 10:59:18.218"></status>
</kw>
<msg timestamp="20200924 10:59:19.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:59:19.730" starttime="20200924 10:59:18.218"></status>
</kw>
<msg timestamp="20200924 10:59:19.730" level="INFO">${result} = 2020-09-24 10:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 10:59:19.730" starttime="20200924 10:59:18.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200924 10:59:19.731" starttime="20200924 10:59:19.730"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200924 10:59:19.731" critical="yes" starttime="20200924 10:59:15.083"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200924 10:59:19.732" starttime="20200924 10:59:15.039"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:57:47.930" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:57:47.930" starttime="20200924 10:57:47.929"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:57:47.930" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:57:47.930" starttime="20200924 10:57:47.930"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:47.930" starttime="20200924 10:57:47.929"></status>
</kw>
<msg timestamp="20200924 10:57:47.930" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:57:47.930" starttime="20200924 10:57:47.928"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:47.931" starttime="20200924 10:57:47.928"></status>
</kw>
<msg timestamp="20200924 10:57:47.931" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:57:47.931" starttime="20200924 10:57:47.927"></status>
</kw>
<msg timestamp="20200924 10:57:47.931" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:57:47.931" starttime="20200924 10:57:47.926"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 10:57:47.931" level="INFO">${random} = 00233</msg>
<status status="PASS" endtime="20200924 10:57:47.931" starttime="20200924 10:57:47.931"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:47.937" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-00233 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:51.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:51.210" level="INFO">${output} = 2020-09-24 10:57:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 10:57:51.210" starttime="20200924 10:57:47.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:51.211" level="INFO">2020-09-24 10:57:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:49 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-24 10:57:49 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:57:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 10:57:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 10:57:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:57:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3A5C3DDAFD73-&gt;46946d02-6bff-4290-8014-97c49d9dba0f
2020-09-24 10:57:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-24 10:57:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200924 10:57:51.211" starttime="20200924 10:57:51.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:51.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:51.212" starttime="20200924 10:57:51.211"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:51.212" starttime="20200924 10:57:47.932"></status>
</kw>
<msg timestamp="20200924 10:57:51.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:51.212" starttime="20200924 10:57:47.932"></status>
</kw>
<msg timestamp="20200924 10:57:51.212" level="INFO">${result} = 2020-09-24 10:57:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 10:57:51.212" starttime="20200924 10:57:47.931"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:51.216" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:52.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:52.863" level="INFO">${output} = 2020-09-24 10:57:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 10:57:52.863" starttime="20200924 10:57:51.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:52.864" level="INFO">2020-09-24 10:57:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:52 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-24 10:57 o3fs://bucket1.volume1.om/ozone-00233
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 10:57 o3fs://bucket1.volume1.om/user
2020-09-24 10:57:52 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200924 10:57:52.864" starttime="20200924 10:57:52.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:52.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:52.865" starttime="20200924 10:57:52.864"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:52.865" starttime="20200924 10:57:51.213"></status>
</kw>
<msg timestamp="20200924 10:57:52.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:52.865" starttime="20200924 10:57:51.213"></status>
</kw>
<msg timestamp="20200924 10:57:52.865" level="INFO">${result} = 2020-09-24 10:57:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 10:57:52.865" starttime="20200924 10:57:51.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200924 10:57:52.866" starttime="20200924 10:57:52.865"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200924 10:57:52.866" critical="yes" starttime="20200924 10:57:47.926"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200924 10:57:52.867" starttime="20200924 10:57:47.878"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:59:24.054" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:59:24.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:59:24.059" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:59:24.059" starttime="20200924 10:59:24.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:59:24.060" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:59:24.060" starttime="20200924 10:59:24.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:59:24.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:59:24.061" starttime="20200924 10:59:24.060"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:24.061" starttime="20200924 10:59:24.049"></status>
</kw>
<msg timestamp="20200924 10:59:24.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:59:24.061" starttime="20200924 10:59:24.048"></status>
</kw>
<msg timestamp="20200924 10:59:24.061" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:59:24.061" starttime="20200924 10:59:24.048"></status>
</kw>
<msg timestamp="20200924 10:59:24.062" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:59:24.062" starttime="20200924 10:59:24.048"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 10:59:24.065" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 10:59:24.065" starttime="20200924 10:59:24.064"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:59:24.066" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 10:59:24.066" starttime="20200924 10:59:24.065"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:24.066" starttime="20200924 10:59:24.064"></status>
</kw>
<msg timestamp="20200924 10:59:24.066" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 10:59:24.066" starttime="20200924 10:59:24.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 10:59:24.067" starttime="20200924 10:59:24.066"></status>
</kw>
<msg timestamp="20200924 10:59:24.067" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 10:59:24.067" starttime="20200924 10:59:24.066"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:24.067" starttime="20200924 10:59:24.063"></status>
</kw>
<msg timestamp="20200924 10:59:24.067" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:59:24.067" starttime="20200924 10:59:24.062"></status>
</kw>
<msg timestamp="20200924 10:59:24.067" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:59:24.067" starttime="20200924 10:59:24.062"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:59:24.070" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:59:56.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:59:56.919" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59...</msg>
<status status="PASS" endtime="20200924 10:59:56.919" starttime="20200924 10:59:24.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:59:56.920" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:25 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-24 10:59:25 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:59:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 10:59:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 10:59:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:59:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-67EDA874D3AC-&gt;46946d02-6bff-4290-8014-97c49d9dba0f
2020-09-24 10:59:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-24 10:59:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-09-24 10:59:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 10:59:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:27 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 10:59:27 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 10:59:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600944983441_0003
2020-09-24 10:59:27 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-24 10:59:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:27 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 10:59:27 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-24 10:59:28 INFO  YarnClientImpl:324 - Submitted application application_1600944983441_0003
2020-09-24 10:59:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600944983441_0003/
2020-09-24 10:59:28 INFO  Job:1619 - Running job: job_1600944983441_0003
2020-09-24 10:59:35 INFO  Job:1640 - Job job_1600944983441_0003 running in uber mode : false
2020-09-24 10:59:35 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 10:59:41 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 10:59:46 INFO  Job:1647 -  map 67% reduce 0%
2020-09-24 10:59:51 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 10:59:55 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 10:59:56 INFO  Job:1658 - Job job_1600944983441_0003 completed successfully
2020-09-24 10:59:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:56 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1019437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36332
		Total time spent by all reduces in occupied slots (ms)=13752
		Total time spent by all map tasks (ms)=9083
		Total time spent by all reduce tasks (ms)=3438
		Total vcore-milliseconds taken by all map tasks=9083
		Total vcore-milliseconds taken by all reduce tasks=3438
		Total megabyte-milliseconds taken by all map tasks=37203968
		Total megabyte-milliseconds taken by all reduce tasks=14082048
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=586
		CPU time spent (ms)=5790
		Physical memory (bytes) snapshot=1131859968
		Virtual memory (bytes) snapshot=16041885696
		Total committed heap usage (bytes)=1024983040
		Peak Map Physical memory (bytes)=287719424
		Peak Map Virtual memory (bytes)=4010176512
		Peak Reduce Physical memory (bytes)=294313984
		Peak Reduce Virtual memory (bytes)=4030357504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.486 seconds
2020-09-24 10:59:56 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-09-24 10:59:56 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200924 10:59:56.920" starttime="20200924 10:59:56.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:59:56.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:59:56.920" starttime="20200924 10:59:56.920"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:56.921" starttime="20200924 10:59:24.068"></status>
</kw>
<msg timestamp="20200924 10:59:56.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:59:56.921" starttime="20200924 10:59:24.068"></status>
</kw>
<msg timestamp="20200924 10:59:56.921" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59...</msg>
<status status="PASS" endtime="20200924 10:59:56.921" starttime="20200924 10:59:24.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 10:59:56.922" starttime="20200924 10:59:56.922"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 10:59:56.922" critical="yes" starttime="20200924 10:59:24.047"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:59:56.927" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:59:56.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:59:56.932" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:59:56.932" starttime="20200924 10:59:56.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:59:56.933" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:59:56.933" starttime="20200924 10:59:56.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:59:56.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:59:56.934" starttime="20200924 10:59:56.934"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:56.934" starttime="20200924 10:59:56.925"></status>
</kw>
<msg timestamp="20200924 10:59:56.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:59:56.934" starttime="20200924 10:59:56.924"></status>
</kw>
<msg timestamp="20200924 10:59:56.935" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:59:56.935" starttime="20200924 10:59:56.924"></status>
</kw>
<msg timestamp="20200924 10:59:56.935" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:59:56.935" starttime="20200924 10:59:56.924"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 10:59:56.935" level="INFO">${random} = 28</msg>
<status status="PASS" endtime="20200924 10:59:56.935" starttime="20200924 10:59:56.935"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 10:59:56.938" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 10:59:56.938" starttime="20200924 10:59:56.938"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:59:56.939" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 10:59:56.939" starttime="20200924 10:59:56.938"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:56.939" starttime="20200924 10:59:56.938"></status>
</kw>
<msg timestamp="20200924 10:59:56.939" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 10:59:56.939" starttime="20200924 10:59:56.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 10:59:56.940" starttime="20200924 10:59:56.939"></status>
</kw>
<msg timestamp="20200924 10:59:56.940" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 10:59:56.940" starttime="20200924 10:59:56.939"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:56.940" starttime="20200924 10:59:56.936"></status>
</kw>
<msg timestamp="20200924 10:59:56.940" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:59:56.940" starttime="20200924 10:59:56.936"></status>
</kw>
<msg timestamp="20200924 10:59:56.940" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 10:59:56.940" starttime="20200924 10:59:56.935"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 10:59:56.943" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 10:59:56.943" starttime="20200924 10:59:56.943"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:59:56.944" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 10:59:56.944" starttime="20200924 10:59:56.943"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:56.944" starttime="20200924 10:59:56.942"></status>
</kw>
<msg timestamp="20200924 10:59:56.944" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 10:59:56.944" starttime="20200924 10:59:56.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:59:56.945" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200924 10:59:56.945" starttime="20200924 10:59:56.945"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:59:56.946" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200924 10:59:56.946" starttime="20200924 10:59:56.945"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:56.946" starttime="20200924 10:59:56.944"></status>
</kw>
<msg timestamp="20200924 10:59:56.946" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200924 10:59:56.946" starttime="20200924 10:59:56.944"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:56.946" starttime="20200924 10:59:56.942"></status>
</kw>
<msg timestamp="20200924 10:59:56.946" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200924 10:59:56.946" starttime="20200924 10:59:56.941"></status>
</kw>
<msg timestamp="20200924 10:59:56.946" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200924 10:59:56.946" starttime="20200924 10:59:56.940"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 10:59:56.949" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 10:59:56.949" starttime="20200924 10:59:56.948"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:59:56.950" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 10:59:56.950" starttime="20200924 10:59:56.949"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:56.950" starttime="20200924 10:59:56.948"></status>
</kw>
<msg timestamp="20200924 10:59:56.950" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 10:59:56.950" starttime="20200924 10:59:56.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:59:56.951" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200924 10:59:56.951" starttime="20200924 10:59:56.951"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:59:56.952" level="INFO">${result} = /wordcount-28.txt</msg>
<status status="PASS" endtime="20200924 10:59:56.952" starttime="20200924 10:59:56.951"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:56.952" starttime="20200924 10:59:56.950"></status>
</kw>
<msg timestamp="20200924 10:59:56.952" level="INFO">${path_with_leading} = /wordcount-28.txt</msg>
<status status="PASS" endtime="20200924 10:59:56.952" starttime="20200924 10:59:56.950"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:56.952" starttime="20200924 10:59:56.947"></status>
</kw>
<msg timestamp="20200924 10:59:56.952" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-28.txt</msg>
<status status="PASS" endtime="20200924 10:59:56.952" starttime="20200924 10:59:56.947"></status>
</kw>
<msg timestamp="20200924 10:59:56.952" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-28.txt</msg>
<status status="PASS" endtime="20200924 10:59:56.952" starttime="20200924 10:59:56.946"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:59:56.956" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-28.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:00:33.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:00:33.756" level="INFO">${output} = 2020-09-24 10:59:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 11:00:33.756" starttime="20200924 10:59:56.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:00:33.757" level="INFO">2020-09-24 10:59:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-09-24 10:59:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 10:59:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:59 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-24 10:59:59 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:59:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 10:59:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 10:59:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:59:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E1460071E7FC-&gt;46946d02-6bff-4290-8014-97c49d9dba0f
2020-09-24 10:59:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-24 11:00:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 11:00:00 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 11:00:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600944983441_0004
2020-09-24 11:00:00 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-24 11:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 11:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 11:00:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 11:00:00 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 11:00:00 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-24 11:00:00 INFO  YarnClientImpl:324 - Submitted application application_1600944983441_0004
2020-09-24 11:00:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600944983441_0004/
2020-09-24 11:00:00 INFO  Job:1619 - Running job: job_1600944983441_0004
2020-09-24 11:00:08 INFO  Job:1640 - Job job_1600944983441_0004 running in uber mode : false
2020-09-24 11:00:08 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 11:00:14 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 11:00:19 INFO  Job:1647 -  map 67% reduce 0%
2020-09-24 11:00:23 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 11:00:30 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 11:00:33 INFO  Job:1658 - Job job_1600944983441_0004 completed successfully
2020-09-24 11:00:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 11:00:33 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082117
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35604
		Total time spent by all reduces in occupied slots (ms)=23444
		Total time spent by all map tasks (ms)=8901
		Total time spent by all reduce tasks (ms)=5861
		Total vcore-milliseconds taken by all map tasks=8901
		Total vcore-milliseconds taken by all reduce tasks=5861
		Total megabyte-milliseconds taken by all map tasks=36458496
		Total megabyte-milliseconds taken by all reduce tasks=24006656
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=560
		CPU time spent (ms)=6370
		Physical memory (bytes) snapshot=1150562304
		Virtual memory (bytes) snapshot=16054407168
		Total committed heap usage (bytes)=1139802112
		Peak Map Physical memory (bytes)=295636992
		Peak Map Virtual memory (bytes)=4014669824
		Peak Reduce Physical memory (bytes)=299655168
		Peak Reduce Virtual memory (bytes)=4038160384
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-09-24 11:00:33 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200924 11:00:33.757" starttime="20200924 11:00:33.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:00:33.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:00:33.758" starttime="20200924 11:00:33.757"></status>
</kw>
<status status="PASS" endtime="20200924 11:00:33.758" starttime="20200924 10:59:56.953"></status>
</kw>
<msg timestamp="20200924 11:00:33.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:00:33.758" starttime="20200924 10:59:56.953"></status>
</kw>
<msg timestamp="20200924 11:00:33.759" level="INFO">${output} = 2020-09-24 10:59:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 11:00:33.759" starttime="20200924 10:59:56.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200924 11:00:33.759" starttime="20200924 11:00:33.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 11:00:33.760" starttime="20200924 11:00:33.759"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 11:00:33.760" critical="yes" starttime="20200924 10:59:56.923"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200924 11:00:33.761" starttime="20200924 10:59:24.000"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:57.201" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:57:57.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:57:57.207" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:57:57.207" starttime="20200924 10:57:57.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:57:57.208" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:57:57.208" starttime="20200924 10:57:57.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:57:57.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:57:57.209" starttime="20200924 10:57:57.208"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:57.209" starttime="20200924 10:57:57.197"></status>
</kw>
<msg timestamp="20200924 10:57:57.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:57:57.209" starttime="20200924 10:57:57.197"></status>
</kw>
<msg timestamp="20200924 10:57:57.209" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:57:57.209" starttime="20200924 10:57:57.197"></status>
</kw>
<msg timestamp="20200924 10:57:57.209" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:57:57.209" starttime="20200924 10:57:57.197"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:57:57.212" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:57:57.212" starttime="20200924 10:57:57.211"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:57:57.212" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:57:57.212" starttime="20200924 10:57:57.212"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:57.212" starttime="20200924 10:57:57.211"></status>
</kw>
<msg timestamp="20200924 10:57:57.212" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:57:57.212" starttime="20200924 10:57:57.211"></status>
</kw>
<status status="PASS" endtime="20200924 10:57:57.213" starttime="20200924 10:57:57.210"></status>
</kw>
<msg timestamp="20200924 10:57:57.213" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:57:57.213" starttime="20200924 10:57:57.210"></status>
</kw>
<msg timestamp="20200924 10:57:57.213" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:57:57.213" starttime="20200924 10:57:57.209"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:57:57.216" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:58:35.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:58:35.545" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:57:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57...</msg>
<status status="PASS" endtime="20200924 10:58:35.545" starttime="20200924 10:57:57.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:58:35.546" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:57:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:58 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-24 10:57:58 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:57:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 10:57:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 10:57:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:57:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0B4031859968-&gt;46946d02-6bff-4290-8014-97c49d9dba0f
2020-09-24 10:57:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-24 10:58:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-09-24 10:58:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 10:58:00 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 10:58:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600944983441_0001
2020-09-24 10:58:01 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-24 10:58:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:01 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 10:58:01 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-24 10:58:01 INFO  YarnClientImpl:324 - Submitted application application_1600944983441_0001
2020-09-24 10:58:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600944983441_0001/
2020-09-24 10:58:01 INFO  Job:1619 - Running job: job_1600944983441_0001
2020-09-24 10:58:11 INFO  Job:1640 - Job job_1600944983441_0001 running in uber mode : false
2020-09-24 10:58:11 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 10:58:17 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 10:58:22 INFO  Job:1647 -  map 67% reduce 0%
2020-09-24 10:58:27 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 10:58:31 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 10:58:34 INFO  Job:1658 - Job job_1600944983441_0001 completed successfully
2020-09-24 10:58:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:34 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1019649
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36644
		Total time spent by all reduces in occupied slots (ms)=14128
		Total time spent by all map tasks (ms)=9161
		Total time spent by all reduce tasks (ms)=3532
		Total vcore-milliseconds taken by all map tasks=9161
		Total vcore-milliseconds taken by all reduce tasks=3532
		Total megabyte-milliseconds taken by all map tasks=37523456
		Total megabyte-milliseconds taken by all reduce tasks=14467072
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=571
		CPU time spent (ms)=6110
		Physical memory (bytes) snapshot=1246195712
		Virtual memory (bytes) snapshot=16069095424
		Total committed heap usage (bytes)=1092091904
		Peak Map Physical memory (bytes)=291385344
		Peak Map Virtual memory (bytes)=4011393024
		Peak Reduce Physical memory (bytes)=377466880
		Peak Reduce Virtual memory (bytes)=4036386816
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.883 seconds
2020-09-24 10:58:34 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-09-24 10:58:35 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200924 10:58:35.547" starttime="20200924 10:58:35.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:58:35.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:58:35.547" starttime="20200924 10:58:35.547"></status>
</kw>
<status status="PASS" endtime="20200924 10:58:35.548" starttime="20200924 10:57:57.213"></status>
</kw>
<msg timestamp="20200924 10:58:35.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:58:35.548" starttime="20200924 10:57:57.213"></status>
</kw>
<msg timestamp="20200924 10:58:35.548" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 10:57:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:57...</msg>
<status status="PASS" endtime="20200924 10:58:35.548" starttime="20200924 10:57:57.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 10:58:35.549" starttime="20200924 10:58:35.548"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 10:58:35.549" critical="yes" starttime="20200924 10:57:57.196"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:58:35.553" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:58:35.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:58:35.560" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:58:35.560" starttime="20200924 10:58:35.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:58:35.561" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:58:35.561" starttime="20200924 10:58:35.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:58:35.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:58:35.562" starttime="20200924 10:58:35.561"></status>
</kw>
<status status="PASS" endtime="20200924 10:58:35.562" starttime="20200924 10:58:35.551"></status>
</kw>
<msg timestamp="20200924 10:58:35.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:58:35.562" starttime="20200924 10:58:35.551"></status>
</kw>
<msg timestamp="20200924 10:58:35.562" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:58:35.563" starttime="20200924 10:58:35.551"></status>
</kw>
<msg timestamp="20200924 10:58:35.563" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200924 10:58:35.563" starttime="20200924 10:58:35.550"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 10:58:35.563" level="INFO">${random} = 66</msg>
<status status="PASS" endtime="20200924 10:58:35.563" starttime="20200924 10:58:35.563"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:58:35.566" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:58:35.566" starttime="20200924 10:58:35.566"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:58:35.567" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:58:35.567" starttime="20200924 10:58:35.567"></status>
</kw>
<status status="PASS" endtime="20200924 10:58:35.567" starttime="20200924 10:58:35.566"></status>
</kw>
<msg timestamp="20200924 10:58:35.567" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:58:35.567" starttime="20200924 10:58:35.565"></status>
</kw>
<status status="PASS" endtime="20200924 10:58:35.567" starttime="20200924 10:58:35.565"></status>
</kw>
<msg timestamp="20200924 10:58:35.568" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:58:35.568" starttime="20200924 10:58:35.564"></status>
</kw>
<msg timestamp="20200924 10:58:35.568" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 10:58:35.568" starttime="20200924 10:58:35.563"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:58:35.571" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:58:35.571" starttime="20200924 10:58:35.570"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:58:35.571" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:58:35.571" starttime="20200924 10:58:35.571"></status>
</kw>
<status status="PASS" endtime="20200924 10:58:35.571" starttime="20200924 10:58:35.570"></status>
</kw>
<msg timestamp="20200924 10:58:35.571" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:58:35.571" starttime="20200924 10:58:35.569"></status>
</kw>
<status status="PASS" endtime="20200924 10:58:35.572" starttime="20200924 10:58:35.569"></status>
</kw>
<msg timestamp="20200924 10:58:35.572" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200924 10:58:35.572" starttime="20200924 10:58:35.568"></status>
</kw>
<msg timestamp="20200924 10:58:35.572" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200924 10:58:35.572" starttime="20200924 10:58:35.568"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 10:58:35.574" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 10:58:35.574" starttime="20200924 10:58:35.574"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 10:58:35.575" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 10:58:35.575" starttime="20200924 10:58:35.575"></status>
</kw>
<status status="PASS" endtime="20200924 10:58:35.575" starttime="20200924 10:58:35.574"></status>
</kw>
<msg timestamp="20200924 10:58:35.575" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 10:58:35.575" starttime="20200924 10:58:35.573"></status>
</kw>
<status status="PASS" endtime="20200924 10:58:35.575" starttime="20200924 10:58:35.573"></status>
</kw>
<msg timestamp="20200924 10:58:35.576" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-66.txt</msg>
<status status="PASS" endtime="20200924 10:58:35.576" starttime="20200924 10:58:35.572"></status>
</kw>
<msg timestamp="20200924 10:58:35.576" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-66.txt</msg>
<status status="PASS" endtime="20200924 10:58:35.576" starttime="20200924 10:58:35.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:58:35.581" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-66.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:59:10.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:59:10.692" level="INFO">${output} = 2020-09-24 10:58:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 10:59:10.692" starttime="20200924 10:58:35.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:59:10.693" level="INFO">2020-09-24 10:58:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.4:8032
2020-09-24 10:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 10:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:37 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-24 10:58:37 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-24 10:58:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 10:58:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 10:58:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 10:58:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AEEE8EB88172-&gt;46946d02-6bff-4290-8014-97c49d9dba0f
2020-09-24 10:58:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-24 10:58:41 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 10:58:41 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 10:58:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600944983441_0002
2020-09-24 10:58:41 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-24 10:58:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:41 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 10:58:41 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-24 10:58:41 INFO  YarnClientImpl:324 - Submitted application application_1600944983441_0002
2020-09-24 10:58:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600944983441_0002/
2020-09-24 10:58:41 INFO  Job:1619 - Running job: job_1600944983441_0002
2020-09-24 10:58:49 INFO  Job:1640 - Job job_1600944983441_0002 running in uber mode : false
2020-09-24 10:58:49 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 10:58:55 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 10:59:00 INFO  Job:1647 -  map 67% reduce 0%
2020-09-24 10:59:05 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 10:59:09 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 10:59:10 INFO  Job:1658 - Job job_1600944983441_0002 completed successfully
2020-09-24 10:59:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:59:10 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082201
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36488
		Total time spent by all reduces in occupied slots (ms)=13848
		Total time spent by all map tasks (ms)=9122
		Total time spent by all reduce tasks (ms)=3462
		Total vcore-milliseconds taken by all map tasks=9122
		Total vcore-milliseconds taken by all reduce tasks=3462
		Total megabyte-milliseconds taken by all map tasks=37363712
		Total megabyte-milliseconds taken by all reduce tasks=14180352
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=594
		CPU time spent (ms)=6480
		Physical memory (bytes) snapshot=1241063424
		Virtual memory (bytes) snapshot=16070561792
		Total committed heap usage (bytes)=1172307968
		Peak Map Physical memory (bytes)=289505280
		Peak Map Virtual memory (bytes)=4015534080
		Peak Reduce Physical memory (bytes)=374333440
		Peak Reduce Virtual memory (bytes)=4031602688
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-09-24 10:59:10 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200924 10:59:10.693" starttime="20200924 10:59:10.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:59:10.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:59:10.694" starttime="20200924 10:59:10.693"></status>
</kw>
<status status="PASS" endtime="20200924 10:59:10.694" starttime="20200924 10:58:35.577"></status>
</kw>
<msg timestamp="20200924 10:59:10.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:59:10.694" starttime="20200924 10:58:35.576"></status>
</kw>
<msg timestamp="20200924 10:59:10.695" level="INFO">${output} = 2020-09-24 10:58:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-24 10:58:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200924 10:59:10.695" starttime="20200924 10:58:35.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200924 10:59:10.695" starttime="20200924 10:59:10.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 10:59:10.696" starttime="20200924 10:59:10.695"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 10:59:10.696" critical="yes" starttime="20200924 10:58:35.550"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200924 10:59:10.697" starttime="20200924 10:57:57.155"></status>
</suite>
<status status="PASS" elapsedtime="178413" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:01:46.674" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:01:50.411" level="INFO">${rc} = 255</msg>
<msg timestamp="20200924 11:01:50.411" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200924 11:01:50.411" starttime="20200924 11:01:46.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:01:50.412" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200924 11:01:50.412" starttime="20200924 11:01:50.411"></status>
</kw>
<msg timestamp="20200924 11:01:50.413" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200924 11:01:50.413" starttime="20200924 11:01:46.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:01:50.421" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:01:53.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:01:53.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 11:01:53.376" starttime="20200924 11:01:50.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:01:53.377" level="INFO"></msg>
<status status="PASS" endtime="20200924 11:01:53.377" starttime="20200924 11:01:53.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:01:53.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:01:53.378" starttime="20200924 11:01:53.378"></status>
</kw>
<status status="PASS" endtime="20200924 11:01:53.378" starttime="20200924 11:01:50.414"></status>
</kw>
<msg timestamp="20200924 11:01:53.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:01:53.379" starttime="20200924 11:01:50.414"></status>
</kw>
<msg timestamp="20200924 11:01:53.379" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200924 11:01:53.379" starttime="20200924 11:01:50.414"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200924 11:01:53.379" starttime="20200924 11:01:53.379"></status>
</kw>
<status status="PASS" endtime="20200924 11:01:53.380" starttime="20200924 11:01:50.413"></status>
</kw>
<status status="PASS" endtime="20200924 11:01:53.380" starttime="20200924 11:01:50.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:01:53.384" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:01:56.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:01:56.099" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 11:01:56.099" starttime="20200924 11:01:53.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:01:56.100" level="INFO"></msg>
<status status="PASS" endtime="20200924 11:01:56.100" starttime="20200924 11:01:56.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:01:56.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:01:56.101" starttime="20200924 11:01:56.101"></status>
</kw>
<status status="PASS" endtime="20200924 11:01:56.101" starttime="20200924 11:01:53.381"></status>
</kw>
<msg timestamp="20200924 11:01:56.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:01:56.102" starttime="20200924 11:01:53.381"></status>
</kw>
<status status="PASS" endtime="20200924 11:01:56.102" starttime="20200924 11:01:53.381"></status>
</kw>
<status status="PASS" endtime="20200924 11:01:56.102" starttime="20200924 11:01:53.380"></status>
</kw>
<status status="PASS" endtime="20200924 11:01:56.102" starttime="20200924 11:01:53.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200924 11:01:56.102" starttime="20200924 11:01:56.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:01:56.106" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:01:59.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:01:59.087" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-24T11:01:55.905Z",
  "modificat...</msg>
<status status="PASS" endtime="20200924 11:01:59.087" starttime="20200924 11:01:56.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:01:59.088" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-24T11:01:55.905Z",
  "modificationTime" : "2020-09-24T11:01:55.905Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200924 11:01:59.088" starttime="20200924 11:01:59.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:01:59.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:01:59.089" starttime="20200924 11:01:59.088"></status>
</kw>
<status status="PASS" endtime="20200924 11:01:59.089" starttime="20200924 11:01:56.104"></status>
</kw>
<msg timestamp="20200924 11:01:59.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:01:59.089" starttime="20200924 11:01:56.103"></status>
</kw>
<msg timestamp="20200924 11:01:59.089" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-24T11:01:55.905Z",
  "modificat...</msg>
<status status="PASS" endtime="20200924 11:01:59.089" starttime="20200924 11:01:56.103"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200924 11:01:59.090" starttime="20200924 11:01:59.090"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:01:59.094" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:01:59.094" starttime="20200924 11:01:59.093"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:01:59.094" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:01:59.094" starttime="20200924 11:01:59.094"></status>
</kw>
<status status="PASS" endtime="20200924 11:01:59.094" starttime="20200924 11:01:59.093"></status>
</kw>
<msg timestamp="20200924 11:01:59.094" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:01:59.094" starttime="20200924 11:01:59.092"></status>
</kw>
<status status="PASS" endtime="20200924 11:01:59.095" starttime="20200924 11:01:59.092"></status>
</kw>
<msg timestamp="20200924 11:01:59.095" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200924 11:01:59.095" starttime="20200924 11:01:59.091"></status>
</kw>
<msg timestamp="20200924 11:01:59.095" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200924 11:01:59.095" starttime="20200924 11:01:59.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:01:59.098" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:02:01.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:02:01.959" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 11:02:01.960" starttime="20200924 11:01:59.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:02:01.961" level="INFO"></msg>
<status status="PASS" endtime="20200924 11:02:01.961" starttime="20200924 11:02:01.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:02:01.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:02:01.961" starttime="20200924 11:02:01.961"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:01.962" starttime="20200924 11:01:59.096"></status>
</kw>
<msg timestamp="20200924 11:02:01.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:02:01.962" starttime="20200924 11:01:59.096"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:01.962" starttime="20200924 11:01:59.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:02:01.966" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:02:08.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:02:08.523" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 11:02:08.524" starttime="20200924 11:02:01.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:02:08.525" level="INFO"></msg>
<status status="PASS" endtime="20200924 11:02:08.525" starttime="20200924 11:02:08.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:02:08.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:02:08.525" starttime="20200924 11:02:08.525"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:08.526" starttime="20200924 11:02:01.963"></status>
</kw>
<msg timestamp="20200924 11:02:08.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:02:08.526" starttime="20200924 11:02:01.963"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:08.526" starttime="20200924 11:02:01.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:02:08.530" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:02:13.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:02:13.299" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 11:02:13.299" starttime="20200924 11:02:08.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:02:13.300" level="INFO"></msg>
<status status="PASS" endtime="20200924 11:02:13.300" starttime="20200924 11:02:13.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:02:13.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:02:13.300" starttime="20200924 11:02:13.300"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:13.301" starttime="20200924 11:02:08.527"></status>
</kw>
<msg timestamp="20200924 11:02:13.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:02:13.301" starttime="20200924 11:02:08.527"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:13.301" starttime="20200924 11:02:08.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:02:13.304" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:02:18.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:02:18.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 11:02:18.111" starttime="20200924 11:02:13.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:02:18.112" level="INFO"></msg>
<status status="PASS" endtime="20200924 11:02:18.112" starttime="20200924 11:02:18.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:02:18.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:02:18.113" starttime="20200924 11:02:18.112"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:18.113" starttime="20200924 11:02:13.302"></status>
</kw>
<msg timestamp="20200924 11:02:18.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:02:18.113" starttime="20200924 11:02:13.302"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:18.113" starttime="20200924 11:02:13.301"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200924 11:02:18.113" critical="yes" starttime="20200924 11:01:46.669"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:02:18.118" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:02:18.118" starttime="20200924 11:02:18.118"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:02:18.119" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:02:18.119" starttime="20200924 11:02:18.118"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:18.119" starttime="20200924 11:02:18.117"></status>
</kw>
<msg timestamp="20200924 11:02:18.119" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:02:18.119" starttime="20200924 11:02:18.117"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:18.119" starttime="20200924 11:02:18.116"></status>
</kw>
<msg timestamp="20200924 11:02:18.119" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 11:02:18.119" starttime="20200924 11:02:18.116"></status>
</kw>
<msg timestamp="20200924 11:02:18.120" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 11:02:18.120" starttime="20200924 11:02:18.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:02:18.123" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:02:20.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:02:20.981" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 11:02:20.981" starttime="20200924 11:02:18.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:02:20.982" level="INFO"></msg>
<status status="PASS" endtime="20200924 11:02:20.982" starttime="20200924 11:02:20.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:02:20.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:02:20.983" starttime="20200924 11:02:20.982"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:20.983" starttime="20200924 11:02:18.120"></status>
</kw>
<msg timestamp="20200924 11:02:20.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:02:20.983" starttime="20200924 11:02:18.120"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:20.984" starttime="20200924 11:02:18.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:02:20.987" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:02:23.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:02:23.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 11:02:23.605" starttime="20200924 11:02:20.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:02:23.606" level="INFO"></msg>
<status status="PASS" endtime="20200924 11:02:23.606" starttime="20200924 11:02:23.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:02:23.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:02:23.606" starttime="20200924 11:02:23.606"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:23.606" starttime="20200924 11:02:20.985"></status>
</kw>
<msg timestamp="20200924 11:02:23.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:02:23.607" starttime="20200924 11:02:20.984"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:23.607" starttime="20200924 11:02:20.984"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200924 11:02:23.607" critical="yes" starttime="20200924 11:02:18.114"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200924 11:02:23.608" starttime="20200924 11:01:46.618"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 11:03:57.290" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 11:03:57.290" starttime="20200924 11:03:57.289"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:03:57.290" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 11:03:57.290" starttime="20200924 11:03:57.290"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:57.290" starttime="20200924 11:03:57.288"></status>
</kw>
<msg timestamp="20200924 11:03:57.290" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 11:03:57.290" starttime="20200924 11:03:57.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 11:03:57.291" starttime="20200924 11:03:57.291"></status>
</kw>
<msg timestamp="20200924 11:03:57.291" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 11:03:57.291" starttime="20200924 11:03:57.291"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:57.292" starttime="20200924 11:03:57.287"></status>
</kw>
<msg timestamp="20200924 11:03:57.292" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:03:57.292" starttime="20200924 11:03:57.286"></status>
</kw>
<msg timestamp="20200924 11:03:57.292" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:03:57.292" starttime="20200924 11:03:57.285"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 11:03:57.292" level="INFO">${random} = 83803</msg>
<status status="PASS" endtime="20200924 11:03:57.292" starttime="20200924 11:03:57.292"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:03:57.295" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-83803 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:04:00.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:04:00.467" level="INFO">${output} = 2020-09-24 11:03:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:03:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200924 11:04:00.468" starttime="20200924 11:03:57.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:04:00.468" level="INFO">2020-09-24 11:03:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:03:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:03:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:03:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:03:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F123530A72F6-&gt;dee4df60-49d2-4012-bc56-bb357401a379
2020-09-24 11:03:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200924 11:04:00.469" starttime="20200924 11:04:00.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:04:00.469" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:04:00.469" starttime="20200924 11:04:00.469"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:00.469" starttime="20200924 11:03:57.293"></status>
</kw>
<msg timestamp="20200924 11:04:00.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:04:00.470" starttime="20200924 11:03:57.293"></status>
</kw>
<msg timestamp="20200924 11:04:00.470" level="INFO">${result} = 2020-09-24 11:03:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:03:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200924 11:04:00.470" starttime="20200924 11:03:57.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:04:00.473" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:04:02.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:04:02.211" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:02 ofs://om/volume1/bucket1/ozone-20317
-rw-...</msg>
<status status="PASS" endtime="20200924 11:04:02.211" starttime="20200924 11:04:00.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:04:02.211" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:02 ofs://om/volume1/bucket1/ozone-20317
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:04 ofs://om/volume1/bucket1/ozone-83803
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:02 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:03 ofs://om/volume1/bucket1/wordcount-30.txt</msg>
<status status="PASS" endtime="20200924 11:04:02.212" starttime="20200924 11:04:02.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:04:02.212" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:04:02.212" starttime="20200924 11:04:02.212"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:02.212" starttime="20200924 11:04:00.471"></status>
</kw>
<msg timestamp="20200924 11:04:02.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:04:02.212" starttime="20200924 11:04:00.471"></status>
</kw>
<msg timestamp="20200924 11:04:02.213" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:02 ofs://om/volume1/bucket1/ozone-20317
-rw-...</msg>
<status status="PASS" endtime="20200924 11:04:02.213" starttime="20200924 11:04:00.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200924 11:04:02.213" starttime="20200924 11:04:02.213"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200924 11:04:02.213" critical="yes" starttime="20200924 11:03:57.284"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200924 11:04:02.214" starttime="20200924 11:03:57.246"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:02:27.885" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:02:27.885" starttime="20200924 11:02:27.883"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:02:27.886" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:02:27.886" starttime="20200924 11:02:27.885"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:27.886" starttime="20200924 11:02:27.883"></status>
</kw>
<msg timestamp="20200924 11:02:27.886" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:02:27.886" starttime="20200924 11:02:27.882"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:27.886" starttime="20200924 11:02:27.882"></status>
</kw>
<msg timestamp="20200924 11:02:27.886" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:02:27.886" starttime="20200924 11:02:27.881"></status>
</kw>
<msg timestamp="20200924 11:02:27.886" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:02:27.886" starttime="20200924 11:02:27.881"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 11:02:27.887" level="INFO">${random} = 20317</msg>
<status status="PASS" endtime="20200924 11:02:27.887" starttime="20200924 11:02:27.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:02:27.890" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-20317 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:02:31.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:02:31.271" level="INFO">${output} = 2020-09-24 11:02:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:02:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200924 11:02:31.271" starttime="20200924 11:02:27.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:02:31.272" level="INFO">2020-09-24 11:02:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:02:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:02:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:02:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:02:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D2D09D282D31-&gt;dee4df60-49d2-4012-bc56-bb357401a379
2020-09-24 11:02:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200924 11:02:31.272" starttime="20200924 11:02:31.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:02:31.273" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:02:31.273" starttime="20200924 11:02:31.272"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:31.273" starttime="20200924 11:02:27.888"></status>
</kw>
<msg timestamp="20200924 11:02:31.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:02:31.273" starttime="20200924 11:02:27.888"></status>
</kw>
<msg timestamp="20200924 11:02:31.273" level="INFO">${result} = 2020-09-24 11:02:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:02:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200924 11:02:31.273" starttime="20200924 11:02:27.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:02:31.275" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:02:32.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:02:32.880" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:02 o3fs://bucket1.volume1.om/ozone-20317
dr...</msg>
<status status="PASS" endtime="20200924 11:02:32.880" starttime="20200924 11:02:31.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:02:32.881" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:02 o3fs://bucket1.volume1.om/ozone-20317
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:02 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 11:02:32.881" starttime="20200924 11:02:32.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:02:32.882" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:02:32.882" starttime="20200924 11:02:32.881"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:32.882" starttime="20200924 11:02:31.274"></status>
</kw>
<msg timestamp="20200924 11:02:32.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:02:32.882" starttime="20200924 11:02:31.274"></status>
</kw>
<msg timestamp="20200924 11:02:32.882" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:02 o3fs://bucket1.volume1.om/ozone-20317
dr...</msg>
<status status="PASS" endtime="20200924 11:02:32.882" starttime="20200924 11:02:31.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200924 11:02:32.883" starttime="20200924 11:02:32.882"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200924 11:02:32.883" critical="yes" starttime="20200924 11:02:27.880"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200924 11:02:32.884" starttime="20200924 11:02:27.839"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:04:06.469" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:04:06.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:04:06.477" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:04:06.477" starttime="20200924 11:04:06.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:04:06.477" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:04:06.478" starttime="20200924 11:04:06.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:04:06.478" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:04:06.478" starttime="20200924 11:04:06.478"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:06.478" starttime="20200924 11:04:06.467"></status>
</kw>
<msg timestamp="20200924 11:04:06.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:04:06.478" starttime="20200924 11:04:06.467"></status>
</kw>
<msg timestamp="20200924 11:04:06.479" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:04:06.479" starttime="20200924 11:04:06.466"></status>
</kw>
<msg timestamp="20200924 11:04:06.479" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:04:06.479" starttime="20200924 11:04:06.466"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 11:04:06.481" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 11:04:06.481" starttime="20200924 11:04:06.481"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:04:06.482" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 11:04:06.482" starttime="20200924 11:04:06.481"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:06.482" starttime="20200924 11:04:06.481"></status>
</kw>
<msg timestamp="20200924 11:04:06.482" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 11:04:06.482" starttime="20200924 11:04:06.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 11:04:06.483" starttime="20200924 11:04:06.483"></status>
</kw>
<msg timestamp="20200924 11:04:06.483" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 11:04:06.483" starttime="20200924 11:04:06.482"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:06.483" starttime="20200924 11:04:06.480"></status>
</kw>
<msg timestamp="20200924 11:04:06.483" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:04:06.483" starttime="20200924 11:04:06.479"></status>
</kw>
<msg timestamp="20200924 11:04:06.484" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:04:06.484" starttime="20200924 11:04:06.479"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:04:06.486" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:04:42.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:04:42.105" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:04:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:04:08 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200924 11:04:42.106" starttime="20200924 11:04:06.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:04:42.107" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:04:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:04:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:04:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:04:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:04:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-40C16E12F89E-&gt;dee4df60-49d2-4012-bc56-bb357401a379
2020-09-24 11:04:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-24 11:04:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-24 11:04:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 11:04:10 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 11:04:10 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 11:04:10 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-24 11:04:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600945284406_0003
2020-09-24 11:04:12 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-24 11:04:13 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 11:04:13 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-24 11:04:13 INFO  YarnClientImpl:311 - Submitted application application_1600945284406_0003
2020-09-24 11:04:13 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600945284406_0003/
2020-09-24 11:04:13 INFO  Job:1619 - Running job: job_1600945284406_0003
2020-09-24 11:04:20 INFO  Job:1640 - Job job_1600945284406_0003 running in uber mode : false
2020-09-24 11:04:20 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 11:04:26 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 11:04:31 INFO  Job:1647 -  map 67% reduce 0%
2020-09-24 11:04:36 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 11:04:40 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 11:04:41 INFO  Job:1658 - Job job_1600945284406_0003 completed successfully
2020-09-24 11:04:41 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1042453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38744
		Total time spent by all reduces in occupied slots (ms)=13792
		Total time spent by all map tasks (ms)=9686
		Total time spent by all reduce tasks (ms)=3448
		Total vcore-milliseconds taken by all map tasks=9686
		Total vcore-milliseconds taken by all reduce tasks=3448
		Total megabyte-milliseconds taken by all map tasks=39673856
		Total megabyte-milliseconds taken by all reduce tasks=14123008
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=574
		CPU time spent (ms)=6600
		Physical memory (bytes) snapshot=1426792448
		Virtual memory (bytes) snapshot=16041086976
		Total committed heap usage (bytes)=1667760128
		Peak Map Physical memory (bytes)=357457920
		Peak Map Virtual memory (bytes)=4015267840
		Peak Reduce Physical memory (bytes)=364437504
		Peak Reduce Virtual memory (bytes)=4012396544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.013 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200924 11:04:42.107" starttime="20200924 11:04:42.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:04:42.107" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:04:42.107" starttime="20200924 11:04:42.107"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:42.108" starttime="20200924 11:04:06.484"></status>
</kw>
<msg timestamp="20200924 11:04:42.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:04:42.108" starttime="20200924 11:04:06.484"></status>
</kw>
<msg timestamp="20200924 11:04:42.109" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:04:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:04:08 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200924 11:04:42.109" starttime="20200924 11:04:06.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 11:04:42.109" starttime="20200924 11:04:42.109"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 11:04:42.109" critical="yes" starttime="20200924 11:04:06.465"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:04:42.114" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:04:42.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:04:42.120" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:04:42.120" starttime="20200924 11:04:42.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:04:42.121" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:04:42.121" starttime="20200924 11:04:42.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:04:42.122" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:04:42.122" starttime="20200924 11:04:42.121"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:42.122" starttime="20200924 11:04:42.112"></status>
</kw>
<msg timestamp="20200924 11:04:42.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:04:42.122" starttime="20200924 11:04:42.111"></status>
</kw>
<msg timestamp="20200924 11:04:42.122" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:04:42.122" starttime="20200924 11:04:42.111"></status>
</kw>
<msg timestamp="20200924 11:04:42.123" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:04:42.123" starttime="20200924 11:04:42.110"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 11:04:42.123" level="INFO">${random} = 09</msg>
<status status="PASS" endtime="20200924 11:04:42.123" starttime="20200924 11:04:42.123"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 11:04:42.127" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 11:04:42.127" starttime="20200924 11:04:42.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:04:42.127" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 11:04:42.128" starttime="20200924 11:04:42.127"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:42.128" starttime="20200924 11:04:42.126"></status>
</kw>
<msg timestamp="20200924 11:04:42.128" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 11:04:42.128" starttime="20200924 11:04:42.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 11:04:42.129" starttime="20200924 11:04:42.128"></status>
</kw>
<msg timestamp="20200924 11:04:42.129" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 11:04:42.129" starttime="20200924 11:04:42.128"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:42.129" starttime="20200924 11:04:42.125"></status>
</kw>
<msg timestamp="20200924 11:04:42.129" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:04:42.129" starttime="20200924 11:04:42.124"></status>
</kw>
<msg timestamp="20200924 11:04:42.129" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:04:42.129" starttime="20200924 11:04:42.124"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 11:04:42.133" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 11:04:42.133" starttime="20200924 11:04:42.132"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:04:42.134" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 11:04:42.134" starttime="20200924 11:04:42.133"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:42.134" starttime="20200924 11:04:42.132"></status>
</kw>
<msg timestamp="20200924 11:04:42.134" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 11:04:42.134" starttime="20200924 11:04:42.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:04:42.136" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200924 11:04:42.136" starttime="20200924 11:04:42.135"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:04:42.136" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200924 11:04:42.136" starttime="20200924 11:04:42.136"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:42.137" starttime="20200924 11:04:42.135"></status>
</kw>
<msg timestamp="20200924 11:04:42.137" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200924 11:04:42.137" starttime="20200924 11:04:42.134"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:42.137" starttime="20200924 11:04:42.131"></status>
</kw>
<msg timestamp="20200924 11:04:42.137" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200924 11:04:42.137" starttime="20200924 11:04:42.130"></status>
</kw>
<msg timestamp="20200924 11:04:42.138" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200924 11:04:42.138" starttime="20200924 11:04:42.130"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 11:04:42.140" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 11:04:42.140" starttime="20200924 11:04:42.140"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:04:42.141" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 11:04:42.141" starttime="20200924 11:04:42.141"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:42.141" starttime="20200924 11:04:42.140"></status>
</kw>
<msg timestamp="20200924 11:04:42.141" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 11:04:42.141" starttime="20200924 11:04:42.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:04:42.142" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200924 11:04:42.142" starttime="20200924 11:04:42.142"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:04:42.143" level="INFO">${result} = /wordcount-09.txt</msg>
<status status="PASS" endtime="20200924 11:04:42.143" starttime="20200924 11:04:42.143"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:42.143" starttime="20200924 11:04:42.142"></status>
</kw>
<msg timestamp="20200924 11:04:42.143" level="INFO">${path_with_leading} = /wordcount-09.txt</msg>
<status status="PASS" endtime="20200924 11:04:42.143" starttime="20200924 11:04:42.141"></status>
</kw>
<status status="PASS" endtime="20200924 11:04:42.145" starttime="20200924 11:04:42.139"></status>
</kw>
<msg timestamp="20200924 11:04:42.145" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-09.txt</msg>
<status status="PASS" endtime="20200924 11:04:42.145" starttime="20200924 11:04:42.138"></status>
</kw>
<msg timestamp="20200924 11:04:42.145" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-09.txt</msg>
<status status="PASS" endtime="20200924 11:04:42.145" starttime="20200924 11:04:42.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:04:42.148" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-09.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:05:17.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:05:17.954" level="INFO">${output} = 2020-09-24 11:04:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-24 11:04:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200924 11:05:17.954" starttime="20200924 11:04:42.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:05:17.955" level="INFO">2020-09-24 11:04:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-24 11:04:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 11:04:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:04:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:04:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:04:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:04:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-55E1DA476FF4-&gt;dee4df60-49d2-4012-bc56-bb357401a379
2020-09-24 11:04:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-24 11:04:45 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 11:04:45 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 11:04:45 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-24 11:04:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600945284406_0004
2020-09-24 11:04:45 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-24 11:04:46 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 11:04:46 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-24 11:04:46 INFO  YarnClientImpl:311 - Submitted application application_1600945284406_0004
2020-09-24 11:04:46 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600945284406_0004/
2020-09-24 11:04:46 INFO  Job:1619 - Running job: job_1600945284406_0004
2020-09-24 11:04:54 INFO  Job:1640 - Job job_1600945284406_0004 running in uber mode : false
2020-09-24 11:04:54 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 11:05:00 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 11:05:05 INFO  Job:1647 -  map 67% reduce 0%
2020-09-24 11:05:10 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 11:05:14 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 11:05:17 INFO  Job:1658 - Job job_1600945284406_0004 completed successfully
2020-09-24 11:05:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105133
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36652
		Total time spent by all reduces in occupied slots (ms)=13204
		Total time spent by all map tasks (ms)=9163
		Total time spent by all reduce tasks (ms)=3301
		Total vcore-milliseconds taken by all map tasks=9163
		Total vcore-milliseconds taken by all reduce tasks=3301
		Total megabyte-milliseconds taken by all map tasks=37531648
		Total megabyte-milliseconds taken by all reduce tasks=13520896
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=560
		CPU time spent (ms)=6470
		Physical memory (bytes) snapshot=1363398656
		Virtual memory (bytes) snapshot=16018747392
		Total committed heap usage (bytes)=1577058304
		Peak Map Physical memory (bytes)=352854016
		Peak Map Virtual memory (bytes)=4008013824
		Peak Reduce Physical memory (bytes)=347533312
		Peak Reduce Virtual memory (bytes)=4015558656
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200924 11:05:17.955" starttime="20200924 11:05:17.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:05:17.956" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:05:17.956" starttime="20200924 11:05:17.955"></status>
</kw>
<status status="PASS" endtime="20200924 11:05:17.956" starttime="20200924 11:04:42.146"></status>
</kw>
<msg timestamp="20200924 11:05:17.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:05:17.956" starttime="20200924 11:04:42.146"></status>
</kw>
<msg timestamp="20200924 11:05:17.957" level="INFO">${output} = 2020-09-24 11:04:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-24 11:04:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200924 11:05:17.957" starttime="20200924 11:04:42.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200924 11:05:17.958" starttime="20200924 11:05:17.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 11:05:17.958" starttime="20200924 11:05:17.958"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 11:05:17.958" critical="yes" starttime="20200924 11:04:42.110"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200924 11:05:17.959" starttime="20200924 11:04:06.428"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:02:37.241" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:02:37.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:02:37.247" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:02:37.247" starttime="20200924 11:02:37.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:02:37.248" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:02:37.248" starttime="20200924 11:02:37.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:02:37.248" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:02:37.249" starttime="20200924 11:02:37.248"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:37.249" starttime="20200924 11:02:37.240"></status>
</kw>
<msg timestamp="20200924 11:02:37.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:02:37.249" starttime="20200924 11:02:37.239"></status>
</kw>
<msg timestamp="20200924 11:02:37.249" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:02:37.249" starttime="20200924 11:02:37.239"></status>
</kw>
<msg timestamp="20200924 11:02:37.249" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:02:37.250" starttime="20200924 11:02:37.239"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:02:37.252" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:02:37.253" starttime="20200924 11:02:37.252"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:02:37.253" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:02:37.253" starttime="20200924 11:02:37.253"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:37.253" starttime="20200924 11:02:37.252"></status>
</kw>
<msg timestamp="20200924 11:02:37.253" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:02:37.253" starttime="20200924 11:02:37.251"></status>
</kw>
<status status="PASS" endtime="20200924 11:02:37.254" starttime="20200924 11:02:37.251"></status>
</kw>
<msg timestamp="20200924 11:02:37.254" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:02:37.254" starttime="20200924 11:02:37.250"></status>
</kw>
<msg timestamp="20200924 11:02:37.254" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:02:37.254" starttime="20200924 11:02:37.250"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:02:37.256" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:03:18.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:03:18.089" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:02:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:02:39 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200924 11:03:18.089" starttime="20200924 11:02:37.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:03:18.090" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:02:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:02:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:02:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:02:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:02:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-82EF44A1DDDC-&gt;dee4df60-49d2-4012-bc56-bb357401a379
2020-09-24 11:02:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-24 11:02:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-24 11:02:43 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 11:02:43 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 11:02:43 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-24 11:02:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600945284406_0001
2020-09-24 11:02:43 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-24 11:02:43 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 11:02:43 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-24 11:02:44 INFO  YarnClientImpl:311 - Submitted application application_1600945284406_0001
2020-09-24 11:02:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600945284406_0001/
2020-09-24 11:02:44 INFO  Job:1619 - Running job: job_1600945284406_0001
2020-09-24 11:02:54 INFO  Job:1640 - Job job_1600945284406_0001 running in uber mode : false
2020-09-24 11:02:54 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 11:03:00 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 11:03:06 INFO  Job:1647 -  map 67% reduce 0%
2020-09-24 11:03:11 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 11:03:16 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 11:03:17 INFO  Job:1658 - Job job_1600945284406_0001 completed successfully
2020-09-24 11:03:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1042685
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37412
		Total time spent by all reduces in occupied slots (ms)=13704
		Total time spent by all map tasks (ms)=9353
		Total time spent by all reduce tasks (ms)=3426
		Total vcore-milliseconds taken by all map tasks=9353
		Total vcore-milliseconds taken by all reduce tasks=3426
		Total megabyte-milliseconds taken by all map tasks=38309888
		Total megabyte-milliseconds taken by all reduce tasks=14032896
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=586
		CPU time spent (ms)=6520
		Physical memory (bytes) snapshot=1405988864
		Virtual memory (bytes) snapshot=16055115776
		Total committed heap usage (bytes)=1546125312
		Peak Map Physical memory (bytes)=354926592
		Peak Map Virtual memory (bytes)=4010835968
		Peak Reduce Physical memory (bytes)=360636416
		Peak Reduce Virtual memory (bytes)=4025905152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.883 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200924 11:03:18.090" starttime="20200924 11:03:18.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:03:18.091" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:03:18.091" starttime="20200924 11:03:18.090"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:18.091" starttime="20200924 11:02:37.255"></status>
</kw>
<msg timestamp="20200924 11:03:18.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:03:18.091" starttime="20200924 11:02:37.254"></status>
</kw>
<msg timestamp="20200924 11:03:18.092" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:02:39 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:02:39 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200924 11:03:18.092" starttime="20200924 11:02:37.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 11:03:18.092" starttime="20200924 11:03:18.092"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 11:03:18.092" critical="yes" starttime="20200924 11:02:37.238"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:03:18.095" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:03:18.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:03:18.101" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:03:18.101" starttime="20200924 11:03:18.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:03:18.101" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:03:18.102" starttime="20200924 11:03:18.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:03:18.102" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:03:18.102" starttime="20200924 11:03:18.102"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:18.102" starttime="20200924 11:03:18.094"></status>
</kw>
<msg timestamp="20200924 11:03:18.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:03:18.102" starttime="20200924 11:03:18.093"></status>
</kw>
<msg timestamp="20200924 11:03:18.103" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:03:18.103" starttime="20200924 11:03:18.093"></status>
</kw>
<msg timestamp="20200924 11:03:18.103" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:03:18.103" starttime="20200924 11:03:18.093"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 11:03:18.103" level="INFO">${random} = 30</msg>
<status status="PASS" endtime="20200924 11:03:18.103" starttime="20200924 11:03:18.103"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:03:18.106" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:03:18.107" starttime="20200924 11:03:18.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:03:18.107" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:03:18.107" starttime="20200924 11:03:18.107"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:18.107" starttime="20200924 11:03:18.106"></status>
</kw>
<msg timestamp="20200924 11:03:18.107" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:03:18.107" starttime="20200924 11:03:18.105"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:18.108" starttime="20200924 11:03:18.105"></status>
</kw>
<msg timestamp="20200924 11:03:18.108" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:03:18.108" starttime="20200924 11:03:18.104"></status>
</kw>
<msg timestamp="20200924 11:03:18.108" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:03:18.108" starttime="20200924 11:03:18.103"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:03:18.111" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:03:18.111" starttime="20200924 11:03:18.111"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:03:18.112" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:03:18.112" starttime="20200924 11:03:18.111"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:18.112" starttime="20200924 11:03:18.110"></status>
</kw>
<msg timestamp="20200924 11:03:18.112" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:03:18.112" starttime="20200924 11:03:18.110"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:18.112" starttime="20200924 11:03:18.109"></status>
</kw>
<msg timestamp="20200924 11:03:18.112" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200924 11:03:18.112" starttime="20200924 11:03:18.109"></status>
</kw>
<msg timestamp="20200924 11:03:18.112" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200924 11:03:18.113" starttime="20200924 11:03:18.108"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:03:18.115" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:03:18.115" starttime="20200924 11:03:18.115"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:03:18.116" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:03:18.116" starttime="20200924 11:03:18.115"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:18.116" starttime="20200924 11:03:18.114"></status>
</kw>
<msg timestamp="20200924 11:03:18.116" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:03:18.116" starttime="20200924 11:03:18.114"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:18.116" starttime="20200924 11:03:18.114"></status>
</kw>
<msg timestamp="20200924 11:03:18.116" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-30.txt</msg>
<status status="PASS" endtime="20200924 11:03:18.116" starttime="20200924 11:03:18.113"></status>
</kw>
<msg timestamp="20200924 11:03:18.116" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-30.txt</msg>
<status status="PASS" endtime="20200924 11:03:18.116" starttime="20200924 11:03:18.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:03:18.118" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-30.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:03:52.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:03:52.933" level="INFO">${output} = 2020-09-24 11:03:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-24 11:03:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200924 11:03:52.933" starttime="20200924 11:03:18.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:03:52.934" level="INFO">2020-09-24 11:03:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-24 11:03:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 11:03:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:03:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:03:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:03:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:03:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D99AC88B0862-&gt;dee4df60-49d2-4012-bc56-bb357401a379
2020-09-24 11:03:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-24 11:03:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 11:03:21 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 11:03:21 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-24 11:03:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600945284406_0002
2020-09-24 11:03:21 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-24 11:03:22 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 11:03:22 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-24 11:03:22 INFO  YarnClientImpl:311 - Submitted application application_1600945284406_0002
2020-09-24 11:03:22 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600945284406_0002/
2020-09-24 11:03:22 INFO  Job:1619 - Running job: job_1600945284406_0002
2020-09-24 11:03:30 INFO  Job:1640 - Job job_1600945284406_0002 running in uber mode : false
2020-09-24 11:03:30 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 11:03:36 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 11:03:42 INFO  Job:1647 -  map 67% reduce 0%
2020-09-24 11:03:47 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 11:03:51 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 11:03:52 INFO  Job:1658 - Job job_1600945284406_0002 completed successfully
2020-09-24 11:03:52 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105217
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37420
		Total time spent by all reduces in occupied slots (ms)=13464
		Total time spent by all map tasks (ms)=9355
		Total time spent by all reduce tasks (ms)=3366
		Total vcore-milliseconds taken by all map tasks=9355
		Total vcore-milliseconds taken by all reduce tasks=3366
		Total megabyte-milliseconds taken by all map tasks=38318080
		Total megabyte-milliseconds taken by all reduce tasks=13787136
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=607
		CPU time spent (ms)=6850
		Physical memory (bytes) snapshot=1396543488
		Virtual memory (bytes) snapshot=16047501312
		Total committed heap usage (bytes)=1628962816
		Peak Map Physical memory (bytes)=355192832
		Peak Map Virtual memory (bytes)=4012933120
		Peak Reduce Physical memory (bytes)=352022528
		Peak Reduce Virtual memory (bytes)=4024467456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200924 11:03:52.934" starttime="20200924 11:03:52.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:03:52.935" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:03:52.935" starttime="20200924 11:03:52.935"></status>
</kw>
<status status="PASS" endtime="20200924 11:03:52.935" starttime="20200924 11:03:18.117"></status>
</kw>
<msg timestamp="20200924 11:03:52.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:03:52.936" starttime="20200924 11:03:18.117"></status>
</kw>
<msg timestamp="20200924 11:03:52.936" level="INFO">${output} = 2020-09-24 11:03:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-09-24 11:03:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200924 11:03:52.936" starttime="20200924 11:03:18.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200924 11:03:52.937" starttime="20200924 11:03:52.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 11:03:52.937" starttime="20200924 11:03:52.937"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 11:03:52.938" critical="yes" starttime="20200924 11:03:18.092"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200924 11:03:52.939" starttime="20200924 11:02:37.200"></status>
</suite>
<status status="PASS" elapsedtime="194273" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="549622" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
