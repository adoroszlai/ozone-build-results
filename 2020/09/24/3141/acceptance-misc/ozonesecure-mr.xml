<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200924 11:22:55.414" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:20.300" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:23.974" level="INFO">${rc} = 255</msg>
<msg timestamp="20200924 11:19:23.974" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:23.974" starttime="20200924 11:19:20.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:23.976" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200924 11:19:23.976" starttime="20200924 11:19:23.975"></status>
</kw>
<msg timestamp="20200924 11:19:23.976" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:23.976" starttime="20200924 11:19:20.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:23.983" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:27.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:19:27.480" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:27.480" starttime="20200924 11:19:23.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:27.481" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200924 11:19:27.481" starttime="20200924 11:19:27.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:19:27.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:19:27.481" starttime="20200924 11:19:27.481"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:27.482" starttime="20200924 11:19:23.978"></status>
</kw>
<msg timestamp="20200924 11:19:27.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:19:27.482" starttime="20200924 11:19:23.978"></status>
</kw>
<msg timestamp="20200924 11:19:27.482" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:27.482" starttime="20200924 11:19:23.977"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200924 11:19:27.483" starttime="20200924 11:19:27.482"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:27.483" starttime="20200924 11:19:23.977"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:27.483" starttime="20200924 11:19:23.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:27.488" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:30.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:19:30.825" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:30.825" starttime="20200924 11:19:27.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:30.826" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200924 11:19:30.827" starttime="20200924 11:19:30.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:19:30.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:19:30.828" starttime="20200924 11:19:30.827"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:30.828" starttime="20200924 11:19:27.485"></status>
</kw>
<msg timestamp="20200924 11:19:30.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:19:30.828" starttime="20200924 11:19:27.484"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:30.828" starttime="20200924 11:19:27.484"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:30.828" starttime="20200924 11:19:27.484"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:30.828" starttime="20200924 11:19:27.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200924 11:19:30.829" starttime="20200924 11:19:30.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:30.832" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:33.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:19:33.876" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:33.876" starttime="20200924 11:19:30.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:33.878" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-09-24T11:19:30.638Z",
  "modificationTime" : "2020-09-24T11:19:30.638Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200924 11:19:33.878" starttime="20200924 11:19:33.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:19:33.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:19:33.878" starttime="20200924 11:19:33.878"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:33.878" starttime="20200924 11:19:30.830"></status>
</kw>
<msg timestamp="20200924 11:19:33.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:19:33.879" starttime="20200924 11:19:30.830"></status>
</kw>
<msg timestamp="20200924 11:19:33.879" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:33.879" starttime="20200924 11:19:30.829"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200924 11:19:33.879" starttime="20200924 11:19:33.879"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:19:33.883" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:19:33.883" starttime="20200924 11:19:33.882"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:19:33.883" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:19:33.883" starttime="20200924 11:19:33.883"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:33.884" starttime="20200924 11:19:33.882"></status>
</kw>
<msg timestamp="20200924 11:19:33.884" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:19:33.884" starttime="20200924 11:19:33.881"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:33.884" starttime="20200924 11:19:33.881"></status>
</kw>
<msg timestamp="20200924 11:19:33.884" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200924 11:19:33.884" starttime="20200924 11:19:33.880"></status>
</kw>
<msg timestamp="20200924 11:19:33.884" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200924 11:19:33.884" starttime="20200924 11:19:33.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:33.888" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:37.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:19:37.178" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:37.178" starttime="20200924 11:19:33.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:37.179" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200924 11:19:37.179" starttime="20200924 11:19:37.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:19:37.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:19:37.180" starttime="20200924 11:19:37.179"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:37.180" starttime="20200924 11:19:33.885"></status>
</kw>
<msg timestamp="20200924 11:19:37.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:19:37.180" starttime="20200924 11:19:33.885"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:37.180" starttime="20200924 11:19:33.884"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:37.184" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:44.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:19:44.382" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:44.382" starttime="20200924 11:19:37.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:44.383" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200924 11:19:44.383" starttime="20200924 11:19:44.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:19:44.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:19:44.384" starttime="20200924 11:19:44.383"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:44.384" starttime="20200924 11:19:37.181"></status>
</kw>
<msg timestamp="20200924 11:19:44.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:19:44.384" starttime="20200924 11:19:37.181"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:44.384" starttime="20200924 11:19:37.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:44.388" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:49.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:19:49.321" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:49.321" starttime="20200924 11:19:44.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:49.322" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200924 11:19:49.322" starttime="20200924 11:19:49.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:19:49.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:19:49.322" starttime="20200924 11:19:49.322"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:49.323" starttime="20200924 11:19:44.385"></status>
</kw>
<msg timestamp="20200924 11:19:49.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:19:49.323" starttime="20200924 11:19:44.385"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:49.323" starttime="20200924 11:19:44.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:49.328" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:54.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:19:54.161" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:54.161" starttime="20200924 11:19:49.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:54.162" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200924 11:19:54.162" starttime="20200924 11:19:54.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:19:54.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:19:54.163" starttime="20200924 11:19:54.162"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:54.163" starttime="20200924 11:19:49.324"></status>
</kw>
<msg timestamp="20200924 11:19:54.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:19:54.163" starttime="20200924 11:19:49.324"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:54.164" starttime="20200924 11:19:49.323"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200924 11:19:54.164" critical="yes" starttime="20200924 11:19:20.293"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:19:54.168" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:19:54.168" starttime="20200924 11:19:54.168"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:19:54.169" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:19:54.169" starttime="20200924 11:19:54.168"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:54.169" starttime="20200924 11:19:54.168"></status>
</kw>
<msg timestamp="20200924 11:19:54.169" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:19:54.169" starttime="20200924 11:19:54.167"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:54.169" starttime="20200924 11:19:54.167"></status>
</kw>
<msg timestamp="20200924 11:19:54.169" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 11:19:54.169" starttime="20200924 11:19:54.166"></status>
</kw>
<msg timestamp="20200924 11:19:54.170" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 11:19:54.170" starttime="20200924 11:19:54.165"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:54.173" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:57.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:19:57.150" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:19:57.150" starttime="20200924 11:19:54.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:57.151" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200924 11:19:57.151" starttime="20200924 11:19:57.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:19:57.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:19:57.152" starttime="20200924 11:19:57.152"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:57.152" starttime="20200924 11:19:54.170"></status>
</kw>
<msg timestamp="20200924 11:19:57.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:19:57.152" starttime="20200924 11:19:54.170"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:57.153" starttime="20200924 11:19:54.170"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:57.158" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:20:00.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:20:00.376" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200924 11:20:00.376" starttime="20200924 11:19:57.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:20:00.377" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200924 11:20:00.377" starttime="20200924 11:20:00.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:20:00.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:20:00.378" starttime="20200924 11:20:00.377"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:00.378" starttime="20200924 11:19:57.154"></status>
</kw>
<msg timestamp="20200924 11:20:00.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:20:00.378" starttime="20200924 11:19:57.153"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:00.378" starttime="20200924 11:19:57.153"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200924 11:20:00.378" critical="yes" starttime="20200924 11:19:54.165"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200924 11:20:00.379" starttime="20200924 11:19:20.244"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 11:21:30.146" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 11:21:30.146" starttime="20200924 11:21:30.145"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:21:30.146" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 11:21:30.146" starttime="20200924 11:21:30.146"></status>
</kw>
<status status="PASS" endtime="20200924 11:21:30.147" starttime="20200924 11:21:30.144"></status>
</kw>
<msg timestamp="20200924 11:21:30.147" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 11:21:30.147" starttime="20200924 11:21:30.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 11:21:30.148" starttime="20200924 11:21:30.147"></status>
</kw>
<msg timestamp="20200924 11:21:30.148" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 11:21:30.148" starttime="20200924 11:21:30.147"></status>
</kw>
<status status="PASS" endtime="20200924 11:21:30.148" starttime="20200924 11:21:30.142"></status>
</kw>
<msg timestamp="20200924 11:21:30.148" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:21:30.148" starttime="20200924 11:21:30.142"></status>
</kw>
<msg timestamp="20200924 11:21:30.148" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:21:30.148" starttime="20200924 11:21:30.141"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 11:21:30.149" level="INFO">${random} = 12907</msg>
<status status="PASS" endtime="20200924 11:21:30.149" starttime="20200924 11:21:30.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:21:30.152" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-12907 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:21:33.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:21:33.617" level="INFO">${output} = 2020-09-24 11:21:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:21:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200924 11:21:33.617" starttime="20200924 11:21:30.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:21:33.618" level="INFO">2020-09-24 11:21:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:21:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:21:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:21:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:21:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B629C6A1CD8F-&gt;eb996038-17eb-4e76-b625-940e268c7b4a
2020-09-24 11:21:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200924 11:21:33.618" starttime="20200924 11:21:33.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:21:33.619" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:21:33.619" starttime="20200924 11:21:33.618"></status>
</kw>
<status status="PASS" endtime="20200924 11:21:33.619" starttime="20200924 11:21:30.150"></status>
</kw>
<msg timestamp="20200924 11:21:33.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:21:33.619" starttime="20200924 11:21:30.150"></status>
</kw>
<msg timestamp="20200924 11:21:33.619" level="INFO">${result} = 2020-09-24 11:21:32 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:21:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200924 11:21:33.619" starttime="20200924 11:21:30.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:21:33.622" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:21:35.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:21:35.466" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:21 ofs://om/volume1/bucket1/ozone-12907
-rw-...</msg>
<status status="PASS" endtime="20200924 11:21:35.466" starttime="20200924 11:21:33.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:21:35.467" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:21 ofs://om/volume1/bucket1/ozone-12907
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:20 ofs://om/volume1/bucket1/ozone-75788
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:19 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:21 ofs://om/volume1/bucket1/wordcount-80.txt</msg>
<status status="PASS" endtime="20200924 11:21:35.467" starttime="20200924 11:21:35.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:21:35.468" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:21:35.468" starttime="20200924 11:21:35.468"></status>
</kw>
<status status="PASS" endtime="20200924 11:21:35.468" starttime="20200924 11:21:33.620"></status>
</kw>
<msg timestamp="20200924 11:21:35.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:21:35.468" starttime="20200924 11:21:33.620"></status>
</kw>
<msg timestamp="20200924 11:21:35.469" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:21 ofs://om/volume1/bucket1/ozone-12907
-rw-...</msg>
<status status="PASS" endtime="20200924 11:21:35.469" starttime="20200924 11:21:33.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200924 11:21:35.469" starttime="20200924 11:21:35.469"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200924 11:21:35.470" critical="yes" starttime="20200924 11:21:30.140"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200924 11:21:35.470" starttime="20200924 11:21:30.097"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:20:09.870" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:20:09.870" starttime="20200924 11:20:09.869"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:20:09.871" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:20:09.871" starttime="20200924 11:20:09.870"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:09.871" starttime="20200924 11:20:09.868"></status>
</kw>
<msg timestamp="20200924 11:20:09.871" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:20:09.871" starttime="20200924 11:20:09.868"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:09.871" starttime="20200924 11:20:09.867"></status>
</kw>
<msg timestamp="20200924 11:20:09.871" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:20:09.872" starttime="20200924 11:20:09.867"></status>
</kw>
<msg timestamp="20200924 11:20:09.872" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:20:09.872" starttime="20200924 11:20:09.866"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 11:20:09.872" level="INFO">${random} = 75788</msg>
<status status="PASS" endtime="20200924 11:20:09.872" starttime="20200924 11:20:09.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:20:09.875" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-75788 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:20:13.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:20:13.488" level="INFO">${output} = 2020-09-24 11:20:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:20:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200924 11:20:13.488" starttime="20200924 11:20:09.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:20:13.489" level="INFO">2020-09-24 11:20:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:20:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:20:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:20:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:20:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6B60B30A7018-&gt;eb996038-17eb-4e76-b625-940e268c7b4a
2020-09-24 11:20:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200924 11:20:13.489" starttime="20200924 11:20:13.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:20:13.490" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:20:13.490" starttime="20200924 11:20:13.490"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:13.490" starttime="20200924 11:20:09.873"></status>
</kw>
<msg timestamp="20200924 11:20:13.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:20:13.490" starttime="20200924 11:20:09.873"></status>
</kw>
<msg timestamp="20200924 11:20:13.491" level="INFO">${result} = 2020-09-24 11:20:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:20:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200924 11:20:13.491" starttime="20200924 11:20:09.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:20:13.493" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:20:15.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:20:15.234" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:20 o3fs://bucket1.volume1.om/ozone-75788
dr...</msg>
<status status="PASS" endtime="20200924 11:20:15.234" starttime="20200924 11:20:13.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:20:15.235" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:20 o3fs://bucket1.volume1.om/ozone-75788
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:19 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200924 11:20:15.235" starttime="20200924 11:20:15.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:20:15.236" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:20:15.236" starttime="20200924 11:20:15.236"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:15.236" starttime="20200924 11:20:13.491"></status>
</kw>
<msg timestamp="20200924 11:20:15.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:20:15.236" starttime="20200924 11:20:13.491"></status>
</kw>
<msg timestamp="20200924 11:20:15.237" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-24 11:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-24 11:20 o3fs://bucket1.volume1.om/ozone-75788
dr...</msg>
<status status="PASS" endtime="20200924 11:20:15.237" starttime="20200924 11:20:13.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200924 11:20:15.237" starttime="20200924 11:20:15.237"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200924 11:20:15.237" critical="yes" starttime="20200924 11:20:09.866"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200924 11:20:15.238" starttime="20200924 11:20:09.826"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:20:05.111" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:20:05.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:20:05.114" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20200924 11:20:05.114" starttime="20200924 11:20:05.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:20:05.115" level="INFO">rm</msg>
<status status="PASS" endtime="20200924 11:20:05.115" starttime="20200924 11:20:05.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:20:05.116" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:20:05.116" starttime="20200924 11:20:05.115"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:05.116" starttime="20200924 11:20:05.109"></status>
</kw>
<msg timestamp="20200924 11:20:05.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:20:05.116" starttime="20200924 11:20:05.109"></status>
</kw>
<msg timestamp="20200924 11:20:05.116" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20200924 11:20:05.116" starttime="20200924 11:20:05.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200924 11:20:05.118" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200924 11:20:05.118" starttime="20200924 11:20:05.117"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:20:05.121" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:20:05.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:20:05.134" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 11:20:05.134" starttime="20200924 11:20:05.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:20:05.135" level="INFO"></msg>
<status status="PASS" endtime="20200924 11:20:05.135" starttime="20200924 11:20:05.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:20:05.136" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:20:05.136" starttime="20200924 11:20:05.135"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:05.136" starttime="20200924 11:20:05.119"></status>
</kw>
<msg timestamp="20200924 11:20:05.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:20:05.136" starttime="20200924 11:20:05.119"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:05.136" starttime="20200924 11:20:05.118"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:05.136" starttime="20200924 11:20:05.118"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:05.136" starttime="20200924 11:20:05.108"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200924 11:20:05.137" critical="yes" starttime="20200924 11:20:05.107"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200924 11:20:05.138" starttime="20200924 11:20:05.067"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:15.422" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:15.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:19:15.424" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20200924 11:19:15.424" starttime="20200924 11:19:15.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:15.424" level="INFO">om</msg>
<status status="PASS" endtime="20200924 11:19:15.425" starttime="20200924 11:19:15.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:19:15.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:19:15.425" starttime="20200924 11:19:15.425"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:15.425" starttime="20200924 11:19:15.417"></status>
</kw>
<msg timestamp="20200924 11:19:15.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:19:15.426" starttime="20200924 11:19:15.417"></status>
</kw>
<msg timestamp="20200924 11:19:15.426" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20200924 11:19:15.426" starttime="20200924 11:19:15.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200924 11:19:15.426" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200924 11:19:15.426" starttime="20200924 11:19:15.426"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:19:15.433" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:19:15.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:19:15.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 11:19:15.444" starttime="20200924 11:19:15.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:19:15.445" level="INFO"></msg>
<status status="PASS" endtime="20200924 11:19:15.445" starttime="20200924 11:19:15.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:19:15.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:19:15.445" starttime="20200924 11:19:15.445"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:15.446" starttime="20200924 11:19:15.429"></status>
</kw>
<msg timestamp="20200924 11:19:15.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:19:15.446" starttime="20200924 11:19:15.428"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:15.446" starttime="20200924 11:19:15.427"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:15.446" starttime="20200924 11:19:15.427"></status>
</kw>
<status status="PASS" endtime="20200924 11:19:15.446" starttime="20200924 11:19:15.416"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200924 11:19:15.446" critical="yes" starttime="20200924 11:19:15.415"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200924 11:19:15.447" starttime="20200924 11:19:15.373"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:21:40.151" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:21:40.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:21:40.160" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:21:40.160" starttime="20200924 11:21:40.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:21:40.161" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:21:40.161" starttime="20200924 11:21:40.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:21:40.161" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:21:40.161" starttime="20200924 11:21:40.161"></status>
</kw>
<status status="PASS" endtime="20200924 11:21:40.162" starttime="20200924 11:21:40.150"></status>
</kw>
<msg timestamp="20200924 11:21:40.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:21:40.162" starttime="20200924 11:21:40.149"></status>
</kw>
<msg timestamp="20200924 11:21:40.162" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:21:40.162" starttime="20200924 11:21:40.149"></status>
</kw>
<msg timestamp="20200924 11:21:40.162" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:21:40.162" starttime="20200924 11:21:40.149"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 11:21:40.166" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 11:21:40.166" starttime="20200924 11:21:40.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:21:40.166" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 11:21:40.166" starttime="20200924 11:21:40.166"></status>
</kw>
<status status="PASS" endtime="20200924 11:21:40.166" starttime="20200924 11:21:40.165"></status>
</kw>
<msg timestamp="20200924 11:21:40.166" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 11:21:40.166" starttime="20200924 11:21:40.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 11:21:40.168" starttime="20200924 11:21:40.167"></status>
</kw>
<msg timestamp="20200924 11:21:40.168" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 11:21:40.168" starttime="20200924 11:21:40.167"></status>
</kw>
<status status="PASS" endtime="20200924 11:21:40.168" starttime="20200924 11:21:40.164"></status>
</kw>
<msg timestamp="20200924 11:21:40.168" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:21:40.168" starttime="20200924 11:21:40.163"></status>
</kw>
<msg timestamp="20200924 11:21:40.168" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:21:40.168" starttime="20200924 11:21:40.162"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:21:40.171" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:22:18.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:22:18.619" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:21:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:21:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200924 11:22:18.619" starttime="20200924 11:21:40.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:22:18.620" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:21:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:21:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:21:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:21:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:21:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4826634C1CA1-&gt;eb996038-17eb-4e76-b625-940e268c7b4a
2020-09-24 11:21:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-24 11:21:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-09-24 11:21:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-09-24 11:21:46 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946506407, maxDate=1601551306407, sequenceNumber=3, masterKeyId=2))
2020-09-24 11:21:46 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e4 94 e4 fe cb 2e 38 e4 9c 96 9f ce 2e 40 03 48 01 5a 0d 32 35 33 34 37 31 36 38 30 37 33 33 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-24 11:21:46 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946506407, maxDate=1601551306407, sequenceNumber=3, masterKeyId=2)
2020-09-24 11:21:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 11:21:46 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 11:21:49 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 11:21:49 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-24 11:21:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600946320636_0003
2020-09-24 11:21:49 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e4 94 e4 fe cb 2e 38 e4 9c 96 9f ce 2e 40 03 48 01 5a 0d 32 35 33 34 37 31 36 38 30 37 33 33 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946506407, maxDate=1601551306407, sequenceNumber=3, masterKeyId=2)]
2020-09-24 11:21:49 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 11:21:49 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-24 11:21:49 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-24 11:21:50 INFO  YarnClientImpl:311 - Submitted application application_1600946320636_0003
2020-09-24 11:21:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600946320636_0003/
2020-09-24 11:21:50 INFO  Job:1619 - Running job: job_1600946320636_0003
2020-09-24 11:21:57 INFO  Job:1640 - Job job_1600946320636_0003 running in uber mode : false
2020-09-24 11:21:57 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 11:22:08 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 11:22:09 INFO  Job:1647 -  map 67% reduce 0%
2020-09-24 11:22:10 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 11:22:16 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 11:22:17 INFO  Job:1658 - Job job_1600946320636_0003 completed successfully
2020-09-24 11:22:18 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1051969
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46956
		Total time spent by all reduces in occupied slots (ms)=11974
		Total time spent by all map tasks (ms)=23478
		Total time spent by all reduce tasks (ms)=5987
		Total vcore-milliseconds taken by all map tasks=23478
		Total vcore-milliseconds taken by all reduce tasks=5987
		Total megabyte-milliseconds taken by all map tasks=48082944
		Total megabyte-milliseconds taken by all reduce tasks=12261376
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=955
		CPU time spent (ms)=7420
		Physical memory (bytes) snapshot=1386020864
		Virtual memory (bytes) snapshot=14287454208
		Total committed heap usage (bytes)=1387790336
		Peak Map Physical memory (bytes)=375889920
		Peak Map Virtual memory (bytes)=3575230464
		Peak Reduce Physical memory (bytes)=365162496
		Peak Reduce Virtual memory (bytes)=3569963008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.082 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200924 11:22:18.620" starttime="20200924 11:22:18.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:22:18.620" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:22:18.621" starttime="20200924 11:22:18.620"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:18.621" starttime="20200924 11:21:40.169"></status>
</kw>
<msg timestamp="20200924 11:22:18.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:22:18.621" starttime="20200924 11:21:40.169"></status>
</kw>
<msg timestamp="20200924 11:22:18.622" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:21:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:21:42 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200924 11:22:18.622" starttime="20200924 11:21:40.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 11:22:18.622" starttime="20200924 11:22:18.622"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 11:22:18.622" critical="yes" starttime="20200924 11:21:40.148"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:22:18.627" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:22:18.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:22:18.633" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:22:18.633" starttime="20200924 11:22:18.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:22:18.633" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:22:18.634" starttime="20200924 11:22:18.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:22:18.634" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:22:18.634" starttime="20200924 11:22:18.634"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:18.634" starttime="20200924 11:22:18.625"></status>
</kw>
<msg timestamp="20200924 11:22:18.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:22:18.635" starttime="20200924 11:22:18.624"></status>
</kw>
<msg timestamp="20200924 11:22:18.635" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:22:18.635" starttime="20200924 11:22:18.624"></status>
</kw>
<msg timestamp="20200924 11:22:18.635" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:22:18.635" starttime="20200924 11:22:18.624"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 11:22:18.636" level="INFO">${random} = 61</msg>
<status status="PASS" endtime="20200924 11:22:18.636" starttime="20200924 11:22:18.635"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 11:22:18.639" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 11:22:18.639" starttime="20200924 11:22:18.639"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:22:18.640" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 11:22:18.640" starttime="20200924 11:22:18.639"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:18.640" starttime="20200924 11:22:18.638"></status>
</kw>
<msg timestamp="20200924 11:22:18.640" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 11:22:18.640" starttime="20200924 11:22:18.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200924 11:22:18.641" starttime="20200924 11:22:18.641"></status>
</kw>
<msg timestamp="20200924 11:22:18.641" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200924 11:22:18.641" starttime="20200924 11:22:18.640"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:18.641" starttime="20200924 11:22:18.637"></status>
</kw>
<msg timestamp="20200924 11:22:18.641" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:22:18.641" starttime="20200924 11:22:18.636"></status>
</kw>
<msg timestamp="20200924 11:22:18.642" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200924 11:22:18.642" starttime="20200924 11:22:18.636"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 11:22:18.645" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 11:22:18.645" starttime="20200924 11:22:18.644"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:22:18.645" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 11:22:18.645" starttime="20200924 11:22:18.645"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:18.646" starttime="20200924 11:22:18.644"></status>
</kw>
<msg timestamp="20200924 11:22:18.646" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 11:22:18.646" starttime="20200924 11:22:18.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:22:18.647" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200924 11:22:18.647" starttime="20200924 11:22:18.647"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:22:18.648" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200924 11:22:18.648" starttime="20200924 11:22:18.648"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:18.648" starttime="20200924 11:22:18.646"></status>
</kw>
<msg timestamp="20200924 11:22:18.648" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200924 11:22:18.648" starttime="20200924 11:22:18.646"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:18.649" starttime="20200924 11:22:18.643"></status>
</kw>
<msg timestamp="20200924 11:22:18.649" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200924 11:22:18.649" starttime="20200924 11:22:18.642"></status>
</kw>
<msg timestamp="20200924 11:22:18.649" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200924 11:22:18.649" starttime="20200924 11:22:18.642"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200924 11:22:18.652" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200924 11:22:18.652" starttime="20200924 11:22:18.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:22:18.653" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200924 11:22:18.653" starttime="20200924 11:22:18.652"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:18.653" starttime="20200924 11:22:18.651"></status>
</kw>
<msg timestamp="20200924 11:22:18.653" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200924 11:22:18.653" starttime="20200924 11:22:18.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:22:18.654" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200924 11:22:18.654" starttime="20200924 11:22:18.654"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:22:18.655" level="INFO">${result} = /wordcount-61.txt</msg>
<status status="PASS" endtime="20200924 11:22:18.655" starttime="20200924 11:22:18.655"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:18.655" starttime="20200924 11:22:18.654"></status>
</kw>
<msg timestamp="20200924 11:22:18.655" level="INFO">${path_with_leading} = /wordcount-61.txt</msg>
<status status="PASS" endtime="20200924 11:22:18.655" starttime="20200924 11:22:18.653"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:18.655" starttime="20200924 11:22:18.650"></status>
</kw>
<msg timestamp="20200924 11:22:18.656" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-61.txt</msg>
<status status="PASS" endtime="20200924 11:22:18.656" starttime="20200924 11:22:18.650"></status>
</kw>
<msg timestamp="20200924 11:22:18.656" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-61.txt</msg>
<status status="PASS" endtime="20200924 11:22:18.656" starttime="20200924 11:22:18.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:22:18.659" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:22:47.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:22:47.809" level="INFO">${output} = 2020-09-24 11:22:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-09-24 11:22:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20200924 11:22:47.809" starttime="20200924 11:22:18.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:22:47.810" level="INFO">2020-09-24 11:22:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-09-24 11:22:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-09-24 11:22:20 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946540858, maxDate=1601551340858, sequenceNumber=4, masterKeyId=2))
2020-09-24 11:22:20 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ee a1 e6 fe cb 2e 38 ee a9 98 9f ce 2e 40 04 48 01 5a 0d 32 35 33 34 37 31 36 38 30 37 33 33 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-24 11:22:20 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946540858, maxDate=1601551340858, sequenceNumber=4, masterKeyId=2)
2020-09-24 11:22:21 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 11:22:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:22:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:22:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:22:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:22:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0099B77BE997-&gt;eb996038-17eb-4e76-b625-940e268c7b4a
2020-09-24 11:22:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-24 11:22:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 11:22:22 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 11:22:22 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-24 11:22:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600946320636_0004
2020-09-24 11:22:22 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ee a1 e6 fe cb 2e 38 ee a9 98 9f ce 2e 40 04 48 01 5a 0d 32 35 33 34 37 31 36 38 30 37 33 33 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946540858, maxDate=1601551340858, sequenceNumber=4, masterKeyId=2)]
2020-09-24 11:22:23 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 11:22:23 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-24 11:22:23 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-24 11:22:23 INFO  YarnClientImpl:311 - Submitted application application_1600946320636_0004
2020-09-24 11:22:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600946320636_0004/
2020-09-24 11:22:23 INFO  Job:1619 - Running job: job_1600946320636_0004
2020-09-24 11:22:31 INFO  Job:1640 - Job job_1600946320636_0004 running in uber mode : false
2020-09-24 11:22:31 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 11:22:40 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 11:22:42 INFO  Job:1647 -  map 67% reduce 0%
2020-09-24 11:22:43 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 11:22:46 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 11:22:47 INFO  Job:1658 - Job job_1600946320636_0004 completed successfully
2020-09-24 11:22:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114633
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40594
		Total time spent by all reduces in occupied slots (ms)=6902
		Total time spent by all map tasks (ms)=20297
		Total time spent by all reduce tasks (ms)=3451
		Total vcore-milliseconds taken by all map tasks=20297
		Total vcore-milliseconds taken by all reduce tasks=3451
		Total megabyte-milliseconds taken by all map tasks=41568256
		Total megabyte-milliseconds taken by all reduce tasks=7067648
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1104
		CPU time spent (ms)=7210
		Physical memory (bytes) snapshot=1291145216
		Virtual memory (bytes) snapshot=14291681280
		Total committed heap usage (bytes)=1227882496
		Peak Map Physical memory (bytes)=343302144
		Peak Map Virtual memory (bytes)=3573760000
		Peak Reduce Physical memory (bytes)=370814976
		Peak Reduce Virtual memory (bytes)=3580661760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200924 11:22:47.810" starttime="20200924 11:22:47.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:22:47.811" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:22:47.811" starttime="20200924 11:22:47.810"></status>
</kw>
<status status="PASS" endtime="20200924 11:22:47.811" starttime="20200924 11:22:18.657"></status>
</kw>
<msg timestamp="20200924 11:22:47.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:22:47.811" starttime="20200924 11:22:18.656"></status>
</kw>
<msg timestamp="20200924 11:22:47.812" level="INFO">${output} = 2020-09-24 11:22:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-09-24 11:22:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20200924 11:22:47.812" starttime="20200924 11:22:18.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200924 11:22:47.813" starttime="20200924 11:22:47.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 11:22:47.813" starttime="20200924 11:22:47.813"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 11:22:47.814" critical="yes" starttime="20200924 11:22:18.623"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200924 11:22:47.815" starttime="20200924 11:21:40.108"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:20:19.936" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:20:19.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:20:19.944" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:20:19.944" starttime="20200924 11:20:19.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:20:19.944" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:20:19.944" starttime="20200924 11:20:19.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:20:19.945" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:20:19.945" starttime="20200924 11:20:19.945"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:19.945" starttime="20200924 11:20:19.934"></status>
</kw>
<msg timestamp="20200924 11:20:19.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:20:19.945" starttime="20200924 11:20:19.934"></status>
</kw>
<msg timestamp="20200924 11:20:19.946" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:20:19.946" starttime="20200924 11:20:19.934"></status>
</kw>
<msg timestamp="20200924 11:20:19.946" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:20:19.946" starttime="20200924 11:20:19.933"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:20:19.949" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:20:19.949" starttime="20200924 11:20:19.949"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:20:19.950" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:20:19.950" starttime="20200924 11:20:19.949"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:19.950" starttime="20200924 11:20:19.948"></status>
</kw>
<msg timestamp="20200924 11:20:19.950" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:20:19.950" starttime="20200924 11:20:19.948"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:19.950" starttime="20200924 11:20:19.947"></status>
</kw>
<msg timestamp="20200924 11:20:19.950" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:20:19.950" starttime="20200924 11:20:19.947"></status>
</kw>
<msg timestamp="20200924 11:20:19.950" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:20:19.950" starttime="20200924 11:20:19.946"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:20:19.953" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:20:54.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:20:54.143" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:20:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:20:21 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200924 11:20:54.143" starttime="20200924 11:20:19.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:20:54.144" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:20:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:20:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:20:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:20:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:20:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A3822B0DBB98-&gt;eb996038-17eb-4e76-b625-940e268c7b4a
2020-09-24 11:20:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-24 11:20:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-09-24 11:20:23 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-09-24 11:20:24 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946424076, maxDate=1601551224076, sequenceNumber=1, masterKeyId=2))
2020-09-24 11:20:24 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e7 8f df fe cb 2e 38 e7 97 91 9f ce 2e 40 01 48 01 5a 0d 32 35 33 34 37 31 36 38 30 37 33 33 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-24 11:20:24 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946424076, maxDate=1601551224076, sequenceNumber=1, masterKeyId=2)
2020-09-24 11:20:24 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 11:20:24 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 11:20:24 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-24 11:20:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600946320636_0001
2020-09-24 11:20:24 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e7 8f df fe cb 2e 38 e7 97 91 9f ce 2e 40 01 48 01 5a 0d 32 35 33 34 37 31 36 38 30 37 33 33 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946424076, maxDate=1601551224076, sequenceNumber=1, masterKeyId=2)]
2020-09-24 11:20:25 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 11:20:25 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-24 11:20:25 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-24 11:20:26 INFO  YarnClientImpl:311 - Submitted application application_1600946320636_0001
2020-09-24 11:20:26 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600946320636_0001/
2020-09-24 11:20:26 INFO  Job:1619 - Running job: job_1600946320636_0001
2020-09-24 11:20:37 INFO  Job:1640 - Job job_1600946320636_0001 running in uber mode : false
2020-09-24 11:20:37 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 11:20:46 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 11:20:48 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 11:20:52 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 11:20:53 INFO  Job:1658 - Job job_1600946320636_0001 completed successfully
2020-09-24 11:20:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052189
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40654
		Total time spent by all reduces in occupied slots (ms)=7354
		Total time spent by all map tasks (ms)=20327
		Total time spent by all reduce tasks (ms)=3677
		Total vcore-milliseconds taken by all map tasks=20327
		Total vcore-milliseconds taken by all reduce tasks=3677
		Total megabyte-milliseconds taken by all map tasks=41629696
		Total megabyte-milliseconds taken by all reduce tasks=7530496
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=994
		CPU time spent (ms)=7000
		Physical memory (bytes) snapshot=1293107200
		Virtual memory (bytes) snapshot=14285295616
		Total committed heap usage (bytes)=1204813824
		Peak Map Physical memory (bytes)=338722816
		Peak Map Virtual memory (bytes)=3575078912
		Peak Reduce Physical memory (bytes)=373862400
		Peak Reduce Virtual memory (bytes)=3573735424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.281 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200924 11:20:54.144" starttime="20200924 11:20:54.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:20:54.145" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:20:54.145" starttime="20200924 11:20:54.145"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:54.145" starttime="20200924 11:20:19.951"></status>
</kw>
<msg timestamp="20200924 11:20:54.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:20:54.146" starttime="20200924 11:20:19.951"></status>
</kw>
<msg timestamp="20200924 11:20:54.146" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-24 11:20:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:20:21 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200924 11:20:54.146" starttime="20200924 11:20:19.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 11:20:54.147" starttime="20200924 11:20:54.147"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 11:20:54.147" critical="yes" starttime="20200924 11:20:19.933"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:20:54.151" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:20:54.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:20:54.156" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:20:54.156" starttime="20200924 11:20:54.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:20:54.157" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:20:54.157" starttime="20200924 11:20:54.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:20:54.157" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:20:54.158" starttime="20200924 11:20:54.157"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:54.158" starttime="20200924 11:20:54.149"></status>
</kw>
<msg timestamp="20200924 11:20:54.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:20:54.158" starttime="20200924 11:20:54.148"></status>
</kw>
<msg timestamp="20200924 11:20:54.158" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:20:54.158" starttime="20200924 11:20:54.148"></status>
</kw>
<msg timestamp="20200924 11:20:54.158" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200924 11:20:54.158" starttime="20200924 11:20:54.148"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200924 11:20:54.159" level="INFO">${random} = 80</msg>
<status status="PASS" endtime="20200924 11:20:54.159" starttime="20200924 11:20:54.159"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:20:54.163" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:20:54.163" starttime="20200924 11:20:54.162"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:20:54.163" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:20:54.163" starttime="20200924 11:20:54.163"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:54.164" starttime="20200924 11:20:54.162"></status>
</kw>
<msg timestamp="20200924 11:20:54.164" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:20:54.164" starttime="20200924 11:20:54.162"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:54.164" starttime="20200924 11:20:54.161"></status>
</kw>
<msg timestamp="20200924 11:20:54.164" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:20:54.164" starttime="20200924 11:20:54.160"></status>
</kw>
<msg timestamp="20200924 11:20:54.164" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200924 11:20:54.164" starttime="20200924 11:20:54.160"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:20:54.167" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:20:54.167" starttime="20200924 11:20:54.167"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:20:54.168" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:20:54.168" starttime="20200924 11:20:54.167"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:54.168" starttime="20200924 11:20:54.166"></status>
</kw>
<msg timestamp="20200924 11:20:54.168" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:20:54.168" starttime="20200924 11:20:54.166"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:54.168" starttime="20200924 11:20:54.166"></status>
</kw>
<msg timestamp="20200924 11:20:54.168" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200924 11:20:54.168" starttime="20200924 11:20:54.165"></status>
</kw>
<msg timestamp="20200924 11:20:54.169" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200924 11:20:54.169" starttime="20200924 11:20:54.164"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200924 11:20:54.172" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200924 11:20:54.172" starttime="20200924 11:20:54.172"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200924 11:20:54.173" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200924 11:20:54.173" starttime="20200924 11:20:54.172"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:54.173" starttime="20200924 11:20:54.171"></status>
</kw>
<msg timestamp="20200924 11:20:54.173" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200924 11:20:54.173" starttime="20200924 11:20:54.170"></status>
</kw>
<status status="PASS" endtime="20200924 11:20:54.173" starttime="20200924 11:20:54.170"></status>
</kw>
<msg timestamp="20200924 11:20:54.173" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-80.txt</msg>
<status status="PASS" endtime="20200924 11:20:54.173" starttime="20200924 11:20:54.169"></status>
</kw>
<msg timestamp="20200924 11:20:54.174" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-80.txt</msg>
<status status="PASS" endtime="20200924 11:20:54.174" starttime="20200924 11:20:54.169"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 11:20:54.176" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-80.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 11:21:24.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 11:21:24.658" level="INFO">${output} = 2020-09-24 11:20:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-09-24 11:20:56 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20200924 11:21:24.658" starttime="20200924 11:20:54.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 11:21:24.659" level="INFO">2020-09-24 11:20:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-09-24 11:20:56 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-09-24 11:20:56 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946456365, maxDate=1601551256365, sequenceNumber=2, masterKeyId=2))
2020-09-24 11:20:56 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c1 8d e1 fe cb 2e 38 c1 95 93 9f ce 2e 40 02 48 01 5a 0d 32 35 33 34 37 31 36 38 30 37 33 33 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-24 11:20:56 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946456365, maxDate=1601551256365, sequenceNumber=2, masterKeyId=2)
2020-09-24 11:20:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-24 11:20:56 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-24 11:20:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-24 11:20:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-24 11:20:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-24 11:20:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1CA71DFFBF27-&gt;eb996038-17eb-4e76-b625-940e268c7b4a
2020-09-24 11:20:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-24 11:20:57 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-24 11:20:58 INFO  JobSubmitter:202 - number of splits:3
2020-09-24 11:20:58 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-24 11:20:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600946320636_0002
2020-09-24 11:20:58 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c1 8d e1 fe cb 2e 38 c1 95 93 9f ce 2e 40 02 48 01 5a 0d 32 35 33 34 37 31 36 38 30 37 33 33 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600946456365, maxDate=1601551256365, sequenceNumber=2, masterKeyId=2)]
2020-09-24 11:20:58 INFO  Configuration:2752 - resource-types.xml not found
2020-09-24 11:20:58 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-24 11:20:58 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-24 11:20:59 INFO  YarnClientImpl:311 - Submitted application application_1600946320636_0002
2020-09-24 11:20:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600946320636_0002/
2020-09-24 11:20:59 INFO  Job:1619 - Running job: job_1600946320636_0002
2020-09-24 11:21:08 INFO  Job:1640 - Job job_1600946320636_0002 running in uber mode : false
2020-09-24 11:21:08 INFO  Job:1647 -  map 0% reduce 0%
2020-09-24 11:21:17 INFO  Job:1647 -  map 33% reduce 0%
2020-09-24 11:21:19 INFO  Job:1647 -  map 100% reduce 0%
2020-09-24 11:21:23 INFO  Job:1647 -  map 100% reduce 100%
2020-09-24 11:21:24 INFO  Job:1658 - Job job_1600946320636_0002 completed successfully
2020-09-24 11:21:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41610
		Total time spent by all reduces in occupied slots (ms)=7326
		Total time spent by all map tasks (ms)=20805
		Total time spent by all reduce tasks (ms)=3663
		Total vcore-milliseconds taken by all map tasks=20805
		Total vcore-milliseconds taken by all reduce tasks=3663
		Total megabyte-milliseconds taken by all map tasks=42608640
		Total megabyte-milliseconds taken by all reduce tasks=7501824
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1038
		CPU time spent (ms)=7130
		Physical memory (bytes) snapshot=1301491712
		Virtual memory (bytes) snapshot=14292152320
		Total committed heap usage (bytes)=1274019840
		Peak Map Physical memory (bytes)=345419776
		Peak Map Virtual memory (bytes)=3575492608
		Peak Reduce Physical memory (bytes)=367730688
		Peak Reduce Virtual memory (bytes)=3574972416
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200924 11:21:24.659" starttime="20200924 11:21:24.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 11:21:24.659" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 11:21:24.659" starttime="20200924 11:21:24.659"></status>
</kw>
<status status="PASS" endtime="20200924 11:21:24.660" starttime="20200924 11:20:54.174"></status>
</kw>
<msg timestamp="20200924 11:21:24.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 11:21:24.660" starttime="20200924 11:20:54.174"></status>
</kw>
<msg timestamp="20200924 11:21:24.661" level="INFO">${output} = 2020-09-24 11:20:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-09-24 11:20:56 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20200924 11:21:24.661" starttime="20200924 11:20:54.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200924 11:21:24.661" starttime="20200924 11:21:24.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200924 11:21:24.662" starttime="20200924 11:21:24.661"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200924 11:21:24.662" critical="yes" starttime="20200924 11:20:54.147"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200924 11:21:24.663" starttime="20200924 11:20:19.896"></status>
</suite>
<status status="PASS" elapsedtime="183539" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
