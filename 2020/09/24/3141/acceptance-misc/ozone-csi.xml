<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200924 10:49:44.648" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:49:34.073" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:49:34.075" level="INFO">${rc} = 1</msg>
<msg timestamp="20200924 10:49:34.075" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:49:34.075" starttime="20200924 10:49:34.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:49:34.076" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:49:34.076" starttime="20200924 10:49:34.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:49:34.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200924 10:49:34.077" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200924 10:49:34.077" starttime="20200924 10:49:34.076"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:34.077" starttime="20200924 10:49:34.069"></status>
</kw>
<msg timestamp="20200924 10:49:34.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200924 10:49:34.077" starttime="20200924 10:49:34.069"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:34.077" starttime="20200924 10:49:34.069"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:34.077" starttime="20200924 10:49:34.068"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:49:35.083" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:49:35.085" level="INFO">${rc} = 1</msg>
<msg timestamp="20200924 10:49:35.086" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:49:35.086" starttime="20200924 10:49:35.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:49:35.087" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:49:35.087" starttime="20200924 10:49:35.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:49:35.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200924 10:49:35.089" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200924 10:49:35.089" starttime="20200924 10:49:35.088"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:35.089" starttime="20200924 10:49:35.079"></status>
</kw>
<msg timestamp="20200924 10:49:35.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200924 10:49:35.090" starttime="20200924 10:49:35.079"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:35.090" starttime="20200924 10:49:35.078"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:35.090" starttime="20200924 10:49:35.078"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:49:36.095" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:49:36.097" level="INFO">${rc} = 1</msg>
<msg timestamp="20200924 10:49:36.097" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:49:36.097" starttime="20200924 10:49:36.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:49:36.099" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:49:36.099" starttime="20200924 10:49:36.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:49:36.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200924 10:49:36.100" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200924 10:49:36.101" starttime="20200924 10:49:36.099"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:36.101" starttime="20200924 10:49:36.093"></status>
</kw>
<msg timestamp="20200924 10:49:36.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200924 10:49:36.101" starttime="20200924 10:49:36.092"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:36.102" starttime="20200924 10:49:36.092"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:36.102" starttime="20200924 10:49:36.091"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:49:37.117" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:49:37.119" level="INFO">${rc} = 1</msg>
<msg timestamp="20200924 10:49:37.123" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:49:37.124" starttime="20200924 10:49:37.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:49:37.124" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:49:37.124" starttime="20200924 10:49:37.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:49:37.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200924 10:49:37.126" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200924 10:49:37.126" starttime="20200924 10:49:37.125"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:37.126" starttime="20200924 10:49:37.108"></status>
</kw>
<msg timestamp="20200924 10:49:37.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200924 10:49:37.126" starttime="20200924 10:49:37.105"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:37.126" starttime="20200924 10:49:37.104"></status>
</kw>
<status status="FAIL" endtime="20200924 10:49:37.126" starttime="20200924 10:49:37.104"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:49:38.131" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:49:38.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:49:38.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200924 10:49:38.133" starttime="20200924 10:49:38.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:49:38.134" level="INFO"></msg>
<status status="PASS" endtime="20200924 10:49:38.134" starttime="20200924 10:49:38.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:49:38.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:49:38.134" starttime="20200924 10:49:38.134"></status>
</kw>
<status status="PASS" endtime="20200924 10:49:38.134" starttime="20200924 10:49:38.129"></status>
</kw>
<msg timestamp="20200924 10:49:38.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:49:38.135" starttime="20200924 10:49:38.128"></status>
</kw>
<status status="PASS" endtime="20200924 10:49:38.135" starttime="20200924 10:49:38.128"></status>
</kw>
<status status="PASS" endtime="20200924 10:49:38.135" starttime="20200924 10:49:38.127"></status>
</kw>
<status status="PASS" endtime="20200924 10:49:38.135" starttime="20200924 10:49:34.068"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20200924 10:49:38.135" critical="yes" starttime="20200924 10:49:34.067"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200924 10:49:38.140" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20200924 10:49:38.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200924 10:49:38.462" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20200924 10:49:38.462" starttime="20200924 10:49:38.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200924 10:49:38.463" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20200924 10:49:38.463" starttime="20200924 10:49:38.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200924 10:49:38.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200924 10:49:38.464" starttime="20200924 10:49:38.464"></status>
</kw>
<status status="PASS" endtime="20200924 10:49:38.464" starttime="20200924 10:49:38.137"></status>
</kw>
<msg timestamp="20200924 10:49:38.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200924 10:49:38.464" starttime="20200924 10:49:38.137"></status>
</kw>
<msg timestamp="20200924 10:49:38.471" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20200924 10:49:38.472" starttime="20200924 10:49:38.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20200924 10:49:38.472" starttime="20200924 10:49:38.472"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20200924 10:49:38.472" critical="yes" starttime="20200924 10:49:38.136"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20200924 10:49:38.480" starttime="20200924 10:49:34.019"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
