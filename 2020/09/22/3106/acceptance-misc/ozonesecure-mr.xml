<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200922 13:33:04.724" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:29:03.464" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:29:08.469" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 13:29:08.469" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:08.469" starttime="20200922 13:29:03.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:29:08.470" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200922 13:29:08.470" starttime="20200922 13:29:08.469"></status>
</kw>
<msg timestamp="20200922 13:29:08.471" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:08.471" starttime="20200922 13:29:03.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:29:08.479" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:29:13.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:29:13.279" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:13.279" starttime="20200922 13:29:08.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:29:13.280" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:29:13.280" starttime="20200922 13:29:13.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:29:13.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:29:13.281" starttime="20200922 13:29:13.280"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:13.282" starttime="20200922 13:29:08.475"></status>
</kw>
<msg timestamp="20200922 13:29:13.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:29:13.282" starttime="20200922 13:29:08.474"></status>
</kw>
<msg timestamp="20200922 13:29:13.282" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:13.282" starttime="20200922 13:29:08.474"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200922 13:29:13.283" starttime="20200922 13:29:13.282"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:13.283" starttime="20200922 13:29:08.472"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:13.283" starttime="20200922 13:29:08.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:29:13.288" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:29:17.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:29:17.601" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:17.601" starttime="20200922 13:29:13.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:29:17.603" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:29:17.603" starttime="20200922 13:29:17.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:29:17.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:29:17.603" starttime="20200922 13:29:17.603"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:17.604" starttime="20200922 13:29:13.285"></status>
</kw>
<msg timestamp="20200922 13:29:17.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:29:17.604" starttime="20200922 13:29:13.285"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:17.604" starttime="20200922 13:29:13.284"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:17.604" starttime="20200922 13:29:13.284"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:17.604" starttime="20200922 13:29:13.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200922 13:29:17.605" starttime="20200922 13:29:17.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:29:17.609" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:29:22.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:29:22.338" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:22.338" starttime="20200922 13:29:17.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:29:22.340" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:29:17.290Z",
  "modificationTime" : "2020-09-22T13:29:17.290Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200922 13:29:22.340" starttime="20200922 13:29:22.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:29:22.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:29:22.341" starttime="20200922 13:29:22.340"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:22.342" starttime="20200922 13:29:17.606"></status>
</kw>
<msg timestamp="20200922 13:29:22.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:29:22.342" starttime="20200922 13:29:17.606"></status>
</kw>
<msg timestamp="20200922 13:29:22.342" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:22.343" starttime="20200922 13:29:17.605"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200922 13:29:22.343" starttime="20200922 13:29:22.343"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:29:22.350" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:29:22.350" starttime="20200922 13:29:22.349"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:29:22.351" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:29:22.351" starttime="20200922 13:29:22.351"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:22.352" starttime="20200922 13:29:22.348"></status>
</kw>
<msg timestamp="20200922 13:29:22.352" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:29:22.352" starttime="20200922 13:29:22.348"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:22.352" starttime="20200922 13:29:22.346"></status>
</kw>
<msg timestamp="20200922 13:29:22.353" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200922 13:29:22.353" starttime="20200922 13:29:22.345"></status>
</kw>
<msg timestamp="20200922 13:29:22.353" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200922 13:29:22.353" starttime="20200922 13:29:22.344"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:29:22.356" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:29:26.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:29:26.815" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:26.815" starttime="20200922 13:29:22.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:29:26.816" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:29:26.816" starttime="20200922 13:29:26.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:29:26.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:29:26.817" starttime="20200922 13:29:26.816"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:26.817" starttime="20200922 13:29:22.354"></status>
</kw>
<msg timestamp="20200922 13:29:26.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:29:26.818" starttime="20200922 13:29:22.354"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:26.818" starttime="20200922 13:29:22.353"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:29:26.823" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:29:39.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:29:39.503" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:39.507" starttime="20200922 13:29:26.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:29:39.509" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:29:39.509" starttime="20200922 13:29:39.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:29:39.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:29:39.510" starttime="20200922 13:29:39.509"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:39.510" starttime="20200922 13:29:26.820"></status>
</kw>
<msg timestamp="20200922 13:29:39.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:29:39.511" starttime="20200922 13:29:26.819"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:39.511" starttime="20200922 13:29:26.818"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:29:39.518" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:29:46.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:29:46.628" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:46.628" starttime="20200922 13:29:39.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:29:46.629" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:29:46.629" starttime="20200922 13:29:46.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:29:46.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:29:46.630" starttime="20200922 13:29:46.630"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:46.631" starttime="20200922 13:29:39.515"></status>
</kw>
<msg timestamp="20200922 13:29:46.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:29:46.631" starttime="20200922 13:29:39.514"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:46.631" starttime="20200922 13:29:39.513"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:29:46.637" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:29:53.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:29:53.064" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:53.064" starttime="20200922 13:29:46.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:29:53.066" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:29:53.066" starttime="20200922 13:29:53.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:29:53.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:29:53.067" starttime="20200922 13:29:53.067"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:53.068" starttime="20200922 13:29:46.633"></status>
</kw>
<msg timestamp="20200922 13:29:53.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:29:53.069" starttime="20200922 13:29:46.632"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:53.069" starttime="20200922 13:29:46.631"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:29:53.070" critical="yes" starttime="20200922 13:29:03.457"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:29:53.076" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:29:53.076" starttime="20200922 13:29:53.075"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:29:53.077" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:29:53.077" starttime="20200922 13:29:53.076"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:53.077" starttime="20200922 13:29:53.075"></status>
</kw>
<msg timestamp="20200922 13:29:53.077" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:29:53.077" starttime="20200922 13:29:53.074"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:53.077" starttime="20200922 13:29:53.073"></status>
</kw>
<msg timestamp="20200922 13:29:53.077" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 13:29:53.077" starttime="20200922 13:29:53.072"></status>
</kw>
<msg timestamp="20200922 13:29:53.078" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 13:29:53.078" starttime="20200922 13:29:53.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:29:53.083" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:29:57.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:29:57.090" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:29:57.090" starttime="20200922 13:29:53.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:29:57.092" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:29:57.092" starttime="20200922 13:29:57.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:29:57.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:29:57.093" starttime="20200922 13:29:57.092"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:57.093" starttime="20200922 13:29:53.079"></status>
</kw>
<msg timestamp="20200922 13:29:57.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:29:57.093" starttime="20200922 13:29:53.078"></status>
</kw>
<status status="PASS" endtime="20200922 13:29:57.094" starttime="20200922 13:29:53.078"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:29:57.098" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:30:01.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:30:01.234" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:30:01.234" starttime="20200922 13:29:57.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:30:01.235" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:30:01.236" starttime="20200922 13:30:01.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:30:01.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:30:01.237" starttime="20200922 13:30:01.236"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:01.237" starttime="20200922 13:29:57.095"></status>
</kw>
<msg timestamp="20200922 13:30:01.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:30:01.237" starttime="20200922 13:29:57.095"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:01.238" starttime="20200922 13:29:57.094"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:30:01.238" critical="yes" starttime="20200922 13:29:53.071"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200922 13:30:01.240" starttime="20200922 13:29:03.374"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:31:58.350" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:31:58.350" starttime="20200922 13:31:58.349"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:31:58.351" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:31:58.351" starttime="20200922 13:31:58.350"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:58.351" starttime="20200922 13:31:58.348"></status>
</kw>
<msg timestamp="20200922 13:31:58.351" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:31:58.351" starttime="20200922 13:31:58.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:31:58.352" starttime="20200922 13:31:58.352"></status>
</kw>
<msg timestamp="20200922 13:31:58.352" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 13:31:58.352" starttime="20200922 13:31:58.351"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:58.353" starttime="20200922 13:31:58.346"></status>
</kw>
<msg timestamp="20200922 13:31:58.353" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:31:58.353" starttime="20200922 13:31:58.346"></status>
</kw>
<msg timestamp="20200922 13:31:58.353" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:31:58.353" starttime="20200922 13:31:58.345"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:31:58.354" level="INFO">${random} = 06764</msg>
<status status="PASS" endtime="20200922 13:31:58.354" starttime="20200922 13:31:58.353"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:31:58.358" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-06764 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:32:03.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:32:03.021" level="INFO">${output} = 2020-09-22 13:32:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:32:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200922 13:32:03.021" starttime="20200922 13:31:58.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:32:03.022" level="INFO">2020-09-22 13:32:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:32:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:32:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:32:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:32:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-50CF5DBC0AC9-&gt;790ea31e-c95b-4d01-a7b9-07f6e6134d1f
2020-09-22 13:32:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200922 13:32:03.022" starttime="20200922 13:32:03.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:32:03.023" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:32:03.023" starttime="20200922 13:32:03.022"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:03.023" starttime="20200922 13:31:58.355"></status>
</kw>
<msg timestamp="20200922 13:32:03.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:32:03.024" starttime="20200922 13:31:58.354"></status>
</kw>
<msg timestamp="20200922 13:32:03.024" level="INFO">${result} = 2020-09-22 13:32:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:32:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200922 13:32:03.024" starttime="20200922 13:31:58.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:32:03.029" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:32:05.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:32:05.511" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:32 ofs://om/volume1/bucket1/ozone-06764
-rw-...</msg>
<status status="PASS" endtime="20200922 13:32:05.511" starttime="20200922 13:32:03.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:32:05.512" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:32 ofs://om/volume1/bucket1/ozone-06764
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:30 ofs://om/volume1/bucket1/ozone-67794
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:29 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:31 ofs://om/volume1/bucket1/wordcount-09.txt</msg>
<status status="PASS" endtime="20200922 13:32:05.513" starttime="20200922 13:32:05.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:32:05.514" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:32:05.515" starttime="20200922 13:32:05.513"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:05.516" starttime="20200922 13:32:03.026"></status>
</kw>
<msg timestamp="20200922 13:32:05.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:32:05.517" starttime="20200922 13:32:03.025"></status>
</kw>
<msg timestamp="20200922 13:32:05.519" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:32 ofs://om/volume1/bucket1/ozone-06764
-rw-...</msg>
<status status="PASS" endtime="20200922 13:32:05.519" starttime="20200922 13:32:03.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:32:05.524" starttime="20200922 13:32:05.521"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:32:05.525" critical="yes" starttime="20200922 13:31:58.344"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200922 13:32:05.526" starttime="20200922 13:31:58.293"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:30:13.444" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:30:13.444" starttime="20200922 13:30:13.442"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:30:13.445" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:30:13.445" starttime="20200922 13:30:13.444"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:13.445" starttime="20200922 13:30:13.442"></status>
</kw>
<msg timestamp="20200922 13:30:13.445" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:30:13.445" starttime="20200922 13:30:13.441"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:13.445" starttime="20200922 13:30:13.440"></status>
</kw>
<msg timestamp="20200922 13:30:13.445" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:30:13.446" starttime="20200922 13:30:13.439"></status>
</kw>
<msg timestamp="20200922 13:30:13.446" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:30:13.446" starttime="20200922 13:30:13.439"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:30:13.447" level="INFO">${random} = 67794</msg>
<status status="PASS" endtime="20200922 13:30:13.447" starttime="20200922 13:30:13.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:30:13.449" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-67794 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:30:18.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:30:18.193" level="INFO">${output} = 2020-09-22 13:30:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:30:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200922 13:30:18.193" starttime="20200922 13:30:13.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:30:18.194" level="INFO">2020-09-22 13:30:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:30:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:30:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:30:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:30:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FA5B134D5359-&gt;790ea31e-c95b-4d01-a7b9-07f6e6134d1f
2020-09-22 13:30:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200922 13:30:18.194" starttime="20200922 13:30:18.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:30:18.195" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:30:18.195" starttime="20200922 13:30:18.194"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:18.196" starttime="20200922 13:30:13.448"></status>
</kw>
<msg timestamp="20200922 13:30:18.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:30:18.196" starttime="20200922 13:30:13.447"></status>
</kw>
<msg timestamp="20200922 13:30:18.196" level="INFO">${result} = 2020-09-22 13:30:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:30:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200922 13:30:18.196" starttime="20200922 13:30:13.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:30:18.199" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:30:20.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:30:20.349" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:30 o3fs://bucket1.volume1.om/ozone-67794
dr...</msg>
<status status="PASS" endtime="20200922 13:30:20.349" starttime="20200922 13:30:18.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:30:20.350" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:30 o3fs://bucket1.volume1.om/ozone-67794
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:29 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 13:30:20.350" starttime="20200922 13:30:20.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:30:20.351" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:30:20.351" starttime="20200922 13:30:20.351"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:20.351" starttime="20200922 13:30:18.197"></status>
</kw>
<msg timestamp="20200922 13:30:20.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:30:20.352" starttime="20200922 13:30:18.197"></status>
</kw>
<msg timestamp="20200922 13:30:20.352" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:30 o3fs://bucket1.volume1.om/ozone-67794
dr...</msg>
<status status="PASS" endtime="20200922 13:30:20.352" starttime="20200922 13:30:18.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:30:20.353" starttime="20200922 13:30:20.352"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:30:20.353" critical="yes" starttime="20200922 13:30:13.438"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200922 13:30:20.354" starttime="20200922 13:30:13.380"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:30:07.480" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:30:07.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:30:07.488" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20200922 13:30:07.488" starttime="20200922 13:30:07.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:30:07.490" level="INFO">rm</msg>
<status status="PASS" endtime="20200922 13:30:07.490" starttime="20200922 13:30:07.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:30:07.491" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:30:07.491" starttime="20200922 13:30:07.490"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:07.491" starttime="20200922 13:30:07.478"></status>
</kw>
<msg timestamp="20200922 13:30:07.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:30:07.492" starttime="20200922 13:30:07.477"></status>
</kw>
<msg timestamp="20200922 13:30:07.492" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20200922 13:30:07.492" starttime="20200922 13:30:07.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:30:07.494" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:30:07.494" starttime="20200922 13:30:07.492"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:30:07.498" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:30:07.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:30:07.513" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:30:07.513" starttime="20200922 13:30:07.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:30:07.514" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:30:07.515" starttime="20200922 13:30:07.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:30:07.515" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:30:07.516" starttime="20200922 13:30:07.515"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:07.516" starttime="20200922 13:30:07.496"></status>
</kw>
<msg timestamp="20200922 13:30:07.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:30:07.516" starttime="20200922 13:30:07.496"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:07.516" starttime="20200922 13:30:07.495"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:07.516" starttime="20200922 13:30:07.494"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:07.517" starttime="20200922 13:30:07.476"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:30:07.517" critical="yes" starttime="20200922 13:30:07.475"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200922 13:30:07.518" starttime="20200922 13:30:07.417"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:28:57.291" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:28:57.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:28:57.294" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20200922 13:28:57.294" starttime="20200922 13:28:57.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:28:57.295" level="INFO">om</msg>
<status status="PASS" endtime="20200922 13:28:57.295" starttime="20200922 13:28:57.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:28:57.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:28:57.296" starttime="20200922 13:28:57.295"></status>
</kw>
<status status="PASS" endtime="20200922 13:28:57.296" starttime="20200922 13:28:57.284"></status>
</kw>
<msg timestamp="20200922 13:28:57.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:28:57.296" starttime="20200922 13:28:57.284"></status>
</kw>
<msg timestamp="20200922 13:28:57.297" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20200922 13:28:57.297" starttime="20200922 13:28:57.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:28:57.298" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:28:57.298" starttime="20200922 13:28:57.297"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:28:57.303" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:28:57.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:28:57.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:28:57.319" starttime="20200922 13:28:57.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:28:57.321" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:28:57.321" starttime="20200922 13:28:57.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:28:57.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:28:57.321" starttime="20200922 13:28:57.321"></status>
</kw>
<status status="PASS" endtime="20200922 13:28:57.322" starttime="20200922 13:28:57.300"></status>
</kw>
<msg timestamp="20200922 13:28:57.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:28:57.322" starttime="20200922 13:28:57.299"></status>
</kw>
<status status="PASS" endtime="20200922 13:28:57.322" starttime="20200922 13:28:57.299"></status>
</kw>
<status status="PASS" endtime="20200922 13:28:57.322" starttime="20200922 13:28:57.298"></status>
</kw>
<status status="PASS" endtime="20200922 13:28:57.323" starttime="20200922 13:28:57.282"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:28:57.323" critical="yes" starttime="20200922 13:28:57.281"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200922 13:28:57.324" starttime="20200922 13:28:57.212"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:32:11.678" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:32:11.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:32:11.689" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:32:11.689" starttime="20200922 13:32:11.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:32:11.690" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:32:11.691" starttime="20200922 13:32:11.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:32:11.691" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:32:11.691" starttime="20200922 13:32:11.691"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:11.692" starttime="20200922 13:32:11.676"></status>
</kw>
<msg timestamp="20200922 13:32:11.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:32:11.692" starttime="20200922 13:32:11.676"></status>
</kw>
<msg timestamp="20200922 13:32:11.692" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:32:11.692" starttime="20200922 13:32:11.676"></status>
</kw>
<msg timestamp="20200922 13:32:11.693" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:32:11.693" starttime="20200922 13:32:11.675"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:32:11.697" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:32:11.697" starttime="20200922 13:32:11.696"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:32:11.698" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:32:11.698" starttime="20200922 13:32:11.697"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:11.698" starttime="20200922 13:32:11.696"></status>
</kw>
<msg timestamp="20200922 13:32:11.698" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:32:11.698" starttime="20200922 13:32:11.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:32:11.699" starttime="20200922 13:32:11.699"></status>
</kw>
<msg timestamp="20200922 13:32:11.699" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 13:32:11.700" starttime="20200922 13:32:11.698"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:11.701" starttime="20200922 13:32:11.694"></status>
</kw>
<msg timestamp="20200922 13:32:11.701" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:32:11.701" starttime="20200922 13:32:11.694"></status>
</kw>
<msg timestamp="20200922 13:32:11.701" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:32:11.701" starttime="20200922 13:32:11.693"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:32:11.704" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:32:52.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:32:52.441" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:32:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:32:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200922 13:32:52.441" starttime="20200922 13:32:11.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:32:52.442" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:32:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:32:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:32:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:32:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:32:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-02F4A105FCDD-&gt;790ea31e-c95b-4d01-a7b9-07f6e6134d1f
2020-09-22 13:32:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-22 13:32:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-09-22 13:32:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-09-22 13:32:18 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781538792, maxDate=1601386338792, sequenceNumber=3, masterKeyId=2))
2020-09-22 13:32:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ff aa 8f b0 cb 2e 38 ff b2 c1 d0 cd 2e 40 03 48 01 5a 0d 32 39 39 31 37 35 30 39 30 35 34 39 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-22 13:32:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781538792, maxDate=1601386338792, sequenceNumber=3, masterKeyId=2)
2020-09-22 13:32:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 13:32:19 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:32:19 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:32:19 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-22 13:32:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600781298262_0003
2020-09-22 13:32:19 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ff aa 8f b0 cb 2e 38 ff b2 c1 d0 cd 2e 40 03 48 01 5a 0d 32 39 39 31 37 35 30 39 30 35 34 39 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781538792, maxDate=1601386338792, sequenceNumber=3, masterKeyId=2)]
2020-09-22 13:32:20 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:32:20 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-22 13:32:20 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-22 13:32:21 INFO  YarnClientImpl:311 - Submitted application application_1600781298262_0003
2020-09-22 13:32:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600781298262_0003/
2020-09-22 13:32:21 INFO  Job:1619 - Running job: job_1600781298262_0003
2020-09-22 13:32:30 INFO  Job:1640 - Job job_1600781298262_0003 running in uber mode : false
2020-09-22 13:32:30 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:32:43 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:32:45 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:32:50 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:32:51 INFO  Job:1658 - Job job_1600781298262_0003 completed successfully
2020-09-22 13:32:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1051981
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=60004
		Total time spent by all reduces in occupied slots (ms)=9746
		Total time spent by all map tasks (ms)=30002
		Total time spent by all reduce tasks (ms)=4873
		Total vcore-milliseconds taken by all map tasks=30002
		Total vcore-milliseconds taken by all reduce tasks=4873
		Total megabyte-milliseconds taken by all map tasks=61444096
		Total megabyte-milliseconds taken by all reduce tasks=9979904
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1219
		CPU time spent (ms)=9310
		Physical memory (bytes) snapshot=1310646272
		Virtual memory (bytes) snapshot=14296997888
		Total committed heap usage (bytes)=1286078464
		Peak Map Physical memory (bytes)=366145536
		Peak Map Virtual memory (bytes)=3574607872
		Peak Reduce Physical memory (bytes)=367214592
		Peak Reduce Virtual memory (bytes)=3579871232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.45 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200922 13:32:52.442" starttime="20200922 13:32:52.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:32:52.443" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:32:52.444" starttime="20200922 13:32:52.443"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:52.444" starttime="20200922 13:32:11.702"></status>
</kw>
<msg timestamp="20200922 13:32:52.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:32:52.444" starttime="20200922 13:32:11.702"></status>
</kw>
<msg timestamp="20200922 13:32:52.445" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:32:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:32:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200922 13:32:52.446" starttime="20200922 13:32:11.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:32:52.446" starttime="20200922 13:32:52.446"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:32:52.447" critical="yes" starttime="20200922 13:32:11.674"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:32:52.454" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:32:52.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:32:52.462" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:32:52.462" starttime="20200922 13:32:52.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:32:52.463" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:32:52.464" starttime="20200922 13:32:52.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:32:52.464" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:32:52.464" starttime="20200922 13:32:52.464"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:52.465" starttime="20200922 13:32:52.451"></status>
</kw>
<msg timestamp="20200922 13:32:52.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:32:52.465" starttime="20200922 13:32:52.450"></status>
</kw>
<msg timestamp="20200922 13:32:52.465" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:32:52.465" starttime="20200922 13:32:52.449"></status>
</kw>
<msg timestamp="20200922 13:32:52.466" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:32:52.466" starttime="20200922 13:32:52.449"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:32:52.466" level="INFO">${random} = 09</msg>
<status status="PASS" endtime="20200922 13:32:52.466" starttime="20200922 13:32:52.466"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:32:52.471" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:32:52.471" starttime="20200922 13:32:52.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:32:52.471" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:32:52.471" starttime="20200922 13:32:52.471"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:52.472" starttime="20200922 13:32:52.470"></status>
</kw>
<msg timestamp="20200922 13:32:52.472" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:32:52.472" starttime="20200922 13:32:52.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:32:52.473" starttime="20200922 13:32:52.473"></status>
</kw>
<msg timestamp="20200922 13:32:52.473" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 13:32:52.473" starttime="20200922 13:32:52.472"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:52.474" starttime="20200922 13:32:52.468"></status>
</kw>
<msg timestamp="20200922 13:32:52.474" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:32:52.474" starttime="20200922 13:32:52.468"></status>
</kw>
<msg timestamp="20200922 13:32:52.474" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:32:52.474" starttime="20200922 13:32:52.467"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:32:52.479" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:32:52.479" starttime="20200922 13:32:52.478"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:32:52.480" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:32:52.480" starttime="20200922 13:32:52.479"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:52.480" starttime="20200922 13:32:52.477"></status>
</kw>
<msg timestamp="20200922 13:32:52.480" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:32:52.480" starttime="20200922 13:32:52.477"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:32:52.482" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200922 13:32:52.482" starttime="20200922 13:32:52.482"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:32:52.483" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200922 13:32:52.483" starttime="20200922 13:32:52.483"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:52.483" starttime="20200922 13:32:52.481"></status>
</kw>
<msg timestamp="20200922 13:32:52.484" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200922 13:32:52.484" starttime="20200922 13:32:52.480"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:52.484" starttime="20200922 13:32:52.476"></status>
</kw>
<msg timestamp="20200922 13:32:52.484" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200922 13:32:52.484" starttime="20200922 13:32:52.475"></status>
</kw>
<msg timestamp="20200922 13:32:52.484" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200922 13:32:52.484" starttime="20200922 13:32:52.474"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:32:52.488" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:32:52.488" starttime="20200922 13:32:52.488"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:32:52.489" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:32:52.489" starttime="20200922 13:32:52.488"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:52.489" starttime="20200922 13:32:52.487"></status>
</kw>
<msg timestamp="20200922 13:32:52.489" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:32:52.489" starttime="20200922 13:32:52.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:32:52.491" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200922 13:32:52.491" starttime="20200922 13:32:52.491"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:32:52.492" level="INFO">${result} = /wordcount-09.txt</msg>
<status status="PASS" endtime="20200922 13:32:52.492" starttime="20200922 13:32:52.492"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:52.492" starttime="20200922 13:32:52.490"></status>
</kw>
<msg timestamp="20200922 13:32:52.493" level="INFO">${path_with_leading} = /wordcount-09.txt</msg>
<status status="PASS" endtime="20200922 13:32:52.493" starttime="20200922 13:32:52.489"></status>
</kw>
<status status="PASS" endtime="20200922 13:32:52.493" starttime="20200922 13:32:52.486"></status>
</kw>
<msg timestamp="20200922 13:32:52.493" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-09.txt</msg>
<status status="PASS" endtime="20200922 13:32:52.493" starttime="20200922 13:32:52.485"></status>
</kw>
<msg timestamp="20200922 13:32:52.493" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-09.txt</msg>
<status status="PASS" endtime="20200922 13:32:52.494" starttime="20200922 13:32:52.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:32:52.497" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-09.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:32:55.656" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 13:32:55.656" level="INFO">${output} = 2020-09-22 13:32:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-09-22 13:32:55 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20200922 13:32:55.656" starttime="20200922 13:32:52.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:32:55.657" level="INFO">2020-09-22 13:32:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-09-22 13:32:55 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-09-22 13:32:55 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781575436, maxDate=1601386375436, sequenceNumber=4, masterKeyId=2))
2020-09-22 13:32:55 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 85 c9 91 b0 cb 2e 38 85 d1 c3 d0 cd 2e 40 04 48 01 5a 0d 32 39 39 31 37 35 30 39 30 35 34 39 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-22 13:32:55 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781575436, maxDate=1601386375436, sequenceNumber=4, masterKeyId=2)
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-09.txt already exists
	at org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:164)
	at org.apache.hadoop.mapreduce.JobSubmitter.checkSpecs(JobSubmitter.java:277)
	at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:143)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1570)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1567)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1567)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</msg>
<status status="PASS" endtime="20200922 13:32:55.658" starttime="20200922 13:32:55.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:32:55.658" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200922 13:32:55.658" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20200922 13:32:55.659" starttime="20200922 13:32:55.658"></status>
</kw>
<status status="FAIL" endtime="20200922 13:32:55.659" starttime="20200922 13:32:52.495"></status>
</kw>
<msg timestamp="20200922 13:32:55.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200922 13:32:55.659" starttime="20200922 13:32:52.495"></status>
</kw>
<status status="FAIL" endtime="20200922 13:32:55.659" starttime="20200922 13:32:52.494"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20200922 13:32:55.659" critical="yes" starttime="20200922 13:32:52.448">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20200922 13:32:55.661" starttime="20200922 13:32:11.616"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:30:26.647" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:30:26.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:30:26.656" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:30:26.656" starttime="20200922 13:30:26.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:30:26.657" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:30:26.657" starttime="20200922 13:30:26.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:30:26.657" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:30:26.658" starttime="20200922 13:30:26.657"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:26.658" starttime="20200922 13:30:26.645"></status>
</kw>
<msg timestamp="20200922 13:30:26.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:30:26.658" starttime="20200922 13:30:26.645"></status>
</kw>
<msg timestamp="20200922 13:30:26.658" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:30:26.658" starttime="20200922 13:30:26.644"></status>
</kw>
<msg timestamp="20200922 13:30:26.659" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:30:26.659" starttime="20200922 13:30:26.644"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:30:26.663" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:30:26.663" starttime="20200922 13:30:26.662"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:30:26.664" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:30:26.664" starttime="20200922 13:30:26.663"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:26.664" starttime="20200922 13:30:26.662"></status>
</kw>
<msg timestamp="20200922 13:30:26.665" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:30:26.665" starttime="20200922 13:30:26.661"></status>
</kw>
<status status="PASS" endtime="20200922 13:30:26.665" starttime="20200922 13:30:26.660"></status>
</kw>
<msg timestamp="20200922 13:30:26.665" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:30:26.665" starttime="20200922 13:30:26.660"></status>
</kw>
<msg timestamp="20200922 13:30:26.665" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:30:26.665" starttime="20200922 13:30:26.659"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:30:26.669" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:31:13.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:31:13.338" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:30:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:30:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200922 13:31:13.339" starttime="20200922 13:30:26.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:31:13.339" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:30:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:30:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:30:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:30:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:30:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6F9A298A516B-&gt;790ea31e-c95b-4d01-a7b9-07f6e6134d1f
2020-09-22 13:30:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-22 13:30:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-09-22 13:30:31 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-09-22 13:30:32 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781432312, maxDate=1601386232312, sequenceNumber=1, masterKeyId=2))
2020-09-22 13:30:32 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 99 e7 88 b0 cb 2e 38 99 ef ba d0 cd 2e 40 01 48 01 5a 0d 32 39 39 31 37 35 30 39 30 35 34 39 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-22 13:30:32 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781432312, maxDate=1601386232312, sequenceNumber=1, masterKeyId=2)
2020-09-22 13:30:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:30:33 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:30:33 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-22 13:30:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600781298262_0001
2020-09-22 13:30:33 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 99 e7 88 b0 cb 2e 38 99 ef ba d0 cd 2e 40 01 48 01 5a 0d 32 39 39 31 37 35 30 39 30 35 34 39 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781432312, maxDate=1601386232312, sequenceNumber=1, masterKeyId=2)]
2020-09-22 13:30:33 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:30:33 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-22 13:30:33 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-22 13:30:35 INFO  YarnClientImpl:311 - Submitted application application_1600781298262_0001
2020-09-22 13:30:36 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600781298262_0001/
2020-09-22 13:30:36 INFO  Job:1619 - Running job: job_1600781298262_0001
2020-09-22 13:30:48 INFO  Job:1640 - Job job_1600781298262_0001 running in uber mode : false
2020-09-22 13:30:48 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:31:00 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:31:02 INFO  Job:1647 -  map 67% reduce 0%
2020-09-22 13:31:03 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:31:08 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:31:12 INFO  Job:1658 - Job job_1600781298262_0001 completed successfully
2020-09-22 13:31:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052193
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=57776
		Total time spent by all reduces in occupied slots (ms)=9756
		Total time spent by all map tasks (ms)=28888
		Total time spent by all reduce tasks (ms)=4878
		Total vcore-milliseconds taken by all map tasks=28888
		Total vcore-milliseconds taken by all reduce tasks=4878
		Total megabyte-milliseconds taken by all map tasks=59162624
		Total megabyte-milliseconds taken by all reduce tasks=9990144
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1401
		CPU time spent (ms)=8860
		Physical memory (bytes) snapshot=1287987200
		Virtual memory (bytes) snapshot=14290423808
		Total committed heap usage (bytes)=1247805440
		Peak Map Physical memory (bytes)=351653888
		Peak Map Virtual memory (bytes)=3576565760
		Peak Reduce Physical memory (bytes)=348241920
		Peak Reduce Virtual memory (bytes)=3565404160
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 41.616 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200922 13:31:13.340" starttime="20200922 13:31:13.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:31:13.341" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:31:13.342" starttime="20200922 13:31:13.340"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:13.342" starttime="20200922 13:30:26.667"></status>
</kw>
<msg timestamp="20200922 13:31:13.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:31:13.343" starttime="20200922 13:30:26.666"></status>
</kw>
<msg timestamp="20200922 13:31:13.345" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:30:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:30:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200922 13:31:13.345" starttime="20200922 13:30:26.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:31:13.346" starttime="20200922 13:31:13.345"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:31:13.346" critical="yes" starttime="20200922 13:30:26.643"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:31:13.351" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:31:13.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:31:13.359" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:31:13.359" starttime="20200922 13:31:13.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:31:13.360" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:31:13.360" starttime="20200922 13:31:13.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:31:13.361" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:31:13.361" starttime="20200922 13:31:13.360"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:13.361" starttime="20200922 13:31:13.349"></status>
</kw>
<msg timestamp="20200922 13:31:13.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:31:13.362" starttime="20200922 13:31:13.349"></status>
</kw>
<msg timestamp="20200922 13:31:13.362" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:31:13.362" starttime="20200922 13:31:13.348"></status>
</kw>
<msg timestamp="20200922 13:31:13.363" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:31:13.363" starttime="20200922 13:31:13.348"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:31:13.363" level="INFO">${random} = 09</msg>
<status status="PASS" endtime="20200922 13:31:13.363" starttime="20200922 13:31:13.363"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:31:13.368" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:31:13.368" starttime="20200922 13:31:13.367"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:31:13.369" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:31:13.369" starttime="20200922 13:31:13.368"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:13.369" starttime="20200922 13:31:13.367"></status>
</kw>
<msg timestamp="20200922 13:31:13.369" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:31:13.369" starttime="20200922 13:31:13.366"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:13.370" starttime="20200922 13:31:13.365"></status>
</kw>
<msg timestamp="20200922 13:31:13.370" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:31:13.370" starttime="20200922 13:31:13.364"></status>
</kw>
<msg timestamp="20200922 13:31:13.370" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:31:13.370" starttime="20200922 13:31:13.364"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:31:13.374" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:31:13.374" starttime="20200922 13:31:13.373"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:31:13.375" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:31:13.375" starttime="20200922 13:31:13.374"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:13.375" starttime="20200922 13:31:13.373"></status>
</kw>
<msg timestamp="20200922 13:31:13.375" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:31:13.375" starttime="20200922 13:31:13.372"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:13.375" starttime="20200922 13:31:13.372"></status>
</kw>
<msg timestamp="20200922 13:31:13.375" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200922 13:31:13.375" starttime="20200922 13:31:13.371"></status>
</kw>
<msg timestamp="20200922 13:31:13.376" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200922 13:31:13.376" starttime="20200922 13:31:13.370"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:31:13.380" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:31:13.380" starttime="20200922 13:31:13.379"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:31:13.381" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:31:13.381" starttime="20200922 13:31:13.380"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:13.381" starttime="20200922 13:31:13.379"></status>
</kw>
<msg timestamp="20200922 13:31:13.381" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:31:13.381" starttime="20200922 13:31:13.378"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:13.381" starttime="20200922 13:31:13.377"></status>
</kw>
<msg timestamp="20200922 13:31:13.381" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-09.txt</msg>
<status status="PASS" endtime="20200922 13:31:13.381" starttime="20200922 13:31:13.377"></status>
</kw>
<msg timestamp="20200922 13:31:13.382" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-09.txt</msg>
<status status="PASS" endtime="20200922 13:31:13.382" starttime="20200922 13:31:13.376"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:31:13.385" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-09.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:31:51.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:31:51.884" level="INFO">${output} = 2020-09-22 13:31:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-09-22 13:31:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20200922 13:31:51.884" starttime="20200922 13:31:13.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:31:51.886" level="INFO">2020-09-22 13:31:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-09-22 13:31:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
2020-09-22 13:31:16 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781476295, maxDate=1601386276295, sequenceNumber=2, masterKeyId=2))
2020-09-22 13:31:16 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8e c2 8b b0 cb 2e 38 8e ca bd d0 cd 2e 40 02 48 01 5a 0d 32 39 39 31 37 35 30 39 30 35 34 39 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-09-22 13:31:16 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781476295, maxDate=1601386276295, sequenceNumber=2, masterKeyId=2)
2020-09-22 13:31:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 13:31:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:31:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:31:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:31:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:31:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EE5578DFAD7E-&gt;790ea31e-c95b-4d01-a7b9-07f6e6134d1f
2020-09-22 13:31:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-22 13:31:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:31:18 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:31:18 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-22 13:31:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600781298262_0002
2020-09-22 13:31:19 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8e c2 8b b0 cb 2e 38 8e ca bd d0 cd 2e 40 02 48 01 5a 0d 32 39 39 31 37 35 30 39 30 35 34 39 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1600781476295, maxDate=1601386276295, sequenceNumber=2, masterKeyId=2)]
2020-09-22 13:31:19 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:31:19 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-22 13:31:19 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-09-22 13:31:20 INFO  YarnClientImpl:311 - Submitted application application_1600781298262_0002
2020-09-22 13:31:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600781298262_0002/
2020-09-22 13:31:20 INFO  Job:1619 - Running job: job_1600781298262_0002
2020-09-22 13:31:30 INFO  Job:1640 - Job job_1600781298262_0002 running in uber mode : false
2020-09-22 13:31:30 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:31:42 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:31:44 INFO  Job:1647 -  map 67% reduce 0%
2020-09-22 13:31:45 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:31:50 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:31:51 INFO  Job:1658 - Job job_1600781298262_0002 completed successfully
2020-09-22 13:31:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1114721
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=58080
		Total time spent by all reduces in occupied slots (ms)=10234
		Total time spent by all map tasks (ms)=29040
		Total time spent by all reduce tasks (ms)=5117
		Total vcore-milliseconds taken by all map tasks=29040
		Total vcore-milliseconds taken by all reduce tasks=5117
		Total megabyte-milliseconds taken by all map tasks=59473920
		Total megabyte-milliseconds taken by all reduce tasks=10479616
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1320
		CPU time spent (ms)=9750
		Physical memory (bytes) snapshot=1317048320
		Virtual memory (bytes) snapshot=14294163456
		Total committed heap usage (bytes)=1443364864
		Peak Map Physical memory (bytes)=372039680
		Peak Map Virtual memory (bytes)=3575480320
		Peak Reduce Physical memory (bytes)=288870400
		Peak Reduce Virtual memory (bytes)=3573116928
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200922 13:31:51.886" starttime="20200922 13:31:51.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:31:51.887" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:31:51.887" starttime="20200922 13:31:51.886"></status>
</kw>
<status status="PASS" endtime="20200922 13:31:51.887" starttime="20200922 13:31:13.383"></status>
</kw>
<msg timestamp="20200922 13:31:51.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:31:51.887" starttime="20200922 13:31:13.383"></status>
</kw>
<msg timestamp="20200922 13:31:51.889" level="INFO">${output} = 2020-09-22 13:31:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-09-22 13:31:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.6:10200
20...</msg>
<status status="PASS" endtime="20200922 13:31:51.889" starttime="20200922 13:31:13.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200922 13:31:51.889" starttime="20200922 13:31:51.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:31:51.890" starttime="20200922 13:31:51.889"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:31:51.890" critical="yes" starttime="20200922 13:31:13.347"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200922 13:31:51.891" starttime="20200922 13:30:26.591"></status>
</suite>
<status status="FAIL" elapsedtime="201631" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="9">Critical Tests</stat>
<stat fail="1" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozonesecure-mr" pass="9">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="1" id="s1-s6" name="mapreduce-ofs" pass="1">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
