<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200922 13:43:11.309" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="upgrade">
<suite source="/opt/ozone/smoketest/topology/loaddata.robot" id="s1-s1" name="Loaddata">
<test id="s1-s1-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:41:43.156" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:41:46.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:41:46.254" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:41:46.254" starttime="20200922 13:41:43.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:41:46.256" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:41:46.257" starttime="20200922 13:41:46.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:41:46.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:41:46.259" starttime="20200922 13:41:46.258"></status>
</kw>
<status status="PASS" endtime="20200922 13:41:46.259" starttime="20200922 13:41:43.155"></status>
</kw>
<msg timestamp="20200922 13:41:46.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:41:46.259" starttime="20200922 13:41:43.154"></status>
</kw>
<msg timestamp="20200922 13:41:46.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:41:46.259" starttime="20200922 13:41:43.153"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200922 13:41:46.260" starttime="20200922 13:41:46.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:41:46.263" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:41:48.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:41:48.904" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:41:48.904" starttime="20200922 13:41:46.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:41:48.905" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:41:48.906" starttime="20200922 13:41:48.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:41:48.906" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:41:48.906" starttime="20200922 13:41:48.906"></status>
</kw>
<status status="PASS" endtime="20200922 13:41:48.907" starttime="20200922 13:41:46.261"></status>
</kw>
<msg timestamp="20200922 13:41:48.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:41:48.907" starttime="20200922 13:41:46.261"></status>
</kw>
<msg timestamp="20200922 13:41:48.907" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:41:48.907" starttime="20200922 13:41:46.260"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200922 13:41:48.908" starttime="20200922 13:41:48.907"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:41:48.911" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:41:54.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:41:54.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:41:54.315" starttime="20200922 13:41:48.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:41:54.316" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:41:54.316" starttime="20200922 13:41:54.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:41:54.317" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:41:54.317" starttime="20200922 13:41:54.317"></status>
</kw>
<status status="PASS" endtime="20200922 13:41:54.317" starttime="20200922 13:41:48.909"></status>
</kw>
<msg timestamp="20200922 13:41:54.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:41:54.318" starttime="20200922 13:41:48.909"></status>
</kw>
<msg timestamp="20200922 13:41:54.318" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:41:54.318" starttime="20200922 13:41:48.908"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200922 13:41:54.319" starttime="20200922 13:41:54.318"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:41:54.319" critical="yes" starttime="20200922 13:41:43.152"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200922 13:41:54.321" starttime="20200922 13:41:43.106"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s2" name="Readdata">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:42:57.440" level="INFO">${random} = 58534</msg>
<status status="PASS" endtime="20200922 13:42:57.441" starttime="20200922 13:42:57.440"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:42:57.448" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-58534 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:43:02.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:43:02.465" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:43:02.465" starttime="20200922 13:42:57.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:43:02.467" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:43:02.467" starttime="20200922 13:43:02.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:43:02.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:43:02.469" starttime="20200922 13:43:02.468"></status>
</kw>
<status status="PASS" endtime="20200922 13:43:02.469" starttime="20200922 13:42:57.442"></status>
</kw>
<msg timestamp="20200922 13:43:02.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:43:02.470" starttime="20200922 13:42:57.442"></status>
</kw>
<msg timestamp="20200922 13:43:02.470" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:43:02.470" starttime="20200922 13:42:57.441"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200922 13:43:02.471" starttime="20200922 13:43:02.470"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:43:02.471" critical="yes" starttime="20200922 13:42:57.439"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200922 13:43:02.472" starttime="20200922 13:42:57.356"></status>
</suite>
<status status="PASS" elapsedtime="16331" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="upgrade" pass="2">upgrade</stat>
<stat fail="0" id="s1-s1" name="Loaddata" pass="1">upgrade.Loaddata</stat>
<stat fail="0" id="s1-s2" name="Readdata" pass="1">upgrade.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
