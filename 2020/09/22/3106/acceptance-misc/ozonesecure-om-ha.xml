<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200922 13:40:18.725" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:35:03.431" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:35:17.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:35:17.567" level="INFO">${output} = 2020-09-22 13:35:05,985 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:06,244 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200922 13:35:17.567" starttime="20200922 13:35:03.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:35:17.568" level="INFO">2020-09-22 13:35:05,985 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:06,244 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:35:06,244 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-22 13:35:10,653 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-09-22 13:35:10,654 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-09-22 13:35:10,654 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-09-22 13:35:10,654 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-09-22 13:35:10,654 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-09-22 13:35:10,654 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-09-22 13:35:10,654 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-09-22 13:35:10,658 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-09-22 13:35:10,667 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:10,716 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-00316, with testuser/scm@EXAMPLE.COM as owner.
2020-09-22 13:35:11,403 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-00316/bucket-0-47146, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-22 13:35:11,671 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:12,672 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:13,677 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:14,678 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:14,751 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-22 13:35:15,678 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,623
Average Time spent in bucket creation: 00:00:00,428
Average Time spent in key creation: 00:00:01,620
Average Time spent in key write: 00:00:01,851
Total bytes written: 10240
Total Execution time: 00:00:10,540
***************************************************</msg>
<status status="PASS" endtime="20200922 13:35:17.568" starttime="20200922 13:35:17.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:35:17.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:35:17.569" starttime="20200922 13:35:17.569"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:17.570" starttime="20200922 13:35:03.425"></status>
</kw>
<msg timestamp="20200922 13:35:17.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:35:17.570" starttime="20200922 13:35:03.424"></status>
</kw>
<msg timestamp="20200922 13:35:17.570" level="INFO">${result} = 2020-09-22 13:35:05,985 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:06,244 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200922 13:35:17.570" starttime="20200922 13:35:03.423"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200922 13:35:17.572" starttime="20200922 13:35:17.571"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:17.572" starttime="20200922 13:35:17.571"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:35:17.572" critical="yes" starttime="20200922 13:35:03.422"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:35:17.581" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:35:29.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:35:29.764" level="INFO">${output} = 2020-09-22 13:35:19,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:19,998 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200922 13:35:29.765" starttime="20200922 13:35:17.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:35:29.767" level="INFO">2020-09-22 13:35:19,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:19,998 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:35:19,998 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-22 13:35:20,178 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jjftju4x9k
2020-09-22 13:35:20,196 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-22 13:35:21,203 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:22,077 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-09-22 13:35:22,149 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-09-22 13:35:22,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:23,072 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-09-22 13:35:23,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:23,513 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:35:23,513 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-D247F2E61275-&gt;76773347-b5a5-4776-b231-2bcbc2e61614
2020-09-22 13:35:23,514 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-22 13:35:24,205 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:25,205 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:26,211 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:27,212 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:28,212 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:29,213 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-22 13:35:29,431 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=6164.486552, max=6164.486552, mean=6164.486552, stddev=0.0, median=6164.486552, p75=6164.486552, p95=6164.486552, p98=6164.486552, p99=6164.486552, p999=6164.486552, mean_rate=0.13839770928684247, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-22 13:35:29,432 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2020-09-22 13:35:29,432 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-22 13:35:29,432 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200922 13:35:29.767" starttime="20200922 13:35:29.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:35:29.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:35:29.768" starttime="20200922 13:35:29.767"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:29.768" starttime="20200922 13:35:17.577"></status>
</kw>
<msg timestamp="20200922 13:35:29.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:35:29.768" starttime="20200922 13:35:17.577"></status>
</kw>
<msg timestamp="20200922 13:35:29.769" level="INFO">${result} = 2020-09-22 13:35:19,725 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:19,998 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200922 13:35:29.769" starttime="20200922 13:35:17.576"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200922 13:35:29.770" starttime="20200922 13:35:29.770"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:29.770" starttime="20200922 13:35:29.769"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:35:29.770" critical="yes" starttime="20200922 13:35:17.575"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:35:29.776" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:35:35.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:35:35.879" level="INFO">${output} = 2020-09-22 13:35:32,222 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:32,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200922 13:35:35.880" starttime="20200922 13:35:29.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:35:35.881" level="INFO">2020-09-22 13:35:32,222 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:32,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:35:32,458 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-22 13:35:32,646 [main] INFO freon.BaseFreonGenerator: Executing test with prefix z2lwcbftvg
2020-09-22 13:35:32,671 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-22 13:35:33,673 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:34,674 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:35,675 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-22 13:35:35,804 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=368.650833, max=368.650833, mean=368.650833, stddev=0.0, median=368.650833, p75=368.650833, p95=368.650833, p98=368.650833, p99=368.650833, p999=368.650833, mean_rate=0.8099060640899354, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-22 13:35:35,804 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-09-22 13:35:35,812 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-22 13:35:35,815 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200922 13:35:35.882" starttime="20200922 13:35:35.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:35:35.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:35:35.883" starttime="20200922 13:35:35.882"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:35.883" starttime="20200922 13:35:29.773"></status>
</kw>
<msg timestamp="20200922 13:35:35.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:35:35.883" starttime="20200922 13:35:29.773"></status>
</kw>
<msg timestamp="20200922 13:35:35.884" level="INFO">${result} = 2020-09-22 13:35:32,222 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:32,458 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200922 13:35:35.884" starttime="20200922 13:35:29.772"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200922 13:35:35.886" starttime="20200922 13:35:35.885"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:35.886" starttime="20200922 13:35:35.884"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:35:35.886" critical="yes" starttime="20200922 13:35:29.771"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:35:35.897" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:35:42.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:35:42.418" level="INFO">${output} = 2020-09-22 13:35:38,129 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:38,388 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200922 13:35:42.418" starttime="20200922 13:35:35.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:35:42.419" level="INFO">2020-09-22 13:35:38,129 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:38,388 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:35:38,388 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-09-22 13:35:38,600 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bapkkjykr4
2020-09-22 13:35:38,616 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-09-22 13:35:39,628 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:40,631 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-09-22 13:35:41,632 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-09-22 13:35:42,390 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=216.375784, max=216.375784, mean=216.375784, stddev=0.0, median=216.375784, p75=216.375784, p95=216.375784, p98=216.375784, p99=216.375784, p999=216.375784, mean_rate=0.8579751180111742, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-09-22 13:35:42,390 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2020-09-22 13:35:42,395 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-09-22 13:35:42,395 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200922 13:35:42.419" starttime="20200922 13:35:42.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:35:42.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:35:42.420" starttime="20200922 13:35:42.420"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:42.421" starttime="20200922 13:35:35.890"></status>
</kw>
<msg timestamp="20200922 13:35:42.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:35:42.421" starttime="20200922 13:35:35.889"></status>
</kw>
<msg timestamp="20200922 13:35:42.422" level="INFO">${result} = 2020-09-22 13:35:38,129 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-09-22 13:35:38,388 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200922 13:35:42.422" starttime="20200922 13:35:35.888"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200922 13:35:42.423" starttime="20200922 13:35:42.422"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:42.423" starttime="20200922 13:35:42.422"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:35:42.423" critical="yes" starttime="20200922 13:35:35.888"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200922 13:35:42.425" starttime="20200922 13:35:03.370"></status>
</suite>
<status status="PASS" endtime="20200922 13:35:42.431" starttime="20200922 13:35:03.331"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:34:53.912" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:34:53.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:34:53.916" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:34:53.916" starttime="20200922 13:34:53.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:34:53.918" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:34:53.918" starttime="20200922 13:34:53.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:34:53.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:34:53.926" starttime="20200922 13:34:53.924"></status>
</kw>
<status status="PASS" endtime="20200922 13:34:53.926" starttime="20200922 13:34:53.899"></status>
</kw>
<msg timestamp="20200922 13:34:53.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:34:53.927" starttime="20200922 13:34:53.899"></status>
</kw>
<msg timestamp="20200922 13:34:53.927" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:34:53.927" starttime="20200922 13:34:53.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:34:53.928" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:34:53.928" starttime="20200922 13:34:53.927"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:34:53.955" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:34:53.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:34:53.981" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:34:53.981" starttime="20200922 13:34:53.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:34:53.989" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:34:53.989" starttime="20200922 13:34:53.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:34:53.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:34:53.990" starttime="20200922 13:34:53.989"></status>
</kw>
<status status="PASS" endtime="20200922 13:34:53.991" starttime="20200922 13:34:53.943"></status>
</kw>
<msg timestamp="20200922 13:34:53.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:34:53.991" starttime="20200922 13:34:53.943"></status>
</kw>
<status status="PASS" endtime="20200922 13:34:53.991" starttime="20200922 13:34:53.942"></status>
</kw>
<status status="PASS" endtime="20200922 13:34:53.991" starttime="20200922 13:34:53.941"></status>
</kw>
<status status="PASS" endtime="20200922 13:34:53.991" starttime="20200922 13:34:53.897"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:34:53.992" critical="yes" starttime="20200922 13:34:53.896"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200922 13:34:53.995" starttime="20200922 13:34:53.762"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:35:48.757" level="INFO">${random} = 52245</msg>
<status status="PASS" endtime="20200922 13:35:48.757" starttime="20200922 13:35:48.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200922 13:35:48.759" level="INFO">${source} = 52245-source</msg>
<status status="PASS" endtime="20200922 13:35:48.759" starttime="20200922 13:35:48.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200922 13:35:48.760" level="INFO">${target} = 52245-target</msg>
<status status="PASS" endtime="20200922 13:35:48.760" starttime="20200922 13:35:48.759"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:35:48.767" level="INFO">Running command 'ozone sh volume create 52245-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:35:53.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:35:53.101" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:35:53.101" starttime="20200922 13:35:48.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:35:53.102" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:35:53.102" starttime="20200922 13:35:53.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:35:53.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:35:53.103" starttime="20200922 13:35:53.102"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:53.103" starttime="20200922 13:35:48.761"></status>
</kw>
<msg timestamp="20200922 13:35:53.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:35:53.106" starttime="20200922 13:35:48.761"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:53.106" starttime="20200922 13:35:48.760"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:35:53.110" level="INFO">Running command 'ozone sh volume create 52245-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:35:57.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:35:57.539" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:35:57.539" starttime="20200922 13:35:53.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:35:57.541" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:35:57.541" starttime="20200922 13:35:57.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:35:57.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:35:57.542" starttime="20200922 13:35:57.541"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:57.542" starttime="20200922 13:35:53.107"></status>
</kw>
<msg timestamp="20200922 13:35:57.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:35:57.542" starttime="20200922 13:35:53.107"></status>
</kw>
<status status="PASS" endtime="20200922 13:35:57.542" starttime="20200922 13:35:53.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:35:57.547" level="INFO">Running command 'ozone sh bucket create 52245-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:01.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:01.966" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:01.966" starttime="20200922 13:35:57.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:01.968" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:36:01.968" starttime="20200922 13:36:01.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:01.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:01.969" starttime="20200922 13:36:01.968"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:01.969" starttime="20200922 13:35:57.544"></status>
</kw>
<msg timestamp="20200922 13:36:01.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:01.970" starttime="20200922 13:35:57.544"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:01.970" starttime="20200922 13:35:57.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:01.975" level="INFO">Running command 'ozone sh key put 52245-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:11.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:11.522" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:11.522" starttime="20200922 13:36:01.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:11.523" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:36:11.524" starttime="20200922 13:36:11.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:11.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:11.524" starttime="20200922 13:36:11.524"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:11.525" starttime="20200922 13:36:01.971"></status>
</kw>
<msg timestamp="20200922 13:36:11.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:11.525" starttime="20200922 13:36:01.971"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:11.525" starttime="20200922 13:36:01.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:11.530" level="INFO">Running command 'ozone sh bucket create 52245-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:15.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:15.629" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:15.629" starttime="20200922 13:36:11.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:15.631" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:36:15.631" starttime="20200922 13:36:15.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:15.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:15.631" starttime="20200922 13:36:15.631"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:15.632" starttime="20200922 13:36:11.526"></status>
</kw>
<msg timestamp="20200922 13:36:15.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:15.632" starttime="20200922 13:36:11.526"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:15.632" starttime="20200922 13:36:11.525"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:15.636" level="INFO">Running command 'ozone sh bucket link 52245-source/readable-bucket 52245-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:20.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:20.239" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:20.239" starttime="20200922 13:36:15.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:20.242" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:36:20.243" starttime="20200922 13:36:20.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:20.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:20.244" starttime="20200922 13:36:20.243"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:20.244" starttime="20200922 13:36:15.634"></status>
</kw>
<msg timestamp="20200922 13:36:20.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:20.245" starttime="20200922 13:36:15.633"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:20.245" starttime="20200922 13:36:15.633"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:20.249" level="INFO">Running command 'ozone sh bucket link 52245-source/readable-bucket 52245-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:24.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:24.463" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:24.463" starttime="20200922 13:36:20.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:24.464" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:36:24.464" starttime="20200922 13:36:24.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:24.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:24.465" starttime="20200922 13:36:24.465"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:24.466" starttime="20200922 13:36:20.246"></status>
</kw>
<msg timestamp="20200922 13:36:24.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:24.466" starttime="20200922 13:36:20.246"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:24.466" starttime="20200922 13:36:20.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:24.474" level="INFO">Running command 'ozone sh bucket link 52245-source/unreadable-bucket 52245-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:28.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:28.930" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:28.930" starttime="20200922 13:36:24.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:28.931" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:36:28.931" starttime="20200922 13:36:28.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:28.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:28.932" starttime="20200922 13:36:28.932"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:28.933" starttime="20200922 13:36:24.471"></status>
</kw>
<msg timestamp="20200922 13:36:28.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:28.933" starttime="20200922 13:36:24.468"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:28.933" starttime="20200922 13:36:24.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:28.938" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 52245-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:32.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:32.933" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:32.933" starttime="20200922 13:36:28.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:32.934" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200922 13:36:32.934" starttime="20200922 13:36:32.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:32.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:32.935" starttime="20200922 13:36:32.935"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:32.936" starttime="20200922 13:36:28.934"></status>
</kw>
<msg timestamp="20200922 13:36:32.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:32.938" starttime="20200922 13:36:28.934"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:32.938" starttime="20200922 13:36:28.933"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:32.947" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 52245-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:37.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:37.375" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:37.375" starttime="20200922 13:36:32.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:37.376" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200922 13:36:37.376" starttime="20200922 13:36:37.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:37.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:37.377" starttime="20200922 13:36:37.377"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:37.377" starttime="20200922 13:36:32.939"></status>
</kw>
<msg timestamp="20200922 13:36:37.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:37.378" starttime="20200922 13:36:32.939"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:37.378" starttime="20200922 13:36:32.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:37.381" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 52245-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:41.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:41.722" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:41.723" starttime="20200922 13:36:37.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:41.724" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200922 13:36:41.724" starttime="20200922 13:36:41.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:41.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:41.725" starttime="20200922 13:36:41.724"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:41.725" starttime="20200922 13:36:37.379"></status>
</kw>
<msg timestamp="20200922 13:36:41.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:41.725" starttime="20200922 13:36:37.379"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:41.726" starttime="20200922 13:36:37.378"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:41.730" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 52245-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:46.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:46.499" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:46.499" starttime="20200922 13:36:41.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:46.500" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200922 13:36:46.500" starttime="20200922 13:36:46.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:46.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:46.501" starttime="20200922 13:36:46.500"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:46.501" starttime="20200922 13:36:41.727"></status>
</kw>
<msg timestamp="20200922 13:36:46.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:46.501" starttime="20200922 13:36:41.727"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:46.502" starttime="20200922 13:36:41.726"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:46.506" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 52245-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:50.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:50.970" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:50.970" starttime="20200922 13:36:46.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:50.971" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200922 13:36:50.971" starttime="20200922 13:36:50.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:50.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:50.972" starttime="20200922 13:36:50.971"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:50.972" starttime="20200922 13:36:46.503"></status>
</kw>
<msg timestamp="20200922 13:36:50.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:50.972" starttime="20200922 13:36:46.503"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:50.973" starttime="20200922 13:36:46.502"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:50.973" starttime="20200922 13:35:57.543"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:50.973" starttime="20200922 13:35:57.543"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:50.973" starttime="20200922 13:35:48.757"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:50.980" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:50.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:50.983" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:36:50.983" starttime="20200922 13:36:50.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:50.984" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:36:50.984" starttime="20200922 13:36:50.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:50.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:50.985" starttime="20200922 13:36:50.984"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:50.985" starttime="20200922 13:36:50.977"></status>
</kw>
<msg timestamp="20200922 13:36:50.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:50.985" starttime="20200922 13:36:50.977"></status>
</kw>
<msg timestamp="20200922 13:36:50.985" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:36:50.986" starttime="20200922 13:36:50.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:36:50.987" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:36:50.987" starttime="20200922 13:36:50.986"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:50.992" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:51.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:51.003" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:36:51.003" starttime="20200922 13:36:50.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:51.004" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:36:51.004" starttime="20200922 13:36:51.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:51.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:51.005" starttime="20200922 13:36:51.004"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:51.005" starttime="20200922 13:36:50.989"></status>
</kw>
<msg timestamp="20200922 13:36:51.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:51.005" starttime="20200922 13:36:50.988"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:51.005" starttime="20200922 13:36:50.988"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:51.005" starttime="20200922 13:36:50.987"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:51.006" starttime="20200922 13:36:50.975"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:51.006" starttime="20200922 13:36:50.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:51.011" level="INFO">Running command 'ozone sh bucket link 52245-source/no-such-bucket 52245-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:36:55.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:36:55.766" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:36:55.766" starttime="20200922 13:36:51.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:36:55.768" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:36:55.768" starttime="20200922 13:36:55.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:36:55.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:36:55.770" starttime="20200922 13:36:55.768"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:55.770" starttime="20200922 13:36:51.007"></status>
</kw>
<msg timestamp="20200922 13:36:55.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:36:55.770" starttime="20200922 13:36:51.006"></status>
</kw>
<status status="PASS" endtime="20200922 13:36:55.771" starttime="20200922 13:36:51.006"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:36:55.773" level="INFO">Running command 'ozone sh key list 52245-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:00.189" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 13:37:00.189" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:37:00.189" starttime="20200922 13:36:55.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:00.191" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20200922 13:37:00.191" starttime="20200922 13:37:00.190"></status>
</kw>
<msg timestamp="20200922 13:37:00.191" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:37:00.191" starttime="20200922 13:36:55.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200922 13:37:00.192" starttime="20200922 13:37:00.191"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:37:00.192" critical="yes" starttime="20200922 13:36:50.973"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:00.200" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:00.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:00.202" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:37:00.202" starttime="20200922 13:37:00.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:00.203" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:37:00.204" starttime="20200922 13:37:00.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:00.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:00.205" starttime="20200922 13:37:00.204"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:00.205" starttime="20200922 13:37:00.197"></status>
</kw>
<msg timestamp="20200922 13:37:00.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:00.205" starttime="20200922 13:37:00.197"></status>
</kw>
<msg timestamp="20200922 13:37:00.205" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:37:00.206" starttime="20200922 13:37:00.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:37:00.206" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:37:00.206" starttime="20200922 13:37:00.206"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:00.212" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:00.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:00.229" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:37:00.229" starttime="20200922 13:37:00.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:00.230" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:37:00.230" starttime="20200922 13:37:00.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:00.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:00.232" starttime="20200922 13:37:00.231"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:00.232" starttime="20200922 13:37:00.208"></status>
</kw>
<msg timestamp="20200922 13:37:00.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:00.232" starttime="20200922 13:37:00.208"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:00.233" starttime="20200922 13:37:00.207"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:00.233" starttime="20200922 13:37:00.206"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:00.233" starttime="20200922 13:37:00.196"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:00.233" starttime="20200922 13:37:00.194"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:00.239" level="INFO">Running command 'ozone sh bucket link 52245-source/bucket1 52245-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:04.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:04.649" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:37:04.649" starttime="20200922 13:37:00.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:04.651" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:37:04.651" starttime="20200922 13:37:04.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:04.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:04.652" starttime="20200922 13:37:04.651"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:04.652" starttime="20200922 13:37:00.234"></status>
</kw>
<msg timestamp="20200922 13:37:04.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:04.653" starttime="20200922 13:37:00.234"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:04.653" starttime="20200922 13:37:00.233"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:04.660" level="INFO">Running command 'ozone sh bucket create 52245-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:09.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:09.545" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:37:09.545" starttime="20200922 13:37:04.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:09.546" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:37:09.546" starttime="20200922 13:37:09.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:09.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:09.547" starttime="20200922 13:37:09.547"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:09.548" starttime="20200922 13:37:04.655"></status>
</kw>
<msg timestamp="20200922 13:37:09.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:09.548" starttime="20200922 13:37:04.655"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:09.549" starttime="20200922 13:37:04.654"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:09.555" level="INFO">Running command 'ozone sh key put 52245-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:19.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:19.871" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:37:19.872" starttime="20200922 13:37:09.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:19.873" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:37:19.873" starttime="20200922 13:37:19.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:19.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:19.874" starttime="20200922 13:37:19.873"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:19.874" starttime="20200922 13:37:09.550"></status>
</kw>
<msg timestamp="20200922 13:37:19.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:19.874" starttime="20200922 13:37:09.549"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:19.875" starttime="20200922 13:37:09.549"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200922 13:37:19.877" level="INFO">${postfix} = 30368</msg>
<status status="PASS" endtime="20200922 13:37:19.877" starttime="20200922 13:37:19.876"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200922 13:37:19.877" level="INFO">${tmpfile} = /tmp/tempkey-30368</msg>
<status status="PASS" endtime="20200922 13:37:19.877" starttime="20200922 13:37:19.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:19.881" level="INFO">Running command 'ozone sh key get -f 52245-target/link1/key1 /tmp/tempkey-30368 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:27.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:27.191" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:37:27.191" starttime="20200922 13:37:19.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:27.192" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:37:27.192" starttime="20200922 13:37:27.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:27.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:27.193" starttime="20200922 13:37:27.192"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.193" starttime="20200922 13:37:19.879"></status>
</kw>
<msg timestamp="20200922 13:37:27.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:27.194" starttime="20200922 13:37:19.878"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.194" starttime="20200922 13:37:19.877"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200922 13:37:27.199" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-30368 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:27.202" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200922 13:37:27.202" starttime="20200922 13:37:27.194"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:27.209" level="INFO">Running command 'rm -f /tmp/tempkey-30368 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:27.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:27.211" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:37:27.211" starttime="20200922 13:37:27.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:27.213" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:37:27.213" starttime="20200922 13:37:27.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:27.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:27.214" starttime="20200922 13:37:27.213"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.214" starttime="20200922 13:37:27.204"></status>
</kw>
<msg timestamp="20200922 13:37:27.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:27.214" starttime="20200922 13:37:27.204"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.215" starttime="20200922 13:37:27.203"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:37:27.215" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200922 13:37:27.215" starttime="20200922 13:37:27.215"></status>
</kw>
<msg timestamp="20200922 13:37:27.216" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200922 13:37:27.216" starttime="20200922 13:37:19.875"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:37:27.217" starttime="20200922 13:37:27.217"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.217" starttime="20200922 13:37:19.875"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:37:27.218" critical="yes" starttime="20200922 13:37:00.193"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:27.225" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:27.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:27.227" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:37:27.228" starttime="20200922 13:37:27.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:27.229" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:37:27.229" starttime="20200922 13:37:27.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:27.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:27.230" starttime="20200922 13:37:27.229"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.230" starttime="20200922 13:37:27.222"></status>
</kw>
<msg timestamp="20200922 13:37:27.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:27.230" starttime="20200922 13:37:27.222"></status>
</kw>
<msg timestamp="20200922 13:37:27.231" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:37:27.231" starttime="20200922 13:37:27.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:37:27.232" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:37:27.232" starttime="20200922 13:37:27.231"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:27.236" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:27.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:27.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:37:27.249" starttime="20200922 13:37:27.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:27.250" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:37:27.250" starttime="20200922 13:37:27.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:27.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:27.251" starttime="20200922 13:37:27.251"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.252" starttime="20200922 13:37:27.233"></status>
</kw>
<msg timestamp="20200922 13:37:27.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:27.252" starttime="20200922 13:37:27.233"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.252" starttime="20200922 13:37:27.232"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.252" starttime="20200922 13:37:27.232"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.252" starttime="20200922 13:37:27.220"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:27.253" starttime="20200922 13:37:27.220"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:27.258" level="INFO">Running command 'ozone sh key put 52245-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:36.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:36.605" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:37:36.605" starttime="20200922 13:37:27.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:36.606" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:37:36.607" starttime="20200922 13:37:36.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:36.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:36.607" starttime="20200922 13:37:36.607"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:36.608" starttime="20200922 13:37:27.254"></status>
</kw>
<msg timestamp="20200922 13:37:36.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:36.608" starttime="20200922 13:37:27.254"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:36.608" starttime="20200922 13:37:27.253"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200922 13:37:36.610" level="INFO">${postfix} = 66275</msg>
<status status="PASS" endtime="20200922 13:37:36.611" starttime="20200922 13:37:36.610"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200922 13:37:36.611" level="INFO">${tmpfile} = /tmp/tempkey-66275</msg>
<status status="PASS" endtime="20200922 13:37:36.611" starttime="20200922 13:37:36.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:36.617" level="INFO">Running command 'ozone sh key get -f 52245-source/bucket1/key2 /tmp/tempkey-66275 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:43.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:43.466" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:37:43.466" starttime="20200922 13:37:36.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:43.468" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:37:43.468" starttime="20200922 13:37:43.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:43.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:43.469" starttime="20200922 13:37:43.468"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.469" starttime="20200922 13:37:36.612"></status>
</kw>
<msg timestamp="20200922 13:37:43.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:43.469" starttime="20200922 13:37:36.612"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.470" starttime="20200922 13:37:36.611"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200922 13:37:43.473" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-66275 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:43.476" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200922 13:37:43.476" starttime="20200922 13:37:43.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:43.482" level="INFO">Running command 'rm -f /tmp/tempkey-66275 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:43.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:43.485" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:37:43.485" starttime="20200922 13:37:43.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:43.486" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:37:43.486" starttime="20200922 13:37:43.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:43.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:43.487" starttime="20200922 13:37:43.486"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.487" starttime="20200922 13:37:43.478"></status>
</kw>
<msg timestamp="20200922 13:37:43.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:43.487" starttime="20200922 13:37:43.477"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.488" starttime="20200922 13:37:43.476"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:37:43.489" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200922 13:37:43.489" starttime="20200922 13:37:43.488"></status>
</kw>
<msg timestamp="20200922 13:37:43.489" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200922 13:37:43.489" starttime="20200922 13:37:36.609"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:37:43.490" starttime="20200922 13:37:43.489"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.490" starttime="20200922 13:37:36.609"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:37:43.490" critical="yes" starttime="20200922 13:37:27.219"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:43.499" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:43.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:43.501" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:37:43.501" starttime="20200922 13:37:43.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:43.502" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:37:43.502" starttime="20200922 13:37:43.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:43.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:43.503" starttime="20200922 13:37:43.502"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.503" starttime="20200922 13:37:43.495"></status>
</kw>
<msg timestamp="20200922 13:37:43.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:43.503" starttime="20200922 13:37:43.495"></status>
</kw>
<msg timestamp="20200922 13:37:43.504" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:37:43.504" starttime="20200922 13:37:43.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:37:43.505" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:37:43.505" starttime="20200922 13:37:43.504"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:43.511" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:43.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:43.522" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:37:43.522" starttime="20200922 13:37:43.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:43.524" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:37:43.524" starttime="20200922 13:37:43.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:43.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:43.526" starttime="20200922 13:37:43.525"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.526" starttime="20200922 13:37:43.507"></status>
</kw>
<msg timestamp="20200922 13:37:43.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:43.526" starttime="20200922 13:37:43.507"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.527" starttime="20200922 13:37:43.506"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.527" starttime="20200922 13:37:43.505"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.527" starttime="20200922 13:37:43.493"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:43.527" starttime="20200922 13:37:43.492"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:43.532" level="INFO">Running command 'ozone sh key list 52245-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:48.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:48.467" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20200922 13:37:48.467" starttime="20200922 13:37:43.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:48.469" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20200922 13:37:48.469" starttime="20200922 13:37:48.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:48.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:48.469" starttime="20200922 13:37:48.469"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:48.470" starttime="20200922 13:37:43.529"></status>
</kw>
<msg timestamp="20200922 13:37:48.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:48.470" starttime="20200922 13:37:43.528"></status>
</kw>
<msg timestamp="20200922 13:37:48.470" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20200922 13:37:48.470" starttime="20200922 13:37:43.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:48.476" level="INFO">Running command 'ozone sh key list 52245-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:53.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:53.583" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20200922 13:37:53.584" starttime="20200922 13:37:48.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:53.585" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20200922 13:37:53.585" starttime="20200922 13:37:53.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:53.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:53.586" starttime="20200922 13:37:53.585"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:53.586" starttime="20200922 13:37:48.472"></status>
</kw>
<msg timestamp="20200922 13:37:53.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:53.589" starttime="20200922 13:37:48.471"></status>
</kw>
<msg timestamp="20200922 13:37:53.590" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20200922 13:37:53.590" starttime="20200922 13:37:48.471"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:37:53.590" starttime="20200922 13:37:53.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200922 13:37:53.591" starttime="20200922 13:37:53.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200922 13:37:53.591" starttime="20200922 13:37:53.591"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:37:53.592" critical="yes" starttime="20200922 13:37:43.491"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:53.602" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:53.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:53.603" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:37:53.604" starttime="20200922 13:37:53.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:53.605" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:37:53.605" starttime="20200922 13:37:53.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:53.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:53.606" starttime="20200922 13:37:53.605"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:53.606" starttime="20200922 13:37:53.597"></status>
</kw>
<msg timestamp="20200922 13:37:53.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:53.606" starttime="20200922 13:37:53.596"></status>
</kw>
<msg timestamp="20200922 13:37:53.607" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:37:53.607" starttime="20200922 13:37:53.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:37:53.607" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:37:53.608" starttime="20200922 13:37:53.607"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:53.616" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:53.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:53.632" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:37:53.632" starttime="20200922 13:37:53.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:53.634" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:37:53.639" starttime="20200922 13:37:53.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:53.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:53.640" starttime="20200922 13:37:53.639"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:53.640" starttime="20200922 13:37:53.610"></status>
</kw>
<msg timestamp="20200922 13:37:53.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:53.641" starttime="20200922 13:37:53.610"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:53.641" starttime="20200922 13:37:53.608"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:53.641" starttime="20200922 13:37:53.608"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:53.641" starttime="20200922 13:37:53.594"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:53.641" starttime="20200922 13:37:53.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:53.648" level="INFO">Running command 'ozone sh key delete 52245-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:37:58.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:37:58.421" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:37:58.421" starttime="20200922 13:37:53.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:37:58.423" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:37:58.423" starttime="20200922 13:37:58.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:37:58.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:37:58.424" starttime="20200922 13:37:58.423"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:58.424" starttime="20200922 13:37:53.643"></status>
</kw>
<msg timestamp="20200922 13:37:58.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:37:58.425" starttime="20200922 13:37:53.642"></status>
</kw>
<status status="PASS" endtime="20200922 13:37:58.425" starttime="20200922 13:37:53.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:37:58.456" level="INFO">Running command 'ozone sh key list 52245-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:03.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:03.574" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200922 13:38:03.574" starttime="20200922 13:37:58.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:03.575" level="INFO">key1</msg>
<status status="PASS" endtime="20200922 13:38:03.576" starttime="20200922 13:38:03.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:03.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:03.577" starttime="20200922 13:38:03.576"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:03.577" starttime="20200922 13:37:58.437"></status>
</kw>
<msg timestamp="20200922 13:38:03.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:03.578" starttime="20200922 13:37:58.426"></status>
</kw>
<msg timestamp="20200922 13:38:03.578" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20200922 13:38:03.578" starttime="20200922 13:37:58.425"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200922 13:38:03.579" starttime="20200922 13:38:03.578"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:38:03.579" critical="yes" starttime="20200922 13:37:53.592"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:03.589" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:03.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:03.590" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:38:03.590" starttime="20200922 13:38:03.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:03.591" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:38:03.591" starttime="20200922 13:38:03.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:03.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:03.592" starttime="20200922 13:38:03.591"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:03.592" starttime="20200922 13:38:03.583"></status>
</kw>
<msg timestamp="20200922 13:38:03.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:03.593" starttime="20200922 13:38:03.583"></status>
</kw>
<msg timestamp="20200922 13:38:03.593" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:38:03.593" starttime="20200922 13:38:03.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:38:03.594" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:38:03.594" starttime="20200922 13:38:03.593"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:03.599" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:03.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:03.616" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:38:03.616" starttime="20200922 13:38:03.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:03.617" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:38:03.618" starttime="20200922 13:38:03.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:03.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:03.618" starttime="20200922 13:38:03.618"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:03.619" starttime="20200922 13:38:03.595"></status>
</kw>
<msg timestamp="20200922 13:38:03.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:03.620" starttime="20200922 13:38:03.595"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:03.620" starttime="20200922 13:38:03.594"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:03.620" starttime="20200922 13:38:03.594"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:03.621" starttime="20200922 13:38:03.581"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:03.621" starttime="20200922 13:38:03.581"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:03.627" level="INFO">Running command 'ozone sh bucket list 52245-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:09.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:09.746" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:38:09.746" starttime="20200922 13:38:03.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:09.747" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:36:55.412Z",
  "modificationTime" : "2020-09-22T13:36:55.412Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:36:28.720Z",
  "modificationTime" : "2020-09-22T13:36:28.720Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:37:04.557Z",
  "modificationTime" : "2020-09-22T13:37:04.557Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:36:20.055Z",
  "modificationTime" : "2020-09-22T13:36:20.055Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:36:24.222Z",
  "modificationTime" : "2020-09-22T13:36:24.222Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200922 13:38:09.748" starttime="20200922 13:38:09.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:09.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:09.748" starttime="20200922 13:38:09.748"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:09.749" starttime="20200922 13:38:03.622"></status>
</kw>
<msg timestamp="20200922 13:38:09.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:09.749" starttime="20200922 13:38:03.622"></status>
</kw>
<msg timestamp="20200922 13:38:09.749" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:38:09.750" starttime="20200922 13:38:03.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200922 13:38:09.750" starttime="20200922 13:38:09.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20200922 13:38:09.751" starttime="20200922 13:38:09.750"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:38:09.751" critical="yes" starttime="20200922 13:38:03.580"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:09.759" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:09.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:09.761" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:38:09.761" starttime="20200922 13:38:09.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:09.762" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:38:09.762" starttime="20200922 13:38:09.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:09.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:09.763" starttime="20200922 13:38:09.762"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:09.763" starttime="20200922 13:38:09.755"></status>
</kw>
<msg timestamp="20200922 13:38:09.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:09.763" starttime="20200922 13:38:09.755"></status>
</kw>
<msg timestamp="20200922 13:38:09.763" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:38:09.763" starttime="20200922 13:38:09.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:38:09.764" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:38:09.764" starttime="20200922 13:38:09.764"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:09.770" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:09.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:09.780" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:38:09.780" starttime="20200922 13:38:09.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:09.781" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:38:09.781" starttime="20200922 13:38:09.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:09.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:09.782" starttime="20200922 13:38:09.782"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:09.783" starttime="20200922 13:38:09.766"></status>
</kw>
<msg timestamp="20200922 13:38:09.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:09.783" starttime="20200922 13:38:09.766"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:09.783" starttime="20200922 13:38:09.765"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:09.783" starttime="20200922 13:38:09.764"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:09.783" starttime="20200922 13:38:09.753"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:09.784" starttime="20200922 13:38:09.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:09.788" level="INFO">Running command 'ozone sh bucket info 52245-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:14.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:14.446" level="INFO">${output} = 52245-source bucket1</msg>
<status status="PASS" endtime="20200922 13:38:14.446" starttime="20200922 13:38:09.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:14.447" level="INFO">52245-source bucket1</msg>
<status status="PASS" endtime="20200922 13:38:14.447" starttime="20200922 13:38:14.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:14.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:14.448" starttime="20200922 13:38:14.447"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:14.448" starttime="20200922 13:38:09.785"></status>
</kw>
<msg timestamp="20200922 13:38:14.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:14.449" starttime="20200922 13:38:09.785"></status>
</kw>
<msg timestamp="20200922 13:38:14.449" level="INFO">${result} = 52245-source bucket1</msg>
<status status="PASS" endtime="20200922 13:38:14.449" starttime="20200922 13:38:09.784"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20200922 13:38:14.450" starttime="20200922 13:38:14.449"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:38:14.450" critical="yes" starttime="20200922 13:38:09.752"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:14.458" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:14.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:14.459" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:38:14.459" starttime="20200922 13:38:14.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:14.461" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:38:14.461" starttime="20200922 13:38:14.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:14.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:14.462" starttime="20200922 13:38:14.461"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:14.462" starttime="20200922 13:38:14.454"></status>
</kw>
<msg timestamp="20200922 13:38:14.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:14.462" starttime="20200922 13:38:14.453"></status>
</kw>
<msg timestamp="20200922 13:38:14.463" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:38:14.463" starttime="20200922 13:38:14.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:38:14.464" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:38:14.464" starttime="20200922 13:38:14.463"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:14.470" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:14.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:14.487" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:38:14.487" starttime="20200922 13:38:14.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:14.489" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:38:14.489" starttime="20200922 13:38:14.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:14.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:14.489" starttime="20200922 13:38:14.489"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:14.490" starttime="20200922 13:38:14.466"></status>
</kw>
<msg timestamp="20200922 13:38:14.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:14.490" starttime="20200922 13:38:14.465"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:14.490" starttime="20200922 13:38:14.464"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:14.490" starttime="20200922 13:38:14.464"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:14.491" starttime="20200922 13:38:14.452"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:14.491" starttime="20200922 13:38:14.452"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:14.496" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 52245-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:18.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:18.706" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:38:18.706" starttime="20200922 13:38:14.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:18.707" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200922 13:38:18.707" starttime="20200922 13:38:18.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:18.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:18.708" starttime="20200922 13:38:18.707"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:18.708" starttime="20200922 13:38:14.492"></status>
</kw>
<msg timestamp="20200922 13:38:18.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:18.708" starttime="20200922 13:38:14.492"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:18.709" starttime="20200922 13:38:14.491"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:18.714" level="INFO">Running command 'ozone sh bucket getacl 52245-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:22.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:22.787" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200922 13:38:22.787" starttime="20200922 13:38:18.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:22.788" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200922 13:38:22.788" starttime="20200922 13:38:22.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:22.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:22.789" starttime="20200922 13:38:22.788"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:22.789" starttime="20200922 13:38:18.711"></status>
</kw>
<msg timestamp="20200922 13:38:22.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:22.790" starttime="20200922 13:38:18.710"></status>
</kw>
<msg timestamp="20200922 13:38:22.790" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200922 13:38:22.790" starttime="20200922 13:38:18.710"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:38:22.791" starttime="20200922 13:38:22.790"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:22.791" starttime="20200922 13:38:18.709"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:22.797" level="INFO">Running command 'ozone sh bucket getacl 52245-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:27.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:27.373" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:38:27.373" starttime="20200922 13:38:22.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:27.375" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:38:27.375" starttime="20200922 13:38:27.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:27.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:27.376" starttime="20200922 13:38:27.375"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:27.376" starttime="20200922 13:38:22.794"></status>
</kw>
<msg timestamp="20200922 13:38:27.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:27.377" starttime="20200922 13:38:22.793"></status>
</kw>
<msg timestamp="20200922 13:38:27.377" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200922 13:38:27.377" starttime="20200922 13:38:22.792"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:38:27.378" starttime="20200922 13:38:27.377"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:27.378" starttime="20200922 13:38:22.791"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:27.382" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 52245-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:31.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:31.413" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:38:31.413" starttime="20200922 13:38:27.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:31.414" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200922 13:38:31.414" starttime="20200922 13:38:31.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:31.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:31.415" starttime="20200922 13:38:31.414"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:31.415" starttime="20200922 13:38:27.379"></status>
</kw>
<msg timestamp="20200922 13:38:31.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:31.415" starttime="20200922 13:38:27.379"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:31.415" starttime="20200922 13:38:27.378"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:31.421" level="INFO">Running command 'ozone sh bucket getacl 52245-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:35.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:35.562" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:38:35.562" starttime="20200922 13:38:31.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:35.563" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:38:35.563" starttime="20200922 13:38:35.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:35.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:35.564" starttime="20200922 13:38:35.564"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:35.565" starttime="20200922 13:38:31.418"></status>
</kw>
<msg timestamp="20200922 13:38:35.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:35.565" starttime="20200922 13:38:31.418"></status>
</kw>
<msg timestamp="20200922 13:38:35.565" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200922 13:38:35.565" starttime="20200922 13:38:31.416"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:38:35.566" starttime="20200922 13:38:35.565"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:35.566" starttime="20200922 13:38:31.416"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:35.571" level="INFO">Running command 'ozone sh bucket getacl 52245-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:39.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:39.750" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20200922 13:38:39.750" starttime="20200922 13:38:35.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:39.752" level="INFO">READ</msg>
<status status="PASS" endtime="20200922 13:38:39.752" starttime="20200922 13:38:39.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:39.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:39.753" starttime="20200922 13:38:39.752"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:39.753" starttime="20200922 13:38:35.568"></status>
</kw>
<msg timestamp="20200922 13:38:39.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:39.754" starttime="20200922 13:38:35.568"></status>
</kw>
<msg timestamp="20200922 13:38:39.754" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20200922 13:38:39.754" starttime="20200922 13:38:35.567"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:38:39.755" starttime="20200922 13:38:39.754"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:39.755" starttime="20200922 13:38:35.566"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:38:39.756" critical="yes" starttime="20200922 13:38:14.451"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:39.766" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:39.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:39.768" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:38:39.768" starttime="20200922 13:38:39.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:39.769" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:38:39.769" starttime="20200922 13:38:39.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:39.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:39.770" starttime="20200922 13:38:39.769"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:39.770" starttime="20200922 13:38:39.761"></status>
</kw>
<msg timestamp="20200922 13:38:39.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:39.771" starttime="20200922 13:38:39.760"></status>
</kw>
<msg timestamp="20200922 13:38:39.771" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:38:39.771" starttime="20200922 13:38:39.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:38:39.772" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:38:39.772" starttime="20200922 13:38:39.771"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:39.776" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:39.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:39.802" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:38:39.802" starttime="20200922 13:38:39.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:39.804" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:38:39.804" starttime="20200922 13:38:39.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:39.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:39.804" starttime="20200922 13:38:39.804"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:39.805" starttime="20200922 13:38:39.774"></status>
</kw>
<msg timestamp="20200922 13:38:39.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:39.805" starttime="20200922 13:38:39.773"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:39.805" starttime="20200922 13:38:39.773"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:39.805" starttime="20200922 13:38:39.772"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:39.806" starttime="20200922 13:38:39.759"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:39.806" starttime="20200922 13:38:39.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:39.812" level="INFO">Running command 'ozone sh bucket link 52245-source/bucket2 52245-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:44.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:44.373" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:38:44.373" starttime="20200922 13:38:39.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:44.375" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:38:44.375" starttime="20200922 13:38:44.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:44.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:44.377" starttime="20200922 13:38:44.376"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:44.377" starttime="20200922 13:38:39.808"></status>
</kw>
<msg timestamp="20200922 13:38:44.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:44.378" starttime="20200922 13:38:39.807"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:44.378" starttime="20200922 13:38:39.806"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:44.381" level="INFO">Running command 'ozone sh bucket create 52245-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:48.642" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 13:38:48.642" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:38:48.642" starttime="20200922 13:38:44.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:48.643" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200922 13:38:48.644" starttime="20200922 13:38:48.643"></status>
</kw>
<msg timestamp="20200922 13:38:48.644" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:38:48.644" starttime="20200922 13:38:44.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200922 13:38:48.645" starttime="20200922 13:38:48.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:48.651" level="INFO">Running command 'ozone sh bucket create 52245-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:53.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:53.318" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:38:53.318" starttime="20200922 13:38:48.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:53.319" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:38:53.319" starttime="20200922 13:38:53.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:53.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:53.320" starttime="20200922 13:38:53.320"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:53.321" starttime="20200922 13:38:48.646"></status>
</kw>
<msg timestamp="20200922 13:38:53.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:53.321" starttime="20200922 13:38:48.646"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:53.321" starttime="20200922 13:38:48.645"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:53.327" level="INFO">Running command 'ozone sh bucket link 52245-source/bucket1 52245-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:58.369" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 13:38:58.369" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:38:58.369" starttime="20200922 13:38:53.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.370" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200922 13:38:58.370" starttime="20200922 13:38:58.369"></status>
</kw>
<msg timestamp="20200922 13:38:58.371" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:38:58.371" starttime="20200922 13:38:53.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200922 13:38:58.372" starttime="20200922 13:38:58.371"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:38:58.372" critical="yes" starttime="20200922 13:38:39.757"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:58.379" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:58.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:58.381" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:38:58.381" starttime="20200922 13:38:58.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.383" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:38:58.383" starttime="20200922 13:38:58.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:58.384" starttime="20200922 13:38:58.383"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.384" starttime="20200922 13:38:58.376"></status>
</kw>
<msg timestamp="20200922 13:38:58.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:58.384" starttime="20200922 13:38:58.375"></status>
</kw>
<msg timestamp="20200922 13:38:58.384" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:38:58.385" starttime="20200922 13:38:58.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:38:58.385" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:38:58.385" starttime="20200922 13:38:58.385"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:58.391" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:58.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:58.402" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:38:58.402" starttime="20200922 13:38:58.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.403" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:38:58.403" starttime="20200922 13:38:58.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:58.404" starttime="20200922 13:38:58.404"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.405" starttime="20200922 13:38:58.387"></status>
</kw>
<msg timestamp="20200922 13:38:58.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:58.405" starttime="20200922 13:38:58.387"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.405" starttime="20200922 13:38:58.386"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.405" starttime="20200922 13:38:58.386"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.405" starttime="20200922 13:38:58.374"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.406" starttime="20200922 13:38:58.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:58.418" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:58.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:58.421" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:38:58.421" starttime="20200922 13:38:58.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.422" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:38:58.423" starttime="20200922 13:38:58.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:58.425" starttime="20200922 13:38:58.423"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.427" starttime="20200922 13:38:58.411"></status>
</kw>
<msg timestamp="20200922 13:38:58.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:58.427" starttime="20200922 13:38:58.409"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.428" starttime="20200922 13:38:58.407"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:58.432" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:58.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:58.437" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:38:58.437" starttime="20200922 13:38:58.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.438" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:38:58.438" starttime="20200922 13:38:58.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:58.439" starttime="20200922 13:38:58.438"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.439" starttime="20200922 13:38:58.430"></status>
</kw>
<msg timestamp="20200922 13:38:58.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:58.439" starttime="20200922 13:38:58.429"></status>
</kw>
<msg timestamp="20200922 13:38:58.440" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:38:58.440" starttime="20200922 13:38:58.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:38:58.441" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:38:58.441" starttime="20200922 13:38:58.440"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:58.445" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:38:58.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:38:58.457" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:38:58.457" starttime="20200922 13:38:58.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.458" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:38:58.458" starttime="20200922 13:38:58.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:38:58.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:38:58.459" starttime="20200922 13:38:58.458"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.460" starttime="20200922 13:38:58.443"></status>
</kw>
<msg timestamp="20200922 13:38:58.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:38:58.460" starttime="20200922 13:38:58.442"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.460" starttime="20200922 13:38:58.441"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.460" starttime="20200922 13:38:58.441"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.460" starttime="20200922 13:38:58.428"></status>
</kw>
<status status="PASS" endtime="20200922 13:38:58.461" starttime="20200922 13:38:58.428"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:38:58.464" level="INFO">Running command 'ozone sh key list 52245-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:03.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:03.006" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:03.006" starttime="20200922 13:38:58.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.007" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "52245-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-09-22T13:36:05.990Z",
  "modificationTime" : "2020-09-22T13:36:10.875Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20200922 13:39:03.007" starttime="20200922 13:39:03.006"></status>
</kw>
<msg timestamp="20200922 13:39:03.008" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:03.008" starttime="20200922 13:38:58.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200922 13:39:03.009" starttime="20200922 13:39:03.008"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.009" starttime="20200922 13:38:58.406"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.009" starttime="20200922 13:38:58.406"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:39:03.009" critical="yes" starttime="20200922 13:38:58.373"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:03.020" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:03.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:03.026" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:39:03.026" starttime="20200922 13:39:03.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.029" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:39:03.029" starttime="20200922 13:39:03.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:03.030" starttime="20200922 13:39:03.029"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.030" starttime="20200922 13:39:03.015"></status>
</kw>
<msg timestamp="20200922 13:39:03.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:03.031" starttime="20200922 13:39:03.015"></status>
</kw>
<msg timestamp="20200922 13:39:03.035" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:39:03.035" starttime="20200922 13:39:03.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:39:03.036" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:39:03.036" starttime="20200922 13:39:03.035"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:03.042" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:03.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:03.070" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:39:03.070" starttime="20200922 13:39:03.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.072" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:39:03.072" starttime="20200922 13:39:03.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:03.073" starttime="20200922 13:39:03.072"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.075" starttime="20200922 13:39:03.038"></status>
</kw>
<msg timestamp="20200922 13:39:03.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:03.075" starttime="20200922 13:39:03.038"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.076" starttime="20200922 13:39:03.037"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.076" starttime="20200922 13:39:03.037"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.078" starttime="20200922 13:39:03.012"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.078" starttime="20200922 13:39:03.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:03.084" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:03.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:03.097" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:39:03.097" starttime="20200922 13:39:03.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.098" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:39:03.099" starttime="20200922 13:39:03.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:03.099" starttime="20200922 13:39:03.099"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.100" starttime="20200922 13:39:03.080"></status>
</kw>
<msg timestamp="20200922 13:39:03.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:03.100" starttime="20200922 13:39:03.080"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.100" starttime="20200922 13:39:03.079"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:03.106" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:03.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:03.110" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:39:03.110" starttime="20200922 13:39:03.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.111" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:39:03.112" starttime="20200922 13:39:03.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:03.113" starttime="20200922 13:39:03.112"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.113" starttime="20200922 13:39:03.103"></status>
</kw>
<msg timestamp="20200922 13:39:03.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:03.113" starttime="20200922 13:39:03.103"></status>
</kw>
<msg timestamp="20200922 13:39:03.113" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:39:03.113" starttime="20200922 13:39:03.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:39:03.114" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:39:03.114" starttime="20200922 13:39:03.114"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:03.122" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:03.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:03.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:39:03.134" starttime="20200922 13:39:03.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.135" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:39:03.135" starttime="20200922 13:39:03.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:03.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:03.136" starttime="20200922 13:39:03.135"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.137" starttime="20200922 13:39:03.117"></status>
</kw>
<msg timestamp="20200922 13:39:03.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:03.137" starttime="20200922 13:39:03.116"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.138" starttime="20200922 13:39:03.116"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.138" starttime="20200922 13:39:03.115"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.138" starttime="20200922 13:39:03.101"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:03.138" starttime="20200922 13:39:03.101"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:03.142" level="INFO">Running command 'ozone sh key list 52245-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:07.597" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 13:39:07.597" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:07.598" starttime="20200922 13:39:03.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.599" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20200922 13:39:07.599" starttime="20200922 13:39:07.598"></status>
</kw>
<msg timestamp="20200922 13:39:07.599" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:07.599" starttime="20200922 13:39:03.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200922 13:39:07.600" starttime="20200922 13:39:07.600"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.600" starttime="20200922 13:39:03.079"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.600" starttime="20200922 13:39:03.078"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:39:07.601" critical="yes" starttime="20200922 13:39:03.010"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:07.610" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:07.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:07.611" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:39:07.611" starttime="20200922 13:39:07.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.613" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:39:07.613" starttime="20200922 13:39:07.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:07.614" starttime="20200922 13:39:07.613"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.615" starttime="20200922 13:39:07.605"></status>
</kw>
<msg timestamp="20200922 13:39:07.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:07.615" starttime="20200922 13:39:07.604"></status>
</kw>
<msg timestamp="20200922 13:39:07.615" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:39:07.615" starttime="20200922 13:39:07.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:39:07.616" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:39:07.617" starttime="20200922 13:39:07.616"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:07.623" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:07.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:07.635" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:39:07.635" starttime="20200922 13:39:07.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.637" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:39:07.637" starttime="20200922 13:39:07.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:07.638" starttime="20200922 13:39:07.637"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.638" starttime="20200922 13:39:07.619"></status>
</kw>
<msg timestamp="20200922 13:39:07.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:07.638" starttime="20200922 13:39:07.618"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.638" starttime="20200922 13:39:07.617"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.638" starttime="20200922 13:39:07.617"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.639" starttime="20200922 13:39:07.603"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.639" starttime="20200922 13:39:07.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:07.647" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:07.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:07.650" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:39:07.650" starttime="20200922 13:39:07.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.651" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:39:07.651" starttime="20200922 13:39:07.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:07.652" starttime="20200922 13:39:07.651"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.652" starttime="20200922 13:39:07.642"></status>
</kw>
<msg timestamp="20200922 13:39:07.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:07.653" starttime="20200922 13:39:07.641"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.653" starttime="20200922 13:39:07.640"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:07.661" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:07.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:07.663" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:39:07.664" starttime="20200922 13:39:07.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.667" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:39:07.667" starttime="20200922 13:39:07.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:07.670" starttime="20200922 13:39:07.667"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.671" starttime="20200922 13:39:07.655"></status>
</kw>
<msg timestamp="20200922 13:39:07.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:07.671" starttime="20200922 13:39:07.655"></status>
</kw>
<msg timestamp="20200922 13:39:07.671" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:39:07.671" starttime="20200922 13:39:07.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:39:07.672" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:39:07.672" starttime="20200922 13:39:07.671"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:07.678" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:07.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:07.691" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:39:07.691" starttime="20200922 13:39:07.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.692" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:39:07.692" starttime="20200922 13:39:07.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:07.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:07.694" starttime="20200922 13:39:07.693"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.694" starttime="20200922 13:39:07.675"></status>
</kw>
<msg timestamp="20200922 13:39:07.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:07.694" starttime="20200922 13:39:07.675"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.694" starttime="20200922 13:39:07.673"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.695" starttime="20200922 13:39:07.673"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.695" starttime="20200922 13:39:07.653"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:07.695" starttime="20200922 13:39:07.653"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:07.702" level="INFO">Running command 'ozone sh bucket info 52245-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:12.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:12.201" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:12.201" starttime="20200922 13:39:07.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:12.203" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:36:28.720Z",
  "modificationTime" : "2020-09-22T13:36:28.720Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "unreadable-bucket"
}</msg>
<status status="PASS" endtime="20200922 13:39:12.203" starttime="20200922 13:39:12.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:12.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:12.204" starttime="20200922 13:39:12.203"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:12.204" starttime="20200922 13:39:07.697"></status>
</kw>
<msg timestamp="20200922 13:39:12.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:12.205" starttime="20200922 13:39:07.696"></status>
</kw>
<msg timestamp="20200922 13:39:12.205" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:12.205" starttime="20200922 13:39:07.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200922 13:39:12.206" starttime="20200922 13:39:12.205"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200922 13:39:12.206" starttime="20200922 13:39:12.206"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:12.210" level="INFO">Running command 'ozone sh key list 52245-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:16.442" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 13:39:16.442" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:16.442" starttime="20200922 13:39:12.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:16.443" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20200922 13:39:16.444" starttime="20200922 13:39:16.443"></status>
</kw>
<msg timestamp="20200922 13:39:16.444" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:16.444" starttime="20200922 13:39:12.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200922 13:39:16.445" starttime="20200922 13:39:16.444"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:16.445" starttime="20200922 13:39:07.640"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:16.445" starttime="20200922 13:39:07.639"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:39:16.445" critical="yes" starttime="20200922 13:39:07.601"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:16.454" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:16.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:16.457" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:39:16.457" starttime="20200922 13:39:16.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:16.458" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:39:16.458" starttime="20200922 13:39:16.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:16.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:16.459" starttime="20200922 13:39:16.458"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:16.459" starttime="20200922 13:39:16.451"></status>
</kw>
<msg timestamp="20200922 13:39:16.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:16.460" starttime="20200922 13:39:16.449"></status>
</kw>
<msg timestamp="20200922 13:39:16.460" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:39:16.460" starttime="20200922 13:39:16.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:39:16.461" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:39:16.461" starttime="20200922 13:39:16.460"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:16.467" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:16.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:16.477" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:39:16.477" starttime="20200922 13:39:16.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:16.479" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:39:16.479" starttime="20200922 13:39:16.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:16.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:16.479" starttime="20200922 13:39:16.479"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:16.480" starttime="20200922 13:39:16.463"></status>
</kw>
<msg timestamp="20200922 13:39:16.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:16.480" starttime="20200922 13:39:16.462"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:16.480" starttime="20200922 13:39:16.462"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:16.480" starttime="20200922 13:39:16.461"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:16.481" starttime="20200922 13:39:16.448"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:16.481" starttime="20200922 13:39:16.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:16.487" level="INFO">Running command 'ozone sh bucket link 52245-target/loop1 52245-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:21.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:21.117" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:21.117" starttime="20200922 13:39:16.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:21.118" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:39:21.118" starttime="20200922 13:39:21.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:21.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:21.119" starttime="20200922 13:39:21.119"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:21.120" starttime="20200922 13:39:16.483"></status>
</kw>
<msg timestamp="20200922 13:39:21.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:21.120" starttime="20200922 13:39:16.482"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:21.120" starttime="20200922 13:39:16.481"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:21.125" level="INFO">Running command 'ozone sh bucket link 52245-target/loop2 52245-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:25.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:25.723" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:25.723" starttime="20200922 13:39:21.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:25.724" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:39:25.724" starttime="20200922 13:39:25.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:25.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:25.725" starttime="20200922 13:39:25.724"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:25.725" starttime="20200922 13:39:21.121"></status>
</kw>
<msg timestamp="20200922 13:39:25.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:25.726" starttime="20200922 13:39:21.121"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:25.726" starttime="20200922 13:39:21.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:25.731" level="INFO">Running command 'ozone sh bucket link 52245-target/loop3 52245-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:30.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:30.274" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:30.274" starttime="20200922 13:39:25.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:30.275" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:39:30.275" starttime="20200922 13:39:30.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:30.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:30.276" starttime="20200922 13:39:30.275"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:30.276" starttime="20200922 13:39:25.727"></status>
</kw>
<msg timestamp="20200922 13:39:30.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:30.277" starttime="20200922 13:39:25.727"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:30.277" starttime="20200922 13:39:25.726"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:30.283" level="INFO">Running command 'ozone sh key list 52245-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:34.624" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 13:39:34.624" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:34.624" starttime="20200922 13:39:30.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:34.626" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20200922 13:39:34.626" starttime="20200922 13:39:34.625"></status>
</kw>
<msg timestamp="20200922 13:39:34.627" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:34.627" starttime="20200922 13:39:30.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20200922 13:39:34.628" starttime="20200922 13:39:34.627"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:39:34.629" critical="yes" starttime="20200922 13:39:16.446"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:34.638" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:34.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:34.641" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:39:34.642" starttime="20200922 13:39:34.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:34.643" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:39:34.643" starttime="20200922 13:39:34.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:34.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:34.644" starttime="20200922 13:39:34.643"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:34.645" starttime="20200922 13:39:34.633"></status>
</kw>
<msg timestamp="20200922 13:39:34.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:34.645" starttime="20200922 13:39:34.633"></status>
</kw>
<msg timestamp="20200922 13:39:34.646" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:39:34.646" starttime="20200922 13:39:34.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:39:34.647" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:39:34.647" starttime="20200922 13:39:34.646"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:34.652" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:34.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:34.669" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:39:34.669" starttime="20200922 13:39:34.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:34.670" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:39:34.671" starttime="20200922 13:39:34.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:34.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:34.671" starttime="20200922 13:39:34.671"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:34.672" starttime="20200922 13:39:34.649"></status>
</kw>
<msg timestamp="20200922 13:39:34.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:34.672" starttime="20200922 13:39:34.648"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:34.672" starttime="20200922 13:39:34.648"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:34.672" starttime="20200922 13:39:34.647"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:34.672" starttime="20200922 13:39:34.631"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:34.673" starttime="20200922 13:39:34.631"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:34.676" level="INFO">Running command 'ozone sh bucket link 52245-source/bucket1 52245-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:38.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:38.881" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:38.882" starttime="20200922 13:39:34.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:38.883" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:39:38.883" starttime="20200922 13:39:38.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:38.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:38.883" starttime="20200922 13:39:38.883"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:38.884" starttime="20200922 13:39:34.674"></status>
</kw>
<msg timestamp="20200922 13:39:38.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:38.884" starttime="20200922 13:39:34.674"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:38.884" starttime="20200922 13:39:34.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:38.889" level="INFO">Running command 'ozone sh key put 52245-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:48.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:48.231" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:48.231" starttime="20200922 13:39:38.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:48.232" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:39:48.233" starttime="20200922 13:39:48.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:48.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:48.234" starttime="20200922 13:39:48.233"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:48.234" starttime="20200922 13:39:38.886"></status>
</kw>
<msg timestamp="20200922 13:39:48.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:48.234" starttime="20200922 13:39:38.885"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:48.235" starttime="20200922 13:39:38.885"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20200922 13:39:48.242" level="INFO">${postfix} = 05981</msg>
<status status="PASS" endtime="20200922 13:39:48.242" starttime="20200922 13:39:48.237"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20200922 13:39:48.243" level="INFO">${tmpfile} = /tmp/tempkey-05981</msg>
<status status="PASS" endtime="20200922 13:39:48.243" starttime="20200922 13:39:48.242"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:48.247" level="INFO">Running command 'ozone sh key get -f 52245-target/link1/key3 /tmp/tempkey-05981 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:54.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:54.696" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:54.697" starttime="20200922 13:39:48.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:54.698" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:39:54.698" starttime="20200922 13:39:54.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:54.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:54.699" starttime="20200922 13:39:54.698"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.699" starttime="20200922 13:39:48.244"></status>
</kw>
<msg timestamp="20200922 13:39:54.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:54.699" starttime="20200922 13:39:48.244"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.699" starttime="20200922 13:39:48.243"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20200922 13:39:54.704" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-05981 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:54.705" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20200922 13:39:54.706" starttime="20200922 13:39:54.700"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:54.712" level="INFO">Running command 'rm -f /tmp/tempkey-05981 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:54.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:54.713" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:39:54.714" starttime="20200922 13:39:54.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:54.715" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:39:54.715" starttime="20200922 13:39:54.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:54.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:54.716" starttime="20200922 13:39:54.715"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.716" starttime="20200922 13:39:54.708"></status>
</kw>
<msg timestamp="20200922 13:39:54.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:54.717" starttime="20200922 13:39:54.707"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.717" starttime="20200922 13:39:54.706"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:39:54.719" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200922 13:39:54.719" starttime="20200922 13:39:54.718"></status>
</kw>
<msg timestamp="20200922 13:39:54.719" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20200922 13:39:54.719" starttime="20200922 13:39:48.236"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:39:54.720" starttime="20200922 13:39:54.719"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.720" starttime="20200922 13:39:48.235"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:39:54.721" critical="yes" starttime="20200922 13:39:34.630"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:54.728" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:54.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:54.730" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200922 13:39:54.730" starttime="20200922 13:39:54.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:54.732" level="INFO">scm</msg>
<status status="PASS" endtime="20200922 13:39:54.732" starttime="20200922 13:39:54.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:54.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:54.734" starttime="20200922 13:39:54.732"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.734" starttime="20200922 13:39:54.725"></status>
</kw>
<msg timestamp="20200922 13:39:54.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:54.734" starttime="20200922 13:39:54.724"></status>
</kw>
<msg timestamp="20200922 13:39:54.735" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200922 13:39:54.735" starttime="20200922 13:39:54.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200922 13:39:54.736" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200922 13:39:54.736" starttime="20200922 13:39:54.735"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:54.742" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:54.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:54.753" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:39:54.753" starttime="20200922 13:39:54.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:54.754" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:39:54.754" starttime="20200922 13:39:54.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:54.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:54.755" starttime="20200922 13:39:54.755"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.756" starttime="20200922 13:39:54.738"></status>
</kw>
<msg timestamp="20200922 13:39:54.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:54.756" starttime="20200922 13:39:54.737"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.757" starttime="20200922 13:39:54.736"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.757" starttime="20200922 13:39:54.736"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.757" starttime="20200922 13:39:54.723"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:54.757" starttime="20200922 13:39:54.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:54.762" level="INFO">Running command 'ozone sh bucket delete 52245-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:39:58.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:39:58.977" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:39:58.977" starttime="20200922 13:39:54.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:39:58.978" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200922 13:39:58.978" starttime="20200922 13:39:58.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:39:58.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:39:58.979" starttime="20200922 13:39:58.978"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:58.980" starttime="20200922 13:39:54.758"></status>
</kw>
<msg timestamp="20200922 13:39:58.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:39:58.980" starttime="20200922 13:39:54.758"></status>
</kw>
<status status="PASS" endtime="20200922 13:39:58.981" starttime="20200922 13:39:54.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:39:58.988" level="INFO">Running command 'ozone sh bucket list 52245-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:40:03.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:40:03.329" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:40:03.329" starttime="20200922 13:39:58.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:40:03.330" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:38:53.070Z",
  "modificationTime" : "2020-09-22T13:38:53.070Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:36:55.412Z",
  "modificationTime" : "2020-09-22T13:36:55.412Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:36:28.720Z",
  "modificationTime" : "2020-09-22T13:36:28.720Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:38:44.195Z",
  "modificationTime" : "2020-09-22T13:38:44.195Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:39:38.670Z",
  "modificationTime" : "2020-09-22T13:39:38.670Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:39:30.027Z",
  "modificationTime" : "2020-09-22T13:39:30.027Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:39:20.855Z",
  "modificationTime" : "2020-09-22T13:39:20.855Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:39:25.492Z",
  "modificationTime" : "2020-09-22T13:39:25.492Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-target",
  "sourceBucket" : "loop2"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:36:20.055Z",
  "modificationTime" : "2020-09-22T13:36:20.055Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "52245-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:36:24.222Z",
  "modificationTime" : "2020-09-22T13:36:24.222Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "52245-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200922 13:40:03.331" starttime="20200922 13:40:03.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:40:03.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:40:03.332" starttime="20200922 13:40:03.331"></status>
</kw>
<status status="PASS" endtime="20200922 13:40:03.333" starttime="20200922 13:39:58.983"></status>
</kw>
<msg timestamp="20200922 13:40:03.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:40:03.333" starttime="20200922 13:39:58.982"></status>
</kw>
<msg timestamp="20200922 13:40:03.333" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200922 13:40:03.333" starttime="20200922 13:39:58.981"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200922 13:40:03.334" starttime="20200922 13:40:03.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:40:03.340" level="INFO">Running command 'ozone sh key list 52245-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:40:07.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:40:07.926" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20200922 13:40:07.926" starttime="20200922 13:40:03.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:40:07.928" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20200922 13:40:07.928" starttime="20200922 13:40:07.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:40:07.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:40:07.930" starttime="20200922 13:40:07.928"></status>
</kw>
<status status="PASS" endtime="20200922 13:40:07.930" starttime="20200922 13:40:03.335"></status>
</kw>
<msg timestamp="20200922 13:40:07.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:40:07.930" starttime="20200922 13:40:03.335"></status>
</kw>
<msg timestamp="20200922 13:40:07.931" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20200922 13:40:07.931" starttime="20200922 13:40:03.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200922 13:40:07.932" starttime="20200922 13:40:07.931"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:40:07.932" critical="yes" starttime="20200922 13:39:54.722"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20200922 13:40:07.938" starttime="20200922 13:35:48.690"></status>
</suite>
<status status="PASS" elapsedtime="298581" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
