<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200922 13:13:15.815" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:15.037" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:17.840" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 12:57:17.840" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200922 12:57:17.840" starttime="20200922 12:57:15.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:17.842" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200922 12:57:17.842" starttime="20200922 12:57:17.841"></status>
</kw>
<msg timestamp="20200922 12:57:17.842" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200922 12:57:17.842" starttime="20200922 12:57:15.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:17.849" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:20.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:57:20.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 12:57:20.262" starttime="20200922 12:57:17.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:20.264" level="INFO"></msg>
<status status="PASS" endtime="20200922 12:57:20.264" starttime="20200922 12:57:20.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:57:20.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:57:20.264" starttime="20200922 12:57:20.264"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:20.265" starttime="20200922 12:57:17.845"></status>
</kw>
<msg timestamp="20200922 12:57:20.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:57:20.265" starttime="20200922 12:57:17.844"></status>
</kw>
<msg timestamp="20200922 12:57:20.265" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200922 12:57:20.265" starttime="20200922 12:57:17.844"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200922 12:57:20.266" starttime="20200922 12:57:20.265"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:20.266" starttime="20200922 12:57:17.843"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:20.267" starttime="20200922 12:57:17.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:20.273" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:22.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:57:22.589" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 12:57:22.589" starttime="20200922 12:57:20.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:22.590" level="INFO"></msg>
<status status="PASS" endtime="20200922 12:57:22.590" starttime="20200922 12:57:22.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:57:22.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:57:22.591" starttime="20200922 12:57:22.590"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:22.592" starttime="20200922 12:57:20.269"></status>
</kw>
<msg timestamp="20200922 12:57:22.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:57:22.592" starttime="20200922 12:57:20.269"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:22.592" starttime="20200922 12:57:20.268"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:22.592" starttime="20200922 12:57:20.268"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:22.592" starttime="20200922 12:57:20.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200922 12:57:22.593" starttime="20200922 12:57:22.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:22.599" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:25.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:57:25.227" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T12:57:22.545Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200922 12:57:25.227" starttime="20200922 12:57:22.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:25.228" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T12:57:22.545Z",
  "modificationTime" : "2020-09-22T12:57:22.545Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200922 12:57:25.228" starttime="20200922 12:57:25.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:57:25.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:57:25.229" starttime="20200922 12:57:25.228"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:25.229" starttime="20200922 12:57:22.595"></status>
</kw>
<msg timestamp="20200922 12:57:25.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:57:25.229" starttime="20200922 12:57:22.594"></status>
</kw>
<msg timestamp="20200922 12:57:25.230" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T12:57:22.545Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200922 12:57:25.230" starttime="20200922 12:57:22.593"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200922 12:57:25.230" starttime="20200922 12:57:25.230"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 12:57:25.234" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 12:57:25.235" starttime="20200922 12:57:25.234"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 12:57:25.235" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 12:57:25.235" starttime="20200922 12:57:25.235"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:25.235" starttime="20200922 12:57:25.233"></status>
</kw>
<msg timestamp="20200922 12:57:25.236" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 12:57:25.236" starttime="20200922 12:57:25.233"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:25.236" starttime="20200922 12:57:25.232"></status>
</kw>
<msg timestamp="20200922 12:57:25.236" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200922 12:57:25.236" starttime="20200922 12:57:25.231"></status>
</kw>
<msg timestamp="20200922 12:57:25.236" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200922 12:57:25.236" starttime="20200922 12:57:25.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:25.240" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:27.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:57:27.654" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 12:57:27.654" starttime="20200922 12:57:25.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:27.655" level="INFO"></msg>
<status status="PASS" endtime="20200922 12:57:27.656" starttime="20200922 12:57:27.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:57:27.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:57:27.656" starttime="20200922 12:57:27.656"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:27.657" starttime="20200922 12:57:25.238"></status>
</kw>
<msg timestamp="20200922 12:57:27.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:57:27.657" starttime="20200922 12:57:25.237"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:27.658" starttime="20200922 12:57:25.237"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:27.662" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:34.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:57:34.359" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 12:57:34.359" starttime="20200922 12:57:27.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:34.361" level="INFO"></msg>
<status status="PASS" endtime="20200922 12:57:34.361" starttime="20200922 12:57:34.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:57:34.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:57:34.362" starttime="20200922 12:57:34.361"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:34.362" starttime="20200922 12:57:27.659"></status>
</kw>
<msg timestamp="20200922 12:57:34.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:57:34.362" starttime="20200922 12:57:27.659"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:34.363" starttime="20200922 12:57:27.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:34.367" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:39.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:57:39.200" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 12:57:39.200" starttime="20200922 12:57:34.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:39.202" level="INFO"></msg>
<status status="PASS" endtime="20200922 12:57:39.202" starttime="20200922 12:57:39.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:57:39.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:57:39.202" starttime="20200922 12:57:39.202"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:39.203" starttime="20200922 12:57:34.364"></status>
</kw>
<msg timestamp="20200922 12:57:39.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:57:39.203" starttime="20200922 12:57:34.364"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:39.203" starttime="20200922 12:57:34.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:39.207" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:43.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:57:43.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 12:57:43.970" starttime="20200922 12:57:39.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:43.972" level="INFO"></msg>
<status status="PASS" endtime="20200922 12:57:43.972" starttime="20200922 12:57:43.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:57:43.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:57:43.973" starttime="20200922 12:57:43.972"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:43.974" starttime="20200922 12:57:39.204"></status>
</kw>
<msg timestamp="20200922 12:57:43.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:57:43.974" starttime="20200922 12:57:39.204"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:43.974" starttime="20200922 12:57:39.203"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 12:57:43.974" critical="yes" starttime="20200922 12:57:15.027"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 12:57:43.984" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 12:57:43.984" starttime="20200922 12:57:43.983"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 12:57:43.984" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 12:57:43.984" starttime="20200922 12:57:43.984"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:43.985" starttime="20200922 12:57:43.982"></status>
</kw>
<msg timestamp="20200922 12:57:43.985" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 12:57:43.985" starttime="20200922 12:57:43.981"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:43.985" starttime="20200922 12:57:43.980"></status>
</kw>
<msg timestamp="20200922 12:57:43.985" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 12:57:43.985" starttime="20200922 12:57:43.980"></status>
</kw>
<msg timestamp="20200922 12:57:43.986" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 12:57:43.986" starttime="20200922 12:57:43.979"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:43.991" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:46.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:57:46.561" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 12:57:46.562" starttime="20200922 12:57:43.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:46.563" level="INFO"></msg>
<status status="PASS" endtime="20200922 12:57:46.563" starttime="20200922 12:57:46.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:57:46.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:57:46.563" starttime="20200922 12:57:46.563"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:46.564" starttime="20200922 12:57:43.987"></status>
</kw>
<msg timestamp="20200922 12:57:46.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:57:46.564" starttime="20200922 12:57:43.986"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:46.565" starttime="20200922 12:57:43.986"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:46.569" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:49.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:57:49.143" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 12:57:49.143" starttime="20200922 12:57:46.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:49.144" level="INFO"></msg>
<status status="PASS" endtime="20200922 12:57:49.145" starttime="20200922 12:57:49.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:57:49.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:57:49.145" starttime="20200922 12:57:49.145"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:49.146" starttime="20200922 12:57:46.566"></status>
</kw>
<msg timestamp="20200922 12:57:49.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:57:49.146" starttime="20200922 12:57:46.566"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:49.146" starttime="20200922 12:57:46.565"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 12:57:49.147" critical="yes" starttime="20200922 12:57:43.977"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200922 12:57:49.148" starttime="20200922 12:57:14.950"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 12:59:36.054" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 12:59:36.054" starttime="20200922 12:59:36.054"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 12:59:36.055" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 12:59:36.055" starttime="20200922 12:59:36.054"></status>
</kw>
<status status="PASS" endtime="20200922 12:59:36.055" starttime="20200922 12:59:36.053"></status>
</kw>
<msg timestamp="20200922 12:59:36.055" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 12:59:36.055" starttime="20200922 12:59:36.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 12:59:36.056" starttime="20200922 12:59:36.056"></status>
</kw>
<msg timestamp="20200922 12:59:36.056" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 12:59:36.056" starttime="20200922 12:59:36.055"></status>
</kw>
<status status="PASS" endtime="20200922 12:59:36.057" starttime="20200922 12:59:36.052"></status>
</kw>
<msg timestamp="20200922 12:59:36.057" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 12:59:36.057" starttime="20200922 12:59:36.051"></status>
</kw>
<msg timestamp="20200922 12:59:36.057" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 12:59:36.057" starttime="20200922 12:59:36.050"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 12:59:36.058" level="INFO">${random} = 41312</msg>
<status status="PASS" endtime="20200922 12:59:36.058" starttime="20200922 12:59:36.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:59:36.064" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-41312 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:59:39.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:59:39.953" level="INFO">${output} = 2020-09-22 12:59:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:59:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-22 ...</msg>
<status status="PASS" endtime="20200922 12:59:39.953" starttime="20200922 12:59:36.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:59:39.954" level="INFO">2020-09-22 12:59:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:59:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-22 12:59:38 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-22 12:59:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 12:59:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-953725231B03-&gt;2fc96c29-7fb8-4b71-985d-86162e10da1b
2020-09-22 12:59:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200922 12:59:39.954" starttime="20200922 12:59:39.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:59:39.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:59:39.955" starttime="20200922 12:59:39.954"></status>
</kw>
<status status="PASS" endtime="20200922 12:59:39.955" starttime="20200922 12:59:36.060"></status>
</kw>
<msg timestamp="20200922 12:59:39.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:59:39.955" starttime="20200922 12:59:36.059"></status>
</kw>
<msg timestamp="20200922 12:59:39.956" level="INFO">${result} = 2020-09-22 12:59:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:59:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-22 ...</msg>
<status status="PASS" endtime="20200922 12:59:39.956" starttime="20200922 12:59:36.058"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:59:39.960" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:59:41.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:59:41.942" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 12:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-22 12:57 ofs://om/volume1/bucket1/ozone-24379
-rw-...</msg>
<status status="PASS" endtime="20200922 12:59:41.942" starttime="20200922 12:59:39.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:59:41.943" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 12:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-22 12:57 ofs://om/volume1/bucket1/ozone-24379
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-22 12:59 ofs://om/volume1/bucket1/ozone-41312
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 12:57 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 12:59 ofs://om/volume1/bucket1/wordcount-52.txt</msg>
<status status="PASS" endtime="20200922 12:59:41.943" starttime="20200922 12:59:41.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:59:41.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:59:41.944" starttime="20200922 12:59:41.943"></status>
</kw>
<status status="PASS" endtime="20200922 12:59:41.945" starttime="20200922 12:59:39.957"></status>
</kw>
<msg timestamp="20200922 12:59:41.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:59:41.945" starttime="20200922 12:59:39.956"></status>
</kw>
<msg timestamp="20200922 12:59:41.945" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 12:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-22 12:57 ofs://om/volume1/bucket1/ozone-24379
-rw-...</msg>
<status status="PASS" endtime="20200922 12:59:41.945" starttime="20200922 12:59:39.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200922 12:59:41.946" starttime="20200922 12:59:41.945"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 12:59:41.946" critical="yes" starttime="20200922 12:59:36.049"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200922 12:59:41.947" starttime="20200922 12:59:35.985"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 12:57:54.741" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 12:57:54.741" starttime="20200922 12:57:54.740"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 12:57:54.741" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 12:57:54.741" starttime="20200922 12:57:54.741"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:54.741" starttime="20200922 12:57:54.740"></status>
</kw>
<msg timestamp="20200922 12:57:54.742" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 12:57:54.742" starttime="20200922 12:57:54.739"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:54.742" starttime="20200922 12:57:54.739"></status>
</kw>
<msg timestamp="20200922 12:57:54.742" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 12:57:54.742" starttime="20200922 12:57:54.738"></status>
</kw>
<msg timestamp="20200922 12:57:54.742" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 12:57:54.742" starttime="20200922 12:57:54.737"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 12:57:54.743" level="INFO">${random} = 24379</msg>
<status status="PASS" endtime="20200922 12:57:54.743" starttime="20200922 12:57:54.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:54.748" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-24379 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:57:58.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:57:58.646" level="INFO">${output} = 2020-09-22 12:57:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:57:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-22 ...</msg>
<status status="PASS" endtime="20200922 12:57:58.646" starttime="20200922 12:57:54.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:57:58.648" level="INFO">2020-09-22 12:57:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:57:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-22 12:57:57 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-22 12:57:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 12:57:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AD551E3569D7-&gt;2fc96c29-7fb8-4b71-985d-86162e10da1b
2020-09-22 12:57:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200922 12:57:58.648" starttime="20200922 12:57:58.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:57:58.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:57:58.649" starttime="20200922 12:57:58.648"></status>
</kw>
<status status="PASS" endtime="20200922 12:57:58.649" starttime="20200922 12:57:54.744"></status>
</kw>
<msg timestamp="20200922 12:57:58.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:57:58.649" starttime="20200922 12:57:54.744"></status>
</kw>
<msg timestamp="20200922 12:57:58.649" level="INFO">${result} = 2020-09-22 12:57:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:57:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-22 ...</msg>
<status status="PASS" endtime="20200922 12:57:58.649" starttime="20200922 12:57:54.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:57:58.653" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:58:00.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:58:00.833" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 12:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-22 12:57 o3fs://bucket1.volume1.om/ozone-24379
dr...</msg>
<status status="PASS" endtime="20200922 12:58:00.833" starttime="20200922 12:57:58.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:58:00.836" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 12:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-22 12:57 o3fs://bucket1.volume1.om/ozone-24379
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 12:57 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 12:58:00.836" starttime="20200922 12:58:00.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:58:00.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:58:00.837" starttime="20200922 12:58:00.836"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:00.837" starttime="20200922 12:57:58.651"></status>
</kw>
<msg timestamp="20200922 12:58:00.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:58:00.838" starttime="20200922 12:57:58.650"></status>
</kw>
<msg timestamp="20200922 12:58:00.838" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 12:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-09-22 12:57 o3fs://bucket1.volume1.om/ozone-24379
dr...</msg>
<status status="PASS" endtime="20200922 12:58:00.838" starttime="20200922 12:57:58.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200922 12:58:00.838" starttime="20200922 12:58:00.838"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 12:58:00.839" critical="yes" starttime="20200922 12:57:54.736"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200922 12:58:00.840" starttime="20200922 12:57:54.672"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:59:47.440" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:59:47.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:59:47.447" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:59:47.447" starttime="20200922 12:59:47.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:59:47.448" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:59:47.448" starttime="20200922 12:59:47.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:59:47.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:59:47.449" starttime="20200922 12:59:47.448"></status>
</kw>
<status status="PASS" endtime="20200922 12:59:47.449" starttime="20200922 12:59:47.434"></status>
</kw>
<msg timestamp="20200922 12:59:47.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:59:47.449" starttime="20200922 12:59:47.434"></status>
</kw>
<msg timestamp="20200922 12:59:47.449" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:59:47.450" starttime="20200922 12:59:47.434"></status>
</kw>
<msg timestamp="20200922 12:59:47.450" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:59:47.450" starttime="20200922 12:59:47.433"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 12:59:47.454" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 12:59:47.454" starttime="20200922 12:59:47.454"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 12:59:47.455" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 12:59:47.455" starttime="20200922 12:59:47.454"></status>
</kw>
<status status="PASS" endtime="20200922 12:59:47.455" starttime="20200922 12:59:47.453"></status>
</kw>
<msg timestamp="20200922 12:59:47.455" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 12:59:47.455" starttime="20200922 12:59:47.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 12:59:47.456" starttime="20200922 12:59:47.456"></status>
</kw>
<msg timestamp="20200922 12:59:47.457" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 12:59:47.457" starttime="20200922 12:59:47.456"></status>
</kw>
<status status="PASS" endtime="20200922 12:59:47.457" starttime="20200922 12:59:47.452"></status>
</kw>
<msg timestamp="20200922 12:59:47.457" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 12:59:47.457" starttime="20200922 12:59:47.452"></status>
</kw>
<msg timestamp="20200922 12:59:47.457" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 12:59:47.457" starttime="20200922 12:59:47.450"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:59:47.461" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:00:32.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:00:32.658" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 12:59:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:59:50 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200922 13:00:32.658" starttime="20200922 12:59:47.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:00:32.659" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-22 12:59:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:59:50 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-22 12:59:50 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-22 12:59:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 12:59:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-161ED2DD8C4C-&gt;2fc96c29-7fb8-4b71-985d-86162e10da1b
2020-09-22 12:59:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-22 12:59:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-09-22 12:59:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 12:59:54 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-22 12:59:57 INFO  JobSubmitter:198 - number of splits:3
2020-09-22 12:59:57 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600779401879_0003
2020-09-22 12:59:57 INFO  YarnClientImpl:273 - Submitted application application_1600779401879_0003
2020-09-22 12:59:57 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600779401879_0003/
2020-09-22 12:59:57 INFO  Job:1339 - Running job: job_1600779401879_0003
2020-09-22 13:00:06 INFO  Job:1360 - Job job_1600779401879_0003 running in uber mode : false
2020-09-22 13:00:06 INFO  Job:1367 -  map 0% reduce 0%
2020-09-22 13:00:13 INFO  Job:1367 -  map 33% reduce 0%
2020-09-22 13:00:19 INFO  Job:1367 -  map 67% reduce 0%
2020-09-22 13:00:25 INFO  Job:1367 -  map 100% reduce 0%
2020-09-22 13:00:30 INFO  Job:1367 -  map 100% reduce 100%
2020-09-22 13:00:31 INFO  Job:1378 - Job job_1600779401879_0003 completed successfully
2020-09-22 13:00:32 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=613525
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49168
		Total time spent by all reduces in occupied slots (ms)=17956
		Total time spent by all map tasks (ms)=12292
		Total time spent by all reduce tasks (ms)=4489
		Total vcore-milliseconds taken by all map tasks=12292
		Total vcore-milliseconds taken by all reduce tasks=4489
		Total megabyte-milliseconds taken by all map tasks=50348032
		Total megabyte-milliseconds taken by all reduce tasks=18386944
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=666
		CPU time spent (ms)=8220
		Physical memory (bytes) snapshot=1135759360
		Virtual memory (bytes) snapshot=16058916864
		Total committed heap usage (bytes)=1062207488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.194 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200922 13:00:32.659" starttime="20200922 13:00:32.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:00:32.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:00:32.660" starttime="20200922 13:00:32.659"></status>
</kw>
<status status="PASS" endtime="20200922 13:00:32.660" starttime="20200922 12:59:47.458"></status>
</kw>
<msg timestamp="20200922 13:00:32.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:00:32.660" starttime="20200922 12:59:47.458"></status>
</kw>
<msg timestamp="20200922 13:00:32.661" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 12:59:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:59:50 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200922 13:00:32.661" starttime="20200922 12:59:47.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:00:32.661" starttime="20200922 13:00:32.661"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:00:32.662" critical="yes" starttime="20200922 12:59:47.433"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:00:32.667" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:00:32.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:00:32.675" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 13:00:32.675" starttime="20200922 13:00:32.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:00:32.676" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 13:00:32.676" starttime="20200922 13:00:32.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:00:32.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:00:32.677" starttime="20200922 13:00:32.677"></status>
</kw>
<status status="PASS" endtime="20200922 13:00:32.677" starttime="20200922 13:00:32.664"></status>
</kw>
<msg timestamp="20200922 13:00:32.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:00:32.678" starttime="20200922 13:00:32.663"></status>
</kw>
<msg timestamp="20200922 13:00:32.678" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 13:00:32.678" starttime="20200922 13:00:32.663"></status>
</kw>
<msg timestamp="20200922 13:00:32.678" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 13:00:32.678" starttime="20200922 13:00:32.663"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:00:32.679" level="INFO">${random} = 90</msg>
<status status="PASS" endtime="20200922 13:00:32.679" starttime="20200922 13:00:32.678"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:00:32.683" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:00:32.683" starttime="20200922 13:00:32.682"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:00:32.683" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:00:32.683" starttime="20200922 13:00:32.683"></status>
</kw>
<status status="PASS" endtime="20200922 13:00:32.684" starttime="20200922 13:00:32.682"></status>
</kw>
<msg timestamp="20200922 13:00:32.684" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:00:32.684" starttime="20200922 13:00:32.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:00:32.685" starttime="20200922 13:00:32.684"></status>
</kw>
<msg timestamp="20200922 13:00:32.685" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 13:00:32.685" starttime="20200922 13:00:32.684"></status>
</kw>
<status status="PASS" endtime="20200922 13:00:32.685" starttime="20200922 13:00:32.680"></status>
</kw>
<msg timestamp="20200922 13:00:32.685" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:00:32.685" starttime="20200922 13:00:32.680"></status>
</kw>
<msg timestamp="20200922 13:00:32.686" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:00:32.686" starttime="20200922 13:00:32.679"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:00:32.689" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:00:32.689" starttime="20200922 13:00:32.689"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:00:32.690" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:00:32.690" starttime="20200922 13:00:32.690"></status>
</kw>
<status status="PASS" endtime="20200922 13:00:32.690" starttime="20200922 13:00:32.688"></status>
</kw>
<msg timestamp="20200922 13:00:32.690" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:00:32.690" starttime="20200922 13:00:32.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:00:32.692" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200922 13:00:32.692" starttime="20200922 13:00:32.691"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:00:32.693" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200922 13:00:32.693" starttime="20200922 13:00:32.692"></status>
</kw>
<status status="PASS" endtime="20200922 13:00:32.693" starttime="20200922 13:00:32.691"></status>
</kw>
<msg timestamp="20200922 13:00:32.693" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200922 13:00:32.693" starttime="20200922 13:00:32.690"></status>
</kw>
<status status="PASS" endtime="20200922 13:00:32.694" starttime="20200922 13:00:32.687"></status>
</kw>
<msg timestamp="20200922 13:00:32.694" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200922 13:00:32.694" starttime="20200922 13:00:32.686"></status>
</kw>
<msg timestamp="20200922 13:00:32.694" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200922 13:00:32.694" starttime="20200922 13:00:32.686"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:00:32.698" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:00:32.698" starttime="20200922 13:00:32.697"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:00:32.698" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:00:32.698" starttime="20200922 13:00:32.698"></status>
</kw>
<status status="PASS" endtime="20200922 13:00:32.698" starttime="20200922 13:00:32.696"></status>
</kw>
<msg timestamp="20200922 13:00:32.699" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:00:32.699" starttime="20200922 13:00:32.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:00:32.700" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200922 13:00:32.700" starttime="20200922 13:00:32.700"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:00:32.701" level="INFO">${result} = /wordcount-90.txt</msg>
<status status="PASS" endtime="20200922 13:00:32.701" starttime="20200922 13:00:32.700"></status>
</kw>
<status status="PASS" endtime="20200922 13:00:32.701" starttime="20200922 13:00:32.699"></status>
</kw>
<msg timestamp="20200922 13:00:32.701" level="INFO">${path_with_leading} = /wordcount-90.txt</msg>
<status status="PASS" endtime="20200922 13:00:32.701" starttime="20200922 13:00:32.699"></status>
</kw>
<status status="PASS" endtime="20200922 13:00:32.701" starttime="20200922 13:00:32.695"></status>
</kw>
<msg timestamp="20200922 13:00:32.701" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-90.txt</msg>
<status status="PASS" endtime="20200922 13:00:32.701" starttime="20200922 13:00:32.695"></status>
</kw>
<msg timestamp="20200922 13:00:32.702" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-90.txt</msg>
<status status="PASS" endtime="20200922 13:00:32.702" starttime="20200922 13:00:32.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:00:32.707" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-90.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:01:09.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:01:09.278" level="INFO">${output} = 2020-09-22 13:00:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-09-22 13:00:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200922 13:01:09.278" starttime="20200922 13:00:32.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:01:09.279" level="INFO">2020-09-22 13:00:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-09-22 13:00:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 13:00:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 13:00:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-22 13:00:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-22 13:00:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:00:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9AB523709356-&gt;2fc96c29-7fb8-4b71-985d-86162e10da1b
2020-09-22 13:00:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-22 13:00:36 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-22 13:00:36 INFO  JobSubmitter:198 - number of splits:3
2020-09-22 13:00:37 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600779401879_0004
2020-09-22 13:00:37 INFO  YarnClientImpl:273 - Submitted application application_1600779401879_0004
2020-09-22 13:00:37 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600779401879_0004/
2020-09-22 13:00:37 INFO  Job:1339 - Running job: job_1600779401879_0004
2020-09-22 13:00:45 INFO  Job:1360 - Job job_1600779401879_0004 running in uber mode : false
2020-09-22 13:00:45 INFO  Job:1367 -  map 0% reduce 0%
2020-09-22 13:00:52 INFO  Job:1367 -  map 33% reduce 0%
2020-09-22 13:00:58 INFO  Job:1367 -  map 67% reduce 0%
2020-09-22 13:01:03 INFO  Job:1367 -  map 100% reduce 0%
2020-09-22 13:01:07 INFO  Job:1367 -  map 100% reduce 100%
2020-09-22 13:01:08 INFO  Job:1378 - Job job_1600779401879_0004 completed successfully
2020-09-22 13:01:08 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676285
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45636
		Total time spent by all reduces in occupied slots (ms)=16472
		Total time spent by all map tasks (ms)=11409
		Total time spent by all reduce tasks (ms)=4118
		Total vcore-milliseconds taken by all map tasks=11409
		Total vcore-milliseconds taken by all reduce tasks=4118
		Total megabyte-milliseconds taken by all map tasks=46731264
		Total megabyte-milliseconds taken by all reduce tasks=16867328
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=666
		CPU time spent (ms)=7270
		Physical memory (bytes) snapshot=1047597056
		Virtual memory (bytes) snapshot=16019615744
		Total committed heap usage (bytes)=964165632
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200922 13:01:09.279" starttime="20200922 13:01:09.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:01:09.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:01:09.280" starttime="20200922 13:01:09.279"></status>
</kw>
<status status="PASS" endtime="20200922 13:01:09.280" starttime="20200922 13:00:32.703"></status>
</kw>
<msg timestamp="20200922 13:01:09.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:01:09.281" starttime="20200922 13:00:32.702"></status>
</kw>
<msg timestamp="20200922 13:01:09.281" level="INFO">${output} = 2020-09-22 13:00:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-09-22 13:00:35 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200922 13:01:09.281" starttime="20200922 13:00:32.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200922 13:01:09.282" starttime="20200922 13:01:09.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:01:09.283" starttime="20200922 13:01:09.282"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:01:09.283" critical="yes" starttime="20200922 13:00:32.662"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200922 13:01:09.285" starttime="20200922 12:59:47.362"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:58:06.200" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:58:06.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:58:06.205" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:58:06.205" starttime="20200922 12:58:06.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:58:06.206" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:58:06.206" starttime="20200922 12:58:06.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:58:06.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:58:06.207" starttime="20200922 12:58:06.207"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:06.207" starttime="20200922 12:58:06.192"></status>
</kw>
<msg timestamp="20200922 12:58:06.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:58:06.208" starttime="20200922 12:58:06.192"></status>
</kw>
<msg timestamp="20200922 12:58:06.208" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:58:06.208" starttime="20200922 12:58:06.191"></status>
</kw>
<msg timestamp="20200922 12:58:06.208" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:58:06.208" starttime="20200922 12:58:06.191"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 12:58:06.213" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 12:58:06.214" starttime="20200922 12:58:06.213"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 12:58:06.216" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 12:58:06.216" starttime="20200922 12:58:06.214"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:06.216" starttime="20200922 12:58:06.212"></status>
</kw>
<msg timestamp="20200922 12:58:06.216" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 12:58:06.216" starttime="20200922 12:58:06.211"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:06.216" starttime="20200922 12:58:06.210"></status>
</kw>
<msg timestamp="20200922 12:58:06.216" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 12:58:06.217" starttime="20200922 12:58:06.209"></status>
</kw>
<msg timestamp="20200922 12:58:06.217" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 12:58:06.217" starttime="20200922 12:58:06.208"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:58:06.221" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:58:49.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:58:49.652" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 12:58:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:58:08 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200922 12:58:49.652" starttime="20200922 12:58:06.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:58:49.653" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-22 12:58:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:58:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-22 12:58:08 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-22 12:58:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 12:58:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-37AACD7F9E3B-&gt;2fc96c29-7fb8-4b71-985d-86162e10da1b
2020-09-22 12:58:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-22 12:58:10 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-09-22 12:58:10 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-22 12:58:13 INFO  JobSubmitter:198 - number of splits:3
2020-09-22 12:58:13 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600779401879_0001
2020-09-22 12:58:14 INFO  YarnClientImpl:273 - Submitted application application_1600779401879_0001
2020-09-22 12:58:14 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600779401879_0001/
2020-09-22 12:58:14 INFO  Job:1339 - Running job: job_1600779401879_0001
2020-09-22 12:58:25 INFO  Job:1360 - Job job_1600779401879_0001 running in uber mode : false
2020-09-22 12:58:25 INFO  Job:1367 -  map 0% reduce 0%
2020-09-22 12:58:32 INFO  Job:1367 -  map 33% reduce 0%
2020-09-22 12:58:38 INFO  Job:1367 -  map 67% reduce 0%
2020-09-22 12:58:42 INFO  Job:1367 -  map 100% reduce 0%
2020-09-22 12:58:47 INFO  Job:1367 -  map 100% reduce 100%
2020-09-22 12:58:48 INFO  Job:1378 - Job job_1600779401879_0001 completed successfully
2020-09-22 12:58:49 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=613737
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46604
		Total time spent by all reduces in occupied slots (ms)=17284
		Total time spent by all map tasks (ms)=11651
		Total time spent by all reduce tasks (ms)=4321
		Total vcore-milliseconds taken by all map tasks=11651
		Total vcore-milliseconds taken by all reduce tasks=4321
		Total megabyte-milliseconds taken by all map tasks=47722496
		Total megabyte-milliseconds taken by all reduce tasks=17698816
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=634
		CPU time spent (ms)=7790
		Physical memory (bytes) snapshot=1140822016
		Virtual memory (bytes) snapshot=16071176192
		Total committed heap usage (bytes)=1056440320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.913 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200922 12:58:49.654" starttime="20200922 12:58:49.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:58:49.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:58:49.655" starttime="20200922 12:58:49.654"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:49.655" starttime="20200922 12:58:06.218"></status>
</kw>
<msg timestamp="20200922 12:58:49.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:58:49.655" starttime="20200922 12:58:06.218"></status>
</kw>
<msg timestamp="20200922 12:58:49.656" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 12:58:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:58:08 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20200922 12:58:49.656" starttime="20200922 12:58:06.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 12:58:49.658" starttime="20200922 12:58:49.657"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 12:58:49.658" critical="yes" starttime="20200922 12:58:06.189"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:58:49.664" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:58:49.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:58:49.670" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:58:49.671" starttime="20200922 12:58:49.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:58:49.672" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:58:49.672" starttime="20200922 12:58:49.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:58:49.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:58:49.673" starttime="20200922 12:58:49.672"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:49.673" starttime="20200922 12:58:49.661"></status>
</kw>
<msg timestamp="20200922 12:58:49.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:58:49.673" starttime="20200922 12:58:49.660"></status>
</kw>
<msg timestamp="20200922 12:58:49.673" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:58:49.673" starttime="20200922 12:58:49.660"></status>
</kw>
<msg timestamp="20200922 12:58:49.674" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20200922 12:58:49.674" starttime="20200922 12:58:49.660"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 12:58:49.674" level="INFO">${random} = 52</msg>
<status status="PASS" endtime="20200922 12:58:49.674" starttime="20200922 12:58:49.674"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 12:58:49.678" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 12:58:49.678" starttime="20200922 12:58:49.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 12:58:49.679" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 12:58:49.679" starttime="20200922 12:58:49.678"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:49.679" starttime="20200922 12:58:49.677"></status>
</kw>
<msg timestamp="20200922 12:58:49.679" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 12:58:49.679" starttime="20200922 12:58:49.677"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:49.680" starttime="20200922 12:58:49.676"></status>
</kw>
<msg timestamp="20200922 12:58:49.680" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 12:58:49.680" starttime="20200922 12:58:49.675"></status>
</kw>
<msg timestamp="20200922 12:58:49.680" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 12:58:49.680" starttime="20200922 12:58:49.674"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 12:58:49.683" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 12:58:49.683" starttime="20200922 12:58:49.683"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 12:58:49.684" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 12:58:49.684" starttime="20200922 12:58:49.684"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:49.684" starttime="20200922 12:58:49.683"></status>
</kw>
<msg timestamp="20200922 12:58:49.684" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 12:58:49.684" starttime="20200922 12:58:49.682"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:49.685" starttime="20200922 12:58:49.681"></status>
</kw>
<msg timestamp="20200922 12:58:49.685" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200922 12:58:49.685" starttime="20200922 12:58:49.681"></status>
</kw>
<msg timestamp="20200922 12:58:49.685" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200922 12:58:49.685" starttime="20200922 12:58:49.680"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 12:58:49.689" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 12:58:49.689" starttime="20200922 12:58:49.688"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 12:58:49.690" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 12:58:49.690" starttime="20200922 12:58:49.689"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:49.690" starttime="20200922 12:58:49.688"></status>
</kw>
<msg timestamp="20200922 12:58:49.690" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 12:58:49.690" starttime="20200922 12:58:49.687"></status>
</kw>
<status status="PASS" endtime="20200922 12:58:49.690" starttime="20200922 12:58:49.687"></status>
</kw>
<msg timestamp="20200922 12:58:49.691" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-52.txt</msg>
<status status="PASS" endtime="20200922 12:58:49.691" starttime="20200922 12:58:49.686"></status>
</kw>
<msg timestamp="20200922 12:58:49.691" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-52.txt</msg>
<status status="PASS" endtime="20200922 12:58:49.691" starttime="20200922 12:58:49.685"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 12:58:49.696" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-52.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 12:59:30.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 12:59:30.558" level="INFO">${output} = 2020-09-22 12:58:51 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-09-22 12:58:52 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200922 12:59:30.560" starttime="20200922 12:58:49.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 12:59:30.561" level="INFO">2020-09-22 12:58:51 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-09-22 12:58:52 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 12:58:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-09-22 12:58:52 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-09-22 12:58:52 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-09-22 12:58:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 12:58:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-42175EF48513-&gt;2fc96c29-7fb8-4b71-985d-86162e10da1b
2020-09-22 12:58:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-22 12:58:53 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-09-22 12:58:56 INFO  JobSubmitter:198 - number of splits:3
2020-09-22 12:58:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1600779401879_0002
2020-09-22 12:58:56 INFO  YarnClientImpl:273 - Submitted application application_1600779401879_0002
2020-09-22 12:58:56 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1600779401879_0002/
2020-09-22 12:58:56 INFO  Job:1339 - Running job: job_1600779401879_0002
2020-09-22 12:59:04 INFO  Job:1360 - Job job_1600779401879_0002 running in uber mode : false
2020-09-22 12:59:04 INFO  Job:1367 -  map 0% reduce 0%
2020-09-22 12:59:11 INFO  Job:1367 -  map 33% reduce 0%
2020-09-22 12:59:17 INFO  Job:1367 -  map 67% reduce 0%
2020-09-22 12:59:24 INFO  Job:1367 -  map 100% reduce 0%
2020-09-22 12:59:29 INFO  Job:1367 -  map 100% reduce 100%
2020-09-22 12:59:30 INFO  Job:1378 - Job job_1600779401879_0002 completed successfully
2020-09-22 12:59:30 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=676369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48476
		Total time spent by all reduces in occupied slots (ms)=17348
		Total time spent by all map tasks (ms)=12119
		Total time spent by all reduce tasks (ms)=4337
		Total vcore-milliseconds taken by all map tasks=12119
		Total vcore-milliseconds taken by all reduce tasks=4337
		Total megabyte-milliseconds taken by all map tasks=49639424
		Total megabyte-milliseconds taken by all reduce tasks=17764352
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=632
		CPU time spent (ms)=8090
		Physical memory (bytes) snapshot=1098776576
		Virtual memory (bytes) snapshot=16042745856
		Total committed heap usage (bytes)=969932800
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200922 12:59:30.561" starttime="20200922 12:59:30.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 12:59:30.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 12:59:30.562" starttime="20200922 12:59:30.561"></status>
</kw>
<status status="PASS" endtime="20200922 12:59:30.562" starttime="20200922 12:58:49.692"></status>
</kw>
<msg timestamp="20200922 12:59:30.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 12:59:30.562" starttime="20200922 12:58:49.692"></status>
</kw>
<msg timestamp="20200922 12:59:30.563" level="INFO">${output} = 2020-09-22 12:58:51 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.8:8032
2020-09-22 12:58:52 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20200922 12:59:30.563" starttime="20200922 12:58:49.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200922 12:59:30.563" starttime="20200922 12:59:30.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 12:59:30.564" starttime="20200922 12:59:30.564"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 12:59:30.564" critical="yes" starttime="20200922 12:58:49.659"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200922 12:59:30.566" starttime="20200922 12:58:06.122"></status>
</suite>
<status status="PASS" elapsedtime="212695" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:20.305" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:02:23.050" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 13:02:23.050" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200922 13:02:23.050" starttime="20200922 13:02:20.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:02:23.052" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200922 13:02:23.052" starttime="20200922 13:02:23.051"></status>
</kw>
<msg timestamp="20200922 13:02:23.053" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200922 13:02:23.053" starttime="20200922 13:02:20.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:23.062" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:02:25.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:02:25.253" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:02:25.253" starttime="20200922 13:02:23.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:02:25.254" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:02:25.254" starttime="20200922 13:02:25.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:02:25.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:02:25.255" starttime="20200922 13:02:25.254"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:25.255" starttime="20200922 13:02:23.056"></status>
</kw>
<msg timestamp="20200922 13:02:25.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:02:25.255" starttime="20200922 13:02:23.056"></status>
</kw>
<msg timestamp="20200922 13:02:25.256" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200922 13:02:25.256" starttime="20200922 13:02:23.055"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200922 13:02:25.257" starttime="20200922 13:02:25.256"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:25.257" starttime="20200922 13:02:23.055"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:25.257" starttime="20200922 13:02:23.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:25.262" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:02:27.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:02:27.640" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:02:27.640" starttime="20200922 13:02:25.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:02:27.641" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:02:27.641" starttime="20200922 13:02:27.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:02:27.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:02:27.642" starttime="20200922 13:02:27.642"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:27.643" starttime="20200922 13:02:25.260"></status>
</kw>
<msg timestamp="20200922 13:02:27.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:02:27.643" starttime="20200922 13:02:25.259"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:27.643" starttime="20200922 13:02:25.258"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:27.644" starttime="20200922 13:02:25.258"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:27.644" starttime="20200922 13:02:25.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200922 13:02:27.645" starttime="20200922 13:02:27.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:27.650" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:02:30.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:02:30.279" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:02:27.518Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200922 13:02:30.279" starttime="20200922 13:02:27.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:02:30.280" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:02:27.518Z",
  "modificationTime" : "2020-09-22T13:02:27.518Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200922 13:02:30.280" starttime="20200922 13:02:30.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:02:30.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:02:30.281" starttime="20200922 13:02:30.281"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:30.282" starttime="20200922 13:02:27.646"></status>
</kw>
<msg timestamp="20200922 13:02:30.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:02:30.282" starttime="20200922 13:02:27.646"></status>
</kw>
<msg timestamp="20200922 13:02:30.282" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:02:27.518Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200922 13:02:30.282" starttime="20200922 13:02:27.645"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200922 13:02:30.283" starttime="20200922 13:02:30.282"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:02:30.288" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:02:30.288" starttime="20200922 13:02:30.288"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:02:30.289" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:02:30.289" starttime="20200922 13:02:30.289"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:30.289" starttime="20200922 13:02:30.287"></status>
</kw>
<msg timestamp="20200922 13:02:30.290" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:02:30.290" starttime="20200922 13:02:30.287"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:30.290" starttime="20200922 13:02:30.285"></status>
</kw>
<msg timestamp="20200922 13:02:30.290" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200922 13:02:30.290" starttime="20200922 13:02:30.284"></status>
</kw>
<msg timestamp="20200922 13:02:30.290" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200922 13:02:30.290" starttime="20200922 13:02:30.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:30.294" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:02:32.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:02:32.873" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:02:32.873" starttime="20200922 13:02:30.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:02:32.874" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:02:32.874" starttime="20200922 13:02:32.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:02:32.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:02:32.875" starttime="20200922 13:02:32.874"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:32.876" starttime="20200922 13:02:30.291"></status>
</kw>
<msg timestamp="20200922 13:02:32.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:02:32.876" starttime="20200922 13:02:30.291"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:32.877" starttime="20200922 13:02:30.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:32.882" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:02:38.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:02:38.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:02:38.947" starttime="20200922 13:02:32.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:02:38.948" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:02:38.948" starttime="20200922 13:02:38.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:02:38.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:02:38.949" starttime="20200922 13:02:38.948"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:38.949" starttime="20200922 13:02:32.878"></status>
</kw>
<msg timestamp="20200922 13:02:38.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:02:38.950" starttime="20200922 13:02:32.878"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:38.950" starttime="20200922 13:02:32.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:38.954" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:02:43.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:02:43.391" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:02:43.391" starttime="20200922 13:02:38.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:02:43.392" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:02:43.392" starttime="20200922 13:02:43.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:02:43.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:02:43.394" starttime="20200922 13:02:43.393"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:43.394" starttime="20200922 13:02:38.951"></status>
</kw>
<msg timestamp="20200922 13:02:43.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:02:43.394" starttime="20200922 13:02:38.951"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:43.394" starttime="20200922 13:02:38.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:43.401" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:02:47.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:02:47.775" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:02:47.775" starttime="20200922 13:02:43.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:02:47.777" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:02:47.777" starttime="20200922 13:02:47.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:02:47.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:02:47.778" starttime="20200922 13:02:47.777"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:47.778" starttime="20200922 13:02:43.397"></status>
</kw>
<msg timestamp="20200922 13:02:47.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:02:47.779" starttime="20200922 13:02:43.396"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:47.779" starttime="20200922 13:02:43.395"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:02:47.779" critical="yes" starttime="20200922 13:02:20.299"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:02:47.785" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:02:47.785" starttime="20200922 13:02:47.784"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:02:47.786" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:02:47.786" starttime="20200922 13:02:47.785"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:47.786" starttime="20200922 13:02:47.784"></status>
</kw>
<msg timestamp="20200922 13:02:47.786" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:02:47.786" starttime="20200922 13:02:47.783"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:47.787" starttime="20200922 13:02:47.782"></status>
</kw>
<msg timestamp="20200922 13:02:47.788" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 13:02:47.788" starttime="20200922 13:02:47.782"></status>
</kw>
<msg timestamp="20200922 13:02:47.788" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 13:02:47.788" starttime="20200922 13:02:47.781"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:47.792" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:02:50.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:02:50.248" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:02:50.248" starttime="20200922 13:02:47.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:02:50.250" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:02:50.250" starttime="20200922 13:02:50.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:02:50.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:02:50.251" starttime="20200922 13:02:50.250"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:50.251" starttime="20200922 13:02:47.789"></status>
</kw>
<msg timestamp="20200922 13:02:50.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:02:50.252" starttime="20200922 13:02:47.789"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:50.252" starttime="20200922 13:02:47.788"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:50.257" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:02:52.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:02:52.836" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:02:52.836" starttime="20200922 13:02:50.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:02:52.838" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:02:52.838" starttime="20200922 13:02:52.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:02:52.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:02:52.838" starttime="20200922 13:02:52.838"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:52.839" starttime="20200922 13:02:50.254"></status>
</kw>
<msg timestamp="20200922 13:02:52.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:02:52.839" starttime="20200922 13:02:50.253"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:52.839" starttime="20200922 13:02:50.252"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:02:52.840" critical="yes" starttime="20200922 13:02:47.780"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200922 13:02:52.841" starttime="20200922 13:02:20.231"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:04:47.970" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:04:47.970" starttime="20200922 13:04:47.969"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:04:47.971" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:04:47.971" starttime="20200922 13:04:47.970"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:47.971" starttime="20200922 13:04:47.968"></status>
</kw>
<msg timestamp="20200922 13:04:47.971" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:04:47.971" starttime="20200922 13:04:47.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:04:47.973" starttime="20200922 13:04:47.972"></status>
</kw>
<msg timestamp="20200922 13:04:47.973" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 13:04:47.973" starttime="20200922 13:04:47.972"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:47.974" starttime="20200922 13:04:47.966"></status>
</kw>
<msg timestamp="20200922 13:04:47.974" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:04:47.974" starttime="20200922 13:04:47.965"></status>
</kw>
<msg timestamp="20200922 13:04:47.974" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:04:47.974" starttime="20200922 13:04:47.964"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:04:47.975" level="INFO">${random} = 88323</msg>
<status status="PASS" endtime="20200922 13:04:47.975" starttime="20200922 13:04:47.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:04:47.985" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-88323 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:04:51.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:04:51.986" level="INFO">${output} = 2020-09-22 13:04:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:04:51.986" starttime="20200922 13:04:47.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:04:51.988" level="INFO">2020-09-22 13:04:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:50 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-22 13:04:50 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-22 13:04:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:04:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:04:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:04:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0164135E6108-&gt;574679af-c497-4076-992d-c517f347d11e
2020-09-22 13:04:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-22 13:04:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200922 13:04:51.988" starttime="20200922 13:04:51.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:04:51.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:04:51.989" starttime="20200922 13:04:51.988"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:51.989" starttime="20200922 13:04:47.977"></status>
</kw>
<msg timestamp="20200922 13:04:51.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:04:51.989" starttime="20200922 13:04:47.977"></status>
</kw>
<msg timestamp="20200922 13:04:51.989" level="INFO">${result} = 2020-09-22 13:04:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:04:51.990" starttime="20200922 13:04:47.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:04:51.993" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:04:53.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:04:53.975" level="INFO">${output} = 2020-09-22 13:04:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:04:53.975" starttime="20200922 13:04:51.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:04:53.976" level="INFO">2020-09-22 13:04:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:53 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:02 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-22 13:03 ofs://om/volume1/bucket1/ozone-47883
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-22 13:04 ofs://om/volume1/bucket1/ozone-88323
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:02 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:04 ofs://om/volume1/bucket1/wordcount-55.txt
2020-09-22 13:04:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200922 13:04:53.976" starttime="20200922 13:04:53.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:04:53.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:04:53.977" starttime="20200922 13:04:53.976"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:53.977" starttime="20200922 13:04:51.991"></status>
</kw>
<msg timestamp="20200922 13:04:53.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:04:53.977" starttime="20200922 13:04:51.990"></status>
</kw>
<msg timestamp="20200922 13:04:53.978" level="INFO">${result} = 2020-09-22 13:04:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:04:53.978" starttime="20200922 13:04:51.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:04:53.979" starttime="20200922 13:04:53.978"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:04:53.979" critical="yes" starttime="20200922 13:04:47.963"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200922 13:04:53.981" starttime="20200922 13:04:47.884"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:02:58.451" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:02:58.451" starttime="20200922 13:02:58.450"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:02:58.452" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:02:58.452" starttime="20200922 13:02:58.451"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:58.452" starttime="20200922 13:02:58.450"></status>
</kw>
<msg timestamp="20200922 13:02:58.452" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:02:58.452" starttime="20200922 13:02:58.449"></status>
</kw>
<status status="PASS" endtime="20200922 13:02:58.453" starttime="20200922 13:02:58.448"></status>
</kw>
<msg timestamp="20200922 13:02:58.453" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:02:58.453" starttime="20200922 13:02:58.448"></status>
</kw>
<msg timestamp="20200922 13:02:58.453" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:02:58.453" starttime="20200922 13:02:58.446"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:02:58.454" level="INFO">${random} = 47883</msg>
<status status="PASS" endtime="20200922 13:02:58.454" starttime="20200922 13:02:58.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:02:58.460" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-47883 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:03:02.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:03:02.701" level="INFO">${output} = 2020-09-22 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:03:02.701" starttime="20200922 13:02:58.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:03:02.702" level="INFO">2020-09-22 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:00 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-22 13:03:00 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-22 13:03:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:03:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:03:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:03:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7D7B253AF56B-&gt;574679af-c497-4076-992d-c517f347d11e
2020-09-22 13:03:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-22 13:03:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200922 13:03:02.702" starttime="20200922 13:03:02.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:03:02.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:03:02.703" starttime="20200922 13:03:02.702"></status>
</kw>
<status status="PASS" endtime="20200922 13:03:02.703" starttime="20200922 13:02:58.455"></status>
</kw>
<msg timestamp="20200922 13:03:02.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:03:02.704" starttime="20200922 13:02:58.455"></status>
</kw>
<msg timestamp="20200922 13:03:02.704" level="INFO">${result} = 2020-09-22 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:02:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:03:02.704" starttime="20200922 13:02:58.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:03:02.708" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:03:04.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:03:04.801" level="INFO">${output} = 2020-09-22 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:03:04.802" starttime="20200922 13:03:02.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:03:04.803" level="INFO">2020-09-22 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:04 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:02 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-09-22 13:03 o3fs://bucket1.volume1.om/ozone-47883
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:02 o3fs://bucket1.volume1.om/user
2020-09-22 13:03:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200922 13:03:04.803" starttime="20200922 13:03:04.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:03:04.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:03:04.805" starttime="20200922 13:03:04.804"></status>
</kw>
<status status="PASS" endtime="20200922 13:03:04.805" starttime="20200922 13:03:02.705"></status>
</kw>
<msg timestamp="20200922 13:03:04.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:03:04.805" starttime="20200922 13:03:02.705"></status>
</kw>
<msg timestamp="20200922 13:03:04.805" level="INFO">${result} = 2020-09-22 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:03:04.805" starttime="20200922 13:03:02.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:03:04.806" starttime="20200922 13:03:04.806"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:03:04.806" critical="yes" starttime="20200922 13:02:58.445"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200922 13:03:04.807" starttime="20200922 13:02:58.373"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:04:59.462" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:04:59.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:04:59.470" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:04:59.470" starttime="20200922 13:04:59.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:04:59.472" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:04:59.472" starttime="20200922 13:04:59.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:04:59.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:04:59.473" starttime="20200922 13:04:59.472"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:59.473" starttime="20200922 13:04:59.458"></status>
</kw>
<msg timestamp="20200922 13:04:59.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:04:59.474" starttime="20200922 13:04:59.457"></status>
</kw>
<msg timestamp="20200922 13:04:59.474" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:04:59.474" starttime="20200922 13:04:59.457"></status>
</kw>
<msg timestamp="20200922 13:04:59.474" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:04:59.474" starttime="20200922 13:04:59.457"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:04:59.481" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:04:59.481" starttime="20200922 13:04:59.478"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:04:59.482" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:04:59.483" starttime="20200922 13:04:59.481"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:59.483" starttime="20200922 13:04:59.478"></status>
</kw>
<msg timestamp="20200922 13:04:59.483" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:04:59.483" starttime="20200922 13:04:59.477"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:04:59.484" starttime="20200922 13:04:59.484"></status>
</kw>
<msg timestamp="20200922 13:04:59.484" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 13:04:59.485" starttime="20200922 13:04:59.483"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:59.485" starttime="20200922 13:04:59.476"></status>
</kw>
<msg timestamp="20200922 13:04:59.485" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:04:59.485" starttime="20200922 13:04:59.475"></status>
</kw>
<msg timestamp="20200922 13:04:59.485" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:04:59.485" starttime="20200922 13:04:59.475"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:04:59.490" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:05:42.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:05:42.483" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:05:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05...</msg>
<status status="PASS" endtime="20200922 13:05:42.483" starttime="20200922 13:04:59.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:05:42.484" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:05:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:02 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-22 13:05:02 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-22 13:05:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:05:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:05:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:05:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FA595D79D560-&gt;574679af-c497-4076-992d-c517f347d11e
2020-09-22 13:05:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-22 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-09-22 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 13:05:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:05:04 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:05:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600779721172_0003
2020-09-22 13:05:04 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-22 13:05:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:05 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:05:05 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-22 13:05:05 INFO  YarnClientImpl:324 - Submitted application application_1600779721172_0003
2020-09-22 13:05:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600779721172_0003/
2020-09-22 13:05:05 INFO  Job:1619 - Running job: job_1600779721172_0003
2020-09-22 13:05:14 INFO  Job:1640 - Job job_1600779721172_0003 running in uber mode : false
2020-09-22 13:05:14 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:05:21 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:05:27 INFO  Job:1647 -  map 67% reduce 0%
2020-09-22 13:05:33 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:05:38 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:05:41 INFO  Job:1658 - Job job_1600779721172_0003 completed successfully
2020-09-22 13:05:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:41 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1019445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47212
		Total time spent by all reduces in occupied slots (ms)=17000
		Total time spent by all map tasks (ms)=11803
		Total time spent by all reduce tasks (ms)=4250
		Total vcore-milliseconds taken by all map tasks=11803
		Total vcore-milliseconds taken by all reduce tasks=4250
		Total megabyte-milliseconds taken by all map tasks=48345088
		Total megabyte-milliseconds taken by all reduce tasks=17408000
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=808
		CPU time spent (ms)=7790
		Physical memory (bytes) snapshot=1112883200
		Virtual memory (bytes) snapshot=16045772800
		Total committed heap usage (bytes)=1021313024
		Peak Map Physical memory (bytes)=293072896
		Peak Map Virtual memory (bytes)=4019560448
		Peak Reduce Physical memory (bytes)=262959104
		Peak Reduce Virtual memory (bytes)=4018868224
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.453 seconds
2020-09-22 13:05:41 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-09-22 13:05:42 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200922 13:05:42.485" starttime="20200922 13:05:42.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:05:42.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:05:42.485" starttime="20200922 13:05:42.485"></status>
</kw>
<status status="PASS" endtime="20200922 13:05:42.485" starttime="20200922 13:04:59.487"></status>
</kw>
<msg timestamp="20200922 13:05:42.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:05:42.486" starttime="20200922 13:04:59.486"></status>
</kw>
<msg timestamp="20200922 13:05:42.486" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:05:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:00 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05...</msg>
<status status="PASS" endtime="20200922 13:05:42.486" starttime="20200922 13:04:59.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:05:42.487" starttime="20200922 13:05:42.486"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:05:42.487" critical="yes" starttime="20200922 13:04:59.456"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:05:42.492" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:05:42.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:05:42.500" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:05:42.500" starttime="20200922 13:05:42.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:05:42.501" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:05:42.501" starttime="20200922 13:05:42.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:05:42.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:05:42.502" starttime="20200922 13:05:42.501"></status>
</kw>
<status status="PASS" endtime="20200922 13:05:42.502" starttime="20200922 13:05:42.490"></status>
</kw>
<msg timestamp="20200922 13:05:42.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:05:42.502" starttime="20200922 13:05:42.489"></status>
</kw>
<msg timestamp="20200922 13:05:42.502" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:05:42.502" starttime="20200922 13:05:42.489"></status>
</kw>
<msg timestamp="20200922 13:05:42.503" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:05:42.503" starttime="20200922 13:05:42.488"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:05:42.504" level="INFO">${random} = 51</msg>
<status status="PASS" endtime="20200922 13:05:42.504" starttime="20200922 13:05:42.503"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:05:42.508" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:05:42.508" starttime="20200922 13:05:42.508"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:05:42.509" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:05:42.509" starttime="20200922 13:05:42.509"></status>
</kw>
<status status="PASS" endtime="20200922 13:05:42.509" starttime="20200922 13:05:42.507"></status>
</kw>
<msg timestamp="20200922 13:05:42.509" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:05:42.510" starttime="20200922 13:05:42.507"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:05:42.511" starttime="20200922 13:05:42.510"></status>
</kw>
<msg timestamp="20200922 13:05:42.511" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 13:05:42.511" starttime="20200922 13:05:42.510"></status>
</kw>
<status status="PASS" endtime="20200922 13:05:42.511" starttime="20200922 13:05:42.506"></status>
</kw>
<msg timestamp="20200922 13:05:42.511" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:05:42.511" starttime="20200922 13:05:42.505"></status>
</kw>
<msg timestamp="20200922 13:05:42.511" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:05:42.511" starttime="20200922 13:05:42.505"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:05:42.515" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:05:42.515" starttime="20200922 13:05:42.514"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:05:42.516" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:05:42.516" starttime="20200922 13:05:42.515"></status>
</kw>
<status status="PASS" endtime="20200922 13:05:42.516" starttime="20200922 13:05:42.514"></status>
</kw>
<msg timestamp="20200922 13:05:42.516" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:05:42.516" starttime="20200922 13:05:42.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:05:42.517" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200922 13:05:42.518" starttime="20200922 13:05:42.517"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:05:42.518" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200922 13:05:42.518" starttime="20200922 13:05:42.518"></status>
</kw>
<status status="PASS" endtime="20200922 13:05:42.518" starttime="20200922 13:05:42.517"></status>
</kw>
<msg timestamp="20200922 13:05:42.519" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200922 13:05:42.519" starttime="20200922 13:05:42.516"></status>
</kw>
<status status="PASS" endtime="20200922 13:05:42.519" starttime="20200922 13:05:42.513"></status>
</kw>
<msg timestamp="20200922 13:05:42.519" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200922 13:05:42.519" starttime="20200922 13:05:42.512"></status>
</kw>
<msg timestamp="20200922 13:05:42.519" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200922 13:05:42.519" starttime="20200922 13:05:42.512"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:05:42.523" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:05:42.523" starttime="20200922 13:05:42.522"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:05:42.524" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:05:42.524" starttime="20200922 13:05:42.523"></status>
</kw>
<status status="PASS" endtime="20200922 13:05:42.524" starttime="20200922 13:05:42.522"></status>
</kw>
<msg timestamp="20200922 13:05:42.524" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:05:42.524" starttime="20200922 13:05:42.521"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:05:42.526" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200922 13:05:42.526" starttime="20200922 13:05:42.525"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:05:42.526" level="INFO">${result} = /wordcount-51.txt</msg>
<status status="PASS" endtime="20200922 13:05:42.526" starttime="20200922 13:05:42.526"></status>
</kw>
<status status="PASS" endtime="20200922 13:05:42.527" starttime="20200922 13:05:42.525"></status>
</kw>
<msg timestamp="20200922 13:05:42.527" level="INFO">${path_with_leading} = /wordcount-51.txt</msg>
<status status="PASS" endtime="20200922 13:05:42.527" starttime="20200922 13:05:42.524"></status>
</kw>
<status status="PASS" endtime="20200922 13:05:42.527" starttime="20200922 13:05:42.521"></status>
</kw>
<msg timestamp="20200922 13:05:42.527" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-51.txt</msg>
<status status="PASS" endtime="20200922 13:05:42.527" starttime="20200922 13:05:42.520"></status>
</kw>
<msg timestamp="20200922 13:05:42.527" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-51.txt</msg>
<status status="PASS" endtime="20200922 13:05:42.527" starttime="20200922 13:05:42.520"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:05:42.531" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-51.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:06:28.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:06:28.419" level="INFO">${output} = 2020-09-22 13:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:06:28.419" starttime="20200922 13:05:42.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:06:28.420" level="INFO">2020-09-22 13:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-09-22 13:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 13:05:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:45 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-22 13:05:45 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-22 13:05:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:05:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:05:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:05:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B06DB43B492B-&gt;574679af-c497-4076-992d-c517f347d11e
2020-09-22 13:05:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-22 13:05:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:05:51 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:05:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600779721172_0004
2020-09-22 13:05:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-22 13:05:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:52 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:05:52 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-22 13:05:52 INFO  YarnClientImpl:324 - Submitted application application_1600779721172_0004
2020-09-22 13:05:52 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600779721172_0004/
2020-09-22 13:05:52 INFO  Job:1619 - Running job: job_1600779721172_0004
2020-09-22 13:06:01 INFO  Job:1640 - Job job_1600779721172_0004 running in uber mode : false
2020-09-22 13:06:01 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:06:08 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:06:14 INFO  Job:1647 -  map 67% reduce 0%
2020-09-22 13:06:20 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:06:26 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:06:27 INFO  Job:1658 - Job job_1600779721172_0004 completed successfully
2020-09-22 13:06:27 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:06:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082117
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46608
		Total time spent by all reduces in occupied slots (ms)=17572
		Total time spent by all map tasks (ms)=11652
		Total time spent by all reduce tasks (ms)=4393
		Total vcore-milliseconds taken by all map tasks=11652
		Total vcore-milliseconds taken by all reduce tasks=4393
		Total megabyte-milliseconds taken by all map tasks=47726592
		Total megabyte-milliseconds taken by all reduce tasks=17993728
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=693
		CPU time spent (ms)=8720
		Physical memory (bytes) snapshot=1243275264
		Virtual memory (bytes) snapshot=16032727040
		Total committed heap usage (bytes)=1272971264
		Peak Map Physical memory (bytes)=356401152
		Peak Map Virtual memory (bytes)=4012359680
		Peak Reduce Physical memory (bytes)=297689088
		Peak Reduce Virtual memory (bytes)=4036374528
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-09-22 13:06:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200922 13:06:28.420" starttime="20200922 13:06:28.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:06:28.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:06:28.421" starttime="20200922 13:06:28.420"></status>
</kw>
<status status="PASS" endtime="20200922 13:06:28.421" starttime="20200922 13:05:42.528"></status>
</kw>
<msg timestamp="20200922 13:06:28.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:06:28.422" starttime="20200922 13:05:42.528"></status>
</kw>
<msg timestamp="20200922 13:06:28.422" level="INFO">${output} = 2020-09-22 13:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:05:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:06:28.423" starttime="20200922 13:05:42.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200922 13:06:28.423" starttime="20200922 13:06:28.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:06:28.424" starttime="20200922 13:06:28.423"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:06:28.424" critical="yes" starttime="20200922 13:05:42.487"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200922 13:06:28.426" starttime="20200922 13:04:59.395"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:03:10.460" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:03:10.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:03:10.464" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:03:10.464" starttime="20200922 13:03:10.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:03:10.465" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:03:10.465" starttime="20200922 13:03:10.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:03:10.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:03:10.466" starttime="20200922 13:03:10.465"></status>
</kw>
<status status="PASS" endtime="20200922 13:03:10.466" starttime="20200922 13:03:10.454"></status>
</kw>
<msg timestamp="20200922 13:03:10.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:03:10.466" starttime="20200922 13:03:10.453"></status>
</kw>
<msg timestamp="20200922 13:03:10.467" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:03:10.467" starttime="20200922 13:03:10.453"></status>
</kw>
<msg timestamp="20200922 13:03:10.467" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:03:10.467" starttime="20200922 13:03:10.452"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:03:10.471" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:03:10.471" starttime="20200922 13:03:10.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:03:10.471" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:03:10.471" starttime="20200922 13:03:10.471"></status>
</kw>
<status status="PASS" endtime="20200922 13:03:10.472" starttime="20200922 13:03:10.470"></status>
</kw>
<msg timestamp="20200922 13:03:10.472" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:03:10.472" starttime="20200922 13:03:10.469"></status>
</kw>
<status status="PASS" endtime="20200922 13:03:10.472" starttime="20200922 13:03:10.469"></status>
</kw>
<msg timestamp="20200922 13:03:10.472" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:03:10.472" starttime="20200922 13:03:10.468"></status>
</kw>
<msg timestamp="20200922 13:03:10.473" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:03:10.473" starttime="20200922 13:03:10.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:03:10.477" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:04:01.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:04:01.812" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03...</msg>
<status status="PASS" endtime="20200922 13:04:01.812" starttime="20200922 13:03:10.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:04:01.814" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-22 13:03:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-22 13:03:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:03:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:03:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:03:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-90E5EE12B9BE-&gt;574679af-c497-4076-992d-c517f347d11e
2020-09-22 13:03:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-22 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-09-22 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:03:15 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:03:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600779721172_0001
2020-09-22 13:03:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-22 13:03:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:15 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:03:15 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-22 13:03:16 INFO  YarnClientImpl:324 - Submitted application application_1600779721172_0001
2020-09-22 13:03:16 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600779721172_0001/
2020-09-22 13:03:16 INFO  Job:1619 - Running job: job_1600779721172_0001
2020-09-22 13:03:27 INFO  Job:1640 - Job job_1600779721172_0001 running in uber mode : false
2020-09-22 13:03:27 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:03:34 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:03:40 INFO  Job:1647 -  map 67% reduce 0%
2020-09-22 13:03:46 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:03:54 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:04:01 INFO  Job:1658 - Job job_1600779721172_0001 completed successfully
2020-09-22 13:04:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1019649
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48328
		Total time spent by all reduces in occupied slots (ms)=27912
		Total time spent by all map tasks (ms)=12082
		Total time spent by all reduce tasks (ms)=6978
		Total vcore-milliseconds taken by all map tasks=12082
		Total vcore-milliseconds taken by all reduce tasks=6978
		Total megabyte-milliseconds taken by all map tasks=49487872
		Total megabyte-milliseconds taken by all reduce tasks=28581888
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=696
		CPU time spent (ms)=7540
		Physical memory (bytes) snapshot=1122250752
		Virtual memory (bytes) snapshot=16039567360
		Total committed heap usage (bytes)=1121452032
		Peak Map Physical memory (bytes)=289468416
		Peak Map Virtual memory (bytes)=4010622976
		Peak Reduce Physical memory (bytes)=302231552
		Peak Reduce Virtual memory (bytes)=4036837376
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 46.711 seconds
2020-09-22 13:04:01 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-09-22 13:04:01 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200922 13:04:01.814" starttime="20200922 13:04:01.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:04:01.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:04:01.816" starttime="20200922 13:04:01.814"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:01.816" starttime="20200922 13:03:10.474"></status>
</kw>
<msg timestamp="20200922 13:04:01.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:04:01.817" starttime="20200922 13:03:10.473"></status>
</kw>
<msg timestamp="20200922 13:04:01.817" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:03...</msg>
<status status="PASS" endtime="20200922 13:04:01.817" starttime="20200922 13:03:10.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:04:01.818" starttime="20200922 13:04:01.818"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:04:01.818" critical="yes" starttime="20200922 13:03:10.452"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:04:01.826" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:04:01.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:04:01.838" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:04:01.838" starttime="20200922 13:04:01.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:04:01.839" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:04:01.839" starttime="20200922 13:04:01.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:04:01.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:04:01.840" starttime="20200922 13:04:01.839"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:01.840" starttime="20200922 13:04:01.822"></status>
</kw>
<msg timestamp="20200922 13:04:01.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:04:01.840" starttime="20200922 13:04:01.822"></status>
</kw>
<msg timestamp="20200922 13:04:01.841" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:04:01.841" starttime="20200922 13:04:01.821"></status>
</kw>
<msg timestamp="20200922 13:04:01.841" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20200922 13:04:01.841" starttime="20200922 13:04:01.820"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:04:01.842" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20200922 13:04:01.842" starttime="20200922 13:04:01.841"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:04:01.854" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:04:01.854" starttime="20200922 13:04:01.854"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:04:01.855" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:04:01.855" starttime="20200922 13:04:01.854"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:01.855" starttime="20200922 13:04:01.853"></status>
</kw>
<msg timestamp="20200922 13:04:01.855" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:04:01.855" starttime="20200922 13:04:01.853"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:01.855" starttime="20200922 13:04:01.852"></status>
</kw>
<msg timestamp="20200922 13:04:01.855" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:04:01.855" starttime="20200922 13:04:01.843"></status>
</kw>
<msg timestamp="20200922 13:04:01.856" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:04:01.856" starttime="20200922 13:04:01.842"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:04:01.859" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:04:01.859" starttime="20200922 13:04:01.858"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:04:01.859" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:04:01.859" starttime="20200922 13:04:01.859"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:01.860" starttime="20200922 13:04:01.858"></status>
</kw>
<msg timestamp="20200922 13:04:01.860" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:04:01.860" starttime="20200922 13:04:01.857"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:01.860" starttime="20200922 13:04:01.857"></status>
</kw>
<msg timestamp="20200922 13:04:01.860" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200922 13:04:01.860" starttime="20200922 13:04:01.856"></status>
</kw>
<msg timestamp="20200922 13:04:01.861" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200922 13:04:01.861" starttime="20200922 13:04:01.856"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:04:01.865" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:04:01.865" starttime="20200922 13:04:01.864"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:04:01.865" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:04:01.865" starttime="20200922 13:04:01.865"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:01.866" starttime="20200922 13:04:01.863"></status>
</kw>
<msg timestamp="20200922 13:04:01.866" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:04:01.866" starttime="20200922 13:04:01.863"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:01.866" starttime="20200922 13:04:01.862"></status>
</kw>
<msg timestamp="20200922 13:04:01.866" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-55.txt</msg>
<status status="PASS" endtime="20200922 13:04:01.866" starttime="20200922 13:04:01.862"></status>
</kw>
<msg timestamp="20200922 13:04:01.866" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-55.txt</msg>
<status status="PASS" endtime="20200922 13:04:01.866" starttime="20200922 13:04:01.861"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:04:01.872" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:04:42.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:04:42.265" level="INFO">${output} = 2020-09-22 13:04:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:04:42.265" starttime="20200922 13:04:01.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:04:42.267" level="INFO">2020-09-22 13:04:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-09-22 13:04:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 13:04:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:04 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-09-22 13:04:04 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-09-22 13:04:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:04:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:04:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:04:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-138BD859F34B-&gt;574679af-c497-4076-992d-c517f347d11e
2020-09-22 13:04:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-22 13:04:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:04:06 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:04:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600779721172_0002
2020-09-22 13:04:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-22 13:04:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:07 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:04:07 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-09-22 13:04:07 INFO  YarnClientImpl:324 - Submitted application application_1600779721172_0002
2020-09-22 13:04:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600779721172_0002/
2020-09-22 13:04:07 INFO  Job:1619 - Running job: job_1600779721172_0002
2020-09-22 13:04:16 INFO  Job:1640 - Job job_1600779721172_0002 running in uber mode : false
2020-09-22 13:04:16 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:04:23 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:04:29 INFO  Job:1647 -  map 67% reduce 0%
2020-09-22 13:04:35 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:04:40 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:04:41 INFO  Job:1658 - Job job_1600779721172_0002 completed successfully
2020-09-22 13:04:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:41 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082201
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48872
		Total time spent by all reduces in occupied slots (ms)=17064
		Total time spent by all map tasks (ms)=12218
		Total time spent by all reduce tasks (ms)=4266
		Total vcore-milliseconds taken by all map tasks=12218
		Total vcore-milliseconds taken by all reduce tasks=4266
		Total megabyte-milliseconds taken by all map tasks=50044928
		Total megabyte-milliseconds taken by all reduce tasks=17473536
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=636
		CPU time spent (ms)=7900
		Physical memory (bytes) snapshot=1147289600
		Virtual memory (bytes) snapshot=16054829056
		Total committed heap usage (bytes)=1058013184
		Peak Map Physical memory (bytes)=292184064
		Peak Map Virtual memory (bytes)=4011159552
		Peak Reduce Physical memory (bytes)=298094592
		Peak Reduce Virtual memory (bytes)=4040118272
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-09-22 13:04:41 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20200922 13:04:42.267" starttime="20200922 13:04:42.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:04:42.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:04:42.268" starttime="20200922 13:04:42.267"></status>
</kw>
<status status="PASS" endtime="20200922 13:04:42.268" starttime="20200922 13:04:01.867"></status>
</kw>
<msg timestamp="20200922 13:04:42.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:04:42.268" starttime="20200922 13:04:01.867"></status>
</kw>
<msg timestamp="20200922 13:04:42.269" level="INFO">${output} = 2020-09-22 13:04:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-09-22 13:04:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20200922 13:04:42.269" starttime="20200922 13:04:01.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200922 13:04:42.270" starttime="20200922 13:04:42.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:04:42.270" starttime="20200922 13:04:42.270"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:04:42.271" critical="yes" starttime="20200922 13:04:01.819"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200922 13:04:42.272" starttime="20200922 13:03:10.384"></status>
</suite>
<status status="PASS" elapsedtime="226060" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:08:37.556" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:08:42.036" level="INFO">${rc} = 255</msg>
<msg timestamp="20200922 13:08:42.037" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200922 13:08:42.037" starttime="20200922 13:08:37.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:08:42.038" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200922 13:08:42.038" starttime="20200922 13:08:42.037"></status>
</kw>
<msg timestamp="20200922 13:08:42.038" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20200922 13:08:42.038" starttime="20200922 13:08:37.548"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --spaceQuota 100TB --bucketQuota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:08:42.044" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --spaceQuota 100TB --bucketQuota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:08:46.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:08:46.009" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:08:46.009" starttime="20200922 13:08:42.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:08:46.010" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:08:46.011" starttime="20200922 13:08:46.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:08:46.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:08:46.011" starttime="20200922 13:08:46.011"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:46.012" starttime="20200922 13:08:42.041"></status>
</kw>
<msg timestamp="20200922 13:08:46.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:08:46.012" starttime="20200922 13:08:42.040"></status>
</kw>
<msg timestamp="20200922 13:08:46.012" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200922 13:08:46.012" starttime="20200922 13:08:42.040"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200922 13:08:46.013" starttime="20200922 13:08:46.012"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:46.013" starttime="20200922 13:08:42.039"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:46.013" starttime="20200922 13:08:42.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:08:46.020" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:08:49.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:08:49.731" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:08:49.731" starttime="20200922 13:08:46.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:08:49.732" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:08:49.733" starttime="20200922 13:08:49.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:08:49.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:08:49.733" starttime="20200922 13:08:49.733"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:49.734" starttime="20200922 13:08:46.017"></status>
</kw>
<msg timestamp="20200922 13:08:49.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:08:49.734" starttime="20200922 13:08:46.016"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:49.734" starttime="20200922 13:08:46.015"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:49.734" starttime="20200922 13:08:46.014"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:49.734" starttime="20200922 13:08:46.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20200922 13:08:49.735" starttime="20200922 13:08:49.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:08:49.739" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:08:53.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:08:53.762" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:08:49.340Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200922 13:08:53.762" starttime="20200922 13:08:49.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:08:53.764" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:08:49.340Z",
  "modificationTime" : "2020-09-22T13:08:49.340Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}</msg>
<status status="PASS" endtime="20200922 13:08:53.764" starttime="20200922 13:08:53.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:08:53.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:08:53.766" starttime="20200922 13:08:53.764"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:53.766" starttime="20200922 13:08:49.736"></status>
</kw>
<msg timestamp="20200922 13:08:53.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:08:53.766" starttime="20200922 13:08:49.736"></status>
</kw>
<msg timestamp="20200922 13:08:53.767" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-09-22T13:08:49.340Z",
  "modificationTime" : "2020-09...</msg>
<status status="PASS" endtime="20200922 13:08:53.767" starttime="20200922 13:08:49.735"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200922 13:08:53.768" starttime="20200922 13:08:53.767"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:08:53.772" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:08:53.772" starttime="20200922 13:08:53.772"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:08:53.773" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:08:53.774" starttime="20200922 13:08:53.773"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:53.774" starttime="20200922 13:08:53.771"></status>
</kw>
<msg timestamp="20200922 13:08:53.774" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:08:53.774" starttime="20200922 13:08:53.771"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:53.774" starttime="20200922 13:08:53.770"></status>
</kw>
<msg timestamp="20200922 13:08:53.775" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200922 13:08:53.775" starttime="20200922 13:08:53.769"></status>
</kw>
<msg timestamp="20200922 13:08:53.775" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20200922 13:08:53.775" starttime="20200922 13:08:53.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:08:53.779" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:08:57.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:08:57.894" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:08:57.894" starttime="20200922 13:08:53.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:08:57.895" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:08:57.895" starttime="20200922 13:08:57.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:08:57.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:08:57.896" starttime="20200922 13:08:57.895"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:57.896" starttime="20200922 13:08:53.776"></status>
</kw>
<msg timestamp="20200922 13:08:57.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:08:57.897" starttime="20200922 13:08:53.776"></status>
</kw>
<status status="PASS" endtime="20200922 13:08:57.897" starttime="20200922 13:08:53.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:08:57.901" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:09:06.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:09:06.004" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:09:06.004" starttime="20200922 13:08:57.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:09:06.005" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:09:06.005" starttime="20200922 13:09:06.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:09:06.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:09:06.006" starttime="20200922 13:09:06.005"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:06.006" starttime="20200922 13:08:57.898"></status>
</kw>
<msg timestamp="20200922 13:09:06.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:09:06.007" starttime="20200922 13:08:57.898"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:06.007" starttime="20200922 13:08:57.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:09:06.011" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:09:12.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:09:12.728" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:09:12.728" starttime="20200922 13:09:06.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:09:12.730" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:09:12.730" starttime="20200922 13:09:12.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:09:12.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:09:12.731" starttime="20200922 13:09:12.730"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:12.731" starttime="20200922 13:09:06.008"></status>
</kw>
<msg timestamp="20200922 13:09:12.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:09:12.731" starttime="20200922 13:09:06.008"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:12.732" starttime="20200922 13:09:06.007"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:09:12.737" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:09:18.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:09:18.675" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:09:18.675" starttime="20200922 13:09:12.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:09:18.676" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:09:18.676" starttime="20200922 13:09:18.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:09:18.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:09:18.677" starttime="20200922 13:09:18.677"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:18.678" starttime="20200922 13:09:12.733"></status>
</kw>
<msg timestamp="20200922 13:09:18.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:09:18.678" starttime="20200922 13:09:12.733"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:18.678" starttime="20200922 13:09:12.732"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:09:18.678" critical="yes" starttime="20200922 13:08:37.547"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:09:18.685" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:09:18.685" starttime="20200922 13:09:18.685"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:09:18.686" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:09:18.686" starttime="20200922 13:09:18.686"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:18.686" starttime="20200922 13:09:18.684"></status>
</kw>
<msg timestamp="20200922 13:09:18.687" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:09:18.687" starttime="20200922 13:09:18.683"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:18.687" starttime="20200922 13:09:18.682"></status>
</kw>
<msg timestamp="20200922 13:09:18.687" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 13:09:18.687" starttime="20200922 13:09:18.681"></status>
</kw>
<msg timestamp="20200922 13:09:18.688" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 13:09:18.688" starttime="20200922 13:09:18.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:09:18.692" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:09:22.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:09:22.333" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:09:22.333" starttime="20200922 13:09:18.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:09:22.334" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:09:22.334" starttime="20200922 13:09:22.333"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:09:22.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:09:22.336" starttime="20200922 13:09:22.335"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:22.337" starttime="20200922 13:09:18.689"></status>
</kw>
<msg timestamp="20200922 13:09:22.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:09:22.337" starttime="20200922 13:09:18.688"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:22.338" starttime="20200922 13:09:18.688"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:09:22.344" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:09:26.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:09:26.210" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200922 13:09:26.210" starttime="20200922 13:09:22.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:09:26.211" level="INFO"></msg>
<status status="PASS" endtime="20200922 13:09:26.211" starttime="20200922 13:09:26.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:09:26.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:09:26.212" starttime="20200922 13:09:26.211"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:26.212" starttime="20200922 13:09:22.339"></status>
</kw>
<msg timestamp="20200922 13:09:26.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:09:26.213" starttime="20200922 13:09:22.339"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:26.213" starttime="20200922 13:09:22.338"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200922 13:09:26.213" critical="yes" starttime="20200922 13:09:18.680"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20200922 13:09:26.215" starttime="20200922 13:08:37.474"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:11:27.144" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:11:27.144" starttime="20200922 13:11:27.143"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:11:27.145" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:11:27.145" starttime="20200922 13:11:27.144"></status>
</kw>
<status status="PASS" endtime="20200922 13:11:27.145" starttime="20200922 13:11:27.142"></status>
</kw>
<msg timestamp="20200922 13:11:27.145" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:11:27.145" starttime="20200922 13:11:27.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:11:27.147" starttime="20200922 13:11:27.146"></status>
</kw>
<msg timestamp="20200922 13:11:27.147" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 13:11:27.147" starttime="20200922 13:11:27.145"></status>
</kw>
<status status="PASS" endtime="20200922 13:11:27.147" starttime="20200922 13:11:27.140"></status>
</kw>
<msg timestamp="20200922 13:11:27.147" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:11:27.147" starttime="20200922 13:11:27.139"></status>
</kw>
<msg timestamp="20200922 13:11:27.148" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:11:27.148" starttime="20200922 13:11:27.138"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:11:27.148" level="INFO">${random} = 49169</msg>
<status status="PASS" endtime="20200922 13:11:27.148" starttime="20200922 13:11:27.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:11:27.152" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-49169 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:11:31.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:11:31.333" level="INFO">${output} = 2020-09-22 13:11:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:11:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200922 13:11:31.333" starttime="20200922 13:11:27.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:11:31.334" level="INFO">2020-09-22 13:11:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:11:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:11:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:11:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:11:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C910EFBD234A-&gt;6ddb028c-ad13-471e-b6e4-5ddcf53093c4
2020-09-22 13:11:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200922 13:11:31.335" starttime="20200922 13:11:31.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:11:31.335" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:11:31.335" starttime="20200922 13:11:31.335"></status>
</kw>
<status status="PASS" endtime="20200922 13:11:31.336" starttime="20200922 13:11:27.149"></status>
</kw>
<msg timestamp="20200922 13:11:31.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:11:31.336" starttime="20200922 13:11:27.149"></status>
</kw>
<msg timestamp="20200922 13:11:31.336" level="INFO">${result} = 2020-09-22 13:11:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:11:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200922 13:11:31.336" starttime="20200922 13:11:27.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:11:31.340" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:11:33.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:11:33.525" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:09 ofs://om/volume1/bucket1/ozone-19081
-rw-...</msg>
<status status="PASS" endtime="20200922 13:11:33.525" starttime="20200922 13:11:31.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:11:33.526" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:09 ofs://om/volume1/bucket1/ozone-19081
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:11 ofs://om/volume1/bucket1/ozone-49169
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:09 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:10 ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20200922 13:11:33.526" starttime="20200922 13:11:33.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:11:33.527" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:11:33.527" starttime="20200922 13:11:33.526"></status>
</kw>
<status status="PASS" endtime="20200922 13:11:33.527" starttime="20200922 13:11:31.338"></status>
</kw>
<msg timestamp="20200922 13:11:33.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:11:33.528" starttime="20200922 13:11:31.337"></status>
</kw>
<msg timestamp="20200922 13:11:33.528" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:09 ofs://om/volume1/bucket1/ozone-19081
-rw-...</msg>
<status status="PASS" endtime="20200922 13:11:33.528" starttime="20200922 13:11:31.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:11:33.529" starttime="20200922 13:11:33.528"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:11:33.529" critical="yes" starttime="20200922 13:11:27.137"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200922 13:11:33.530" starttime="20200922 13:11:27.073"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:09:31.662" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:09:31.662" starttime="20200922 13:09:31.660"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:09:31.663" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:09:31.663" starttime="20200922 13:09:31.662"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:31.663" starttime="20200922 13:09:31.660"></status>
</kw>
<msg timestamp="20200922 13:09:31.663" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:09:31.663" starttime="20200922 13:09:31.659"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:31.663" starttime="20200922 13:09:31.659"></status>
</kw>
<msg timestamp="20200922 13:09:31.664" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:09:31.664" starttime="20200922 13:09:31.658"></status>
</kw>
<msg timestamp="20200922 13:09:31.665" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:09:31.665" starttime="20200922 13:09:31.657"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:09:31.665" level="INFO">${random} = 19081</msg>
<status status="PASS" endtime="20200922 13:09:31.665" starttime="20200922 13:09:31.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:09:31.668" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-19081 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:09:36.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:09:36.089" level="INFO">${output} = 2020-09-22 13:09:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:09:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200922 13:09:36.089" starttime="20200922 13:09:31.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:09:36.090" level="INFO">2020-09-22 13:09:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:09:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:09:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:09:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:09:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4DE742E96AB2-&gt;6ddb028c-ad13-471e-b6e4-5ddcf53093c4
2020-09-22 13:09:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20200922 13:09:36.090" starttime="20200922 13:09:36.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:09:36.091" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:09:36.091" starttime="20200922 13:09:36.091"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:36.092" starttime="20200922 13:09:31.666"></status>
</kw>
<msg timestamp="20200922 13:09:36.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:09:36.092" starttime="20200922 13:09:31.666"></status>
</kw>
<msg timestamp="20200922 13:09:36.092" level="INFO">${result} = 2020-09-22 13:09:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:09:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20200922 13:09:36.092" starttime="20200922 13:09:31.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:09:36.096" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:09:38.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:09:38.432" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:09 o3fs://bucket1.volume1.om/ozone-19081
dr...</msg>
<status status="PASS" endtime="20200922 13:09:38.432" starttime="20200922 13:09:36.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:09:38.434" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:09 o3fs://bucket1.volume1.om/ozone-19081
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:09 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20200922 13:09:38.434" starttime="20200922 13:09:38.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:09:38.435" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:09:38.435" starttime="20200922 13:09:38.434"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:38.435" starttime="20200922 13:09:36.094"></status>
</kw>
<msg timestamp="20200922 13:09:38.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:09:38.436" starttime="20200922 13:09:36.093"></status>
</kw>
<msg timestamp="20200922 13:09:38.436" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-09-22 13:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-09-22 13:09 o3fs://bucket1.volume1.om/ozone-19081
dr...</msg>
<status status="PASS" endtime="20200922 13:09:38.436" starttime="20200922 13:09:36.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:09:38.437" starttime="20200922 13:09:38.436"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200922 13:09:38.437" critical="yes" starttime="20200922 13:09:31.656"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20200922 13:09:38.438" starttime="20200922 13:09:31.595"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:11:38.816" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:11:38.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:11:38.826" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:11:38.826" starttime="20200922 13:11:38.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:11:38.827" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:11:38.827" starttime="20200922 13:11:38.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:11:38.828" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:11:38.828" starttime="20200922 13:11:38.827"></status>
</kw>
<status status="PASS" endtime="20200922 13:11:38.828" starttime="20200922 13:11:38.814"></status>
</kw>
<msg timestamp="20200922 13:11:38.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:11:38.829" starttime="20200922 13:11:38.813"></status>
</kw>
<msg timestamp="20200922 13:11:38.829" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:11:38.829" starttime="20200922 13:11:38.813"></status>
</kw>
<msg timestamp="20200922 13:11:38.829" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:11:38.829" starttime="20200922 13:11:38.812"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:11:38.834" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:11:38.834" starttime="20200922 13:11:38.833"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:11:38.834" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:11:38.834" starttime="20200922 13:11:38.834"></status>
</kw>
<status status="PASS" endtime="20200922 13:11:38.835" starttime="20200922 13:11:38.833"></status>
</kw>
<msg timestamp="20200922 13:11:38.835" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:11:38.835" starttime="20200922 13:11:38.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:11:38.836" starttime="20200922 13:11:38.836"></status>
</kw>
<msg timestamp="20200922 13:11:38.836" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 13:11:38.836" starttime="20200922 13:11:38.835"></status>
</kw>
<status status="PASS" endtime="20200922 13:11:38.837" starttime="20200922 13:11:38.831"></status>
</kw>
<msg timestamp="20200922 13:11:38.837" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:11:38.837" starttime="20200922 13:11:38.830"></status>
</kw>
<msg timestamp="20200922 13:11:38.837" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:11:38.837" starttime="20200922 13:11:38.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:11:38.840" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:12:27.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:12:27.092" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:11:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:11:41 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200922 13:12:27.092" starttime="20200922 13:11:38.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:12:27.093" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:11:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:11:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:11:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:11:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:11:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AE75E65B66F0-&gt;6ddb028c-ad13-471e-b6e4-5ddcf53093c4
2020-09-22 13:11:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-22 13:11:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-09-22 13:11:45 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 13:11:46 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:11:46 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:11:46 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-22 13:11:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600780056329_0003
2020-09-22 13:11:46 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-22 13:11:46 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:11:46 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-22 13:11:46 INFO  YarnClientImpl:311 - Submitted application application_1600780056329_0003
2020-09-22 13:11:46 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600780056329_0003/
2020-09-22 13:11:46 INFO  Job:1619 - Running job: job_1600780056329_0003
2020-09-22 13:11:56 INFO  Job:1640 - Job job_1600780056329_0003 running in uber mode : false
2020-09-22 13:11:56 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:12:03 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:12:10 INFO  Job:1647 -  map 67% reduce 0%
2020-09-22 13:12:17 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:12:23 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:12:26 INFO  Job:1658 - Job job_1600780056329_0003 completed successfully
2020-09-22 13:12:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1042453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51092
		Total time spent by all reduces in occupied slots (ms)=18772
		Total time spent by all map tasks (ms)=12773
		Total time spent by all reduce tasks (ms)=4693
		Total vcore-milliseconds taken by all map tasks=12773
		Total vcore-milliseconds taken by all reduce tasks=4693
		Total megabyte-milliseconds taken by all map tasks=52318208
		Total megabyte-milliseconds taken by all reduce tasks=19222528
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=721
		CPU time spent (ms)=9420
		Physical memory (bytes) snapshot=1338081280
		Virtual memory (bytes) snapshot=16049037312
		Total committed heap usage (bytes)=1416101888
		Peak Map Physical memory (bytes)=360652800
		Peak Map Virtual memory (bytes)=4015349760
		Peak Reduce Physical memory (bytes)=341098496
		Peak Reduce Virtual memory (bytes)=4005158912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 41.27 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200922 13:12:27.093" starttime="20200922 13:12:27.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:12:27.094" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:12:27.094" starttime="20200922 13:12:27.094"></status>
</kw>
<status status="PASS" endtime="20200922 13:12:27.094" starttime="20200922 13:11:38.838"></status>
</kw>
<msg timestamp="20200922 13:12:27.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:12:27.095" starttime="20200922 13:11:38.838"></status>
</kw>
<msg timestamp="20200922 13:12:27.095" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:11:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:11:41 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200922 13:12:27.095" starttime="20200922 13:11:38.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:12:27.096" starttime="20200922 13:12:27.096"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:12:27.096" critical="yes" starttime="20200922 13:11:38.812"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:12:27.110" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:12:27.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:12:27.122" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:12:27.123" starttime="20200922 13:12:27.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:12:27.125" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:12:27.125" starttime="20200922 13:12:27.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:12:27.126" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:12:27.126" starttime="20200922 13:12:27.126"></status>
</kw>
<status status="PASS" endtime="20200922 13:12:27.127" starttime="20200922 13:12:27.104"></status>
</kw>
<msg timestamp="20200922 13:12:27.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:12:27.127" starttime="20200922 13:12:27.102"></status>
</kw>
<msg timestamp="20200922 13:12:27.127" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:12:27.127" starttime="20200922 13:12:27.102"></status>
</kw>
<msg timestamp="20200922 13:12:27.128" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:12:27.128" starttime="20200922 13:12:27.101"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:12:27.129" level="INFO">${random} = 37</msg>
<status status="PASS" endtime="20200922 13:12:27.129" starttime="20200922 13:12:27.128"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:12:27.133" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:12:27.133" starttime="20200922 13:12:27.132"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:12:27.134" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:12:27.134" starttime="20200922 13:12:27.133"></status>
</kw>
<status status="PASS" endtime="20200922 13:12:27.134" starttime="20200922 13:12:27.132"></status>
</kw>
<msg timestamp="20200922 13:12:27.134" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:12:27.134" starttime="20200922 13:12:27.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200922 13:12:27.135" starttime="20200922 13:12:27.135"></status>
</kw>
<msg timestamp="20200922 13:12:27.135" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20200922 13:12:27.135" starttime="20200922 13:12:27.134"></status>
</kw>
<status status="PASS" endtime="20200922 13:12:27.136" starttime="20200922 13:12:27.131"></status>
</kw>
<msg timestamp="20200922 13:12:27.136" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:12:27.136" starttime="20200922 13:12:27.130"></status>
</kw>
<msg timestamp="20200922 13:12:27.136" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20200922 13:12:27.136" starttime="20200922 13:12:27.129"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:12:27.140" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:12:27.140" starttime="20200922 13:12:27.139"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:12:27.141" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:12:27.141" starttime="20200922 13:12:27.140"></status>
</kw>
<status status="PASS" endtime="20200922 13:12:27.141" starttime="20200922 13:12:27.139"></status>
</kw>
<msg timestamp="20200922 13:12:27.141" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:12:27.141" starttime="20200922 13:12:27.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:12:27.143" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20200922 13:12:27.143" starttime="20200922 13:12:27.143"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:12:27.144" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20200922 13:12:27.144" starttime="20200922 13:12:27.143"></status>
</kw>
<status status="PASS" endtime="20200922 13:12:27.144" starttime="20200922 13:12:27.142"></status>
</kw>
<msg timestamp="20200922 13:12:27.144" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20200922 13:12:27.144" starttime="20200922 13:12:27.141"></status>
</kw>
<status status="PASS" endtime="20200922 13:12:27.145" starttime="20200922 13:12:27.138"></status>
</kw>
<msg timestamp="20200922 13:12:27.145" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200922 13:12:27.145" starttime="20200922 13:12:27.137"></status>
</kw>
<msg timestamp="20200922 13:12:27.145" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20200922 13:12:27.145" starttime="20200922 13:12:27.136"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20200922 13:12:27.149" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20200922 13:12:27.149" starttime="20200922 13:12:27.148"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:12:27.149" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20200922 13:12:27.149" starttime="20200922 13:12:27.149"></status>
</kw>
<status status="PASS" endtime="20200922 13:12:27.150" starttime="20200922 13:12:27.148"></status>
</kw>
<msg timestamp="20200922 13:12:27.150" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20200922 13:12:27.150" starttime="20200922 13:12:27.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:12:27.151" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20200922 13:12:27.151" starttime="20200922 13:12:27.151"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:12:27.152" level="INFO">${result} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20200922 13:12:27.152" starttime="20200922 13:12:27.152"></status>
</kw>
<status status="PASS" endtime="20200922 13:12:27.153" starttime="20200922 13:12:27.150"></status>
</kw>
<msg timestamp="20200922 13:12:27.153" level="INFO">${path_with_leading} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20200922 13:12:27.153" starttime="20200922 13:12:27.150"></status>
</kw>
<status status="PASS" endtime="20200922 13:12:27.153" starttime="20200922 13:12:27.146"></status>
</kw>
<msg timestamp="20200922 13:12:27.153" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20200922 13:12:27.153" starttime="20200922 13:12:27.146"></status>
</kw>
<msg timestamp="20200922 13:12:27.153" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20200922 13:12:27.153" starttime="20200922 13:12:27.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:12:27.157" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-37.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:13:07.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:13:07.371" level="INFO">${output} = 2020-09-22 13:12:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-09-22 13:12:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200922 13:13:07.371" starttime="20200922 13:12:27.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:13:07.372" level="INFO">2020-09-22 13:12:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-09-22 13:12:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 13:12:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:12:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:12:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:12:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:12:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0FFDC50D2D54-&gt;6ddb028c-ad13-471e-b6e4-5ddcf53093c4
2020-09-22 13:12:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-22 13:12:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:12:31 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:12:31 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-22 13:12:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600780056329_0004
2020-09-22 13:12:31 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-22 13:12:32 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:12:32 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-22 13:12:32 INFO  YarnClientImpl:311 - Submitted application application_1600780056329_0004
2020-09-22 13:12:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600780056329_0004/
2020-09-22 13:12:32 INFO  Job:1619 - Running job: job_1600780056329_0004
2020-09-22 13:12:41 INFO  Job:1640 - Job job_1600780056329_0004 running in uber mode : false
2020-09-22 13:12:41 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:12:49 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:12:54 INFO  Job:1647 -  map 67% reduce 0%
2020-09-22 13:13:00 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:13:06 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:13:06 INFO  Job:1658 - Job job_1600780056329_0004 completed successfully
2020-09-22 13:13:06 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105133
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48048
		Total time spent by all reduces in occupied slots (ms)=17796
		Total time spent by all map tasks (ms)=12012
		Total time spent by all reduce tasks (ms)=4449
		Total vcore-milliseconds taken by all map tasks=12012
		Total vcore-milliseconds taken by all reduce tasks=4449
		Total megabyte-milliseconds taken by all map tasks=49201152
		Total megabyte-milliseconds taken by all reduce tasks=18223104
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=663
		CPU time spent (ms)=8840
		Physical memory (bytes) snapshot=1418280960
		Virtual memory (bytes) snapshot=16056025088
		Total committed heap usage (bytes)=1569193984
		Peak Map Physical memory (bytes)=355680256
		Peak Map Virtual memory (bytes)=4013658112
		Peak Reduce Physical memory (bytes)=361037824
		Peak Reduce Virtual memory (bytes)=4022247424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200922 13:13:07.373" starttime="20200922 13:13:07.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:13:07.374" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:13:07.374" starttime="20200922 13:13:07.373"></status>
</kw>
<status status="PASS" endtime="20200922 13:13:07.374" starttime="20200922 13:12:27.155"></status>
</kw>
<msg timestamp="20200922 13:13:07.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:13:07.375" starttime="20200922 13:12:27.154"></status>
</kw>
<msg timestamp="20200922 13:13:07.377" level="INFO">${output} = 2020-09-22 13:12:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-09-22 13:12:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200922 13:13:07.377" starttime="20200922 13:12:27.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200922 13:13:07.377" starttime="20200922 13:13:07.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:13:07.378" starttime="20200922 13:13:07.378"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:13:07.378" critical="yes" starttime="20200922 13:12:27.098"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200922 13:13:07.379" starttime="20200922 13:11:38.750"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:09:44.025" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:09:44.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:09:44.032" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:09:44.032" starttime="20200922 13:09:44.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:09:44.033" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:09:44.033" starttime="20200922 13:09:44.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:09:44.034" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:09:44.034" starttime="20200922 13:09:44.033"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:44.034" starttime="20200922 13:09:44.023"></status>
</kw>
<msg timestamp="20200922 13:09:44.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:09:44.034" starttime="20200922 13:09:44.023"></status>
</kw>
<msg timestamp="20200922 13:09:44.035" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:09:44.035" starttime="20200922 13:09:44.022"></status>
</kw>
<msg timestamp="20200922 13:09:44.035" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:09:44.035" starttime="20200922 13:09:44.022"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:09:44.039" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:09:44.039" starttime="20200922 13:09:44.038"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:09:44.041" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:09:44.041" starttime="20200922 13:09:44.040"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:44.042" starttime="20200922 13:09:44.038"></status>
</kw>
<msg timestamp="20200922 13:09:44.042" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:09:44.042" starttime="20200922 13:09:44.037"></status>
</kw>
<status status="PASS" endtime="20200922 13:09:44.043" starttime="20200922 13:09:44.037"></status>
</kw>
<msg timestamp="20200922 13:09:44.043" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:09:44.043" starttime="20200922 13:09:44.036"></status>
</kw>
<msg timestamp="20200922 13:09:44.044" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:09:44.044" starttime="20200922 13:09:44.035"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:09:44.047" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:10:32.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:10:32.282" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:09:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:09:46 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200922 13:10:32.282" starttime="20200922 13:09:44.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:10:32.284" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:09:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:09:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:09:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:09:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:09:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-53A295021114-&gt;6ddb028c-ad13-471e-b6e4-5ddcf53093c4
2020-09-22 13:09:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-09-22 13:09:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-09-22 13:09:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:09:48 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:09:48 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-22 13:09:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600780056329_0001
2020-09-22 13:09:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-22 13:09:49 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:09:49 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-22 13:09:50 INFO  YarnClientImpl:311 - Submitted application application_1600780056329_0001
2020-09-22 13:09:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600780056329_0001/
2020-09-22 13:09:50 INFO  Job:1619 - Running job: job_1600780056329_0001
2020-09-22 13:10:02 INFO  Job:1640 - Job job_1600780056329_0001 running in uber mode : false
2020-09-22 13:10:02 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:10:09 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:10:16 INFO  Job:1647 -  map 67% reduce 0%
2020-09-22 13:10:21 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:10:27 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:10:31 INFO  Job:1658 - Job job_1600780056329_0001 completed successfully
2020-09-22 13:10:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1042685
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48336
		Total time spent by all reduces in occupied slots (ms)=18576
		Total time spent by all map tasks (ms)=12084
		Total time spent by all reduce tasks (ms)=4644
		Total vcore-milliseconds taken by all map tasks=12084
		Total vcore-milliseconds taken by all reduce tasks=4644
		Total megabyte-milliseconds taken by all map tasks=49496064
		Total megabyte-milliseconds taken by all reduce tasks=19021824
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=736
		CPU time spent (ms)=8210
		Physical memory (bytes) snapshot=1246408704
		Virtual memory (bytes) snapshot=16044040192
		Total committed heap usage (bytes)=1261961216
		Peak Map Physical memory (bytes)=340959232
		Peak Map Virtual memory (bytes)=4010856448
		Peak Reduce Physical memory (bytes)=362704896
		Peak Reduce Virtual memory (bytes)=4025516032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.832 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20200922 13:10:32.284" starttime="20200922 13:10:32.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:10:32.285" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:10:32.285" starttime="20200922 13:10:32.284"></status>
</kw>
<status status="PASS" endtime="20200922 13:10:32.285" starttime="20200922 13:09:44.045"></status>
</kw>
<msg timestamp="20200922 13:10:32.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:10:32.286" starttime="20200922 13:09:44.044"></status>
</kw>
<msg timestamp="20200922 13:10:32.287" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-09-22 13:09:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:09:46 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20200922 13:10:32.287" starttime="20200922 13:09:44.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:10:32.287" starttime="20200922 13:10:32.287"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:10:32.288" critical="yes" starttime="20200922 13:09:44.021"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:10:32.293" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:10:32.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:10:32.299" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:10:32.299" starttime="20200922 13:10:32.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:10:32.300" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:10:32.300" starttime="20200922 13:10:32.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:10:32.301" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:10:32.301" starttime="20200922 13:10:32.301"></status>
</kw>
<status status="PASS" endtime="20200922 13:10:32.301" starttime="20200922 13:10:32.290"></status>
</kw>
<msg timestamp="20200922 13:10:32.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:10:32.302" starttime="20200922 13:10:32.290"></status>
</kw>
<msg timestamp="20200922 13:10:32.302" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:10:32.302" starttime="20200922 13:10:32.289"></status>
</kw>
<msg timestamp="20200922 13:10:32.302" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20200922 13:10:32.302" starttime="20200922 13:10:32.289"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200922 13:10:32.303" level="INFO">${random} = 49</msg>
<status status="PASS" endtime="20200922 13:10:32.303" starttime="20200922 13:10:32.302"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:10:32.307" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:10:32.307" starttime="20200922 13:10:32.306"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:10:32.308" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:10:32.308" starttime="20200922 13:10:32.307"></status>
</kw>
<status status="PASS" endtime="20200922 13:10:32.308" starttime="20200922 13:10:32.306"></status>
</kw>
<msg timestamp="20200922 13:10:32.308" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:10:32.308" starttime="20200922 13:10:32.305"></status>
</kw>
<status status="PASS" endtime="20200922 13:10:32.309" starttime="20200922 13:10:32.305"></status>
</kw>
<msg timestamp="20200922 13:10:32.309" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:10:32.309" starttime="20200922 13:10:32.304"></status>
</kw>
<msg timestamp="20200922 13:10:32.309" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20200922 13:10:32.309" starttime="20200922 13:10:32.303"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:10:32.313" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:10:32.313" starttime="20200922 13:10:32.313"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:10:32.314" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:10:32.314" starttime="20200922 13:10:32.313"></status>
</kw>
<status status="PASS" endtime="20200922 13:10:32.314" starttime="20200922 13:10:32.312"></status>
</kw>
<msg timestamp="20200922 13:10:32.314" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:10:32.314" starttime="20200922 13:10:32.311"></status>
</kw>
<status status="PASS" endtime="20200922 13:10:32.315" starttime="20200922 13:10:32.311"></status>
</kw>
<msg timestamp="20200922 13:10:32.315" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200922 13:10:32.315" starttime="20200922 13:10:32.310"></status>
</kw>
<msg timestamp="20200922 13:10:32.315" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20200922 13:10:32.315" starttime="20200922 13:10:32.309"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20200922 13:10:32.319" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20200922 13:10:32.319" starttime="20200922 13:10:32.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200922 13:10:32.319" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20200922 13:10:32.320" starttime="20200922 13:10:32.319"></status>
</kw>
<status status="PASS" endtime="20200922 13:10:32.320" starttime="20200922 13:10:32.318"></status>
</kw>
<msg timestamp="20200922 13:10:32.320" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20200922 13:10:32.320" starttime="20200922 13:10:32.317"></status>
</kw>
<status status="PASS" endtime="20200922 13:10:32.320" starttime="20200922 13:10:32.317"></status>
</kw>
<msg timestamp="20200922 13:10:32.320" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-49.txt</msg>
<status status="PASS" endtime="20200922 13:10:32.320" starttime="20200922 13:10:32.316"></status>
</kw>
<msg timestamp="20200922 13:10:32.321" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-49.txt</msg>
<status status="PASS" endtime="20200922 13:10:32.321" starttime="20200922 13:10:32.315"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200922 13:10:32.323" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-49.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200922 13:11:21.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20200922 13:11:21.474" level="INFO">${output} = 2020-09-22 13:10:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-09-22 13:10:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200922 13:11:21.474" starttime="20200922 13:10:32.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200922 13:11:21.482" level="INFO">2020-09-22 13:10:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-09-22 13:10:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-09-22 13:10:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-09-22 13:10:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-09-22 13:10:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-09-22 13:10:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-09-22 13:10:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0EFA11A0B692-&gt;6ddb028c-ad13-471e-b6e4-5ddcf53093c4
2020-09-22 13:10:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-09-22 13:10:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-09-22 13:10:39 INFO  JobSubmitter:202 - number of splits:3
2020-09-22 13:10:39 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-09-22 13:10:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1600780056329_0002
2020-09-22 13:10:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-09-22 13:10:40 INFO  Configuration:2752 - resource-types.xml not found
2020-09-22 13:10:40 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-09-22 13:10:40 INFO  YarnClientImpl:311 - Submitted application application_1600780056329_0002
2020-09-22 13:10:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1600780056329_0002/
2020-09-22 13:10:40 INFO  Job:1619 - Running job: job_1600780056329_0002
2020-09-22 13:10:49 INFO  Job:1640 - Job job_1600780056329_0002 running in uber mode : false
2020-09-22 13:10:49 INFO  Job:1647 -  map 0% reduce 0%
2020-09-22 13:10:57 INFO  Job:1647 -  map 33% reduce 0%
2020-09-22 13:11:04 INFO  Job:1647 -  map 67% reduce 0%
2020-09-22 13:11:10 INFO  Job:1647 -  map 100% reduce 0%
2020-09-22 13:11:17 INFO  Job:1647 -  map 100% reduce 100%
2020-09-22 13:11:20 INFO  Job:1658 - Job job_1600780056329_0002 completed successfully
2020-09-22 13:11:21 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1105217
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52636
		Total time spent by all reduces in occupied slots (ms)=27216
		Total time spent by all map tasks (ms)=13159
		Total time spent by all reduce tasks (ms)=6804
		Total vcore-milliseconds taken by all map tasks=13159
		Total vcore-milliseconds taken by all reduce tasks=6804
		Total megabyte-milliseconds taken by all map tasks=53899264
		Total megabyte-milliseconds taken by all reduce tasks=27869184
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=763
		CPU time spent (ms)=9150
		Physical memory (bytes) snapshot=1342476288
		Virtual memory (bytes) snapshot=16056799232
		Total committed heap usage (bytes)=1529872384
		Peak Map Physical memory (bytes)=365367296
		Peak Map Virtual memory (bytes)=4022771712
		Peak Reduce Physical memory (bytes)=261382144
		Peak Reduce Virtual memory (bytes)=4006576128
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20200922 13:11:21.483" starttime="20200922 13:11:21.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200922 13:11:21.484" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200922 13:11:21.484" starttime="20200922 13:11:21.484"></status>
</kw>
<status status="PASS" endtime="20200922 13:11:21.485" starttime="20200922 13:10:32.322"></status>
</kw>
<msg timestamp="20200922 13:11:21.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200922 13:11:21.485" starttime="20200922 13:10:32.321"></status>
</kw>
<msg timestamp="20200922 13:11:21.486" level="INFO">${output} = 2020-09-22 13:10:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-09-22 13:10:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20200922 13:11:21.486" starttime="20200922 13:10:32.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20200922 13:11:21.486" starttime="20200922 13:11:21.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20200922 13:11:21.487" starttime="20200922 13:11:21.486"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20200922 13:11:21.487" critical="yes" starttime="20200922 13:10:32.288"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20200922 13:11:21.488" starttime="20200922 13:09:43.967"></status>
</suite>
<status status="PASS" elapsedtime="248191" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="686946" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
