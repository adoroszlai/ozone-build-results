<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220110 13:25:19.517" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:22:17.352" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:22:26.156" level="INFO">${rc} = 255</msg>
<msg timestamp="20220110 13:22:26.156" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220110 13:22:17.348" endtime="20220110 13:22:26.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:22:26.158" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220110 13:22:26.157" endtime="20220110 13:22:26.158"/>
</kw>
<msg timestamp="20220110 13:22:26.159" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220110 13:22:17.347" endtime="20220110 13:22:26.159"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:22:26.187" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:22:38.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20220110 13:22:38.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220110 13:22:26.163" endtime="20220110 13:22:38.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:22:38.586" level="INFO"/>
<status status="PASS" starttime="20220110 13:22:38.585" endtime="20220110 13:22:38.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220110 13:22:38.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220110 13:22:38.586" endtime="20220110 13:22:38.589"/>
</kw>
<status status="PASS" starttime="20220110 13:22:26.162" endtime="20220110 13:22:38.590"/>
</kw>
<msg timestamp="20220110 13:22:38.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220110 13:22:26.162" endtime="20220110 13:22:38.590"/>
</kw>
<msg timestamp="20220110 13:22:38.590" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220110 13:22:26.161" endtime="20220110 13:22:38.590"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220110 13:22:38.590" endtime="20220110 13:22:38.591"/>
</kw>
<status status="PASS" starttime="20220110 13:22:26.161" endtime="20220110 13:22:38.591"/>
</kw>
<status status="PASS" starttime="20220110 13:22:26.160" endtime="20220110 13:22:38.591"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:22:38.616" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:22:49.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20220110 13:22:49.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220110 13:22:38.602" endtime="20220110 13:22:49.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:22:49.711" level="INFO"/>
<status status="PASS" starttime="20220110 13:22:49.709" endtime="20220110 13:22:49.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220110 13:22:49.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220110 13:22:49.712" endtime="20220110 13:22:49.713"/>
</kw>
<status status="PASS" starttime="20220110 13:22:38.601" endtime="20220110 13:22:49.714"/>
</kw>
<msg timestamp="20220110 13:22:49.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220110 13:22:38.600" endtime="20220110 13:22:49.714"/>
</kw>
<status status="PASS" starttime="20220110 13:22:38.597" endtime="20220110 13:22:49.715"/>
</kw>
<status status="PASS" starttime="20220110 13:22:38.596" endtime="20220110 13:22:49.715"/>
</kw>
<status status="PASS" starttime="20220110 13:22:38.595" endtime="20220110 13:22:49.715"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220110 13:22:49.716" endtime="20220110 13:22:49.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:22:49.727" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:23:00.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20220110 13:23:00.107" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-10T13:22...</msg>
<status status="PASS" starttime="20220110 13:22:49.722" endtime="20220110 13:23:00.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:23:00.148" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-10T13:22:49.449Z",
  "modificationTime" : "2022-01-10T13:22:49.449Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20220110 13:23:00.127" endtime="20220110 13:23:00.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220110 13:23:00.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220110 13:23:00.149" endtime="20220110 13:23:00.157"/>
</kw>
<status status="PASS" starttime="20220110 13:22:49.720" endtime="20220110 13:23:00.159"/>
</kw>
<msg timestamp="20220110 13:23:00.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220110 13:22:49.719" endtime="20220110 13:23:00.160"/>
</kw>
<msg timestamp="20220110 13:23:00.171" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-10T13:22...</msg>
<status status="PASS" starttime="20220110 13:22:49.717" endtime="20220110 13:23:00.171"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220110 13:23:00.174" endtime="20220110 13:23:00.178"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220110 13:23:00.200" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220110 13:23:00.198" endtime="20220110 13:23:00.200"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220110 13:23:00.202" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220110 13:23:00.200" endtime="20220110 13:23:00.202"/>
</kw>
<status status="PASS" starttime="20220110 13:23:00.193" endtime="20220110 13:23:00.202"/>
</kw>
<msg timestamp="20220110 13:23:00.203" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220110 13:23:00.190" endtime="20220110 13:23:00.203"/>
</kw>
<status status="PASS" starttime="20220110 13:23:00.188" endtime="20220110 13:23:00.204"/>
</kw>
<msg timestamp="20220110 13:23:00.204" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220110 13:23:00.186" endtime="20220110 13:23:00.204"/>
</kw>
<msg timestamp="20220110 13:23:00.205" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220110 13:23:00.179" endtime="20220110 13:23:00.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:23:00.227" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:23:16.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20220110 13:23:16.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220110 13:23:00.215" endtime="20220110 13:23:16.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:23:16.447" level="INFO"/>
<status status="PASS" starttime="20220110 13:23:16.447" endtime="20220110 13:23:16.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220110 13:23:16.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220110 13:23:16.448" endtime="20220110 13:23:16.448"/>
</kw>
<status status="PASS" starttime="20220110 13:23:00.214" endtime="20220110 13:23:16.448"/>
</kw>
<msg timestamp="20220110 13:23:16.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220110 13:23:00.211" endtime="20220110 13:23:16.449"/>
</kw>
<status status="PASS" starttime="20220110 13:23:00.210" endtime="20220110 13:23:16.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:23:16.453" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:23:49.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20220110 13:23:49.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220110 13:23:16.451" endtime="20220110 13:23:49.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:23:49.776" level="INFO"/>
<status status="PASS" starttime="20220110 13:23:49.775" endtime="20220110 13:23:49.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220110 13:23:49.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220110 13:23:49.776" endtime="20220110 13:23:49.777"/>
</kw>
<status status="PASS" starttime="20220110 13:23:16.450" endtime="20220110 13:23:49.777"/>
</kw>
<msg timestamp="20220110 13:23:49.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220110 13:23:16.450" endtime="20220110 13:23:49.777"/>
</kw>
<status status="PASS" starttime="20220110 13:23:16.449" endtime="20220110 13:23:49.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:23:49.782" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:24:09.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20220110 13:24:09.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220110 13:23:49.779" endtime="20220110 13:24:09.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:24:09.069" level="INFO"/>
<status status="PASS" starttime="20220110 13:24:09.067" endtime="20220110 13:24:09.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220110 13:24:09.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220110 13:24:09.070" endtime="20220110 13:24:09.072"/>
</kw>
<status status="PASS" starttime="20220110 13:23:49.779" endtime="20220110 13:24:09.073"/>
</kw>
<msg timestamp="20220110 13:24:09.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220110 13:23:49.779" endtime="20220110 13:24:09.074"/>
</kw>
<status status="PASS" starttime="20220110 13:23:49.778" endtime="20220110 13:24:09.074"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:24:09.084" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:24:17.348" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220110 13:24:09.078" endtime="20220110 13:24:17.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220110 13:24:17.350" endtime="20220110 13:24:17.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220110 13:24:17.350" endtime="20220110 13:24:17.351"/>
</kw>
<status status="FAIL" starttime="20220110 13:24:09.077" endtime="20220110 13:24:17.351"/>
</kw>
<msg timestamp="20220110 13:24:17.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220110 13:24:09.076" endtime="20220110 13:24:17.352"/>
</kw>
<status status="FAIL" starttime="20220110 13:24:09.074" endtime="20220110 13:24:17.352"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220110 13:22:17.346" endtime="20220110 13:24:17.353">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220110 13:24:17.412" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220110 13:24:17.410" endtime="20220110 13:24:17.423"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220110 13:24:17.426" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220110 13:24:17.425" endtime="20220110 13:24:17.426"/>
</kw>
<status status="PASS" starttime="20220110 13:24:17.408" endtime="20220110 13:24:17.426"/>
</kw>
<msg timestamp="20220110 13:24:17.426" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220110 13:24:17.394" endtime="20220110 13:24:17.426"/>
</kw>
<status status="PASS" starttime="20220110 13:24:17.392" endtime="20220110 13:24:17.427"/>
</kw>
<msg timestamp="20220110 13:24:17.427" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220110 13:24:17.378" endtime="20220110 13:24:17.427"/>
</kw>
<msg timestamp="20220110 13:24:17.427" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220110 13:24:17.367" endtime="20220110 13:24:17.427"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:24:17.454" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:24:46.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20220110 13:24:46.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220110 13:24:17.445" endtime="20220110 13:24:46.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:24:46.841" level="INFO"/>
<status status="PASS" starttime="20220110 13:24:46.832" endtime="20220110 13:24:46.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220110 13:24:46.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220110 13:24:46.848" endtime="20220110 13:24:46.850"/>
</kw>
<status status="PASS" starttime="20220110 13:24:17.428" endtime="20220110 13:24:46.850"/>
</kw>
<msg timestamp="20220110 13:24:46.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220110 13:24:17.428" endtime="20220110 13:24:46.851"/>
</kw>
<status status="PASS" starttime="20220110 13:24:17.427" endtime="20220110 13:24:46.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:24:46.861" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:25:00.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20220110 13:25:00.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220110 13:24:46.856" endtime="20220110 13:25:00.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:25:00.650" level="INFO"/>
<status status="PASS" starttime="20220110 13:25:00.648" endtime="20220110 13:25:00.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220110 13:25:00.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220110 13:25:00.651" endtime="20220110 13:25:00.652"/>
</kw>
<status status="PASS" starttime="20220110 13:24:46.854" endtime="20220110 13:25:00.653"/>
</kw>
<msg timestamp="20220110 13:25:00.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220110 13:24:46.854" endtime="20220110 13:25:00.653"/>
</kw>
<status status="PASS" starttime="20220110 13:24:46.852" endtime="20220110 13:25:00.654"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220110 13:24:17.355" endtime="20220110 13:25:00.655"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="FAIL" starttime="20220110 13:22:17.290" endtime="20220110 13:25:00.661"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:22:10.013" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:22:10.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20220110 13:22:10.020" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220110 13:22:10.008" endtime="20220110 13:22:10.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:22:10.021" level="INFO">om</msg>
<status status="PASS" starttime="20220110 13:22:10.020" endtime="20220110 13:22:10.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220110 13:22:10.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220110 13:22:10.021" endtime="20220110 13:22:10.022"/>
</kw>
<status status="PASS" starttime="20220110 13:22:10.007" endtime="20220110 13:22:10.022"/>
</kw>
<msg timestamp="20220110 13:22:10.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220110 13:22:10.007" endtime="20220110 13:22:10.023"/>
</kw>
<msg timestamp="20220110 13:22:10.023" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20220110 13:22:10.006" endtime="20220110 13:22:10.023"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220110 13:22:10.024" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220110 13:22:10.023" endtime="20220110 13:22:10.024"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220110 13:22:10.027" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220110 13:22:10.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20220110 13:22:10.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220110 13:22:10.025" endtime="20220110 13:22:10.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220110 13:22:10.037" level="INFO"/>
<status status="PASS" starttime="20220110 13:22:10.036" endtime="20220110 13:22:10.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220110 13:22:10.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220110 13:22:10.037" endtime="20220110 13:22:10.037"/>
</kw>
<status status="PASS" starttime="20220110 13:22:10.025" endtime="20220110 13:22:10.038"/>
</kw>
<msg timestamp="20220110 13:22:10.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220110 13:22:10.025" endtime="20220110 13:22:10.038"/>
</kw>
<status status="PASS" starttime="20220110 13:22:10.024" endtime="20220110 13:22:10.038"/>
</kw>
<status status="PASS" starttime="20220110 13:22:10.024" endtime="20220110 13:22:10.038"/>
</kw>
<status status="PASS" starttime="20220110 13:22:10.006" endtime="20220110 13:22:10.038"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220110 13:22:10.005" endtime="20220110 13:22:10.039"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220110 13:22:09.946" endtime="20220110 13:22:10.041"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="163466"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
