<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220122 01:35:14.785" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220122 01:26:19.857" level="INFO">${random} = 22051</msg>
<status status="PASS" starttime="20220122 01:26:19.856" endtime="20220122 01:26:19.857"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:26:19.863" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-22051 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:26:23.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:26:23.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:26:19.859" endtime="20220122 01:26:23.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:26:23.946" level="INFO"/>
<status status="PASS" starttime="20220122 01:26:23.945" endtime="20220122 01:26:23.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:26:23.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:26:23.946" endtime="20220122 01:26:23.947"/>
</kw>
<status status="PASS" starttime="20220122 01:26:19.858" endtime="20220122 01:26:23.947"/>
</kw>
<msg timestamp="20220122 01:26:23.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:26:19.858" endtime="20220122 01:26:23.947"/>
</kw>
<msg timestamp="20220122 01:26:23.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:26:19.857" endtime="20220122 01:26:23.948"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:26:23.948" endtime="20220122 01:26:23.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:26:19.855" endtime="20220122 01:26:23.949"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220122 01:26:19.793" endtime="20220122 01:26:23.950"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220122 01:30:18.272" level="INFO">${random} = 52527</msg>
<status status="PASS" starttime="20220122 01:30:18.272" endtime="20220122 01:30:18.273"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:30:18.278" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-52527 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:30:22.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:30:22.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:18.274" endtime="20220122 01:30:22.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:30:22.302" level="INFO"/>
<status status="PASS" starttime="20220122 01:30:22.302" endtime="20220122 01:30:22.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:30:22.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:30:22.303" endtime="20220122 01:30:22.303"/>
</kw>
<status status="PASS" starttime="20220122 01:30:18.274" endtime="20220122 01:30:22.304"/>
</kw>
<msg timestamp="20220122 01:30:22.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:30:18.273" endtime="20220122 01:30:22.304"/>
</kw>
<msg timestamp="20220122 01:30:22.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:18.273" endtime="20220122 01:30:22.304"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:30:22.304" endtime="20220122 01:30:22.305"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:30:18.271" endtime="20220122 01:30:22.305"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220122 01:30:18.220" endtime="20220122 01:30:22.306"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:30:26.104" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:30:28.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:30:28.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:26.101" endtime="20220122 01:30:28.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:30:28.476" level="INFO"/>
<status status="PASS" starttime="20220122 01:30:28.475" endtime="20220122 01:30:28.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:30:28.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:30:28.477" endtime="20220122 01:30:28.478"/>
</kw>
<status status="PASS" starttime="20220122 01:30:26.100" endtime="20220122 01:30:28.478"/>
</kw>
<msg timestamp="20220122 01:30:28.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:30:26.100" endtime="20220122 01:30:28.478"/>
</kw>
<msg timestamp="20220122 01:30:28.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:26.099" endtime="20220122 01:30:28.479"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:30:28.479" endtime="20220122 01:30:28.479"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:30:28.488" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:30:31.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:30:31.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:28.484" endtime="20220122 01:30:31.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:30:31.013" level="INFO"/>
<status status="PASS" starttime="20220122 01:30:31.012" endtime="20220122 01:30:31.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:30:31.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:30:31.013" endtime="20220122 01:30:31.014"/>
</kw>
<status status="PASS" starttime="20220122 01:30:28.483" endtime="20220122 01:30:31.014"/>
</kw>
<msg timestamp="20220122 01:30:31.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:30:28.482" endtime="20220122 01:30:31.014"/>
</kw>
<msg timestamp="20220122 01:30:31.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:28.479" endtime="20220122 01:30:31.014"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:30:31.015" endtime="20220122 01:30:31.015"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:30:31.019" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:30:35.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:30:35.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:31.017" endtime="20220122 01:30:35.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:30:35.853" level="INFO"/>
<status status="PASS" starttime="20220122 01:30:35.852" endtime="20220122 01:30:35.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:30:35.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:30:35.853" endtime="20220122 01:30:35.854"/>
</kw>
<status status="PASS" starttime="20220122 01:30:31.016" endtime="20220122 01:30:35.854"/>
</kw>
<msg timestamp="20220122 01:30:35.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:30:31.016" endtime="20220122 01:30:35.855"/>
</kw>
<msg timestamp="20220122 01:30:35.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:31.015" endtime="20220122 01:30:35.855"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:30:35.855" endtime="20220122 01:30:35.856"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:30:26.098" endtime="20220122 01:30:35.856"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220122 01:30:26.043" endtime="20220122 01:30:35.858"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220122 01:30:39.636" level="INFO">${random} = 65002</msg>
<status status="PASS" starttime="20220122 01:30:39.635" endtime="20220122 01:30:39.636"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:30:39.641" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-65002 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:30:43.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:30:43.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:39.638" endtime="20220122 01:30:43.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:30:43.684" level="INFO"/>
<status status="PASS" starttime="20220122 01:30:43.684" endtime="20220122 01:30:43.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:30:43.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:30:43.685" endtime="20220122 01:30:43.685"/>
</kw>
<status status="PASS" starttime="20220122 01:30:39.637" endtime="20220122 01:30:43.686"/>
</kw>
<msg timestamp="20220122 01:30:43.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:30:39.637" endtime="20220122 01:30:43.686"/>
</kw>
<msg timestamp="20220122 01:30:43.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:39.636" endtime="20220122 01:30:43.686"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:30:43.686" endtime="20220122 01:30:43.687"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:30:39.635" endtime="20220122 01:30:43.687"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220122 01:30:39.585" endtime="20220122 01:30:43.688"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220122 01:30:10.250" level="INFO">${random} = 41717</msg>
<status status="PASS" starttime="20220122 01:30:10.249" endtime="20220122 01:30:10.250"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:30:10.255" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-41717 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:30:14.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:30:14.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:10.252" endtime="20220122 01:30:14.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:30:14.472" level="INFO"/>
<status status="PASS" starttime="20220122 01:30:14.471" endtime="20220122 01:30:14.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:30:14.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:30:14.472" endtime="20220122 01:30:14.472"/>
</kw>
<status status="PASS" starttime="20220122 01:30:10.251" endtime="20220122 01:30:14.473"/>
</kw>
<msg timestamp="20220122 01:30:14.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:30:10.251" endtime="20220122 01:30:14.473"/>
</kw>
<msg timestamp="20220122 01:30:14.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:30:10.250" endtime="20220122 01:30:14.473"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:30:14.473" endtime="20220122 01:30:14.474"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:30:10.249" endtime="20220122 01:30:14.474"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220122 01:30:10.196" endtime="20220122 01:30:14.475"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:26:05.467" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:26:07.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:26:07.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:26:05.463" endtime="20220122 01:26:07.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:26:07.779" level="INFO"/>
<status status="PASS" starttime="20220122 01:26:07.778" endtime="20220122 01:26:07.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:26:07.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:26:07.779" endtime="20220122 01:26:07.780"/>
</kw>
<status status="PASS" starttime="20220122 01:26:05.463" endtime="20220122 01:26:07.780"/>
</kw>
<msg timestamp="20220122 01:26:07.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:26:05.462" endtime="20220122 01:26:07.781"/>
</kw>
<msg timestamp="20220122 01:26:07.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:26:05.461" endtime="20220122 01:26:07.781"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:26:07.781" endtime="20220122 01:26:07.781"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:26:07.786" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:26:10.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:26:10.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:26:07.784" endtime="20220122 01:26:10.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:26:10.393" level="INFO"/>
<status status="PASS" starttime="20220122 01:26:10.392" endtime="20220122 01:26:10.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:26:10.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:26:10.394" endtime="20220122 01:26:10.394"/>
</kw>
<status status="PASS" starttime="20220122 01:26:07.783" endtime="20220122 01:26:10.394"/>
</kw>
<msg timestamp="20220122 01:26:10.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:26:07.782" endtime="20220122 01:26:10.395"/>
</kw>
<msg timestamp="20220122 01:26:10.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:26:07.782" endtime="20220122 01:26:10.397"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:26:10.397" endtime="20220122 01:26:10.397"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:26:10.403" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:26:15.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:26:15.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:26:10.400" endtime="20220122 01:26:15.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:26:15.987" level="INFO"/>
<status status="PASS" starttime="20220122 01:26:15.987" endtime="20220122 01:26:15.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:26:15.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:26:15.988" endtime="20220122 01:26:15.988"/>
</kw>
<status status="PASS" starttime="20220122 01:26:10.398" endtime="20220122 01:26:15.989"/>
</kw>
<msg timestamp="20220122 01:26:15.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:26:10.398" endtime="20220122 01:26:15.989"/>
</kw>
<msg timestamp="20220122 01:26:15.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:26:10.397" endtime="20220122 01:26:15.989"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:26:15.989" endtime="20220122 01:26:15.990"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:26:05.460" endtime="20220122 01:26:15.990"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220122 01:26:05.397" endtime="20220122 01:26:15.991"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:33:48.752" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220122 01:33:48.751" endtime="20220122 01:33:48.752"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:33:48.752" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:33:48.752" endtime="20220122 01:33:48.752"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:33:48.753" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:33:48.752" endtime="20220122 01:33:48.753"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:33:48.753" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220122 01:33:48.753" endtime="20220122 01:33:48.754"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:33:48.755" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:33:48.756" level="INFO">${version_file_contents} = #Sat Jan 22 01:32:11 UTC 2022
cTime=1642814693980
clusterID=CID-9fe144b4-a32e-47a1-9ca4-87f7b6842c70
nodeType=SCM
scmUuid=150321ac-0367-44d2-8c18-76c36724eef4
layoutVersion=2
</msg>
<status status="PASS" starttime="20220122 01:33:48.755" endtime="20220122 01:33:48.756"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:33:48.756" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220122 01:33:48.756" endtime="20220122 01:33:48.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:33:48.757" endtime="20220122 01:33:48.757"/>
</kw>
<status status="PASS" starttime="20220122 01:33:48.754" endtime="20220122 01:33:48.757"/>
</kw>
<status status="PASS" starttime="20220122 01:33:48.754" endtime="20220122 01:33:48.757"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:33:48.750" endtime="20220122 01:33:48.757"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:33:48.694" endtime="20220122 01:33:48.758"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220122 01:34:31.898" level="INFO">${random} = 78346</msg>
<status status="PASS" starttime="20220122 01:34:31.897" endtime="20220122 01:34:31.898"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:34:31.903" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-78346 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:34:36.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:34:36.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:31.900" endtime="20220122 01:34:36.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:34:36.128" level="INFO"/>
<status status="PASS" starttime="20220122 01:34:36.128" endtime="20220122 01:34:36.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:34:36.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:34:36.129" endtime="20220122 01:34:36.129"/>
</kw>
<status status="PASS" starttime="20220122 01:34:31.899" endtime="20220122 01:34:36.130"/>
</kw>
<msg timestamp="20220122 01:34:36.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:34:31.899" endtime="20220122 01:34:36.131"/>
</kw>
<msg timestamp="20220122 01:34:36.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:31.898" endtime="20220122 01:34:36.132"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:36.132" endtime="20220122 01:34:36.132"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:34:31.896" endtime="20220122 01:34:36.132"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220122 01:34:31.844" endtime="20220122 01:34:36.134"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:34:39.901" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:34:42.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:34:42.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:39.897" endtime="20220122 01:34:42.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:34:42.585" level="INFO"/>
<status status="PASS" starttime="20220122 01:34:42.584" endtime="20220122 01:34:42.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:34:42.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:34:42.585" endtime="20220122 01:34:42.585"/>
</kw>
<status status="PASS" starttime="20220122 01:34:39.897" endtime="20220122 01:34:42.586"/>
</kw>
<msg timestamp="20220122 01:34:42.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:34:39.897" endtime="20220122 01:34:42.587"/>
</kw>
<msg timestamp="20220122 01:34:42.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:39.896" endtime="20220122 01:34:42.588"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:42.588" endtime="20220122 01:34:42.588"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:34:42.592" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:34:45.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:34:45.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:42.590" endtime="20220122 01:34:45.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:34:45.086" level="INFO"/>
<status status="PASS" starttime="20220122 01:34:45.085" endtime="20220122 01:34:45.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:34:45.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:34:45.086" endtime="20220122 01:34:45.087"/>
</kw>
<status status="PASS" starttime="20220122 01:34:42.589" endtime="20220122 01:34:45.087"/>
</kw>
<msg timestamp="20220122 01:34:45.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:34:42.589" endtime="20220122 01:34:45.088"/>
</kw>
<msg timestamp="20220122 01:34:45.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:42.588" endtime="20220122 01:34:45.088"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:45.088" endtime="20220122 01:34:45.089"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:34:45.093" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:34:50.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:34:50.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:45.090" endtime="20220122 01:34:50.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:34:50.162" level="INFO"/>
<status status="PASS" starttime="20220122 01:34:50.161" endtime="20220122 01:34:50.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:34:50.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:34:50.162" endtime="20220122 01:34:50.163"/>
</kw>
<status status="PASS" starttime="20220122 01:34:45.090" endtime="20220122 01:34:50.163"/>
</kw>
<msg timestamp="20220122 01:34:50.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:34:45.090" endtime="20220122 01:34:50.164"/>
</kw>
<msg timestamp="20220122 01:34:50.164" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:45.089" endtime="20220122 01:34:50.164"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:50.164" endtime="20220122 01:34:50.165"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:34:39.895" endtime="20220122 01:34:50.165"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220122 01:34:39.844" endtime="20220122 01:34:50.166"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220122 01:34:54.014" level="INFO">${random} = 24878</msg>
<status status="PASS" starttime="20220122 01:34:54.013" endtime="20220122 01:34:54.014"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:34:54.020" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-24878 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:34:58.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:34:58.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:54.016" endtime="20220122 01:34:58.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:34:58.858" level="INFO"/>
<status status="PASS" starttime="20220122 01:34:58.857" endtime="20220122 01:34:58.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:34:58.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:34:58.858" endtime="20220122 01:34:58.859"/>
</kw>
<status status="PASS" starttime="20220122 01:34:54.015" endtime="20220122 01:34:58.859"/>
</kw>
<msg timestamp="20220122 01:34:58.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:34:54.015" endtime="20220122 01:34:58.861"/>
</kw>
<msg timestamp="20220122 01:34:58.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:54.014" endtime="20220122 01:34:58.861"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:58.861" endtime="20220122 01:34:58.862"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:34:54.012" endtime="20220122 01:34:58.862"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220122 01:34:53.958" endtime="20220122 01:34:58.863"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:33:52.553" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220122 01:33:52.552" endtime="20220122 01:33:52.553"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:33:52.554" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:33:52.553" endtime="20220122 01:33:52.554"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:33:52.554" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:33:52.554" endtime="20220122 01:33:52.554"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:33:52.555" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220122 01:33:52.554" endtime="20220122 01:33:52.555"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:33:52.556" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:33:52.557" level="INFO">${version_file_contents} = #Sat Jan 22 01:32:38 UTC 2022
cTime=1642814808368
clusterID=83c6ce7a-c136-4390-91a6-474803509736
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220122 01:33:52.556" endtime="20220122 01:33:52.557"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:33:52.557" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220122 01:33:52.557" endtime="20220122 01:33:52.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:33:52.558" endtime="20220122 01:33:52.558"/>
</kw>
<status status="PASS" starttime="20220122 01:33:52.556" endtime="20220122 01:33:52.558"/>
</kw>
<status status="PASS" starttime="20220122 01:33:52.555" endtime="20220122 01:33:52.558"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:33:52.551" endtime="20220122 01:33:52.558"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:33:52.497" endtime="20220122 01:33:52.559"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:33:56.553" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220122 01:33:56.552" endtime="20220122 01:33:56.553"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:33:56.554" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:33:56.554" endtime="20220122 01:33:56.554"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:33:56.555" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:33:56.554" endtime="20220122 01:33:56.555"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:33:56.555" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220122 01:33:56.555" endtime="20220122 01:33:56.556"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:33:56.557" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:33:56.557" level="INFO">${version_file_contents} = #Sat Jan 22 01:32:14 UTC 2022
cTime=1642814810786
clusterID=ee78b951-9d40-4361-8a06-ec3eaca952b6
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220122 01:33:56.557" endtime="20220122 01:33:56.557"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:33:56.558" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220122 01:33:56.558" endtime="20220122 01:33:56.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:33:56.558" endtime="20220122 01:33:56.559"/>
</kw>
<status status="PASS" starttime="20220122 01:33:56.556" endtime="20220122 01:33:56.559"/>
</kw>
<status status="PASS" starttime="20220122 01:33:56.556" endtime="20220122 01:33:56.559"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:33:56.551" endtime="20220122 01:33:56.559"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:33:56.494" endtime="20220122 01:33:56.560"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:34:00.514" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220122 01:34:00.513" endtime="20220122 01:34:00.514"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:34:00.514" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:34:00.514" endtime="20220122 01:34:00.514"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:34:00.515" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:34:00.514" endtime="20220122 01:34:00.515"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:34:00.515" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220122 01:34:00.515" endtime="20220122 01:34:00.515"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:34:00.517" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:34:00.517" level="INFO">${version_file_contents} = #Sat Jan 22 01:32:28 UTC 2022
cTime=1642814810574
clusterID=33769fef-2ac7-4ea1-99fe-65504abfc1b7
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220122 01:34:00.516" endtime="20220122 01:34:00.517"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:34:00.518" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220122 01:34:00.517" endtime="20220122 01:34:00.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:00.518" endtime="20220122 01:34:00.518"/>
</kw>
<status status="PASS" starttime="20220122 01:34:00.516" endtime="20220122 01:34:00.518"/>
</kw>
<status status="PASS" starttime="20220122 01:34:00.516" endtime="20220122 01:34:00.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:34:00.512" endtime="20220122 01:34:00.519"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:34:00.463" endtime="20220122 01:34:00.519"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:34:04.294" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220122 01:34:04.293" endtime="20220122 01:34:04.294"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:34:04.294" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:34:04.294" endtime="20220122 01:34:04.295"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:34:04.295" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:34:04.295" endtime="20220122 01:34:04.295"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:34:04.296" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220122 01:34:04.295" endtime="20220122 01:34:04.296"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:34:04.297" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:34:04.298" level="INFO">${version_file_contents} = #Sat Jan 22 01:25:27 UTC 2022
cTime=1642814707821
clusterID=CID-9fe144b4-a32e-47a1-9ca4-87f7b6842c70
omUuid=007620c3-c614-4af2-b177-a080b831edc6
nodeType=OM
scmUuid=150321ac-0367-44d2-8c18-76c36724eef...</msg>
<status status="PASS" starttime="20220122 01:34:04.297" endtime="20220122 01:34:04.298"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:34:04.298" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220122 01:34:04.298" endtime="20220122 01:34:04.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:04.299" endtime="20220122 01:34:04.299"/>
</kw>
<status status="PASS" starttime="20220122 01:34:04.296" endtime="20220122 01:34:04.299"/>
</kw>
<status status="PASS" starttime="20220122 01:34:04.296" endtime="20220122 01:34:04.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:34:04.292" endtime="20220122 01:34:04.299"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:34:04.234" endtime="20220122 01:34:04.301"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:34:08.119" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220122 01:34:08.118" endtime="20220122 01:34:08.119"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:34:08.119" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:34:08.119" endtime="20220122 01:34:08.119"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:34:08.120" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:34:08.120" endtime="20220122 01:34:08.120"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:34:08.120" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220122 01:34:08.120" endtime="20220122 01:34:08.121"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:34:08.122" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:34:08.122" level="INFO">${version_file_contents} = #Sat Jan 22 01:25:27 UTC 2022
cTime=1642814707388
clusterID=CID-9fe144b4-a32e-47a1-9ca4-87f7b6842c70
omUuid=ac3d4aee-962c-41ec-b9ec-8a9a4af77e2e
nodeType=OM
scmUuid=150321ac-0367-44d2-8c18-76c36724eef...</msg>
<status status="PASS" starttime="20220122 01:34:08.121" endtime="20220122 01:34:08.122"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:34:08.123" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220122 01:34:08.122" endtime="20220122 01:34:08.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:08.123" endtime="20220122 01:34:08.124"/>
</kw>
<status status="PASS" starttime="20220122 01:34:08.121" endtime="20220122 01:34:08.124"/>
</kw>
<status status="PASS" starttime="20220122 01:34:08.121" endtime="20220122 01:34:08.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:34:08.117" endtime="20220122 01:34:08.124"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:34:08.062" endtime="20220122 01:34:08.125"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:34:11.957" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220122 01:34:11.956" endtime="20220122 01:34:11.957"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:34:11.958" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:34:11.957" endtime="20220122 01:34:11.958"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:34:11.958" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:34:11.958" endtime="20220122 01:34:11.958"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:34:11.959" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220122 01:34:11.959" endtime="20220122 01:34:11.959"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:34:11.960" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:34:11.961" level="INFO">${version_file_contents} = #Sat Jan 22 01:25:27 UTC 2022
cTime=1642814705870
clusterID=CID-9fe144b4-a32e-47a1-9ca4-87f7b6842c70
omUuid=5e09c249-99a3-446f-8c28-0aa549fa386c
nodeType=OM
scmUuid=150321ac-0367-44d2-8c18-76c36724eef...</msg>
<status status="PASS" starttime="20220122 01:34:11.960" endtime="20220122 01:34:11.961"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:34:11.961" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220122 01:34:11.961" endtime="20220122 01:34:11.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:11.962" endtime="20220122 01:34:11.962"/>
</kw>
<status status="PASS" starttime="20220122 01:34:11.960" endtime="20220122 01:34:11.962"/>
</kw>
<status status="PASS" starttime="20220122 01:34:11.959" endtime="20220122 01:34:11.962"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:34:11.956" endtime="20220122 01:34:11.962"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:34:11.902" endtime="20220122 01:34:11.963"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220122 01:34:15.701" level="INFO">${random} = 34058</msg>
<status status="PASS" starttime="20220122 01:34:15.701" endtime="20220122 01:34:15.701"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:34:15.707" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-34058 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:34:20.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:34:20.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:15.703" endtime="20220122 01:34:20.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:34:20.093" level="INFO"/>
<status status="PASS" starttime="20220122 01:34:20.092" endtime="20220122 01:34:20.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:34:20.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:34:20.093" endtime="20220122 01:34:20.094"/>
</kw>
<status status="PASS" starttime="20220122 01:34:15.703" endtime="20220122 01:34:20.094"/>
</kw>
<msg timestamp="20220122 01:34:20.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:34:15.702" endtime="20220122 01:34:20.096"/>
</kw>
<msg timestamp="20220122 01:34:20.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:15.702" endtime="20220122 01:34:20.096"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:20.096" endtime="20220122 01:34:20.096"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:34:15.700" endtime="20220122 01:34:20.097"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220122 01:34:15.650" endtime="20220122 01:34:20.098"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220122 01:34:23.879" level="INFO">${random} = 18332</msg>
<status status="PASS" starttime="20220122 01:34:23.878" endtime="20220122 01:34:23.879"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:34:23.884" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-18332 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:34:28.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:34:28.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:23.880" endtime="20220122 01:34:28.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:34:28.126" level="INFO"/>
<status status="PASS" starttime="20220122 01:34:28.125" endtime="20220122 01:34:28.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:34:28.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:34:28.126" endtime="20220122 01:34:28.127"/>
</kw>
<status status="PASS" starttime="20220122 01:34:23.880" endtime="20220122 01:34:28.127"/>
</kw>
<msg timestamp="20220122 01:34:28.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:34:23.880" endtime="20220122 01:34:28.129"/>
</kw>
<msg timestamp="20220122 01:34:28.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:34:23.879" endtime="20220122 01:34:28.129"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:34:28.129" endtime="20220122 01:34:28.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:34:23.877" endtime="20220122 01:34:28.130"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220122 01:34:23.826" endtime="20220122 01:34:28.131"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220122 01:32:03.249" endtime="20220122 01:32:03.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:32:03.255" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:33:41.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:33:41.667" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220122 01:32:03.251" endtime="20220122 01:33:41.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:33:41.668" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220122 01:33:41.667" endtime="20220122 01:33:41.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:33:41.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:33:41.669" endtime="20220122 01:33:41.669"/>
</kw>
<status status="PASS" starttime="20220122 01:32:03.251" endtime="20220122 01:33:41.669"/>
</kw>
<msg timestamp="20220122 01:33:41.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:32:03.250" endtime="20220122 01:33:41.671"/>
</kw>
<msg timestamp="20220122 01:33:41.671" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220122 01:32:03.250" endtime="20220122 01:33:41.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:33:41.672" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220122 01:33:41.671" endtime="20220122 01:33:41.672"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:32:03.248" endtime="20220122 01:33:41.672"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220122 01:33:41.674" endtime="20220122 01:33:41.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:33:41.678" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:33:44.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:33:44.763" level="INFO">${output} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220122 01:33:41.676" endtime="20220122 01:33:44.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:33:44.768" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220122 01:33:44.763" endtime="20220122 01:33:44.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:33:44.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:33:44.781" endtime="20220122 01:33:44.782"/>
</kw>
<status status="PASS" starttime="20220122 01:33:41.675" endtime="20220122 01:33:44.782"/>
</kw>
<msg timestamp="20220122 01:33:44.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:33:41.675" endtime="20220122 01:33:44.783"/>
</kw>
<msg timestamp="20220122 01:33:44.783" level="INFO">${result} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220122 01:33:41.675" endtime="20220122 01:33:44.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:33:44.784" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220122 01:33:44.784" endtime="20220122 01:33:44.784"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:33:41.673" endtime="20220122 01:33:44.784"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20220122 01:32:03.198" endtime="20220122 01:33:44.792"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:27:55.921" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220122 01:27:55.920" endtime="20220122 01:27:55.921"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:27:55.921" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:27:55.921" endtime="20220122 01:27:55.921"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:27:55.922" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:27:55.922" endtime="20220122 01:27:55.922"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:27:55.923" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220122 01:27:55.922" endtime="20220122 01:27:55.923"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:27:55.924" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:27:55.925" level="INFO">${version_file_contents} = #Sat Jan 22 01:26:48 UTC 2022
cTime=1642814808368
clusterID=83c6ce7a-c136-4390-91a6-474803509736
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220122 01:27:55.924" endtime="20220122 01:27:55.925"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:27:55.925" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220122 01:27:55.925" endtime="20220122 01:27:55.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:27:55.926" endtime="20220122 01:27:55.926"/>
</kw>
<status status="PASS" starttime="20220122 01:27:55.923" endtime="20220122 01:27:55.926"/>
</kw>
<status status="PASS" starttime="20220122 01:27:55.923" endtime="20220122 01:27:55.926"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:27:55.919" endtime="20220122 01:27:55.927"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:27:55.865" endtime="20220122 01:27:55.927"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:27:59.932" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220122 01:27:59.931" endtime="20220122 01:27:59.932"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:27:59.933" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:27:59.932" endtime="20220122 01:27:59.933"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:27:59.933" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:27:59.933" endtime="20220122 01:27:59.933"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:27:59.934" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220122 01:27:59.933" endtime="20220122 01:27:59.934"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:27:59.935" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:27:59.936" level="INFO">${version_file_contents} = #Sat Jan 22 01:26:50 UTC 2022
cTime=1642814810786
clusterID=ee78b951-9d40-4361-8a06-ec3eaca952b6
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220122 01:27:59.935" endtime="20220122 01:27:59.936"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:27:59.936" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220122 01:27:59.936" endtime="20220122 01:27:59.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:27:59.936" endtime="20220122 01:27:59.937"/>
</kw>
<status status="PASS" starttime="20220122 01:27:59.934" endtime="20220122 01:27:59.937"/>
</kw>
<status status="PASS" starttime="20220122 01:27:59.934" endtime="20220122 01:27:59.937"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:27:59.931" endtime="20220122 01:27:59.937"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:27:59.879" endtime="20220122 01:27:59.938"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:28:03.793" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220122 01:28:03.792" endtime="20220122 01:28:03.793"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:28:03.793" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:28:03.793" endtime="20220122 01:28:03.793"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:28:03.794" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:28:03.793" endtime="20220122 01:28:03.794"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:28:03.794" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220122 01:28:03.794" endtime="20220122 01:28:03.794"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:28:03.796" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:28:03.796" level="INFO">${version_file_contents} = #Sat Jan 22 01:26:50 UTC 2022
cTime=1642814810574
clusterID=33769fef-2ac7-4ea1-99fe-65504abfc1b7
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220122 01:28:03.795" endtime="20220122 01:28:03.796"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:28:03.797" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220122 01:28:03.796" endtime="20220122 01:28:03.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:28:03.797" endtime="20220122 01:28:03.797"/>
</kw>
<status status="PASS" starttime="20220122 01:28:03.795" endtime="20220122 01:28:03.798"/>
</kw>
<status status="PASS" starttime="20220122 01:28:03.795" endtime="20220122 01:28:03.798"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:28:03.791" endtime="20220122 01:28:03.798"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:28:03.738" endtime="20220122 01:28:03.798"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:28:07.678" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220122 01:28:07.677" endtime="20220122 01:28:07.678"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:28:07.678" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:28:07.678" endtime="20220122 01:28:07.678"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:28:07.679" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:28:07.678" endtime="20220122 01:28:07.679"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:28:07.679" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220122 01:28:07.679" endtime="20220122 01:28:07.679"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:28:07.681" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:28:07.681" level="INFO">${version_file_contents} = #Sat Jan 22 01:25:27 UTC 2022
cTime=1642814707821
clusterID=CID-9fe144b4-a32e-47a1-9ca4-87f7b6842c70
omUuid=007620c3-c614-4af2-b177-a080b831edc6
nodeType=OM
scmUuid=150321ac-0367-44d2-8c18-76c36724eef...</msg>
<status status="PASS" starttime="20220122 01:28:07.680" endtime="20220122 01:28:07.681"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:28:07.682" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220122 01:28:07.681" endtime="20220122 01:28:07.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:28:07.682" endtime="20220122 01:28:07.682"/>
</kw>
<status status="PASS" starttime="20220122 01:28:07.680" endtime="20220122 01:28:07.683"/>
</kw>
<status status="PASS" starttime="20220122 01:28:07.680" endtime="20220122 01:28:07.683"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:28:07.676" endtime="20220122 01:28:07.683"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:28:07.624" endtime="20220122 01:28:07.684"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:28:11.515" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220122 01:28:11.514" endtime="20220122 01:28:11.515"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:28:11.516" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:28:11.515" endtime="20220122 01:28:11.516"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:28:11.516" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:28:11.516" endtime="20220122 01:28:11.516"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:28:11.517" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220122 01:28:11.516" endtime="20220122 01:28:11.517"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:28:11.518" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:28:11.518" level="INFO">${version_file_contents} = #Sat Jan 22 01:25:27 UTC 2022
cTime=1642814707388
clusterID=CID-9fe144b4-a32e-47a1-9ca4-87f7b6842c70
omUuid=ac3d4aee-962c-41ec-b9ec-8a9a4af77e2e
nodeType=OM
scmUuid=150321ac-0367-44d2-8c18-76c36724eef...</msg>
<status status="PASS" starttime="20220122 01:28:11.518" endtime="20220122 01:28:11.518"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:28:11.519" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220122 01:28:11.519" endtime="20220122 01:28:11.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:28:11.519" endtime="20220122 01:28:11.520"/>
</kw>
<status status="PASS" starttime="20220122 01:28:11.517" endtime="20220122 01:28:11.520"/>
</kw>
<status status="PASS" starttime="20220122 01:28:11.517" endtime="20220122 01:28:11.520"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:28:11.513" endtime="20220122 01:28:11.520"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:28:11.458" endtime="20220122 01:28:11.521"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:28:15.367" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220122 01:28:15.366" endtime="20220122 01:28:15.367"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:28:15.368" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:28:15.367" endtime="20220122 01:28:15.368"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:28:15.368" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:28:15.368" endtime="20220122 01:28:15.368"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:28:15.369" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220122 01:28:15.368" endtime="20220122 01:28:15.369"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:28:15.370" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:28:15.371" level="INFO">${version_file_contents} = #Sat Jan 22 01:25:27 UTC 2022
cTime=1642814705870
clusterID=CID-9fe144b4-a32e-47a1-9ca4-87f7b6842c70
omUuid=5e09c249-99a3-446f-8c28-0aa549fa386c
nodeType=OM
scmUuid=150321ac-0367-44d2-8c18-76c36724eef...</msg>
<status status="PASS" starttime="20220122 01:28:15.370" endtime="20220122 01:28:15.371"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:28:15.371" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220122 01:28:15.371" endtime="20220122 01:28:15.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:28:15.371" endtime="20220122 01:28:15.372"/>
</kw>
<status status="PASS" starttime="20220122 01:28:15.369" endtime="20220122 01:28:15.372"/>
</kw>
<status status="PASS" starttime="20220122 01:28:15.369" endtime="20220122 01:28:15.372"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:28:15.366" endtime="20220122 01:28:15.372"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:28:15.312" endtime="20220122 01:28:15.373"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220122 01:28:19.132" level="INFO">${random} = 20258</msg>
<status status="PASS" starttime="20220122 01:28:19.131" endtime="20220122 01:28:19.132"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:28:19.138" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-20258 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:28:24.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:28:24.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:28:19.134" endtime="20220122 01:28:24.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:28:24.212" level="INFO"/>
<status status="PASS" starttime="20220122 01:28:24.211" endtime="20220122 01:28:24.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:28:24.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:28:24.212" endtime="20220122 01:28:24.213"/>
</kw>
<status status="PASS" starttime="20220122 01:28:19.133" endtime="20220122 01:28:24.213"/>
</kw>
<msg timestamp="20220122 01:28:24.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:28:19.133" endtime="20220122 01:28:24.215"/>
</kw>
<msg timestamp="20220122 01:28:24.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:28:19.132" endtime="20220122 01:28:24.215"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:28:24.215" endtime="20220122 01:28:24.215"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:28:19.130" endtime="20220122 01:28:24.216"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220122 01:28:19.078" endtime="20220122 01:28:24.217"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:28:28.031" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:28:30.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:28:30.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:28:28.026" endtime="20220122 01:28:30.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:28:30.761" level="INFO"/>
<status status="PASS" starttime="20220122 01:28:30.760" endtime="20220122 01:28:30.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:28:30.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:28:30.762" endtime="20220122 01:28:30.763"/>
</kw>
<status status="PASS" starttime="20220122 01:28:28.026" endtime="20220122 01:28:30.764"/>
</kw>
<msg timestamp="20220122 01:28:30.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:28:28.026" endtime="20220122 01:28:30.769"/>
</kw>
<msg timestamp="20220122 01:28:30.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:28:28.025" endtime="20220122 01:28:30.769"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:28:30.769" endtime="20220122 01:28:30.770"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:28:30.781" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:28:33.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:28:33.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:28:30.775" endtime="20220122 01:28:33.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:28:33.555" level="INFO"/>
<status status="PASS" starttime="20220122 01:28:33.553" endtime="20220122 01:28:33.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:28:33.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:28:33.555" endtime="20220122 01:28:33.556"/>
</kw>
<status status="PASS" starttime="20220122 01:28:30.774" endtime="20220122 01:28:33.556"/>
</kw>
<msg timestamp="20220122 01:28:33.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:28:30.771" endtime="20220122 01:28:33.557"/>
</kw>
<msg timestamp="20220122 01:28:33.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:28:30.770" endtime="20220122 01:28:33.557"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:28:33.557" endtime="20220122 01:28:33.557"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:28:33.562" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:28:40.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:28:40.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:28:33.559" endtime="20220122 01:28:40.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:28:40.830" level="INFO"/>
<status status="PASS" starttime="20220122 01:28:40.829" endtime="20220122 01:28:40.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:28:40.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:28:40.830" endtime="20220122 01:28:40.831"/>
</kw>
<status status="PASS" starttime="20220122 01:28:33.559" endtime="20220122 01:28:40.831"/>
</kw>
<msg timestamp="20220122 01:28:40.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:28:33.558" endtime="20220122 01:28:40.831"/>
</kw>
<msg timestamp="20220122 01:28:40.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:28:33.558" endtime="20220122 01:28:40.832"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:28:40.832" endtime="20220122 01:28:40.832"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:28:28.024" endtime="20220122 01:28:40.833"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220122 01:28:27.972" endtime="20220122 01:28:40.834"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220122 01:28:44.612" level="INFO">${random} = 90751</msg>
<status status="PASS" starttime="20220122 01:28:44.612" endtime="20220122 01:28:44.612"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220122 01:28:44.618" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-90751 2&gt;&amp;1'.</msg>
<msg timestamp="20220122 01:28:49.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20220122 01:28:49.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:28:44.614" endtime="20220122 01:28:49.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220122 01:28:49.023" level="INFO"/>
<status status="PASS" starttime="20220122 01:28:49.022" endtime="20220122 01:28:49.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220122 01:28:49.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220122 01:28:49.023" endtime="20220122 01:28:49.024"/>
</kw>
<status status="PASS" starttime="20220122 01:28:44.614" endtime="20220122 01:28:49.024"/>
</kw>
<msg timestamp="20220122 01:28:49.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220122 01:28:44.613" endtime="20220122 01:28:49.026"/>
</kw>
<msg timestamp="20220122 01:28:49.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220122 01:28:44.612" endtime="20220122 01:28:49.026"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:28:49.026" endtime="20220122 01:28:49.027"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:28:44.611" endtime="20220122 01:28:49.027"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220122 01:28:44.558" endtime="20220122 01:28:49.028"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:27:51.842" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220122 01:27:51.841" endtime="20220122 01:27:51.842"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220122 01:27:51.843" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220122 01:27:51.842" endtime="20220122 01:27:51.843"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220122 01:27:51.843" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220122 01:27:51.843" endtime="20220122 01:27:51.843"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220122 01:27:51.844" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220122 01:27:51.843" endtime="20220122 01:27:51.844"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220122 01:27:51.845" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220122 01:27:51.846" level="INFO">${version_file_contents} = #Sat Jan 22 01:24:53 UTC 2022
cTime=1642814693980
clusterID=CID-9fe144b4-a32e-47a1-9ca4-87f7b6842c70
nodeType=SCM
scmUuid=150321ac-0367-44d2-8c18-76c36724eef4
layoutVersion=0
</msg>
<status status="PASS" starttime="20220122 01:27:51.845" endtime="20220122 01:27:51.846"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220122 01:27:51.846" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220122 01:27:51.846" endtime="20220122 01:27:51.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220122 01:27:51.846" endtime="20220122 01:27:51.847"/>
</kw>
<status status="PASS" starttime="20220122 01:27:51.845" endtime="20220122 01:27:51.847"/>
</kw>
<status status="PASS" starttime="20220122 01:27:51.844" endtime="20220122 01:27:51.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220122 01:27:51.841" endtime="20220122 01:27:51.847"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220122 01:27:51.788" endtime="20220122 01:27:51.848"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="190233"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
