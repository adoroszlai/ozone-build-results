<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220131 13:12:26.394" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite id="s1-s1-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:55:26.215" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 12:55:26.215" endtime="20220131 12:55:26.215"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:55:26.216" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 12:55:26.215" endtime="20220131 12:55:26.216"/>
</kw>
<status status="PASS" starttime="20220131 12:55:26.214" endtime="20220131 12:55:26.216"/>
</kw>
<msg timestamp="20220131 12:55:26.216" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 12:55:26.214" endtime="20220131 12:55:26.216"/>
</kw>
<status status="PASS" starttime="20220131 12:55:26.213" endtime="20220131 12:55:26.216"/>
</kw>
<msg timestamp="20220131 12:55:26.216" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 12:55:26.213" endtime="20220131 12:55:26.216"/>
</kw>
<msg timestamp="20220131 12:55:26.216" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 12:55:26.212" endtime="20220131 12:55:26.216"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 12:55:26.217" level="INFO">${random} = 09299</msg>
<status status="PASS" starttime="20220131 12:55:26.217" endtime="20220131 12:55:26.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:26.222" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-09299 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:29.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:29.398" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:55:26.218" endtime="20220131 12:55:29.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:29.400" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:55:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-01-31 12:55:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-01-31 12:55:27 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-01-31 12:55:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220131 12:55:29.399" endtime="20220131 12:55:29.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:29.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:29.400" endtime="20220131 12:55:29.400"/>
</kw>
<status status="PASS" starttime="20220131 12:55:26.218" endtime="20220131 12:55:29.401"/>
</kw>
<msg timestamp="20220131 12:55:29.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:26.218" endtime="20220131 12:55:29.401"/>
</kw>
<msg timestamp="20220131 12:55:29.401" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:55:26.217" endtime="20220131 12:55:29.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:29.404" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:31.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:31.045" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:55:29.402" endtime="20220131 12:55:31.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:31.046" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 12:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-01-31 12:55 o3fs://bucket1.volume1.om/ozone-09299
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 12:55 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 12:55:31.045" endtime="20220131 12:55:31.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:31.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:31.046" endtime="20220131 12:55:31.046"/>
</kw>
<status status="PASS" starttime="20220131 12:55:29.402" endtime="20220131 12:55:31.047"/>
</kw>
<msg timestamp="20220131 12:55:31.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:29.402" endtime="20220131 12:55:31.047"/>
</kw>
<msg timestamp="20220131 12:55:31.047" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:55:29.401" endtime="20220131 12:55:31.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:55:31.047" endtime="20220131 12:55:31.048"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:31.051" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-09299 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:33.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:33.956" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:55:31.049" endtime="20220131 12:55:33.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:33.957" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:55:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-01-31 12:55:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-01-31 12:55:32 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20220131 12:55:33.956" endtime="20220131 12:55:33.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:33.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:33.957" endtime="20220131 12:55:33.958"/>
</kw>
<status status="PASS" starttime="20220131 12:55:31.048" endtime="20220131 12:55:33.958"/>
</kw>
<msg timestamp="20220131 12:55:33.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:31.048" endtime="20220131 12:55:33.958"/>
</kw>
<msg timestamp="20220131 12:55:33.959" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:55:31.048" endtime="20220131 12:55:33.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:55:33.959" endtime="20220131 12:55:33.960"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220131 12:55:26.211" endtime="20220131 12:55:33.960"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220131 12:55:26.165" endtime="20220131 12:55:33.961"/>
</suite>
<suite id="s1-s1-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:37.965" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:37.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:37.972" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:55:37.962" endtime="20220131 12:55:37.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:37.972" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:55:37.972" endtime="20220131 12:55:37.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:37.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:37.973" endtime="20220131 12:55:37.973"/>
</kw>
<status status="PASS" starttime="20220131 12:55:37.961" endtime="20220131 12:55:37.973"/>
</kw>
<msg timestamp="20220131 12:55:37.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:37.961" endtime="20220131 12:55:37.974"/>
</kw>
<msg timestamp="20220131 12:55:37.974" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:55:37.961" endtime="20220131 12:55:37.974"/>
</kw>
<msg timestamp="20220131 12:55:37.974" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:55:37.960" endtime="20220131 12:55:37.974"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:55:37.978" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 12:55:37.977" endtime="20220131 12:55:37.978"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:55:37.978" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 12:55:37.978" endtime="20220131 12:55:37.978"/>
</kw>
<status status="PASS" starttime="20220131 12:55:37.977" endtime="20220131 12:55:37.979"/>
</kw>
<msg timestamp="20220131 12:55:37.979" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 12:55:37.977" endtime="20220131 12:55:37.979"/>
</kw>
<status status="PASS" starttime="20220131 12:55:37.976" endtime="20220131 12:55:37.979"/>
</kw>
<msg timestamp="20220131 12:55:37.979" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 12:55:37.976" endtime="20220131 12:55:37.979"/>
</kw>
<msg timestamp="20220131 12:55:37.979" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 12:55:37.974" endtime="20220131 12:55:37.979"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:37.982" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:56:11.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:56:11.029" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220131 12:55:37.981" endtime="20220131 12:56:11.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:56:11.030" level="INFO">Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:55:39 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-01-31 12:55:39 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-01-31 12:55:39 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-01-31 12:55:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-01-31 12:55:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.8:8032
2022-01-31 12:55:41 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-01-31 12:55:41 INFO  JobSubmitter:198 - number of splits:3
2022-01-31 12:55:41 INFO  JobSubmitter:287 - Submitting tokens for job: job_1643633653594_0001
2022-01-31 12:55:42 INFO  YarnClientImpl:273 - Submitted application application_1643633653594_0001
2022-01-31 12:55:42 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1643633653594_0001/
2022-01-31 12:55:42 INFO  Job:1339 - Running job: job_1643633653594_0001
2022-01-31 12:55:51 INFO  Job:1360 - Job job_1643633653594_0001 running in uber mode : false
2022-01-31 12:55:51 INFO  Job:1367 -  map 0% reduce 0%
2022-01-31 12:55:57 INFO  Job:1367 -  map 33% reduce 0%
2022-01-31 12:56:02 INFO  Job:1367 -  map 67% reduce 0%
2022-01-31 12:56:06 INFO  Job:1367 -  map 100% reduce 0%
2022-01-31 12:56:09 INFO  Job:1367 -  map 100% reduce 100%
2022-01-31 12:56:10 INFO  Job:1378 - Job job_1643633653594_0001 completed successfully
2022-01-31 12:56:10 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=479865
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=15
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33876
		Total time spent by all reduces in occupied slots (ms)=12444
		Total time spent by all map tasks (ms)=8469
		Total time spent by all reduce tasks (ms)=3111
		Total vcore-milliseconds taken by all map tasks=8469
		Total vcore-milliseconds taken by all reduce tasks=3111
		Total megabyte-milliseconds taken by all map tasks=34689024
		Total megabyte-milliseconds taken by all reduce tasks=12742656
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=484
		CPU time spent (ms)=5810
		Physical memory (bytes) snapshot=1289969664
		Virtual memory (bytes) snapshot=15799758848
		Total committed heap usage (bytes)=1054867456
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.541 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220131 12:56:11.029" endtime="20220131 12:56:11.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:56:11.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:56:11.030" endtime="20220131 12:56:11.031"/>
</kw>
<status status="PASS" starttime="20220131 12:55:37.980" endtime="20220131 12:56:11.035"/>
</kw>
<msg timestamp="20220131 12:56:11.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:37.980" endtime="20220131 12:56:11.035"/>
</kw>
<msg timestamp="20220131 12:56:11.036" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220131 12:55:37.979" endtime="20220131 12:56:11.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:56:11.036" endtime="20220131 12:56:11.036"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 12:55:37.960" endtime="20220131 12:56:11.036"/>
</test>
<test id="s1-s1-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:56:11.042" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:56:11.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:56:11.047" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:56:11.040" endtime="20220131 12:56:11.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:56:11.048" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:56:11.048" endtime="20220131 12:56:11.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:56:11.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:56:11.048" endtime="20220131 12:56:11.049"/>
</kw>
<status status="PASS" starttime="20220131 12:56:11.040" endtime="20220131 12:56:11.049"/>
</kw>
<msg timestamp="20220131 12:56:11.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:56:11.040" endtime="20220131 12:56:11.049"/>
</kw>
<msg timestamp="20220131 12:56:11.050" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:56:11.039" endtime="20220131 12:56:11.050"/>
</kw>
<msg timestamp="20220131 12:56:11.050" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:56:11.039" endtime="20220131 12:56:11.050"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 12:56:11.050" level="INFO">${random} = vRU0VtaP</msg>
<status status="PASS" starttime="20220131 12:56:11.050" endtime="20220131 12:56:11.050"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:56:11.053" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 12:56:11.053" endtime="20220131 12:56:11.053"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:56:11.054" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 12:56:11.053" endtime="20220131 12:56:11.054"/>
</kw>
<status status="PASS" starttime="20220131 12:56:11.052" endtime="20220131 12:56:11.054"/>
</kw>
<msg timestamp="20220131 12:56:11.054" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 12:56:11.052" endtime="20220131 12:56:11.054"/>
</kw>
<status status="PASS" starttime="20220131 12:56:11.051" endtime="20220131 12:56:11.054"/>
</kw>
<msg timestamp="20220131 12:56:11.054" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 12:56:11.051" endtime="20220131 12:56:11.054"/>
</kw>
<msg timestamp="20220131 12:56:11.054" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 12:56:11.050" endtime="20220131 12:56:11.054"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:56:11.057" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 12:56:11.057" endtime="20220131 12:56:11.057"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:56:11.057" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 12:56:11.057" endtime="20220131 12:56:11.057"/>
</kw>
<status status="PASS" starttime="20220131 12:56:11.056" endtime="20220131 12:56:11.058"/>
</kw>
<msg timestamp="20220131 12:56:11.058" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 12:56:11.056" endtime="20220131 12:56:11.058"/>
</kw>
<status status="PASS" starttime="20220131 12:56:11.055" endtime="20220131 12:56:11.058"/>
</kw>
<msg timestamp="20220131 12:56:11.058" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220131 12:56:11.055" endtime="20220131 12:56:11.058"/>
</kw>
<msg timestamp="20220131 12:56:11.058" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220131 12:56:11.054" endtime="20220131 12:56:11.058"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:56:11.061" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 12:56:11.060" endtime="20220131 12:56:11.061"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:56:11.061" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 12:56:11.061" endtime="20220131 12:56:11.061"/>
</kw>
<status status="PASS" starttime="20220131 12:56:11.060" endtime="20220131 12:56:11.061"/>
</kw>
<msg timestamp="20220131 12:56:11.061" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 12:56:11.060" endtime="20220131 12:56:11.062"/>
</kw>
<status status="PASS" starttime="20220131 12:56:11.059" endtime="20220131 12:56:11.062"/>
</kw>
<msg timestamp="20220131 12:56:11.062" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-vRU0VtaP.txt</msg>
<status status="PASS" starttime="20220131 12:56:11.059" endtime="20220131 12:56:11.062"/>
</kw>
<msg timestamp="20220131 12:56:11.062" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-vRU0VtaP.txt</msg>
<status status="PASS" starttime="20220131 12:56:11.058" endtime="20220131 12:56:11.062"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:56:11.065" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-vRU0VtaP.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:56:46.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:56:46.579" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:56:11.063" endtime="20220131 12:56:46.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:56:46.580" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:56:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.8:8032
2022-01-31 12:56:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 12:56:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-01-31 12:56:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-01-31 12:56:13 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-01-31 12:56:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-01-31 12:56:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-01-31 12:56:14 INFO  JobSubmitter:198 - number of splits:3
2022-01-31 12:56:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1643633653594_0002
2022-01-31 12:56:14 INFO  YarnClientImpl:273 - Submitted application application_1643633653594_0002
2022-01-31 12:56:14 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1643633653594_0002/
2022-01-31 12:56:14 INFO  Job:1339 - Running job: job_1643633653594_0002
2022-01-31 12:56:21 INFO  Job:1360 - Job job_1643633653594_0002 running in uber mode : false
2022-01-31 12:56:21 INFO  Job:1367 -  map 0% reduce 0%
2022-01-31 12:56:27 INFO  Job:1367 -  map 33% reduce 0%
2022-01-31 12:56:35 INFO  Job:1367 -  map 67% reduce 0%
2022-01-31 12:56:40 INFO  Job:1367 -  map 100% reduce 0%
2022-01-31 12:56:46 INFO  Job:1367 -  map 100% reduce 100%
2022-01-31 12:56:46 INFO  Job:1378 - Job job_1643633653594_0002 completed successfully
2022-01-31 12:56:46 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=542711
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=12
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45064
		Total time spent by all reduces in occupied slots (ms)=21340
		Total time spent by all map tasks (ms)=11266
		Total time spent by all reduce tasks (ms)=5335
		Total vcore-milliseconds taken by all map tasks=11266
		Total vcore-milliseconds taken by all reduce tasks=5335
		Total megabyte-milliseconds taken by all map tasks=46145536
		Total megabyte-milliseconds taken by all reduce tasks=21852160
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=672
		CPU time spent (ms)=8980
		Physical memory (bytes) snapshot=1296445440
		Virtual memory (bytes) snapshot=15832399872
		Total committed heap usage (bytes)=1031798784
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220131 12:56:46.579" endtime="20220131 12:56:46.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:56:46.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:56:46.580" endtime="20220131 12:56:46.581"/>
</kw>
<status status="PASS" starttime="20220131 12:56:11.063" endtime="20220131 12:56:46.581"/>
</kw>
<msg timestamp="20220131 12:56:46.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:56:11.063" endtime="20220131 12:56:46.581"/>
</kw>
<msg timestamp="20220131 12:56:46.581" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:56:11.062" endtime="20220131 12:56:46.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:56:46.582" endtime="20220131 12:56:46.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:56:46.582" endtime="20220131 12:56:46.583"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 12:56:11.038" endtime="20220131 12:56:46.583"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220131 12:55:37.915" endtime="20220131 12:56:46.584"/>
</suite>
<suite id="s1-s1-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:56:50.547" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 12:56:50.546" endtime="20220131 12:56:50.547"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:56:50.547" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 12:56:50.547" endtime="20220131 12:56:50.547"/>
</kw>
<status status="PASS" starttime="20220131 12:56:50.546" endtime="20220131 12:56:50.547"/>
</kw>
<msg timestamp="20220131 12:56:50.547" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 12:56:50.545" endtime="20220131 12:56:50.547"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 12:56:50.548" endtime="20220131 12:56:50.548"/>
</kw>
<msg timestamp="20220131 12:56:50.548" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 12:56:50.548" endtime="20220131 12:56:50.548"/>
</kw>
<status status="PASS" starttime="20220131 12:56:50.545" endtime="20220131 12:56:50.549"/>
</kw>
<msg timestamp="20220131 12:56:50.549" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 12:56:50.544" endtime="20220131 12:56:50.549"/>
</kw>
<msg timestamp="20220131 12:56:50.549" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 12:56:50.543" endtime="20220131 12:56:50.549"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 12:56:50.549" level="INFO">${random} = 58989</msg>
<status status="PASS" starttime="20220131 12:56:50.549" endtime="20220131 12:56:50.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:56:50.554" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-58989 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:56:53.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:56:53.547" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:56:50.551" endtime="20220131 12:56:53.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:56:53.548" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:56:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-01-31 12:56:52 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-01-31 12:56:52 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-01-31 12:56:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220131 12:56:53.547" endtime="20220131 12:56:53.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:56:53.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:56:53.548" endtime="20220131 12:56:53.549"/>
</kw>
<status status="PASS" starttime="20220131 12:56:50.550" endtime="20220131 12:56:53.549"/>
</kw>
<msg timestamp="20220131 12:56:53.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:56:50.550" endtime="20220131 12:56:53.549"/>
</kw>
<msg timestamp="20220131 12:56:53.549" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:56:50.550" endtime="20220131 12:56:53.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:56:53.553" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:56:55.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:56:55.211" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:56:53.551" endtime="20220131 12:56:55.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:56:55.212" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 12:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-01-31 12:55 ofs://om/volume1/bucket1/ozone-09299
-rw-rw-rw-   3 hadoop hadoop      14978 2022-01-31 12:56 ofs://om/volume1/bucket1/ozone-58989
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 12:55 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 12:56 ofs://om/volume1/bucket1/wordcount-vRU0VtaP.txt</msg>
<status status="PASS" starttime="20220131 12:56:55.212" endtime="20220131 12:56:55.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:56:55.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:56:55.213" endtime="20220131 12:56:55.213"/>
</kw>
<status status="PASS" starttime="20220131 12:56:53.550" endtime="20220131 12:56:55.213"/>
</kw>
<msg timestamp="20220131 12:56:55.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:56:53.550" endtime="20220131 12:56:55.213"/>
</kw>
<msg timestamp="20220131 12:56:55.214" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:56:53.550" endtime="20220131 12:56:55.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:56:55.214" endtime="20220131 12:56:55.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:56:55.217" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-58989 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:56:57.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:56:57.972" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:56:55.216" endtime="20220131 12:56:57.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:56:57.973" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:56:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-01-31 12:56:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-01-31 12:56:56 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20220131 12:56:57.973" endtime="20220131 12:56:57.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:56:57.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:56:57.974" endtime="20220131 12:56:57.974"/>
</kw>
<status status="PASS" starttime="20220131 12:56:55.215" endtime="20220131 12:56:57.974"/>
</kw>
<msg timestamp="20220131 12:56:57.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:56:55.215" endtime="20220131 12:56:57.975"/>
</kw>
<msg timestamp="20220131 12:56:57.976" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:56:55.214" endtime="20220131 12:56:57.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:56:57.976" endtime="20220131 12:56:57.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220131 12:56:50.543" endtime="20220131 12:56:57.976"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220131 12:56:50.498" endtime="20220131 12:56:57.977"/>
</suite>
<suite id="s1-s1-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:57:02.002" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:57:02.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:57:02.007" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:57:01.999" endtime="20220131 12:57:02.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:57:02.008" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:57:02.007" endtime="20220131 12:57:02.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:57:02.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:57:02.008" endtime="20220131 12:57:02.009"/>
</kw>
<status status="PASS" starttime="20220131 12:57:01.998" endtime="20220131 12:57:02.009"/>
</kw>
<msg timestamp="20220131 12:57:02.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:57:01.998" endtime="20220131 12:57:02.009"/>
</kw>
<msg timestamp="20220131 12:57:02.009" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:57:01.997" endtime="20220131 12:57:02.009"/>
</kw>
<msg timestamp="20220131 12:57:02.009" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:57:01.997" endtime="20220131 12:57:02.010"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:57:02.014" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 12:57:02.013" endtime="20220131 12:57:02.014"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:57:02.014" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 12:57:02.014" endtime="20220131 12:57:02.014"/>
</kw>
<status status="PASS" starttime="20220131 12:57:02.013" endtime="20220131 12:57:02.014"/>
</kw>
<msg timestamp="20220131 12:57:02.014" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 12:57:02.012" endtime="20220131 12:57:02.014"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 12:57:02.015" endtime="20220131 12:57:02.015"/>
</kw>
<msg timestamp="20220131 12:57:02.015" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 12:57:02.015" endtime="20220131 12:57:02.015"/>
</kw>
<status status="PASS" starttime="20220131 12:57:02.012" endtime="20220131 12:57:02.016"/>
</kw>
<msg timestamp="20220131 12:57:02.016" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 12:57:02.011" endtime="20220131 12:57:02.016"/>
</kw>
<msg timestamp="20220131 12:57:02.016" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 12:57:02.010" endtime="20220131 12:57:02.016"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:57:02.019" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:57:31.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:57:31.536" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220131 12:57:02.017" endtime="20220131 12:57:31.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:57:31.538" level="INFO">Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:57:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-01-31 12:57:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-01-31 12:57:03 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-01-31 12:57:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-01-31 12:57:04 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.8:8032
2022-01-31 12:57:04 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 12:57:05 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-01-31 12:57:05 INFO  JobSubmitter:198 - number of splits:3
2022-01-31 12:57:05 INFO  JobSubmitter:287 - Submitting tokens for job: job_1643633653594_0003
2022-01-31 12:57:05 INFO  YarnClientImpl:273 - Submitted application application_1643633653594_0003
2022-01-31 12:57:05 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1643633653594_0003/
2022-01-31 12:57:05 INFO  Job:1339 - Running job: job_1643633653594_0003
2022-01-31 12:57:12 INFO  Job:1360 - Job job_1643633653594_0003 running in uber mode : false
2022-01-31 12:57:12 INFO  Job:1367 -  map 0% reduce 0%
2022-01-31 12:57:18 INFO  Job:1367 -  map 33% reduce 0%
2022-01-31 12:57:22 INFO  Job:1367 -  map 67% reduce 0%
2022-01-31 12:57:26 INFO  Job:1367 -  map 100% reduce 0%
2022-01-31 12:57:30 INFO  Job:1367 -  map 100% reduce 100%
2022-01-31 12:57:30 INFO  Job:1378 - Job job_1643633653594_0003 completed successfully
2022-01-31 12:57:30 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=479645
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=15
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33944
		Total time spent by all reduces in occupied slots (ms)=12604
		Total time spent by all map tasks (ms)=8486
		Total time spent by all reduce tasks (ms)=3151
		Total vcore-milliseconds taken by all map tasks=8486
		Total vcore-milliseconds taken by all reduce tasks=3151
		Total megabyte-milliseconds taken by all map tasks=34758656
		Total megabyte-milliseconds taken by all reduce tasks=12906496
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=495
		CPU time spent (ms)=6740
		Physical memory (bytes) snapshot=1314082816
		Virtual memory (bytes) snapshot=15812747264
		Total committed heap usage (bytes)=1071120384
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 26.312 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220131 12:57:31.537" endtime="20220131 12:57:31.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:57:31.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:57:31.538" endtime="20220131 12:57:31.538"/>
</kw>
<status status="PASS" starttime="20220131 12:57:02.017" endtime="20220131 12:57:31.539"/>
</kw>
<msg timestamp="20220131 12:57:31.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:57:02.017" endtime="20220131 12:57:31.539"/>
</kw>
<msg timestamp="20220131 12:57:31.539" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220131 12:57:02.016" endtime="20220131 12:57:31.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:57:31.539" endtime="20220131 12:57:31.540"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 12:57:01.996" endtime="20220131 12:57:31.540"/>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:57:31.548" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:57:31.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:57:31.553" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:57:31.543" endtime="20220131 12:57:31.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:57:31.554" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:57:31.554" endtime="20220131 12:57:31.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:57:31.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:57:31.554" endtime="20220131 12:57:31.555"/>
</kw>
<status status="PASS" starttime="20220131 12:57:31.542" endtime="20220131 12:57:31.555"/>
</kw>
<msg timestamp="20220131 12:57:31.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:57:31.542" endtime="20220131 12:57:31.555"/>
</kw>
<msg timestamp="20220131 12:57:31.556" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:57:31.542" endtime="20220131 12:57:31.556"/>
</kw>
<msg timestamp="20220131 12:57:31.556" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220131 12:57:31.541" endtime="20220131 12:57:31.556"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 12:57:31.556" level="INFO">${random} = ORvRO7Zd</msg>
<status status="PASS" starttime="20220131 12:57:31.556" endtime="20220131 12:57:31.556"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:57:31.559" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 12:57:31.559" endtime="20220131 12:57:31.559"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:57:31.560" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 12:57:31.560" endtime="20220131 12:57:31.560"/>
</kw>
<status status="PASS" starttime="20220131 12:57:31.559" endtime="20220131 12:57:31.560"/>
</kw>
<msg timestamp="20220131 12:57:31.560" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 12:57:31.558" endtime="20220131 12:57:31.560"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 12:57:31.561" endtime="20220131 12:57:31.561"/>
</kw>
<msg timestamp="20220131 12:57:31.561" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 12:57:31.560" endtime="20220131 12:57:31.561"/>
</kw>
<status status="PASS" starttime="20220131 12:57:31.558" endtime="20220131 12:57:31.562"/>
</kw>
<msg timestamp="20220131 12:57:31.562" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 12:57:31.557" endtime="20220131 12:57:31.562"/>
</kw>
<msg timestamp="20220131 12:57:31.562" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 12:57:31.556" endtime="20220131 12:57:31.562"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:57:31.565" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 12:57:31.564" endtime="20220131 12:57:31.565"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:57:31.565" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 12:57:31.565" endtime="20220131 12:57:31.565"/>
</kw>
<status status="PASS" starttime="20220131 12:57:31.564" endtime="20220131 12:57:31.565"/>
</kw>
<msg timestamp="20220131 12:57:31.566" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 12:57:31.564" endtime="20220131 12:57:31.566"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:57:31.567" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220131 12:57:31.566" endtime="20220131 12:57:31.567"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:57:31.567" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220131 12:57:31.567" endtime="20220131 12:57:31.567"/>
</kw>
<status status="PASS" starttime="20220131 12:57:31.566" endtime="20220131 12:57:31.568"/>
</kw>
<msg timestamp="20220131 12:57:31.568" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220131 12:57:31.566" endtime="20220131 12:57:31.568"/>
</kw>
<status status="PASS" starttime="20220131 12:57:31.563" endtime="20220131 12:57:31.568"/>
</kw>
<msg timestamp="20220131 12:57:31.568" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220131 12:57:31.563" endtime="20220131 12:57:31.568"/>
</kw>
<msg timestamp="20220131 12:57:31.568" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220131 12:57:31.562" endtime="20220131 12:57:31.568"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:57:31.571" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 12:57:31.571" endtime="20220131 12:57:31.571"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:57:31.572" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 12:57:31.572" endtime="20220131 12:57:31.572"/>
</kw>
<status status="PASS" starttime="20220131 12:57:31.570" endtime="20220131 12:57:31.572"/>
</kw>
<msg timestamp="20220131 12:57:31.572" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 12:57:31.570" endtime="20220131 12:57:31.572"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:57:31.574" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220131 12:57:31.573" endtime="20220131 12:57:31.574"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:57:31.574" level="INFO">${result} = /wordcount-ORvRO7Zd.txt</msg>
<status status="PASS" starttime="20220131 12:57:31.574" endtime="20220131 12:57:31.574"/>
</kw>
<status status="PASS" starttime="20220131 12:57:31.573" endtime="20220131 12:57:31.574"/>
</kw>
<msg timestamp="20220131 12:57:31.574" level="INFO">${path_with_leading} = /wordcount-ORvRO7Zd.txt</msg>
<status status="PASS" starttime="20220131 12:57:31.572" endtime="20220131 12:57:31.574"/>
</kw>
<status status="PASS" starttime="20220131 12:57:31.570" endtime="20220131 12:57:31.575"/>
</kw>
<msg timestamp="20220131 12:57:31.575" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-ORvRO7Zd.txt</msg>
<status status="PASS" starttime="20220131 12:57:31.569" endtime="20220131 12:57:31.575"/>
</kw>
<msg timestamp="20220131 12:57:31.575" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-ORvRO7Zd.txt</msg>
<status status="PASS" starttime="20220131 12:57:31.568" endtime="20220131 12:57:31.575"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:57:31.578" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-ORvRO7Zd.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:58:02.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:58:02.731" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:57:31.576" endtime="20220131 12:58:02.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:58:02.732" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:57:32 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.8:8032
2022-01-31 12:57:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 12:57:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-01-31 12:57:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-01-31 12:57:33 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-01-31 12:57:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-01-31 12:57:34 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-01-31 12:57:34 INFO  JobSubmitter:198 - number of splits:3
2022-01-31 12:57:34 INFO  JobSubmitter:287 - Submitting tokens for job: job_1643633653594_0004
2022-01-31 12:57:34 INFO  YarnClientImpl:273 - Submitted application application_1643633653594_0004
2022-01-31 12:57:35 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1643633653594_0004/
2022-01-31 12:57:35 INFO  Job:1339 - Running job: job_1643633653594_0004
2022-01-31 12:57:44 INFO  Job:1360 - Job job_1643633653594_0004 running in uber mode : false
2022-01-31 12:57:44 INFO  Job:1367 -  map 0% reduce 0%
2022-01-31 12:57:50 INFO  Job:1367 -  map 33% reduce 0%
2022-01-31 12:57:54 INFO  Job:1367 -  map 67% reduce 0%
2022-01-31 12:57:58 INFO  Job:1367 -  map 100% reduce 0%
2022-01-31 12:58:02 INFO  Job:1367 -  map 100% reduce 100%
2022-01-31 12:58:02 INFO  Job:1378 - Job job_1643633653594_0004 completed successfully
2022-01-31 12:58:02 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=542627
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=12
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34956
		Total time spent by all reduces in occupied slots (ms)=12308
		Total time spent by all map tasks (ms)=8739
		Total time spent by all reduce tasks (ms)=3077
		Total vcore-milliseconds taken by all map tasks=8739
		Total vcore-milliseconds taken by all reduce tasks=3077
		Total megabyte-milliseconds taken by all map tasks=35794944
		Total megabyte-milliseconds taken by all reduce tasks=12603392
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=478
		CPU time spent (ms)=6990
		Physical memory (bytes) snapshot=1336250368
		Virtual memory (bytes) snapshot=15812132864
		Total committed heap usage (bytes)=1055916032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220131 12:58:02.732" endtime="20220131 12:58:02.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:58:02.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:58:02.733" endtime="20220131 12:58:02.733"/>
</kw>
<status status="PASS" starttime="20220131 12:57:31.576" endtime="20220131 12:58:02.734"/>
</kw>
<msg timestamp="20220131 12:58:02.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:57:31.576" endtime="20220131 12:58:02.734"/>
</kw>
<msg timestamp="20220131 12:58:02.734" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:57:31.575" endtime="20220131 12:58:02.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:58:02.734" endtime="20220131 12:58:02.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:58:02.735" endtime="20220131 12:58:02.735"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 12:57:31.541" endtime="20220131 12:58:02.735"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220131 12:57:01.951" endtime="20220131 12:58:02.737"/>
</suite>
<suite id="s1-s1-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:54:53.884" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:54:56.905" level="INFO">${rc} = 255</msg>
<msg timestamp="20220131 12:54:56.905" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 12:54:53.880" endtime="20220131 12:54:56.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:54:56.907" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 12:54:56.906" endtime="20220131 12:54:56.907"/>
</kw>
<msg timestamp="20220131 12:54:56.907" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 12:54:53.880" endtime="20220131 12:54:56.907"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:54:56.911" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:54:59.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:54:59.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:54:56.909" endtime="20220131 12:54:59.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:54:59.148" level="INFO"/>
<status status="PASS" starttime="20220131 12:54:59.147" endtime="20220131 12:54:59.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:54:59.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:54:59.148" endtime="20220131 12:54:59.148"/>
</kw>
<status status="PASS" starttime="20220131 12:54:56.909" endtime="20220131 12:54:59.149"/>
</kw>
<msg timestamp="20220131 12:54:59.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:54:56.908" endtime="20220131 12:54:59.150"/>
</kw>
<msg timestamp="20220131 12:54:59.150" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220131 12:54:56.908" endtime="20220131 12:54:59.150"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:54:59.150" endtime="20220131 12:54:59.151"/>
</kw>
<status status="PASS" starttime="20220131 12:54:56.908" endtime="20220131 12:54:59.151"/>
</kw>
<status status="PASS" starttime="20220131 12:54:56.907" endtime="20220131 12:54:59.151"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:54:59.155" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:01.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:01.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:54:59.153" endtime="20220131 12:55:01.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:01.326" level="INFO"/>
<status status="PASS" starttime="20220131 12:55:01.326" endtime="20220131 12:55:01.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:01.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:01.327" endtime="20220131 12:55:01.327"/>
</kw>
<status status="PASS" starttime="20220131 12:54:59.153" endtime="20220131 12:55:01.327"/>
</kw>
<msg timestamp="20220131 12:55:01.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:54:59.153" endtime="20220131 12:55:01.328"/>
</kw>
<status status="PASS" starttime="20220131 12:54:59.152" endtime="20220131 12:55:01.328"/>
</kw>
<status status="PASS" starttime="20220131 12:54:59.152" endtime="20220131 12:55:01.328"/>
</kw>
<status status="PASS" starttime="20220131 12:54:59.151" endtime="20220131 12:55:01.328"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220131 12:55:01.329" endtime="20220131 12:55:01.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:01.332" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:03.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:03.619" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T12:55...</msg>
<status status="PASS" starttime="20220131 12:55:01.330" endtime="20220131 12:55:03.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:03.620" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T12:55:01.266Z",
  "modificationTime" : "2022-01-31T12:55:01.266Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220131 12:55:03.620" endtime="20220131 12:55:03.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:03.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:03.620" endtime="20220131 12:55:03.621"/>
</kw>
<status status="PASS" starttime="20220131 12:55:01.330" endtime="20220131 12:55:03.621"/>
</kw>
<msg timestamp="20220131 12:55:03.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:01.330" endtime="20220131 12:55:03.622"/>
</kw>
<msg timestamp="20220131 12:55:03.622" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T12:55...</msg>
<status status="PASS" starttime="20220131 12:55:01.329" endtime="20220131 12:55:03.622"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:55:03.622" endtime="20220131 12:55:03.623"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:55:03.627" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 12:55:03.626" endtime="20220131 12:55:03.627"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:55:03.627" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 12:55:03.627" endtime="20220131 12:55:03.627"/>
</kw>
<status status="PASS" starttime="20220131 12:55:03.626" endtime="20220131 12:55:03.627"/>
</kw>
<msg timestamp="20220131 12:55:03.628" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 12:55:03.625" endtime="20220131 12:55:03.628"/>
</kw>
<status status="PASS" starttime="20220131 12:55:03.624" endtime="20220131 12:55:03.628"/>
</kw>
<msg timestamp="20220131 12:55:03.628" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220131 12:55:03.623" endtime="20220131 12:55:03.628"/>
</kw>
<msg timestamp="20220131 12:55:03.628" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220131 12:55:03.623" endtime="20220131 12:55:03.628"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:03.631" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:05.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:05.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:55:03.629" endtime="20220131 12:55:05.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:05.795" level="INFO"/>
<status status="PASS" starttime="20220131 12:55:05.794" endtime="20220131 12:55:05.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:05.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:05.795" endtime="20220131 12:55:05.796"/>
</kw>
<status status="PASS" starttime="20220131 12:55:03.629" endtime="20220131 12:55:05.796"/>
</kw>
<msg timestamp="20220131 12:55:05.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:03.629" endtime="20220131 12:55:05.797"/>
</kw>
<status status="PASS" starttime="20220131 12:55:03.628" endtime="20220131 12:55:05.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:05.800" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:10.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:10.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:55:05.798" endtime="20220131 12:55:10.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:10.261" level="INFO"/>
<status status="PASS" starttime="20220131 12:55:10.260" endtime="20220131 12:55:10.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:10.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:10.261" endtime="20220131 12:55:10.262"/>
</kw>
<status status="PASS" starttime="20220131 12:55:05.798" endtime="20220131 12:55:10.262"/>
</kw>
<msg timestamp="20220131 12:55:10.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:05.798" endtime="20220131 12:55:10.263"/>
</kw>
<status status="PASS" starttime="20220131 12:55:05.797" endtime="20220131 12:55:10.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:10.266" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:14.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:14.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:55:10.264" endtime="20220131 12:55:14.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:14.102" level="INFO"/>
<status status="PASS" starttime="20220131 12:55:14.101" endtime="20220131 12:55:14.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:14.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:14.102" endtime="20220131 12:55:14.102"/>
</kw>
<status status="PASS" starttime="20220131 12:55:10.264" endtime="20220131 12:55:14.103"/>
</kw>
<msg timestamp="20220131 12:55:14.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:10.263" endtime="20220131 12:55:14.103"/>
</kw>
<status status="PASS" starttime="20220131 12:55:10.263" endtime="20220131 12:55:14.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:14.107" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:17.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:17.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:55:14.105" endtime="20220131 12:55:17.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:17.958" level="INFO"/>
<status status="PASS" starttime="20220131 12:55:17.957" endtime="20220131 12:55:17.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:17.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:17.958" endtime="20220131 12:55:17.959"/>
</kw>
<status status="PASS" starttime="20220131 12:55:14.104" endtime="20220131 12:55:17.959"/>
</kw>
<msg timestamp="20220131 12:55:17.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:14.104" endtime="20220131 12:55:17.960"/>
</kw>
<status status="PASS" starttime="20220131 12:55:14.103" endtime="20220131 12:55:17.960"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 12:54:53.879" endtime="20220131 12:55:17.960"/>
</test>
<test id="s1-s1-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:55:17.966" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 12:55:17.965" endtime="20220131 12:55:17.966"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:55:17.966" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 12:55:17.966" endtime="20220131 12:55:17.966"/>
</kw>
<status status="PASS" starttime="20220131 12:55:17.964" endtime="20220131 12:55:17.966"/>
</kw>
<msg timestamp="20220131 12:55:17.967" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 12:55:17.964" endtime="20220131 12:55:17.967"/>
</kw>
<status status="PASS" starttime="20220131 12:55:17.963" endtime="20220131 12:55:17.967"/>
</kw>
<msg timestamp="20220131 12:55:17.967" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 12:55:17.962" endtime="20220131 12:55:17.967"/>
</kw>
<msg timestamp="20220131 12:55:17.967" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 12:55:17.962" endtime="20220131 12:55:17.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:17.970" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:20.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:20.014" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:55:17.968" endtime="20220131 12:55:20.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:20.016" level="INFO"/>
<status status="PASS" starttime="20220131 12:55:20.015" endtime="20220131 12:55:20.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:20.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:20.016" endtime="20220131 12:55:20.016"/>
</kw>
<status status="PASS" starttime="20220131 12:55:17.968" endtime="20220131 12:55:20.017"/>
</kw>
<msg timestamp="20220131 12:55:20.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:17.968" endtime="20220131 12:55:20.017"/>
</kw>
<status status="PASS" starttime="20220131 12:55:17.967" endtime="20220131 12:55:20.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:55:20.021" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:55:22.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:55:22.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:55:20.019" endtime="20220131 12:55:22.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:55:22.189" level="INFO"/>
<status status="PASS" starttime="20220131 12:55:22.188" endtime="20220131 12:55:22.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:55:22.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:55:22.189" endtime="20220131 12:55:22.190"/>
</kw>
<status status="PASS" starttime="20220131 12:55:20.018" endtime="20220131 12:55:22.190"/>
</kw>
<msg timestamp="20220131 12:55:22.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:55:20.018" endtime="20220131 12:55:22.191"/>
</kw>
<status status="PASS" starttime="20220131 12:55:20.017" endtime="20220131 12:55:22.191"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 12:55:17.961" endtime="20220131 12:55:22.191"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220131 12:54:53.823" endtime="20220131 12:55:22.193"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="173100"/>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite id="s1-s2-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:59:50.228" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 12:59:50.228" endtime="20220131 12:59:50.228"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:59:50.229" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 12:59:50.228" endtime="20220131 12:59:50.229"/>
</kw>
<status status="PASS" starttime="20220131 12:59:50.227" endtime="20220131 12:59:50.229"/>
</kw>
<msg timestamp="20220131 12:59:50.229" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 12:59:50.227" endtime="20220131 12:59:50.229"/>
</kw>
<status status="PASS" starttime="20220131 12:59:50.225" endtime="20220131 12:59:50.229"/>
</kw>
<msg timestamp="20220131 12:59:50.229" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 12:59:50.225" endtime="20220131 12:59:50.229"/>
</kw>
<msg timestamp="20220131 12:59:50.229" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 12:59:50.224" endtime="20220131 12:59:50.229"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 12:59:50.230" level="INFO">${random} = 46310</msg>
<status status="PASS" starttime="20220131 12:59:50.230" endtime="20220131 12:59:50.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:50.235" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-46310 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:53.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:53.960" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:59:50.231" endtime="20220131 12:59:53.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:53.961" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:59:51 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 12:59:52 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-01-31 12:59:52 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-01-31 12:59:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 12:59:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 12:59:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220131 12:59:53.960" endtime="20220131 12:59:53.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:53.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:53.961" endtime="20220131 12:59:53.962"/>
</kw>
<status status="PASS" starttime="20220131 12:59:50.231" endtime="20220131 12:59:53.962"/>
</kw>
<msg timestamp="20220131 12:59:53.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:50.230" endtime="20220131 12:59:53.962"/>
</kw>
<msg timestamp="20220131 12:59:53.962" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:59:50.230" endtime="20220131 12:59:53.962"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:53.965" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:55.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:55.529" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:59:53.963" endtime="20220131 12:59:55.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:55.530" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:59:54 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 12:59 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2022-01-31 12:59 o3fs://bucket1.volume1.om/ozone-46310
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 12:59 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 12:59:55.529" endtime="20220131 12:59:55.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:55.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:55.530" endtime="20220131 12:59:55.530"/>
</kw>
<status status="PASS" starttime="20220131 12:59:53.963" endtime="20220131 12:59:55.531"/>
</kw>
<msg timestamp="20220131 12:59:55.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:53.963" endtime="20220131 12:59:55.531"/>
</kw>
<msg timestamp="20220131 12:59:55.531" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:59:53.962" endtime="20220131 12:59:55.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:59:55.531" endtime="20220131 12:59:55.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:55.535" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-46310 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:58.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:58.406" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:59:55.533" endtime="20220131 12:59:58.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:58.407" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 12:59:56 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 12:59:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-01-31 12:59:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-01-31 12:59:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 12:59:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220131 12:59:58.407" endtime="20220131 12:59:58.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:58.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:58.408" endtime="20220131 12:59:58.408"/>
</kw>
<status status="PASS" starttime="20220131 12:59:55.533" endtime="20220131 12:59:58.409"/>
</kw>
<msg timestamp="20220131 12:59:58.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:55.532" endtime="20220131 12:59:58.409"/>
</kw>
<msg timestamp="20220131 12:59:58.410" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 12:59:55.532" endtime="20220131 12:59:58.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:59:58.410" endtime="20220131 12:59:58.411"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220131 12:59:50.223" endtime="20220131 12:59:58.411"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220131 12:59:50.178" endtime="20220131 12:59:58.412"/>
</suite>
<suite id="s1-s2-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:00:02.280" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:00:02.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:00:02.284" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:00:02.277" endtime="20220131 13:00:02.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:00:02.285" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:00:02.285" endtime="20220131 13:00:02.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:00:02.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:00:02.286" endtime="20220131 13:00:02.286"/>
</kw>
<status status="PASS" starttime="20220131 13:00:02.276" endtime="20220131 13:00:02.286"/>
</kw>
<msg timestamp="20220131 13:00:02.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:00:02.276" endtime="20220131 13:00:02.286"/>
</kw>
<msg timestamp="20220131 13:00:02.287" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:00:02.276" endtime="20220131 13:00:02.287"/>
</kw>
<msg timestamp="20220131 13:00:02.287" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:00:02.275" endtime="20220131 13:00:02.287"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:00:02.291" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:00:02.290" endtime="20220131 13:00:02.291"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:00:02.291" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:00:02.291" endtime="20220131 13:00:02.291"/>
</kw>
<status status="PASS" starttime="20220131 13:00:02.290" endtime="20220131 13:00:02.291"/>
</kw>
<msg timestamp="20220131 13:00:02.292" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:00:02.289" endtime="20220131 13:00:02.292"/>
</kw>
<status status="PASS" starttime="20220131 13:00:02.289" endtime="20220131 13:00:02.292"/>
</kw>
<msg timestamp="20220131 13:00:02.292" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:00:02.288" endtime="20220131 13:00:02.292"/>
</kw>
<msg timestamp="20220131 13:00:02.292" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:00:02.287" endtime="20220131 13:00:02.292"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:00:02.307" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:00:37.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:00:37.415" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:00:02.298" endtime="20220131 13:00:37.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:00:37.416" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-01-31 13:00:03 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:00:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-01-31 13:00:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-01-31 13:00:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:00:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:00:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-01-31 13:00:05 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.3:8032
2022-01-31 13:00:05 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:00:05 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:00:05 INFO  FileInputFormat:292 - Total input files to process : 3
2022-01-31 13:00:05 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:00:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643633926244_0001
2022-01-31 13:00:05 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:00:06 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:00:06 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:00:06 INFO  Configuration:2752 - resource-types.xml not found
2022-01-31 13:00:06 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-01-31 13:00:06 INFO  YarnClientImpl:324 - Submitted application application_1643633926244_0001
2022-01-31 13:00:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1643633926244_0001/
2022-01-31 13:00:06 INFO  Job:1619 - Running job: job_1643633926244_0001
2022-01-31 13:00:15 INFO  Job:1640 - Job job_1643633926244_0001 running in uber mode : false
2022-01-31 13:00:15 INFO  Job:1647 -  map 0% reduce 0%
2022-01-31 13:00:21 INFO  Job:1647 -  map 33% reduce 0%
2022-01-31 13:00:26 INFO  Job:1647 -  map 67% reduce 0%
2022-01-31 13:00:31 INFO  Job:1647 -  map 100% reduce 0%
2022-01-31 13:00:35 INFO  Job:1647 -  map 100% reduce 100%
2022-01-31 13:00:36 INFO  Job:1658 - Job job_1643633926244_0001 completed successfully
2022-01-31 13:00:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=867649
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36940
		Total time spent by all reduces in occupied slots (ms)=13712
		Total time spent by all map tasks (ms)=9235
		Total time spent by all reduce tasks (ms)=3428
		Total vcore-milliseconds taken by all map tasks=9235
		Total vcore-milliseconds taken by all reduce tasks=3428
		Total megabyte-milliseconds taken by all map tasks=37826560
		Total megabyte-milliseconds taken by all reduce tasks=14041088
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=542
		CPU time spent (ms)=6010
		Physical memory (bytes) snapshot=1529364480
		Virtual memory (bytes) snapshot=15826178048
		Total committed heap usage (bytes)=1263009792
		Peak Map Physical memory (bytes)=413724672
		Peak Map Virtual memory (bytes)=3956604928
		Peak Reduce Physical memory (bytes)=359817216
		Peak Reduce Virtual memory (bytes)=3969327104
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.752 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220131 13:00:37.415" endtime="20220131 13:00:37.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:00:37.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:00:37.416" endtime="20220131 13:00:37.417"/>
</kw>
<status status="PASS" starttime="20220131 13:00:02.298" endtime="20220131 13:00:37.417"/>
</kw>
<msg timestamp="20220131 13:00:37.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:00:02.297" endtime="20220131 13:00:37.417"/>
</kw>
<msg timestamp="20220131 13:00:37.418" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:00:02.292" endtime="20220131 13:00:37.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:00:37.418" endtime="20220131 13:00:37.418"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:00:02.275" endtime="20220131 13:00:37.418"/>
</test>
<test id="s1-s2-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:00:37.427" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:00:37.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:00:37.432" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:00:37.422" endtime="20220131 13:00:37.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:00:37.433" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:00:37.433" endtime="20220131 13:00:37.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:00:37.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:00:37.434" endtime="20220131 13:00:37.434"/>
</kw>
<status status="PASS" starttime="20220131 13:00:37.422" endtime="20220131 13:00:37.435"/>
</kw>
<msg timestamp="20220131 13:00:37.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:00:37.421" endtime="20220131 13:00:37.435"/>
</kw>
<msg timestamp="20220131 13:00:37.435" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:00:37.421" endtime="20220131 13:00:37.435"/>
</kw>
<msg timestamp="20220131 13:00:37.435" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:00:37.421" endtime="20220131 13:00:37.435"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:00:37.436" level="INFO">${random} = TDhZSQbz</msg>
<status status="PASS" starttime="20220131 13:00:37.435" endtime="20220131 13:00:37.436"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:00:37.439" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:00:37.438" endtime="20220131 13:00:37.439"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:00:37.439" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:00:37.439" endtime="20220131 13:00:37.439"/>
</kw>
<status status="PASS" starttime="20220131 13:00:37.438" endtime="20220131 13:00:37.440"/>
</kw>
<msg timestamp="20220131 13:00:37.440" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:00:37.438" endtime="20220131 13:00:37.440"/>
</kw>
<status status="PASS" starttime="20220131 13:00:37.437" endtime="20220131 13:00:37.440"/>
</kw>
<msg timestamp="20220131 13:00:37.440" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:00:37.436" endtime="20220131 13:00:37.440"/>
</kw>
<msg timestamp="20220131 13:00:37.440" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:00:37.436" endtime="20220131 13:00:37.440"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:00:37.443" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:00:37.443" endtime="20220131 13:00:37.443"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:00:37.444" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:00:37.443" endtime="20220131 13:00:37.444"/>
</kw>
<status status="PASS" starttime="20220131 13:00:37.442" endtime="20220131 13:00:37.444"/>
</kw>
<msg timestamp="20220131 13:00:37.444" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:00:37.442" endtime="20220131 13:00:37.444"/>
</kw>
<status status="PASS" starttime="20220131 13:00:37.441" endtime="20220131 13:00:37.444"/>
</kw>
<msg timestamp="20220131 13:00:37.444" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220131 13:00:37.441" endtime="20220131 13:00:37.444"/>
</kw>
<msg timestamp="20220131 13:00:37.444" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220131 13:00:37.440" endtime="20220131 13:00:37.444"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:00:37.447" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:00:37.447" endtime="20220131 13:00:37.447"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:00:37.448" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:00:37.447" endtime="20220131 13:00:37.448"/>
</kw>
<status status="PASS" starttime="20220131 13:00:37.447" endtime="20220131 13:00:37.448"/>
</kw>
<msg timestamp="20220131 13:00:37.448" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:00:37.446" endtime="20220131 13:00:37.448"/>
</kw>
<status status="PASS" starttime="20220131 13:00:37.446" endtime="20220131 13:00:37.448"/>
</kw>
<msg timestamp="20220131 13:00:37.448" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-TDhZSQbz.txt</msg>
<status status="PASS" starttime="20220131 13:00:37.445" endtime="20220131 13:00:37.448"/>
</kw>
<msg timestamp="20220131 13:00:37.449" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-TDhZSQbz.txt</msg>
<status status="PASS" starttime="20220131 13:00:37.445" endtime="20220131 13:00:37.449"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:00:37.452" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-TDhZSQbz.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:01:10.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:01:10.227" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:00:37.450" endtime="20220131 13:01:10.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:01:10.228" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:00:38 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:00:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.3:8032
2022-01-31 13:00:39 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:00:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 13:00:39 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:00:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-01-31 13:00:39 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-01-31 13:00:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:00:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:00:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-01-31 13:00:40 INFO  FileInputFormat:292 - Total input files to process : 3
2022-01-31 13:00:40 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:00:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643633926244_0002
2022-01-31 13:00:41 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:00:41 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:00:41 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:00:41 INFO  Configuration:2752 - resource-types.xml not found
2022-01-31 13:00:41 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-01-31 13:00:41 INFO  YarnClientImpl:324 - Submitted application application_1643633926244_0002
2022-01-31 13:00:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1643633926244_0002/
2022-01-31 13:00:41 INFO  Job:1619 - Running job: job_1643633926244_0002
2022-01-31 13:00:49 INFO  Job:1640 - Job job_1643633926244_0002 running in uber mode : false
2022-01-31 13:00:49 INFO  Job:1647 -  map 0% reduce 0%
2022-01-31 13:00:55 INFO  Job:1647 -  map 33% reduce 0%
2022-01-31 13:01:00 INFO  Job:1647 -  map 67% reduce 0%
2022-01-31 13:01:05 INFO  Job:1647 -  map 100% reduce 0%
2022-01-31 13:01:09 INFO  Job:1647 -  map 100% reduce 100%
2022-01-31 13:01:09 INFO  Job:1658 - Job job_1643633926244_0002 completed successfully
2022-01-31 13:01:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=930399
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37032
		Total time spent by all reduces in occupied slots (ms)=12180
		Total time spent by all map tasks (ms)=9258
		Total time spent by all reduce tasks (ms)=3045
		Total vcore-milliseconds taken by all map tasks=9258
		Total vcore-milliseconds taken by all reduce tasks=3045
		Total megabyte-milliseconds taken by all map tasks=37920768
		Total megabyte-milliseconds taken by all reduce tasks=12472320
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=877
		CPU time spent (ms)=6780
		Physical memory (bytes) snapshot=1874182144
		Virtual memory (bytes) snapshot=15816318976
		Total committed heap usage (bytes)=1779433472
		Peak Map Physical memory (bytes)=573652992
		Peak Map Virtual memory (bytes)=3950514176
		Peak Reduce Physical memory (bytes)=335843328
		Peak Reduce Virtual memory (bytes)=3967598592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220131 13:01:10.227" endtime="20220131 13:01:10.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:01:10.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:01:10.228" endtime="20220131 13:01:10.229"/>
</kw>
<status status="PASS" starttime="20220131 13:00:37.450" endtime="20220131 13:01:10.229"/>
</kw>
<msg timestamp="20220131 13:01:10.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:00:37.449" endtime="20220131 13:01:10.229"/>
</kw>
<msg timestamp="20220131 13:01:10.230" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:00:37.449" endtime="20220131 13:01:10.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:01:10.230" endtime="20220131 13:01:10.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:01:10.230" endtime="20220131 13:01:10.231"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:00:37.420" endtime="20220131 13:01:10.231"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220131 13:00:02.234" endtime="20220131 13:01:10.232"/>
</suite>
<suite id="s1-s2-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:01:14.128" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:01:14.128" endtime="20220131 13:01:14.128"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:01:14.128" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:01:14.128" endtime="20220131 13:01:14.128"/>
</kw>
<status status="PASS" starttime="20220131 13:01:14.127" endtime="20220131 13:01:14.129"/>
</kw>
<msg timestamp="20220131 13:01:14.129" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:01:14.127" endtime="20220131 13:01:14.129"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 13:01:14.129" endtime="20220131 13:01:14.130"/>
</kw>
<msg timestamp="20220131 13:01:14.130" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 13:01:14.129" endtime="20220131 13:01:14.130"/>
</kw>
<status status="PASS" starttime="20220131 13:01:14.126" endtime="20220131 13:01:14.130"/>
</kw>
<msg timestamp="20220131 13:01:14.130" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:01:14.126" endtime="20220131 13:01:14.130"/>
</kw>
<msg timestamp="20220131 13:01:14.130" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:01:14.125" endtime="20220131 13:01:14.130"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:01:14.131" level="INFO">${random} = 50234</msg>
<status status="PASS" starttime="20220131 13:01:14.130" endtime="20220131 13:01:14.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:01:14.136" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-50234 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:01:17.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:01:17.230" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:01:14.132" endtime="20220131 13:01:17.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:01:17.231" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:01:14 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:01:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-01-31 13:01:15 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-01-31 13:01:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:01:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:01:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220131 13:01:17.230" endtime="20220131 13:01:17.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:01:17.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:01:17.231" endtime="20220131 13:01:17.232"/>
</kw>
<status status="PASS" starttime="20220131 13:01:14.131" endtime="20220131 13:01:17.232"/>
</kw>
<msg timestamp="20220131 13:01:17.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:01:14.131" endtime="20220131 13:01:17.232"/>
</kw>
<msg timestamp="20220131 13:01:17.232" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:01:14.131" endtime="20220131 13:01:17.232"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:01:17.236" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:01:18.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:01:18.743" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:01:17.234" endtime="20220131 13:01:18.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:01:18.744" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:01:18 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 12:59 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2022-01-31 12:59 ofs://om/volume1/bucket1/ozone-46310
-rw-rw-rw-   3 hadoop hadoop      21867 2022-01-31 13:01 ofs://om/volume1/bucket1/ozone-50234
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 12:59 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:00 ofs://om/volume1/bucket1/wordcount-TDhZSQbz.txt</msg>
<status status="PASS" starttime="20220131 13:01:18.743" endtime="20220131 13:01:18.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:01:18.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:01:18.744" endtime="20220131 13:01:18.744"/>
</kw>
<status status="PASS" starttime="20220131 13:01:17.233" endtime="20220131 13:01:18.745"/>
</kw>
<msg timestamp="20220131 13:01:18.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:01:17.233" endtime="20220131 13:01:18.745"/>
</kw>
<msg timestamp="20220131 13:01:18.745" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:01:17.233" endtime="20220131 13:01:18.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:01:18.745" endtime="20220131 13:01:18.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:01:18.748" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-50234 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:01:21.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:01:21.540" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:01:18.747" endtime="20220131 13:01:21.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:01:21.541" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:01:19 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:01:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-01-31 13:01:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-01-31 13:01:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:01:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220131 13:01:21.540" endtime="20220131 13:01:21.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:01:21.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:01:21.542" endtime="20220131 13:01:21.542"/>
</kw>
<status status="PASS" starttime="20220131 13:01:18.746" endtime="20220131 13:01:21.543"/>
</kw>
<msg timestamp="20220131 13:01:21.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:01:18.746" endtime="20220131 13:01:21.543"/>
</kw>
<msg timestamp="20220131 13:01:21.544" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:01:18.746" endtime="20220131 13:01:21.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:01:21.544" endtime="20220131 13:01:21.545"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220131 13:01:14.124" endtime="20220131 13:01:21.545"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220131 13:01:14.078" endtime="20220131 13:01:21.546"/>
</suite>
<suite id="s1-s2-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:01:25.346" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:01:25.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:01:25.352" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:01:25.342" endtime="20220131 13:01:25.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:01:25.352" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:01:25.352" endtime="20220131 13:01:25.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:01:25.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:01:25.353" endtime="20220131 13:01:25.353"/>
</kw>
<status status="PASS" starttime="20220131 13:01:25.341" endtime="20220131 13:01:25.353"/>
</kw>
<msg timestamp="20220131 13:01:25.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:01:25.341" endtime="20220131 13:01:25.354"/>
</kw>
<msg timestamp="20220131 13:01:25.354" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:01:25.341" endtime="20220131 13:01:25.354"/>
</kw>
<msg timestamp="20220131 13:01:25.354" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:01:25.340" endtime="20220131 13:01:25.354"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:01:25.358" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:01:25.358" endtime="20220131 13:01:25.358"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:01:25.358" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:01:25.358" endtime="20220131 13:01:25.358"/>
</kw>
<status status="PASS" starttime="20220131 13:01:25.357" endtime="20220131 13:01:25.359"/>
</kw>
<msg timestamp="20220131 13:01:25.359" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:01:25.357" endtime="20220131 13:01:25.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 13:01:25.359" endtime="20220131 13:01:25.360"/>
</kw>
<msg timestamp="20220131 13:01:25.360" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 13:01:25.359" endtime="20220131 13:01:25.360"/>
</kw>
<status status="PASS" starttime="20220131 13:01:25.356" endtime="20220131 13:01:25.360"/>
</kw>
<msg timestamp="20220131 13:01:25.360" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:01:25.356" endtime="20220131 13:01:25.360"/>
</kw>
<msg timestamp="20220131 13:01:25.360" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:01:25.354" endtime="20220131 13:01:25.360"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:01:25.363" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:01:57.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:01:57.159" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:01:25.362" endtime="20220131 13:01:57.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:01:57.160" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-01-31 13:01:26 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:01:27 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-01-31 13:01:27 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-01-31 13:01:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:01:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:01:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-01-31 13:01:28 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.3:8032
2022-01-31 13:01:28 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:01:28 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:01:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 13:01:28 INFO  FileInputFormat:292 - Total input files to process : 3
2022-01-31 13:01:28 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:01:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643633926244_0003
2022-01-31 13:01:28 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:01:29 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:01:29 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:01:29 INFO  Configuration:2752 - resource-types.xml not found
2022-01-31 13:01:29 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-01-31 13:01:29 INFO  YarnClientImpl:324 - Submitted application application_1643633926244_0003
2022-01-31 13:01:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1643633926244_0003/
2022-01-31 13:01:29 INFO  Job:1619 - Running job: job_1643633926244_0003
2022-01-31 13:01:36 INFO  Job:1640 - Job job_1643633926244_0003 running in uber mode : false
2022-01-31 13:01:36 INFO  Job:1647 -  map 0% reduce 0%
2022-01-31 13:01:42 INFO  Job:1647 -  map 33% reduce 0%
2022-01-31 13:01:47 INFO  Job:1647 -  map 67% reduce 0%
2022-01-31 13:01:52 INFO  Job:1647 -  map 100% reduce 0%
2022-01-31 13:01:56 INFO  Job:1647 -  map 100% reduce 100%
2022-01-31 13:01:56 INFO  Job:1658 - Job job_1643633926244_0003 completed successfully
2022-01-31 13:01:56 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=867437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35484
		Total time spent by all reduces in occupied slots (ms)=12612
		Total time spent by all map tasks (ms)=8871
		Total time spent by all reduce tasks (ms)=3153
		Total vcore-milliseconds taken by all map tasks=8871
		Total vcore-milliseconds taken by all reduce tasks=3153
		Total megabyte-milliseconds taken by all map tasks=36335616
		Total megabyte-milliseconds taken by all reduce tasks=12914688
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=877
		CPU time spent (ms)=7060
		Physical memory (bytes) snapshot=1836105728
		Virtual memory (bytes) snapshot=15820189696
		Total committed heap usage (bytes)=1806696448
		Peak Map Physical memory (bytes)=572645376
		Peak Map Virtual memory (bytes)=3952197632
		Peak Reduce Physical memory (bytes)=341557248
		Peak Reduce Virtual memory (bytes)=3970899968
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.374 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220131 13:01:57.159" endtime="20220131 13:01:57.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:01:57.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:01:57.160" endtime="20220131 13:01:57.161"/>
</kw>
<status status="PASS" starttime="20220131 13:01:25.361" endtime="20220131 13:01:57.161"/>
</kw>
<msg timestamp="20220131 13:01:57.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:01:25.361" endtime="20220131 13:01:57.161"/>
</kw>
<msg timestamp="20220131 13:01:57.162" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:01:25.360" endtime="20220131 13:01:57.162"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:01:57.162" endtime="20220131 13:01:57.162"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:01:25.340" endtime="20220131 13:01:57.162"/>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:01:57.167" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:01:57.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:01:57.172" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:01:57.165" endtime="20220131 13:01:57.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:01:57.173" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:01:57.173" endtime="20220131 13:01:57.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:01:57.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:01:57.173" endtime="20220131 13:01:57.174"/>
</kw>
<status status="PASS" starttime="20220131 13:01:57.165" endtime="20220131 13:01:57.174"/>
</kw>
<msg timestamp="20220131 13:01:57.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:01:57.165" endtime="20220131 13:01:57.174"/>
</kw>
<msg timestamp="20220131 13:01:57.174" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:01:57.164" endtime="20220131 13:01:57.174"/>
</kw>
<msg timestamp="20220131 13:01:57.174" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220131 13:01:57.164" endtime="20220131 13:01:57.174"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:01:57.175" level="INFO">${random} = Yf5KHara</msg>
<status status="PASS" starttime="20220131 13:01:57.175" endtime="20220131 13:01:57.175"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:01:57.178" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:01:57.177" endtime="20220131 13:01:57.178"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:01:57.178" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:01:57.178" endtime="20220131 13:01:57.178"/>
</kw>
<status status="PASS" starttime="20220131 13:01:57.177" endtime="20220131 13:01:57.178"/>
</kw>
<msg timestamp="20220131 13:01:57.178" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:01:57.177" endtime="20220131 13:01:57.178"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 13:01:57.179" endtime="20220131 13:01:57.179"/>
</kw>
<msg timestamp="20220131 13:01:57.179" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 13:01:57.179" endtime="20220131 13:01:57.179"/>
</kw>
<status status="PASS" starttime="20220131 13:01:57.176" endtime="20220131 13:01:57.180"/>
</kw>
<msg timestamp="20220131 13:01:57.180" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:01:57.176" endtime="20220131 13:01:57.180"/>
</kw>
<msg timestamp="20220131 13:01:57.180" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:01:57.175" endtime="20220131 13:01:57.180"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:01:57.183" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:01:57.182" endtime="20220131 13:01:57.183"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:01:57.183" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:01:57.183" endtime="20220131 13:01:57.183"/>
</kw>
<status status="PASS" starttime="20220131 13:01:57.182" endtime="20220131 13:01:57.183"/>
</kw>
<msg timestamp="20220131 13:01:57.183" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:01:57.182" endtime="20220131 13:01:57.183"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:01:57.185" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220131 13:01:57.184" endtime="20220131 13:01:57.185"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:01:57.185" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220131 13:01:57.185" endtime="20220131 13:01:57.185"/>
</kw>
<status status="PASS" starttime="20220131 13:01:57.184" endtime="20220131 13:01:57.185"/>
</kw>
<msg timestamp="20220131 13:01:57.185" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220131 13:01:57.184" endtime="20220131 13:01:57.185"/>
</kw>
<status status="PASS" starttime="20220131 13:01:57.181" endtime="20220131 13:01:57.186"/>
</kw>
<msg timestamp="20220131 13:01:57.186" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220131 13:01:57.181" endtime="20220131 13:01:57.186"/>
</kw>
<msg timestamp="20220131 13:01:57.186" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220131 13:01:57.180" endtime="20220131 13:01:57.186"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:01:57.189" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:01:57.188" endtime="20220131 13:01:57.189"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:01:57.189" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:01:57.189" endtime="20220131 13:01:57.189"/>
</kw>
<status status="PASS" starttime="20220131 13:01:57.188" endtime="20220131 13:01:57.189"/>
</kw>
<msg timestamp="20220131 13:01:57.189" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:01:57.187" endtime="20220131 13:01:57.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:01:57.191" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220131 13:01:57.190" endtime="20220131 13:01:57.191"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:01:57.191" level="INFO">${result} = /wordcount-Yf5KHara.txt</msg>
<status status="PASS" starttime="20220131 13:01:57.191" endtime="20220131 13:01:57.191"/>
</kw>
<status status="PASS" starttime="20220131 13:01:57.190" endtime="20220131 13:01:57.191"/>
</kw>
<msg timestamp="20220131 13:01:57.191" level="INFO">${path_with_leading} = /wordcount-Yf5KHara.txt</msg>
<status status="PASS" starttime="20220131 13:01:57.189" endtime="20220131 13:01:57.191"/>
</kw>
<status status="PASS" starttime="20220131 13:01:57.187" endtime="20220131 13:01:57.191"/>
</kw>
<msg timestamp="20220131 13:01:57.192" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-Yf5KHara.txt</msg>
<status status="PASS" starttime="20220131 13:01:57.186" endtime="20220131 13:01:57.192"/>
</kw>
<msg timestamp="20220131 13:01:57.192" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-Yf5KHara.txt</msg>
<status status="PASS" starttime="20220131 13:01:57.186" endtime="20220131 13:01:57.192"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:01:57.194" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-Yf5KHara.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:02:30.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:02:30.586" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:01:57.193" endtime="20220131 13:02:30.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:02:30.588" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:01:58 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:01:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.3:8032
2022-01-31 13:01:58 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:01:58 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:01:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 13:01:59 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-01-31 13:01:59 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-01-31 13:01:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:01:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:01:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-01-31 13:02:00 INFO  FileInputFormat:292 - Total input files to process : 3
2022-01-31 13:02:00 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:02:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643633926244_0004
2022-01-31 13:02:00 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:02:00 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:02:00 INFO  Configuration:3318 - Removed undeclared tags:
2022-01-31 13:02:00 INFO  Configuration:2752 - resource-types.xml not found
2022-01-31 13:02:00 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-01-31 13:02:00 INFO  YarnClientImpl:324 - Submitted application application_1643633926244_0004
2022-01-31 13:02:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1643633926244_0004/
2022-01-31 13:02:00 INFO  Job:1619 - Running job: job_1643633926244_0004
2022-01-31 13:02:09 INFO  Job:1640 - Job job_1643633926244_0004 running in uber mode : false
2022-01-31 13:02:09 INFO  Job:1647 -  map 0% reduce 0%
2022-01-31 13:02:16 INFO  Job:1647 -  map 33% reduce 0%
2022-01-31 13:02:20 INFO  Job:1647 -  map 67% reduce 0%
2022-01-31 13:02:25 INFO  Job:1647 -  map 100% reduce 0%
2022-01-31 13:02:29 INFO  Job:1647 -  map 100% reduce 100%
2022-01-31 13:02:30 INFO  Job:1658 - Job job_1643633926244_0004 completed successfully
2022-01-31 13:02:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=930315
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36456
		Total time spent by all reduces in occupied slots (ms)=12668
		Total time spent by all map tasks (ms)=9114
		Total time spent by all reduce tasks (ms)=3167
		Total vcore-milliseconds taken by all map tasks=9114
		Total vcore-milliseconds taken by all reduce tasks=3167
		Total megabyte-milliseconds taken by all map tasks=37330944
		Total megabyte-milliseconds taken by all reduce tasks=12972032
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=877
		CPU time spent (ms)=7510
		Physical memory (bytes) snapshot=1902403584
		Virtual memory (bytes) snapshot=15820677120
		Total committed heap usage (bytes)=1822949376
		Peak Map Physical memory (bytes)=588279808
		Peak Map Virtual memory (bytes)=3952615424
		Peak Reduce Physical memory (bytes)=344428544
		Peak Reduce Virtual memory (bytes)=3969454080
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220131 13:02:30.587" endtime="20220131 13:02:30.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:02:30.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:02:30.588" endtime="20220131 13:02:30.588"/>
</kw>
<status status="PASS" starttime="20220131 13:01:57.193" endtime="20220131 13:02:30.588"/>
</kw>
<msg timestamp="20220131 13:02:30.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:01:57.192" endtime="20220131 13:02:30.589"/>
</kw>
<msg timestamp="20220131 13:02:30.589" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:01:57.192" endtime="20220131 13:02:30.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:02:30.589" endtime="20220131 13:02:30.589"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:02:30.590" endtime="20220131 13:02:30.590"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:01:57.163" endtime="20220131 13:02:30.590"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220131 13:01:25.295" endtime="20220131 13:02:30.591"/>
</suite>
<suite id="s1-s2-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:19.623" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:22.180" level="INFO">${rc} = 255</msg>
<msg timestamp="20220131 12:59:22.180" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 12:59:19.620" endtime="20220131 12:59:22.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:22.182" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 12:59:22.181" endtime="20220131 12:59:22.182"/>
</kw>
<msg timestamp="20220131 12:59:22.182" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 12:59:19.619" endtime="20220131 12:59:22.182"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:22.186" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:24.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:24.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:59:22.184" endtime="20220131 12:59:24.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:24.437" level="INFO"/>
<status status="PASS" starttime="20220131 12:59:24.437" endtime="20220131 12:59:24.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:24.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:24.437" endtime="20220131 12:59:24.438"/>
</kw>
<status status="PASS" starttime="20220131 12:59:22.184" endtime="20220131 12:59:24.438"/>
</kw>
<msg timestamp="20220131 12:59:24.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:22.184" endtime="20220131 12:59:24.440"/>
</kw>
<msg timestamp="20220131 12:59:24.440" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220131 12:59:22.183" endtime="20220131 12:59:24.440"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:59:24.440" endtime="20220131 12:59:24.440"/>
</kw>
<status status="PASS" starttime="20220131 12:59:22.183" endtime="20220131 12:59:24.440"/>
</kw>
<status status="PASS" starttime="20220131 12:59:22.182" endtime="20220131 12:59:24.441"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:24.445" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:26.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:26.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:59:24.443" endtime="20220131 12:59:26.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:26.724" level="INFO"/>
<status status="PASS" starttime="20220131 12:59:26.723" endtime="20220131 12:59:26.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:26.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:26.724" endtime="20220131 12:59:26.725"/>
</kw>
<status status="PASS" starttime="20220131 12:59:24.442" endtime="20220131 12:59:26.725"/>
</kw>
<msg timestamp="20220131 12:59:26.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:24.442" endtime="20220131 12:59:26.726"/>
</kw>
<status status="PASS" starttime="20220131 12:59:24.442" endtime="20220131 12:59:26.726"/>
</kw>
<status status="PASS" starttime="20220131 12:59:24.441" endtime="20220131 12:59:26.726"/>
</kw>
<status status="PASS" starttime="20220131 12:59:24.441" endtime="20220131 12:59:26.726"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220131 12:59:26.726" endtime="20220131 12:59:26.727"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:26.730" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:28.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:28.993" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T12:59...</msg>
<status status="PASS" starttime="20220131 12:59:26.728" endtime="20220131 12:59:28.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:28.995" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T12:59:26.694Z",
  "modificationTime" : "2022-01-31T12:59:26.694Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220131 12:59:28.994" endtime="20220131 12:59:28.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:28.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:28.995" endtime="20220131 12:59:28.995"/>
</kw>
<status status="PASS" starttime="20220131 12:59:26.728" endtime="20220131 12:59:28.996"/>
</kw>
<msg timestamp="20220131 12:59:28.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:26.727" endtime="20220131 12:59:28.996"/>
</kw>
<msg timestamp="20220131 12:59:28.996" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T12:59...</msg>
<status status="PASS" starttime="20220131 12:59:26.727" endtime="20220131 12:59:28.996"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 12:59:28.996" endtime="20220131 12:59:28.997"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:59:29.001" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 12:59:29.001" endtime="20220131 12:59:29.001"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:59:29.002" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 12:59:29.001" endtime="20220131 12:59:29.002"/>
</kw>
<status status="PASS" starttime="20220131 12:59:29.000" endtime="20220131 12:59:29.002"/>
</kw>
<msg timestamp="20220131 12:59:29.002" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 12:59:28.999" endtime="20220131 12:59:29.002"/>
</kw>
<status status="PASS" starttime="20220131 12:59:28.998" endtime="20220131 12:59:29.002"/>
</kw>
<msg timestamp="20220131 12:59:29.002" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220131 12:59:28.998" endtime="20220131 12:59:29.003"/>
</kw>
<msg timestamp="20220131 12:59:29.003" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220131 12:59:28.997" endtime="20220131 12:59:29.003"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:29.006" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:31.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:31.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:59:29.004" endtime="20220131 12:59:31.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:31.106" level="INFO"/>
<status status="PASS" starttime="20220131 12:59:31.106" endtime="20220131 12:59:31.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:31.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:31.107" endtime="20220131 12:59:31.107"/>
</kw>
<status status="PASS" starttime="20220131 12:59:29.004" endtime="20220131 12:59:31.107"/>
</kw>
<msg timestamp="20220131 12:59:31.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:29.003" endtime="20220131 12:59:31.108"/>
</kw>
<status status="PASS" starttime="20220131 12:59:29.003" endtime="20220131 12:59:31.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:31.111" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:35.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:35.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:59:31.109" endtime="20220131 12:59:35.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:35.501" level="INFO"/>
<status status="PASS" starttime="20220131 12:59:35.500" endtime="20220131 12:59:35.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:35.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:35.501" endtime="20220131 12:59:35.501"/>
</kw>
<status status="PASS" starttime="20220131 12:59:31.109" endtime="20220131 12:59:35.502"/>
</kw>
<msg timestamp="20220131 12:59:35.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:31.109" endtime="20220131 12:59:35.502"/>
</kw>
<status status="PASS" starttime="20220131 12:59:31.108" endtime="20220131 12:59:35.502"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:35.505" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:39.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:39.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:59:35.504" endtime="20220131 12:59:39.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:39.234" level="INFO"/>
<status status="PASS" starttime="20220131 12:59:39.233" endtime="20220131 12:59:39.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:39.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:39.234" endtime="20220131 12:59:39.234"/>
</kw>
<status status="PASS" starttime="20220131 12:59:35.503" endtime="20220131 12:59:39.235"/>
</kw>
<msg timestamp="20220131 12:59:39.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:35.503" endtime="20220131 12:59:39.235"/>
</kw>
<status status="PASS" starttime="20220131 12:59:35.502" endtime="20220131 12:59:39.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:39.238" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:42.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:42.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:59:39.236" endtime="20220131 12:59:42.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:42.692" level="INFO"/>
<status status="PASS" starttime="20220131 12:59:42.692" endtime="20220131 12:59:42.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:42.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:42.692" endtime="20220131 12:59:42.693"/>
</kw>
<status status="PASS" starttime="20220131 12:59:39.236" endtime="20220131 12:59:42.693"/>
</kw>
<msg timestamp="20220131 12:59:42.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:39.236" endtime="20220131 12:59:42.694"/>
</kw>
<status status="PASS" starttime="20220131 12:59:39.235" endtime="20220131 12:59:42.694"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 12:59:19.618" endtime="20220131 12:59:42.694"/>
</test>
<test id="s1-s2-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 12:59:42.699" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 12:59:42.698" endtime="20220131 12:59:42.699"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 12:59:42.699" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 12:59:42.699" endtime="20220131 12:59:42.699"/>
</kw>
<status status="PASS" starttime="20220131 12:59:42.698" endtime="20220131 12:59:42.699"/>
</kw>
<msg timestamp="20220131 12:59:42.699" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 12:59:42.697" endtime="20220131 12:59:42.700"/>
</kw>
<status status="PASS" starttime="20220131 12:59:42.696" endtime="20220131 12:59:42.700"/>
</kw>
<msg timestamp="20220131 12:59:42.700" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 12:59:42.696" endtime="20220131 12:59:42.700"/>
</kw>
<msg timestamp="20220131 12:59:42.700" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 12:59:42.695" endtime="20220131 12:59:42.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:42.703" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:44.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:44.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:59:42.701" endtime="20220131 12:59:44.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:44.586" level="INFO"/>
<status status="PASS" starttime="20220131 12:59:44.585" endtime="20220131 12:59:44.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:44.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:44.586" endtime="20220131 12:59:44.586"/>
</kw>
<status status="PASS" starttime="20220131 12:59:42.701" endtime="20220131 12:59:44.586"/>
</kw>
<msg timestamp="20220131 12:59:44.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:42.701" endtime="20220131 12:59:44.587"/>
</kw>
<status status="PASS" starttime="20220131 12:59:42.700" endtime="20220131 12:59:44.587"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 12:59:44.590" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 12:59:46.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 12:59:46.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 12:59:44.588" endtime="20220131 12:59:46.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 12:59:46.411" level="INFO"/>
<status status="PASS" starttime="20220131 12:59:46.411" endtime="20220131 12:59:46.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 12:59:46.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 12:59:46.412" endtime="20220131 12:59:46.412"/>
</kw>
<status status="PASS" starttime="20220131 12:59:44.588" endtime="20220131 12:59:46.412"/>
</kw>
<msg timestamp="20220131 12:59:46.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 12:59:44.588" endtime="20220131 12:59:46.413"/>
</kw>
<status status="PASS" starttime="20220131 12:59:44.587" endtime="20220131 12:59:46.413"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 12:59:42.695" endtime="20220131 12:59:46.413"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220131 12:59:19.568" endtime="20220131 12:59:46.414"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="175842"/>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite id="s1-s3-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:04:36.568" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:04:36.568" endtime="20220131 13:04:36.568"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:04:36.569" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:04:36.568" endtime="20220131 13:04:36.569"/>
</kw>
<status status="PASS" starttime="20220131 13:04:36.567" endtime="20220131 13:04:36.569"/>
</kw>
<msg timestamp="20220131 13:04:36.569" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:04:36.567" endtime="20220131 13:04:36.569"/>
</kw>
<status status="PASS" starttime="20220131 13:04:36.567" endtime="20220131 13:04:36.569"/>
</kw>
<msg timestamp="20220131 13:04:36.569" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:04:36.566" endtime="20220131 13:04:36.569"/>
</kw>
<msg timestamp="20220131 13:04:36.569" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:04:36.565" endtime="20220131 13:04:36.569"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:04:36.570" level="INFO">${random} = 75742</msg>
<status status="PASS" starttime="20220131 13:04:36.570" endtime="20220131 13:04:36.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:36.574" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-75742 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:39.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:39.744" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:04:36.571" endtime="20220131 13:04:39.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:39.745" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:04:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:04:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:04:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:04:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220131 13:04:39.744" endtime="20220131 13:04:39.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:39.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:39.745" endtime="20220131 13:04:39.745"/>
</kw>
<status status="PASS" starttime="20220131 13:04:36.571" endtime="20220131 13:04:39.746"/>
</kw>
<msg timestamp="20220131 13:04:39.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:36.570" endtime="20220131 13:04:39.746"/>
</kw>
<msg timestamp="20220131 13:04:39.746" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:04:36.570" endtime="20220131 13:04:39.746"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:39.749" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:41.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:41.273" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:04:39.747" endtime="20220131 13:04:41.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:41.274" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:04 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-01-31 13:04 o3fs://bucket1.volume1.om/ozone-75742
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:04 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 13:04:41.273" endtime="20220131 13:04:41.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:41.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:41.274" endtime="20220131 13:04:41.274"/>
</kw>
<status status="PASS" starttime="20220131 13:04:39.747" endtime="20220131 13:04:41.275"/>
</kw>
<msg timestamp="20220131 13:04:41.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:39.747" endtime="20220131 13:04:41.275"/>
</kw>
<msg timestamp="20220131 13:04:41.275" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:04:39.746" endtime="20220131 13:04:41.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:04:41.275" endtime="20220131 13:04:41.275"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:41.278" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-75742 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:44.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:44.052" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:04:41.277" endtime="20220131 13:04:44.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:44.053" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:04:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:04:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:04:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220131 13:04:44.052" endtime="20220131 13:04:44.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:44.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:44.054" endtime="20220131 13:04:44.054"/>
</kw>
<status status="PASS" starttime="20220131 13:04:41.276" endtime="20220131 13:04:44.054"/>
</kw>
<msg timestamp="20220131 13:04:44.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:41.276" endtime="20220131 13:04:44.055"/>
</kw>
<msg timestamp="20220131 13:04:44.056" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:04:41.276" endtime="20220131 13:04:44.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:04:44.056" endtime="20220131 13:04:44.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220131 13:04:36.565" endtime="20220131 13:04:44.056"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220131 13:04:36.525" endtime="20220131 13:04:44.057"/>
</suite>
<suite id="s1-s3-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:47.779" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:47.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:47.783" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:04:47.776" endtime="20220131 13:04:47.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:47.784" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:04:47.784" endtime="20220131 13:04:47.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:47.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:47.784" endtime="20220131 13:04:47.785"/>
</kw>
<status status="PASS" starttime="20220131 13:04:47.776" endtime="20220131 13:04:47.785"/>
</kw>
<msg timestamp="20220131 13:04:47.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:47.775" endtime="20220131 13:04:47.785"/>
</kw>
<msg timestamp="20220131 13:04:47.785" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:04:47.775" endtime="20220131 13:04:47.786"/>
</kw>
<msg timestamp="20220131 13:04:47.786" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:04:47.775" endtime="20220131 13:04:47.787"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:04:47.789" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:04:47.789" endtime="20220131 13:04:47.789"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:04:47.790" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:04:47.789" endtime="20220131 13:04:47.790"/>
</kw>
<status status="PASS" starttime="20220131 13:04:47.789" endtime="20220131 13:04:47.790"/>
</kw>
<msg timestamp="20220131 13:04:47.790" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:04:47.788" endtime="20220131 13:04:47.790"/>
</kw>
<status status="PASS" starttime="20220131 13:04:47.788" endtime="20220131 13:04:47.790"/>
</kw>
<msg timestamp="20220131 13:04:47.791" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:04:47.787" endtime="20220131 13:04:47.791"/>
</kw>
<msg timestamp="20220131 13:04:47.791" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:04:47.787" endtime="20220131 13:04:47.791"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:47.796" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:05:23.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:05:23.043" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:04:47.792" endtime="20220131 13:05:23.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:05:23.045" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-01-31 13:04:49 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:04:49 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:04:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:04:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-01-31 13:04:50 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2022-01-31 13:04:51 INFO  FileInputFormat:292 - Total input files to process : 3
2022-01-31 13:04:51 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:04:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643634193699_0001
2022-01-31 13:04:51 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:04:51 INFO  Configuration:2795 - resource-types.xml not found
2022-01-31 13:04:51 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-01-31 13:04:52 INFO  YarnClientImpl:329 - Submitted application application_1643634193699_0001
2022-01-31 13:04:52 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1643634193699_0001/
2022-01-31 13:04:52 INFO  Job:1614 - Running job: job_1643634193699_0001
2022-01-31 13:05:01 INFO  Job:1635 - Job job_1643634193699_0001 running in uber mode : false
2022-01-31 13:05:01 INFO  Job:1642 -  map 0% reduce 0%
2022-01-31 13:05:07 INFO  Job:1642 -  map 33% reduce 0%
2022-01-31 13:05:12 INFO  Job:1642 -  map 67% reduce 0%
2022-01-31 13:05:17 INFO  Job:1642 -  map 100% reduce 0%
2022-01-31 13:05:21 INFO  Job:1642 -  map 100% reduce 100%
2022-01-31 13:05:22 INFO  Job:1653 - Job job_1643634193699_0001 completed successfully
2022-01-31 13:05:22 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=943025
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36068
		Total time spent by all reduces in occupied slots (ms)=13476
		Total time spent by all map tasks (ms)=9017
		Total time spent by all reduce tasks (ms)=3369
		Total vcore-milliseconds taken by all map tasks=9017
		Total vcore-milliseconds taken by all reduce tasks=3369
		Total megabyte-milliseconds taken by all map tasks=36933632
		Total megabyte-milliseconds taken by all reduce tasks=13799424
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=682
		CPU time spent (ms)=6220
		Physical memory (bytes) snapshot=1601118208
		Virtual memory (bytes) snapshot=15809290240
		Total committed heap usage (bytes)=1455423488
		Peak Map Physical memory (bytes)=563802112
		Peak Map Virtual memory (bytes)=3951620096
		Peak Reduce Physical memory (bytes)=313192448
		Peak Reduce Virtual memory (bytes)=3958296576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.894 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220131 13:05:23.044" endtime="20220131 13:05:23.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:05:23.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:05:23.045" endtime="20220131 13:05:23.046"/>
</kw>
<status status="PASS" starttime="20220131 13:04:47.791" endtime="20220131 13:05:23.046"/>
</kw>
<msg timestamp="20220131 13:05:23.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:47.791" endtime="20220131 13:05:23.046"/>
</kw>
<msg timestamp="20220131 13:05:23.046" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:04:47.791" endtime="20220131 13:05:23.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:05:23.047" endtime="20220131 13:05:23.047"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:04:47.774" endtime="20220131 13:05:23.047"/>
</test>
<test id="s1-s3-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:05:23.052" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:05:23.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:05:23.057" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:05:23.050" endtime="20220131 13:05:23.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:05:23.058" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:05:23.057" endtime="20220131 13:05:23.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:05:23.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:05:23.058" endtime="20220131 13:05:23.059"/>
</kw>
<status status="PASS" starttime="20220131 13:05:23.050" endtime="20220131 13:05:23.059"/>
</kw>
<msg timestamp="20220131 13:05:23.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:05:23.050" endtime="20220131 13:05:23.059"/>
</kw>
<msg timestamp="20220131 13:05:23.059" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:05:23.049" endtime="20220131 13:05:23.059"/>
</kw>
<msg timestamp="20220131 13:05:23.059" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:05:23.049" endtime="20220131 13:05:23.059"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:05:23.060" level="INFO">${random} = RDFlwXVh</msg>
<status status="PASS" starttime="20220131 13:05:23.060" endtime="20220131 13:05:23.060"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:05:23.063" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:05:23.063" endtime="20220131 13:05:23.063"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:05:23.064" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:05:23.063" endtime="20220131 13:05:23.064"/>
</kw>
<status status="PASS" starttime="20220131 13:05:23.062" endtime="20220131 13:05:23.064"/>
</kw>
<msg timestamp="20220131 13:05:23.064" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:05:23.062" endtime="20220131 13:05:23.064"/>
</kw>
<status status="PASS" starttime="20220131 13:05:23.061" endtime="20220131 13:05:23.064"/>
</kw>
<msg timestamp="20220131 13:05:23.064" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:05:23.061" endtime="20220131 13:05:23.064"/>
</kw>
<msg timestamp="20220131 13:05:23.064" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:05:23.060" endtime="20220131 13:05:23.064"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:05:23.067" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:05:23.067" endtime="20220131 13:05:23.067"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:05:23.068" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:05:23.068" endtime="20220131 13:05:23.068"/>
</kw>
<status status="PASS" starttime="20220131 13:05:23.067" endtime="20220131 13:05:23.068"/>
</kw>
<msg timestamp="20220131 13:05:23.068" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:05:23.066" endtime="20220131 13:05:23.068"/>
</kw>
<status status="PASS" starttime="20220131 13:05:23.066" endtime="20220131 13:05:23.068"/>
</kw>
<msg timestamp="20220131 13:05:23.069" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220131 13:05:23.065" endtime="20220131 13:05:23.069"/>
</kw>
<msg timestamp="20220131 13:05:23.069" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220131 13:05:23.065" endtime="20220131 13:05:23.069"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:05:23.072" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:05:23.071" endtime="20220131 13:05:23.072"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:05:23.072" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:05:23.072" endtime="20220131 13:05:23.072"/>
</kw>
<status status="PASS" starttime="20220131 13:05:23.071" endtime="20220131 13:05:23.072"/>
</kw>
<msg timestamp="20220131 13:05:23.072" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:05:23.070" endtime="20220131 13:05:23.072"/>
</kw>
<status status="PASS" starttime="20220131 13:05:23.070" endtime="20220131 13:05:23.073"/>
</kw>
<msg timestamp="20220131 13:05:23.073" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-RDFlwXVh.txt</msg>
<status status="PASS" starttime="20220131 13:05:23.070" endtime="20220131 13:05:23.073"/>
</kw>
<msg timestamp="20220131 13:05:23.073" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-RDFlwXVh.txt</msg>
<status status="PASS" starttime="20220131 13:05:23.069" endtime="20220131 13:05:23.073"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:05:23.077" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-RDFlwXVh.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:05:56.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:05:56.772" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:05:23.074" endtime="20220131 13:05:56.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:05:56.773" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:05:24 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2022-01-31 13:05:24 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 13:05:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:05:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:05:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:05:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-01-31 13:05:26 INFO  FileInputFormat:292 - Total input files to process : 3
2022-01-31 13:05:26 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:05:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643634193699_0002
2022-01-31 13:05:26 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:05:26 INFO  Configuration:2795 - resource-types.xml not found
2022-01-31 13:05:26 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-01-31 13:05:26 INFO  YarnClientImpl:329 - Submitted application application_1643634193699_0002
2022-01-31 13:05:26 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1643634193699_0002/
2022-01-31 13:05:26 INFO  Job:1614 - Running job: job_1643634193699_0002
2022-01-31 13:05:34 INFO  Job:1635 - Job job_1643634193699_0002 running in uber mode : false
2022-01-31 13:05:34 INFO  Job:1642 -  map 0% reduce 0%
2022-01-31 13:05:40 INFO  Job:1642 -  map 33% reduce 0%
2022-01-31 13:05:45 INFO  Job:1642 -  map 67% reduce 0%
2022-01-31 13:05:50 INFO  Job:1642 -  map 100% reduce 0%
2022-01-31 13:05:55 INFO  Job:1642 -  map 100% reduce 100%
2022-01-31 13:05:56 INFO  Job:1653 - Job job_1643634193699_0002 completed successfully
2022-01-31 13:05:56 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1005799
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34228
		Total time spent by all reduces in occupied slots (ms)=16064
		Total time spent by all map tasks (ms)=8557
		Total time spent by all reduce tasks (ms)=4016
		Total vcore-milliseconds taken by all map tasks=8557
		Total vcore-milliseconds taken by all reduce tasks=4016
		Total megabyte-milliseconds taken by all map tasks=35049472
		Total megabyte-milliseconds taken by all reduce tasks=16449536
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=541
		CPU time spent (ms)=7030
		Physical memory (bytes) snapshot=1349029888
		Virtual memory (bytes) snapshot=15816101888
		Total committed heap usage (bytes)=1150287872
		Peak Map Physical memory (bytes)=348856320
		Peak Map Virtual memory (bytes)=3954892800
		Peak Reduce Physical memory (bytes)=335888384
		Peak Reduce Virtual memory (bytes)=3976462336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220131 13:05:56.772" endtime="20220131 13:05:56.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:05:56.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:05:56.773" endtime="20220131 13:05:56.774"/>
</kw>
<status status="PASS" starttime="20220131 13:05:23.074" endtime="20220131 13:05:56.774"/>
</kw>
<msg timestamp="20220131 13:05:56.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:05:23.074" endtime="20220131 13:05:56.774"/>
</kw>
<msg timestamp="20220131 13:05:56.775" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:05:23.073" endtime="20220131 13:05:56.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:05:56.775" endtime="20220131 13:05:56.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:05:56.775" endtime="20220131 13:05:56.776"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:05:23.048" endtime="20220131 13:05:56.776"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220131 13:04:47.735" endtime="20220131 13:05:56.777"/>
</suite>
<suite id="s1-s3-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:06:00.767" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:06:00.767" endtime="20220131 13:06:00.767"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:06:00.768" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:06:00.767" endtime="20220131 13:06:00.768"/>
</kw>
<status status="PASS" starttime="20220131 13:06:00.766" endtime="20220131 13:06:00.768"/>
</kw>
<msg timestamp="20220131 13:06:00.768" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:06:00.766" endtime="20220131 13:06:00.768"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 13:06:00.768" endtime="20220131 13:06:00.769"/>
</kw>
<msg timestamp="20220131 13:06:00.769" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 13:06:00.768" endtime="20220131 13:06:00.769"/>
</kw>
<status status="PASS" starttime="20220131 13:06:00.765" endtime="20220131 13:06:00.769"/>
</kw>
<msg timestamp="20220131 13:06:00.769" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:06:00.765" endtime="20220131 13:06:00.769"/>
</kw>
<msg timestamp="20220131 13:06:00.769" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:06:00.764" endtime="20220131 13:06:00.769"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:06:00.770" level="INFO">${random} = 71635</msg>
<status status="PASS" starttime="20220131 13:06:00.770" endtime="20220131 13:06:00.770"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:06:00.775" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-71635 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:06:03.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:06:03.921" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:06:00.771" endtime="20220131 13:06:03.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:06:03.923" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:06:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:06:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:06:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:06:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220131 13:06:03.922" endtime="20220131 13:06:03.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:06:03.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:06:03.923" endtime="20220131 13:06:03.923"/>
</kw>
<status status="PASS" starttime="20220131 13:06:00.771" endtime="20220131 13:06:03.924"/>
</kw>
<msg timestamp="20220131 13:06:03.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:06:00.770" endtime="20220131 13:06:03.924"/>
</kw>
<msg timestamp="20220131 13:06:03.924" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:06:00.770" endtime="20220131 13:06:03.924"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:06:03.928" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:06:05.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:06:05.533" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:06:03.926" endtime="20220131 13:06:05.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:06:05.534" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:04 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-01-31 13:06 ofs://om/volume1/bucket1/ozone-71635
-rw-rw-rw-   3 hadoop hadoop      21943 2022-01-31 13:04 ofs://om/volume1/bucket1/ozone-75742
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:04 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:05 ofs://om/volume1/bucket1/wordcount-RDFlwXVh.txt</msg>
<status status="PASS" starttime="20220131 13:06:05.534" endtime="20220131 13:06:05.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:06:05.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:06:05.535" endtime="20220131 13:06:05.535"/>
</kw>
<status status="PASS" starttime="20220131 13:06:03.925" endtime="20220131 13:06:05.535"/>
</kw>
<msg timestamp="20220131 13:06:05.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:06:03.925" endtime="20220131 13:06:05.535"/>
</kw>
<msg timestamp="20220131 13:06:05.536" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:06:03.924" endtime="20220131 13:06:05.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:06:05.536" endtime="20220131 13:06:05.536"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:06:05.540" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-71635 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:06:08.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:06:08.318" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:06:05.538" endtime="20220131 13:06:08.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:06:08.319" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:06:07 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:06:07 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:06:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220131 13:06:08.318" endtime="20220131 13:06:08.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:06:08.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:06:08.320" endtime="20220131 13:06:08.320"/>
</kw>
<status status="PASS" starttime="20220131 13:06:05.537" endtime="20220131 13:06:08.321"/>
</kw>
<msg timestamp="20220131 13:06:08.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:06:05.537" endtime="20220131 13:06:08.321"/>
</kw>
<msg timestamp="20220131 13:06:08.322" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:06:05.536" endtime="20220131 13:06:08.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:06:08.322" endtime="20220131 13:06:08.323"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220131 13:06:00.763" endtime="20220131 13:06:08.323"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220131 13:06:00.718" endtime="20220131 13:06:08.324"/>
</suite>
<suite id="s1-s3-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:06:12.137" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:06:12.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:06:12.142" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:06:12.134" endtime="20220131 13:06:12.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:06:12.142" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:06:12.142" endtime="20220131 13:06:12.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:06:12.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:06:12.143" endtime="20220131 13:06:12.143"/>
</kw>
<status status="PASS" starttime="20220131 13:06:12.134" endtime="20220131 13:06:12.143"/>
</kw>
<msg timestamp="20220131 13:06:12.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:06:12.134" endtime="20220131 13:06:12.143"/>
</kw>
<msg timestamp="20220131 13:06:12.144" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:06:12.133" endtime="20220131 13:06:12.144"/>
</kw>
<msg timestamp="20220131 13:06:12.145" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:06:12.133" endtime="20220131 13:06:12.145"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:06:12.148" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:06:12.147" endtime="20220131 13:06:12.148"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:06:12.148" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:06:12.148" endtime="20220131 13:06:12.148"/>
</kw>
<status status="PASS" starttime="20220131 13:06:12.147" endtime="20220131 13:06:12.148"/>
</kw>
<msg timestamp="20220131 13:06:12.148" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:06:12.147" endtime="20220131 13:06:12.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 13:06:12.149" endtime="20220131 13:06:12.149"/>
</kw>
<msg timestamp="20220131 13:06:12.149" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 13:06:12.149" endtime="20220131 13:06:12.149"/>
</kw>
<status status="PASS" starttime="20220131 13:06:12.146" endtime="20220131 13:06:12.150"/>
</kw>
<msg timestamp="20220131 13:06:12.150" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:06:12.146" endtime="20220131 13:06:12.150"/>
</kw>
<msg timestamp="20220131 13:06:12.150" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:06:12.145" endtime="20220131 13:06:12.150"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:06:12.153" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:06:44.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:06:44.025" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:06:12.151" endtime="20220131 13:06:44.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:06:44.026" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-01-31 13:06:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:06:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:06:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:06:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-01-31 13:06:15 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2022-01-31 13:06:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 13:06:15 INFO  FileInputFormat:292 - Total input files to process : 3
2022-01-31 13:06:15 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:06:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643634193699_0003
2022-01-31 13:06:15 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:06:16 INFO  Configuration:2795 - resource-types.xml not found
2022-01-31 13:06:16 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-01-31 13:06:16 INFO  YarnClientImpl:329 - Submitted application application_1643634193699_0003
2022-01-31 13:06:16 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1643634193699_0003/
2022-01-31 13:06:16 INFO  Job:1614 - Running job: job_1643634193699_0003
2022-01-31 13:06:23 INFO  Job:1635 - Job job_1643634193699_0003 running in uber mode : false
2022-01-31 13:06:23 INFO  Job:1642 -  map 0% reduce 0%
2022-01-31 13:06:29 INFO  Job:1642 -  map 33% reduce 0%
2022-01-31 13:06:34 INFO  Job:1642 -  map 67% reduce 0%
2022-01-31 13:06:38 INFO  Job:1642 -  map 100% reduce 0%
2022-01-31 13:06:43 INFO  Job:1642 -  map 100% reduce 100%
2022-01-31 13:06:43 INFO  Job:1653 - Job job_1643634193699_0003 completed successfully
2022-01-31 13:06:43 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=942821
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33160
		Total time spent by all reduces in occupied slots (ms)=13156
		Total time spent by all map tasks (ms)=8290
		Total time spent by all reduce tasks (ms)=3289
		Total vcore-milliseconds taken by all map tasks=8290
		Total vcore-milliseconds taken by all reduce tasks=3289
		Total megabyte-milliseconds taken by all map tasks=33955840
		Total megabyte-milliseconds taken by all reduce tasks=13471744
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=662
		CPU time spent (ms)=6950
		Physical memory (bytes) snapshot=1585864704
		Virtual memory (bytes) snapshot=15822815232
		Total committed heap usage (bytes)=1465384960
		Peak Map Physical memory (bytes)=561754112
		Peak Map Virtual memory (bytes)=3951558656
		Peak Reduce Physical memory (bytes)=337526784
		Peak Reduce Virtual memory (bytes)=3972591616
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.434 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220131 13:06:44.025" endtime="20220131 13:06:44.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:06:44.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:06:44.026" endtime="20220131 13:06:44.026"/>
</kw>
<status status="PASS" starttime="20220131 13:06:12.151" endtime="20220131 13:06:44.027"/>
</kw>
<msg timestamp="20220131 13:06:44.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:06:12.150" endtime="20220131 13:06:44.027"/>
</kw>
<msg timestamp="20220131 13:06:44.027" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:06:12.150" endtime="20220131 13:06:44.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:06:44.027" endtime="20220131 13:06:44.028"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:06:12.132" endtime="20220131 13:06:44.028"/>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:06:44.032" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:06:44.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:06:44.037" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:06:44.030" endtime="20220131 13:06:44.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:06:44.038" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:06:44.038" endtime="20220131 13:06:44.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:06:44.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:06:44.039" endtime="20220131 13:06:44.039"/>
</kw>
<status status="PASS" starttime="20220131 13:06:44.030" endtime="20220131 13:06:44.039"/>
</kw>
<msg timestamp="20220131 13:06:44.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:06:44.030" endtime="20220131 13:06:44.039"/>
</kw>
<msg timestamp="20220131 13:06:44.040" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:06:44.029" endtime="20220131 13:06:44.040"/>
</kw>
<msg timestamp="20220131 13:06:44.040" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220131 13:06:44.029" endtime="20220131 13:06:44.040"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:06:44.040" level="INFO">${random} = 8JwOIXAQ</msg>
<status status="PASS" starttime="20220131 13:06:44.040" endtime="20220131 13:06:44.040"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:06:44.043" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:06:44.043" endtime="20220131 13:06:44.043"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:06:44.044" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:06:44.044" endtime="20220131 13:06:44.044"/>
</kw>
<status status="PASS" starttime="20220131 13:06:44.043" endtime="20220131 13:06:44.044"/>
</kw>
<msg timestamp="20220131 13:06:44.044" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:06:44.042" endtime="20220131 13:06:44.044"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 13:06:44.045" endtime="20220131 13:06:44.045"/>
</kw>
<msg timestamp="20220131 13:06:44.045" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 13:06:44.044" endtime="20220131 13:06:44.045"/>
</kw>
<status status="PASS" starttime="20220131 13:06:44.042" endtime="20220131 13:06:44.046"/>
</kw>
<msg timestamp="20220131 13:06:44.046" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:06:44.041" endtime="20220131 13:06:44.046"/>
</kw>
<msg timestamp="20220131 13:06:44.046" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:06:44.040" endtime="20220131 13:06:44.046"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:06:44.049" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:06:44.048" endtime="20220131 13:06:44.049"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:06:44.049" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:06:44.049" endtime="20220131 13:06:44.049"/>
</kw>
<status status="PASS" starttime="20220131 13:06:44.048" endtime="20220131 13:06:44.050"/>
</kw>
<msg timestamp="20220131 13:06:44.050" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:06:44.048" endtime="20220131 13:06:44.050"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:06:44.051" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220131 13:06:44.051" endtime="20220131 13:06:44.051"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:06:44.052" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220131 13:06:44.051" endtime="20220131 13:06:44.052"/>
</kw>
<status status="PASS" starttime="20220131 13:06:44.050" endtime="20220131 13:06:44.052"/>
</kw>
<msg timestamp="20220131 13:06:44.052" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220131 13:06:44.050" endtime="20220131 13:06:44.052"/>
</kw>
<status status="PASS" starttime="20220131 13:06:44.047" endtime="20220131 13:06:44.052"/>
</kw>
<msg timestamp="20220131 13:06:44.052" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220131 13:06:44.047" endtime="20220131 13:06:44.052"/>
</kw>
<msg timestamp="20220131 13:06:44.052" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220131 13:06:44.046" endtime="20220131 13:06:44.053"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:06:44.056" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:06:44.055" endtime="20220131 13:06:44.056"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:06:44.056" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:06:44.056" endtime="20220131 13:06:44.056"/>
</kw>
<status status="PASS" starttime="20220131 13:06:44.055" endtime="20220131 13:06:44.056"/>
</kw>
<msg timestamp="20220131 13:06:44.056" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:06:44.054" endtime="20220131 13:06:44.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:06:44.058" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220131 13:06:44.057" endtime="20220131 13:06:44.058"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:06:44.058" level="INFO">${result} = /wordcount-8JwOIXAQ.txt</msg>
<status status="PASS" starttime="20220131 13:06:44.058" endtime="20220131 13:06:44.058"/>
</kw>
<status status="PASS" starttime="20220131 13:06:44.057" endtime="20220131 13:06:44.059"/>
</kw>
<msg timestamp="20220131 13:06:44.059" level="INFO">${path_with_leading} = /wordcount-8JwOIXAQ.txt</msg>
<status status="PASS" starttime="20220131 13:06:44.057" endtime="20220131 13:06:44.059"/>
</kw>
<status status="PASS" starttime="20220131 13:06:44.054" endtime="20220131 13:06:44.059"/>
</kw>
<msg timestamp="20220131 13:06:44.059" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-8JwOIXAQ.txt</msg>
<status status="PASS" starttime="20220131 13:06:44.053" endtime="20220131 13:06:44.059"/>
</kw>
<msg timestamp="20220131 13:06:44.059" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-8JwOIXAQ.txt</msg>
<status status="PASS" starttime="20220131 13:06:44.053" endtime="20220131 13:06:44.059"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:06:44.062" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-8JwOIXAQ.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:07:17.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:07:17.402" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:06:44.061" endtime="20220131 13:07:17.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:07:17.403" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:06:45 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.2:8032
2022-01-31 13:06:45 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 13:06:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:06:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:06:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:06:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-01-31 13:06:46 INFO  FileInputFormat:292 - Total input files to process : 3
2022-01-31 13:06:47 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:06:47 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643634193699_0004
2022-01-31 13:06:47 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:06:47 INFO  Configuration:2795 - resource-types.xml not found
2022-01-31 13:06:47 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-01-31 13:06:47 INFO  YarnClientImpl:329 - Submitted application application_1643634193699_0004
2022-01-31 13:06:47 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1643634193699_0004/
2022-01-31 13:06:47 INFO  Job:1614 - Running job: job_1643634193699_0004
2022-01-31 13:06:55 INFO  Job:1635 - Job job_1643634193699_0004 running in uber mode : false
2022-01-31 13:06:55 INFO  Job:1642 -  map 0% reduce 0%
2022-01-31 13:07:01 INFO  Job:1642 -  map 33% reduce 0%
2022-01-31 13:07:06 INFO  Job:1642 -  map 67% reduce 0%
2022-01-31 13:07:11 INFO  Job:1642 -  map 100% reduce 0%
2022-01-31 13:07:15 INFO  Job:1642 -  map 100% reduce 100%
2022-01-31 13:07:16 INFO  Job:1653 - Job job_1643634193699_0004 completed successfully
2022-01-31 13:07:17 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1005715
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34328
		Total time spent by all reduces in occupied slots (ms)=12420
		Total time spent by all map tasks (ms)=8582
		Total time spent by all reduce tasks (ms)=3105
		Total vcore-milliseconds taken by all map tasks=8582
		Total vcore-milliseconds taken by all reduce tasks=3105
		Total megabyte-milliseconds taken by all map tasks=35151872
		Total megabyte-milliseconds taken by all reduce tasks=12718080
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=797
		CPU time spent (ms)=7160
		Physical memory (bytes) snapshot=1772027904
		Virtual memory (bytes) snapshot=15807991808
		Total committed heap usage (bytes)=1672478720
		Peak Map Physical memory (bytes)=556490752
		Peak Map Virtual memory (bytes)=3951218688
		Peak Reduce Physical memory (bytes)=336662528
		Peak Reduce Virtual memory (bytes)=3975278592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220131 13:07:17.402" endtime="20220131 13:07:17.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:07:17.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:07:17.404" endtime="20220131 13:07:17.404"/>
</kw>
<status status="PASS" starttime="20220131 13:06:44.060" endtime="20220131 13:07:17.404"/>
</kw>
<msg timestamp="20220131 13:07:17.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:06:44.060" endtime="20220131 13:07:17.404"/>
</kw>
<msg timestamp="20220131 13:07:17.405" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:06:44.059" endtime="20220131 13:07:17.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:07:17.405" endtime="20220131 13:07:17.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:07:17.406" endtime="20220131 13:07:17.406"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:06:44.028" endtime="20220131 13:07:17.406"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220131 13:06:12.086" endtime="20220131 13:07:17.407"/>
</suite>
<suite id="s1-s3-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s3-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:03:53.047" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:03:58.573" level="INFO">${rc} = 255</msg>
<msg timestamp="20220131 13:03:58.573" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 13:03:53.043" endtime="20220131 13:03:58.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:03:58.574" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 13:03:58.574" endtime="20220131 13:03:58.574"/>
</kw>
<msg timestamp="20220131 13:03:58.575" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 13:03:53.042" endtime="20220131 13:03:58.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:03:58.579" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:01.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:01.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:03:58.577" endtime="20220131 13:04:01.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:01.849" level="INFO"/>
<status status="PASS" starttime="20220131 13:04:01.848" endtime="20220131 13:04:01.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:01.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:01.849" endtime="20220131 13:04:01.849"/>
</kw>
<status status="PASS" starttime="20220131 13:03:58.576" endtime="20220131 13:04:01.850"/>
</kw>
<msg timestamp="20220131 13:04:01.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:03:58.576" endtime="20220131 13:04:01.851"/>
</kw>
<msg timestamp="20220131 13:04:01.851" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220131 13:03:58.576" endtime="20220131 13:04:01.851"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:04:01.852" endtime="20220131 13:04:01.852"/>
</kw>
<status status="PASS" starttime="20220131 13:03:58.575" endtime="20220131 13:04:01.852"/>
</kw>
<status status="PASS" starttime="20220131 13:03:58.575" endtime="20220131 13:04:01.852"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:01.856" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:04.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:04.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:04:01.855" endtime="20220131 13:04:04.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:04.852" level="INFO"/>
<status status="PASS" starttime="20220131 13:04:04.851" endtime="20220131 13:04:04.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:04.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:04.852" endtime="20220131 13:04:04.853"/>
</kw>
<status status="PASS" starttime="20220131 13:04:01.854" endtime="20220131 13:04:04.853"/>
</kw>
<msg timestamp="20220131 13:04:04.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:01.854" endtime="20220131 13:04:04.854"/>
</kw>
<status status="PASS" starttime="20220131 13:04:01.853" endtime="20220131 13:04:04.854"/>
</kw>
<status status="PASS" starttime="20220131 13:04:01.853" endtime="20220131 13:04:04.854"/>
</kw>
<status status="PASS" starttime="20220131 13:04:01.852" endtime="20220131 13:04:04.854"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220131 13:04:04.854" endtime="20220131 13:04:04.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:04.858" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:08.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:08.019" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T13:04...</msg>
<status status="PASS" starttime="20220131 13:04:04.856" endtime="20220131 13:04:08.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:08.020" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T13:04:04.754Z",
  "modificationTime" : "2022-01-31T13:04:04.754Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220131 13:04:08.019" endtime="20220131 13:04:08.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:08.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:08.020" endtime="20220131 13:04:08.021"/>
</kw>
<status status="PASS" starttime="20220131 13:04:04.855" endtime="20220131 13:04:08.021"/>
</kw>
<msg timestamp="20220131 13:04:08.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:04.855" endtime="20220131 13:04:08.021"/>
</kw>
<msg timestamp="20220131 13:04:08.022" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T13:04...</msg>
<status status="PASS" starttime="20220131 13:04:04.855" endtime="20220131 13:04:08.022"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:04:08.022" endtime="20220131 13:04:08.022"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:04:08.027" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:04:08.026" endtime="20220131 13:04:08.027"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:04:08.027" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:04:08.027" endtime="20220131 13:04:08.027"/>
</kw>
<status status="PASS" starttime="20220131 13:04:08.026" endtime="20220131 13:04:08.028"/>
</kw>
<msg timestamp="20220131 13:04:08.028" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:04:08.025" endtime="20220131 13:04:08.028"/>
</kw>
<status status="PASS" starttime="20220131 13:04:08.024" endtime="20220131 13:04:08.028"/>
</kw>
<msg timestamp="20220131 13:04:08.028" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220131 13:04:08.023" endtime="20220131 13:04:08.028"/>
</kw>
<msg timestamp="20220131 13:04:08.028" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220131 13:04:08.022" endtime="20220131 13:04:08.029"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:08.031" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:11.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:11.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:04:08.030" endtime="20220131 13:04:11.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:11.089" level="INFO"/>
<status status="PASS" starttime="20220131 13:04:11.088" endtime="20220131 13:04:11.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:11.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:11.089" endtime="20220131 13:04:11.090"/>
</kw>
<status status="PASS" starttime="20220131 13:04:08.029" endtime="20220131 13:04:11.090"/>
</kw>
<msg timestamp="20220131 13:04:11.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:08.029" endtime="20220131 13:04:11.090"/>
</kw>
<status status="PASS" starttime="20220131 13:04:08.029" endtime="20220131 13:04:11.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:11.094" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:17.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:17.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:04:11.092" endtime="20220131 13:04:17.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:17.060" level="INFO"/>
<status status="PASS" starttime="20220131 13:04:17.059" endtime="20220131 13:04:17.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:17.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:17.060" endtime="20220131 13:04:17.061"/>
</kw>
<status status="PASS" starttime="20220131 13:04:11.092" endtime="20220131 13:04:17.061"/>
</kw>
<msg timestamp="20220131 13:04:17.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:11.091" endtime="20220131 13:04:17.062"/>
</kw>
<status status="PASS" starttime="20220131 13:04:11.091" endtime="20220131 13:04:17.062"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:17.065" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:21.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:21.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:04:17.063" endtime="20220131 13:04:21.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:21.959" level="INFO"/>
<status status="PASS" starttime="20220131 13:04:21.958" endtime="20220131 13:04:21.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:21.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:21.959" endtime="20220131 13:04:21.959"/>
</kw>
<status status="PASS" starttime="20220131 13:04:17.063" endtime="20220131 13:04:21.960"/>
</kw>
<msg timestamp="20220131 13:04:21.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:17.063" endtime="20220131 13:04:21.960"/>
</kw>
<status status="PASS" starttime="20220131 13:04:17.062" endtime="20220131 13:04:21.960"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:21.964" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:26.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:26.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:04:21.962" endtime="20220131 13:04:26.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:26.873" level="INFO"/>
<status status="PASS" starttime="20220131 13:04:26.873" endtime="20220131 13:04:26.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:26.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:26.873" endtime="20220131 13:04:26.874"/>
</kw>
<status status="PASS" starttime="20220131 13:04:21.961" endtime="20220131 13:04:26.874"/>
</kw>
<msg timestamp="20220131 13:04:26.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:21.961" endtime="20220131 13:04:26.875"/>
</kw>
<status status="PASS" starttime="20220131 13:04:21.960" endtime="20220131 13:04:26.875"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 13:03:53.042" endtime="20220131 13:04:26.875"/>
</test>
<test id="s1-s3-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:04:26.880" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:04:26.880" endtime="20220131 13:04:26.880"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:04:26.881" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:04:26.880" endtime="20220131 13:04:26.881"/>
</kw>
<status status="PASS" starttime="20220131 13:04:26.879" endtime="20220131 13:04:26.881"/>
</kw>
<msg timestamp="20220131 13:04:26.881" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:04:26.878" endtime="20220131 13:04:26.881"/>
</kw>
<status status="PASS" starttime="20220131 13:04:26.878" endtime="20220131 13:04:26.882"/>
</kw>
<msg timestamp="20220131 13:04:26.882" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 13:04:26.877" endtime="20220131 13:04:26.882"/>
</kw>
<msg timestamp="20220131 13:04:26.882" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 13:04:26.877" endtime="20220131 13:04:26.882"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:26.885" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:29.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:29.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:04:26.883" endtime="20220131 13:04:29.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:29.746" level="INFO"/>
<status status="PASS" starttime="20220131 13:04:29.746" endtime="20220131 13:04:29.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:29.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:29.747" endtime="20220131 13:04:29.747"/>
</kw>
<status status="PASS" starttime="20220131 13:04:26.883" endtime="20220131 13:04:29.748"/>
</kw>
<msg timestamp="20220131 13:04:29.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:26.882" endtime="20220131 13:04:29.748"/>
</kw>
<status status="PASS" starttime="20220131 13:04:26.882" endtime="20220131 13:04:29.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:04:29.751" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:04:32.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:04:32.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:04:29.750" endtime="20220131 13:04:32.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:04:32.516" level="INFO"/>
<status status="PASS" starttime="20220131 13:04:32.516" endtime="20220131 13:04:32.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:04:32.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:04:32.517" endtime="20220131 13:04:32.517"/>
</kw>
<status status="PASS" starttime="20220131 13:04:29.749" endtime="20220131 13:04:32.518"/>
</kw>
<msg timestamp="20220131 13:04:32.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:04:29.749" endtime="20220131 13:04:32.518"/>
</kw>
<status status="PASS" starttime="20220131 13:04:29.748" endtime="20220131 13:04:32.518"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 13:04:26.876" endtime="20220131 13:04:32.518"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220131 13:03:52.988" endtime="20220131 13:04:32.520"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="189033"/>
</suite>
<suite id="s1-s4" name="hadoop33">
<suite id="s1-s4-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:09:21.969" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:09:21.969" endtime="20220131 13:09:21.969"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:09:21.970" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:09:21.969" endtime="20220131 13:09:21.970"/>
</kw>
<status status="PASS" starttime="20220131 13:09:21.968" endtime="20220131 13:09:21.970"/>
</kw>
<msg timestamp="20220131 13:09:21.970" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:09:21.968" endtime="20220131 13:09:21.970"/>
</kw>
<status status="PASS" starttime="20220131 13:09:21.968" endtime="20220131 13:09:21.970"/>
</kw>
<msg timestamp="20220131 13:09:21.970" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:09:21.967" endtime="20220131 13:09:21.970"/>
</kw>
<msg timestamp="20220131 13:09:21.970" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:09:21.966" endtime="20220131 13:09:21.970"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:09:21.971" level="INFO">${random} = 01852</msg>
<status status="PASS" starttime="20220131 13:09:21.970" endtime="20220131 13:09:21.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:09:21.975" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-01852 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:09:25.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:09:25.051" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:09:21.972" endtime="20220131 13:09:25.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:09:25.052" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:09:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:09:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:09:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:09:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220131 13:09:25.051" endtime="20220131 13:09:25.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:09:25.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:09:25.052" endtime="20220131 13:09:25.052"/>
</kw>
<status status="PASS" starttime="20220131 13:09:21.971" endtime="20220131 13:09:25.052"/>
</kw>
<msg timestamp="20220131 13:09:25.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:09:21.971" endtime="20220131 13:09:25.053"/>
</kw>
<msg timestamp="20220131 13:09:25.053" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:09:21.971" endtime="20220131 13:09:25.053"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:09:25.056" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:09:26.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:09:26.595" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:09:25.054" endtime="20220131 13:09:26.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:09:26.596" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-01-31 13:09 o3fs://bucket1.volume1.om/ozone-01852
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:09 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 13:09:26.595" endtime="20220131 13:09:26.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:09:26.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:09:26.596" endtime="20220131 13:09:26.596"/>
</kw>
<status status="PASS" starttime="20220131 13:09:25.054" endtime="20220131 13:09:26.597"/>
</kw>
<msg timestamp="20220131 13:09:26.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:09:25.053" endtime="20220131 13:09:26.597"/>
</kw>
<msg timestamp="20220131 13:09:26.597" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:09:25.053" endtime="20220131 13:09:26.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:09:26.597" endtime="20220131 13:09:26.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:09:26.600" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-01852 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:09:29.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:09:29.285" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:09:26.599" endtime="20220131 13:09:29.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:09:29.286" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:09:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:09:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:09:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20220131 13:09:29.286" endtime="20220131 13:09:29.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:09:29.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:09:29.287" endtime="20220131 13:09:29.287"/>
</kw>
<status status="PASS" starttime="20220131 13:09:26.598" endtime="20220131 13:09:29.287"/>
</kw>
<msg timestamp="20220131 13:09:29.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:09:26.598" endtime="20220131 13:09:29.287"/>
</kw>
<msg timestamp="20220131 13:09:29.288" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:09:26.597" endtime="20220131 13:09:29.288"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:09:29.288" endtime="20220131 13:09:29.288"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220131 13:09:21.966" endtime="20220131 13:09:29.288"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220131 13:09:21.926" endtime="20220131 13:09:29.289"/>
</suite>
<suite id="s1-s4-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:09:33.061" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:09:33.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:09:33.067" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:09:33.058" endtime="20220131 13:09:33.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:09:33.067" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:09:33.067" endtime="20220131 13:09:33.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:09:33.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:09:33.068" endtime="20220131 13:09:33.068"/>
</kw>
<status status="PASS" starttime="20220131 13:09:33.057" endtime="20220131 13:09:33.068"/>
</kw>
<msg timestamp="20220131 13:09:33.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:09:33.057" endtime="20220131 13:09:33.068"/>
</kw>
<msg timestamp="20220131 13:09:33.069" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:09:33.057" endtime="20220131 13:09:33.069"/>
</kw>
<msg timestamp="20220131 13:09:33.070" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:09:33.056" endtime="20220131 13:09:33.070"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:09:33.073" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:09:33.072" endtime="20220131 13:09:33.073"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:09:33.073" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:09:33.073" endtime="20220131 13:09:33.073"/>
</kw>
<status status="PASS" starttime="20220131 13:09:33.072" endtime="20220131 13:09:33.073"/>
</kw>
<msg timestamp="20220131 13:09:33.074" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:09:33.072" endtime="20220131 13:09:33.074"/>
</kw>
<status status="PASS" starttime="20220131 13:09:33.071" endtime="20220131 13:09:33.074"/>
</kw>
<msg timestamp="20220131 13:09:33.074" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:09:33.070" endtime="20220131 13:09:33.074"/>
</kw>
<msg timestamp="20220131 13:09:33.074" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:09:33.070" endtime="20220131 13:09:33.074"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:09:33.077" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:10:12.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:10:12.259" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:09:33.075" endtime="20220131 13:10:12.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:10:12.260" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-01-31 13:09:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:09:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:09:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:09:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-01-31 13:09:38 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.7:8032
2022-01-31 13:09:39 INFO  FileInputFormat:300 - Total input files to process : 3
2022-01-31 13:09:39 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:09:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643634488585_0001
2022-01-31 13:09:39 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:09:39 INFO  Configuration:2824 - resource-types.xml not found
2022-01-31 13:09:39 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-01-31 13:09:40 INFO  YarnClientImpl:338 - Submitted application application_1643634488585_0001
2022-01-31 13:09:40 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1643634488585_0001/
2022-01-31 13:09:40 INFO  Job:1620 - Running job: job_1643634488585_0001
2022-01-31 13:09:50 INFO  Job:1641 - Job job_1643634488585_0001 running in uber mode : false
2022-01-31 13:09:50 INFO  Job:1648 -  map 0% reduce 0%
2022-01-31 13:09:56 INFO  Job:1648 -  map 33% reduce 0%
2022-01-31 13:10:01 INFO  Job:1648 -  map 67% reduce 0%
2022-01-31 13:10:06 INFO  Job:1648 -  map 100% reduce 0%
2022-01-31 13:10:11 INFO  Job:1648 -  map 100% reduce 100%
2022-01-31 13:10:11 INFO  Job:1659 - Job job_1643634488585_0001 completed successfully
2022-01-31 13:10:11 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1094985
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37848
		Total time spent by all reduces in occupied slots (ms)=14740
		Total time spent by all map tasks (ms)=9462
		Total time spent by all reduce tasks (ms)=3685
		Total vcore-milliseconds taken by all map tasks=9462
		Total vcore-milliseconds taken by all reduce tasks=3685
		Total megabyte-milliseconds taken by all map tasks=38756352
		Total megabyte-milliseconds taken by all reduce tasks=15093760
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=521
		CPU time spent (ms)=6420
		Physical memory (bytes) snapshot=1681965056
		Virtual memory (bytes) snapshot=15804272640
		Total committed heap usage (bytes)=1476919296
		Peak Map Physical memory (bytes)=450093056
		Peak Map Virtual memory (bytes)=3952033792
		Peak Reduce Physical memory (bytes)=368885760
		Peak Reduce Virtual memory (bytes)=3972288512
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.055 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220131 13:10:12.260" endtime="20220131 13:10:12.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:10:12.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:10:12.261" endtime="20220131 13:10:12.261"/>
</kw>
<status status="PASS" starttime="20220131 13:09:33.075" endtime="20220131 13:10:12.261"/>
</kw>
<msg timestamp="20220131 13:10:12.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:09:33.075" endtime="20220131 13:10:12.262"/>
</kw>
<msg timestamp="20220131 13:10:12.262" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:09:33.074" endtime="20220131 13:10:12.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:10:12.262" endtime="20220131 13:10:12.263"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:09:33.056" endtime="20220131 13:10:12.263"/>
</test>
<test id="s1-s4-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:10:12.268" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:10:12.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:10:12.272" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:10:12.266" endtime="20220131 13:10:12.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:10:12.273" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:10:12.273" endtime="20220131 13:10:12.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:10:12.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:10:12.274" endtime="20220131 13:10:12.274"/>
</kw>
<status status="PASS" starttime="20220131 13:10:12.265" endtime="20220131 13:10:12.274"/>
</kw>
<msg timestamp="20220131 13:10:12.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:10:12.265" endtime="20220131 13:10:12.274"/>
</kw>
<msg timestamp="20220131 13:10:12.275" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:10:12.265" endtime="20220131 13:10:12.275"/>
</kw>
<msg timestamp="20220131 13:10:12.275" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:10:12.264" endtime="20220131 13:10:12.275"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:10:12.275" level="INFO">${random} = 63U0FsEv</msg>
<status status="PASS" starttime="20220131 13:10:12.275" endtime="20220131 13:10:12.275"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:10:12.279" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:10:12.278" endtime="20220131 13:10:12.279"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:10:12.279" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:10:12.279" endtime="20220131 13:10:12.279"/>
</kw>
<status status="PASS" starttime="20220131 13:10:12.278" endtime="20220131 13:10:12.279"/>
</kw>
<msg timestamp="20220131 13:10:12.279" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:10:12.277" endtime="20220131 13:10:12.279"/>
</kw>
<status status="PASS" starttime="20220131 13:10:12.277" endtime="20220131 13:10:12.280"/>
</kw>
<msg timestamp="20220131 13:10:12.280" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:10:12.276" endtime="20220131 13:10:12.280"/>
</kw>
<msg timestamp="20220131 13:10:12.280" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220131 13:10:12.276" endtime="20220131 13:10:12.280"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:10:12.283" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:10:12.283" endtime="20220131 13:10:12.283"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:10:12.284" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:10:12.283" endtime="20220131 13:10:12.284"/>
</kw>
<status status="PASS" starttime="20220131 13:10:12.282" endtime="20220131 13:10:12.284"/>
</kw>
<msg timestamp="20220131 13:10:12.284" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:10:12.282" endtime="20220131 13:10:12.284"/>
</kw>
<status status="PASS" starttime="20220131 13:10:12.281" endtime="20220131 13:10:12.284"/>
</kw>
<msg timestamp="20220131 13:10:12.284" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220131 13:10:12.281" endtime="20220131 13:10:12.284"/>
</kw>
<msg timestamp="20220131 13:10:12.284" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220131 13:10:12.280" endtime="20220131 13:10:12.284"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:10:12.287" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:10:12.287" endtime="20220131 13:10:12.287"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:10:12.288" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:10:12.288" endtime="20220131 13:10:12.288"/>
</kw>
<status status="PASS" starttime="20220131 13:10:12.287" endtime="20220131 13:10:12.288"/>
</kw>
<msg timestamp="20220131 13:10:12.288" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:10:12.286" endtime="20220131 13:10:12.288"/>
</kw>
<status status="PASS" starttime="20220131 13:10:12.286" endtime="20220131 13:10:12.288"/>
</kw>
<msg timestamp="20220131 13:10:12.289" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-63U0FsEv.txt</msg>
<status status="PASS" starttime="20220131 13:10:12.285" endtime="20220131 13:10:12.289"/>
</kw>
<msg timestamp="20220131 13:10:12.289" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-63U0FsEv.txt</msg>
<status status="PASS" starttime="20220131 13:10:12.285" endtime="20220131 13:10:12.289"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:10:12.292" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-63U0FsEv.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:10:46.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:10:46.466" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:10:12.290" endtime="20220131 13:10:46.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:10:46.467" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:10:14 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.7:8032
2022-01-31 13:10:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 13:10:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:10:14 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:10:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:10:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-01-31 13:10:15 INFO  FileInputFormat:300 - Total input files to process : 3
2022-01-31 13:10:16 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:10:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643634488585_0002
2022-01-31 13:10:16 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:10:16 INFO  Configuration:2824 - resource-types.xml not found
2022-01-31 13:10:16 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-01-31 13:10:16 INFO  YarnClientImpl:338 - Submitted application application_1643634488585_0002
2022-01-31 13:10:16 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1643634488585_0002/
2022-01-31 13:10:16 INFO  Job:1620 - Running job: job_1643634488585_0002
2022-01-31 13:10:24 INFO  Job:1641 - Job job_1643634488585_0002 running in uber mode : false
2022-01-31 13:10:24 INFO  Job:1648 -  map 0% reduce 0%
2022-01-31 13:10:30 INFO  Job:1648 -  map 33% reduce 0%
2022-01-31 13:10:35 INFO  Job:1648 -  map 67% reduce 0%
2022-01-31 13:10:40 INFO  Job:1648 -  map 100% reduce 0%
2022-01-31 13:10:45 INFO  Job:1648 -  map 100% reduce 100%
2022-01-31 13:10:46 INFO  Job:1659 - Job job_1643634488585_0002 completed successfully
2022-01-31 13:10:46 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1157743
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36372
		Total time spent by all reduces in occupied slots (ms)=13192
		Total time spent by all map tasks (ms)=9093
		Total time spent by all reduce tasks (ms)=3298
		Total vcore-milliseconds taken by all map tasks=9093
		Total vcore-milliseconds taken by all reduce tasks=3298
		Total megabyte-milliseconds taken by all map tasks=37244928
		Total megabyte-milliseconds taken by all reduce tasks=13508608
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=490
		CPU time spent (ms)=6390
		Physical memory (bytes) snapshot=1666326528
		Virtual memory (bytes) snapshot=15802101760
		Total committed heap usage (bytes)=1480589312
		Peak Map Physical memory (bytes)=447250432
		Peak Map Virtual memory (bytes)=3958943744
		Peak Reduce Physical memory (bytes)=376971264
		Peak Reduce Virtual memory (bytes)=3976790016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220131 13:10:46.467" endtime="20220131 13:10:46.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:10:46.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:10:46.467" endtime="20220131 13:10:46.468"/>
</kw>
<status status="PASS" starttime="20220131 13:10:12.290" endtime="20220131 13:10:46.468"/>
</kw>
<msg timestamp="20220131 13:10:46.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:10:12.290" endtime="20220131 13:10:46.469"/>
</kw>
<msg timestamp="20220131 13:10:46.469" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:10:12.289" endtime="20220131 13:10:46.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:10:46.469" endtime="20220131 13:10:46.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:10:46.469" endtime="20220131 13:10:46.470"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:10:12.264" endtime="20220131 13:10:46.470"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220131 13:09:33.011" endtime="20220131 13:10:46.471"/>
</suite>
<suite id="s1-s4-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:10:50.349" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:10:50.349" endtime="20220131 13:10:50.349"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:10:50.350" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:10:50.349" endtime="20220131 13:10:50.350"/>
</kw>
<status status="PASS" starttime="20220131 13:10:50.349" endtime="20220131 13:10:50.350"/>
</kw>
<msg timestamp="20220131 13:10:50.350" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:10:50.348" endtime="20220131 13:10:50.350"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 13:10:50.351" endtime="20220131 13:10:50.351"/>
</kw>
<msg timestamp="20220131 13:10:50.351" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 13:10:50.350" endtime="20220131 13:10:50.351"/>
</kw>
<status status="PASS" starttime="20220131 13:10:50.348" endtime="20220131 13:10:50.351"/>
</kw>
<msg timestamp="20220131 13:10:50.351" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:10:50.347" endtime="20220131 13:10:50.352"/>
</kw>
<msg timestamp="20220131 13:10:50.352" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:10:50.346" endtime="20220131 13:10:50.352"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:10:50.352" level="INFO">${random} = 44701</msg>
<status status="PASS" starttime="20220131 13:10:50.352" endtime="20220131 13:10:50.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:10:50.357" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-44701 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:10:53.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:10:53.479" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:10:50.353" endtime="20220131 13:10:53.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:10:53.480" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:10:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:10:52 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:10:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:10:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220131 13:10:53.480" endtime="20220131 13:10:53.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:10:53.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:10:53.481" endtime="20220131 13:10:53.481"/>
</kw>
<status status="PASS" starttime="20220131 13:10:50.353" endtime="20220131 13:10:53.481"/>
</kw>
<msg timestamp="20220131 13:10:53.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:10:50.353" endtime="20220131 13:10:53.482"/>
</kw>
<msg timestamp="20220131 13:10:53.482" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:10:50.352" endtime="20220131 13:10:53.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:10:53.485" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:10:55.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:10:55.072" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:10:53.483" endtime="20220131 13:10:55.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:10:55.073" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-01-31 13:09 ofs://om/volume1/bucket1/ozone-01852
-rw-rw-rw-   3 hadoop hadoop       1541 2022-01-31 13:10 ofs://om/volume1/bucket1/ozone-44701
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:09 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-01-31 13:10 ofs://om/volume1/bucket1/wordcount-63U0FsEv.txt</msg>
<status status="PASS" starttime="20220131 13:10:55.072" endtime="20220131 13:10:55.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:10:55.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:10:55.073" endtime="20220131 13:10:55.074"/>
</kw>
<status status="PASS" starttime="20220131 13:10:53.483" endtime="20220131 13:10:55.074"/>
</kw>
<msg timestamp="20220131 13:10:55.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:10:53.483" endtime="20220131 13:10:55.074"/>
</kw>
<msg timestamp="20220131 13:10:55.074" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:10:53.482" endtime="20220131 13:10:55.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:10:55.074" endtime="20220131 13:10:55.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:10:55.078" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-44701 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:10:57.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:10:57.938" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:10:55.076" endtime="20220131 13:10:57.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:10:57.939" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:10:56 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:10:56 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:10:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20220131 13:10:57.938" endtime="20220131 13:10:57.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:10:57.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:10:57.939" endtime="20220131 13:10:57.940"/>
</kw>
<status status="PASS" starttime="20220131 13:10:55.076" endtime="20220131 13:10:57.940"/>
</kw>
<msg timestamp="20220131 13:10:57.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:10:55.076" endtime="20220131 13:10:57.940"/>
</kw>
<msg timestamp="20220131 13:10:57.940" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:10:55.075" endtime="20220131 13:10:57.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:10:57.941" endtime="20220131 13:10:57.941"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220131 13:10:50.345" endtime="20220131 13:10:57.941"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220131 13:10:50.300" endtime="20220131 13:10:57.942"/>
</suite>
<suite id="s1-s4-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:11:01.802" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:11:01.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:11:01.808" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:11:01.799" endtime="20220131 13:11:01.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:11:01.809" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:11:01.808" endtime="20220131 13:11:01.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:11:01.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:11:01.809" endtime="20220131 13:11:01.809"/>
</kw>
<status status="PASS" starttime="20220131 13:11:01.798" endtime="20220131 13:11:01.810"/>
</kw>
<msg timestamp="20220131 13:11:01.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:11:01.798" endtime="20220131 13:11:01.810"/>
</kw>
<msg timestamp="20220131 13:11:01.810" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:11:01.798" endtime="20220131 13:11:01.811"/>
</kw>
<msg timestamp="20220131 13:11:01.811" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:11:01.797" endtime="20220131 13:11:01.811"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:11:01.814" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:11:01.814" endtime="20220131 13:11:01.814"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:11:01.815" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:11:01.814" endtime="20220131 13:11:01.815"/>
</kw>
<status status="PASS" starttime="20220131 13:11:01.813" endtime="20220131 13:11:01.815"/>
</kw>
<msg timestamp="20220131 13:11:01.815" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:11:01.813" endtime="20220131 13:11:01.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 13:11:01.815" endtime="20220131 13:11:01.816"/>
</kw>
<msg timestamp="20220131 13:11:01.816" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 13:11:01.815" endtime="20220131 13:11:01.816"/>
</kw>
<status status="PASS" starttime="20220131 13:11:01.812" endtime="20220131 13:11:01.816"/>
</kw>
<msg timestamp="20220131 13:11:01.816" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:11:01.812" endtime="20220131 13:11:01.816"/>
</kw>
<msg timestamp="20220131 13:11:01.816" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:11:01.811" endtime="20220131 13:11:01.816"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:11:01.819" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:11:35.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:11:35.058" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:11:01.818" endtime="20220131 13:11:35.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:11:35.059" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-01-31 13:11:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:11:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:11:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:11:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-01-31 13:11:05 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.7:8032
2022-01-31 13:11:05 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 13:11:05 INFO  FileInputFormat:300 - Total input files to process : 3
2022-01-31 13:11:05 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:11:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643634488585_0003
2022-01-31 13:11:05 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:11:05 INFO  Configuration:2824 - resource-types.xml not found
2022-01-31 13:11:05 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-01-31 13:11:06 INFO  YarnClientImpl:338 - Submitted application application_1643634488585_0003
2022-01-31 13:11:06 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1643634488585_0003/
2022-01-31 13:11:06 INFO  Job:1620 - Running job: job_1643634488585_0003
2022-01-31 13:11:13 INFO  Job:1641 - Job job_1643634488585_0003 running in uber mode : false
2022-01-31 13:11:13 INFO  Job:1648 -  map 0% reduce 0%
2022-01-31 13:11:19 INFO  Job:1648 -  map 33% reduce 0%
2022-01-31 13:11:24 INFO  Job:1648 -  map 67% reduce 0%
2022-01-31 13:11:29 INFO  Job:1648 -  map 100% reduce 0%
2022-01-31 13:11:34 INFO  Job:1648 -  map 100% reduce 100%
2022-01-31 13:11:34 INFO  Job:1659 - Job job_1643634488585_0003 completed successfully
2022-01-31 13:11:34 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1094773
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37288
		Total time spent by all reduces in occupied slots (ms)=14024
		Total time spent by all map tasks (ms)=9322
		Total time spent by all reduce tasks (ms)=3506
		Total vcore-milliseconds taken by all map tasks=9322
		Total vcore-milliseconds taken by all reduce tasks=3506
		Total megabyte-milliseconds taken by all map tasks=38182912
		Total megabyte-milliseconds taken by all reduce tasks=14360576
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=502
		CPU time spent (ms)=7210
		Physical memory (bytes) snapshot=1685413888
		Virtual memory (bytes) snapshot=15808245760
		Total committed heap usage (bytes)=1506803712
		Peak Map Physical memory (bytes)=442429440
		Peak Map Virtual memory (bytes)=3953844224
		Peak Reduce Physical memory (bytes)=384442368
		Peak Reduce Virtual memory (bytes)=3973861376
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.577 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220131 13:11:35.058" endtime="20220131 13:11:35.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:11:35.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:11:35.059" endtime="20220131 13:11:35.060"/>
</kw>
<status status="PASS" starttime="20220131 13:11:01.817" endtime="20220131 13:11:35.060"/>
</kw>
<msg timestamp="20220131 13:11:35.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:11:01.817" endtime="20220131 13:11:35.060"/>
</kw>
<msg timestamp="20220131 13:11:35.060" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:11:01.817" endtime="20220131 13:11:35.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:11:35.061" endtime="20220131 13:11:35.061"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:11:01.797" endtime="20220131 13:11:35.061"/>
</test>
<test id="s1-s4-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:11:35.066" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:11:35.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:11:35.071" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:11:35.064" endtime="20220131 13:11:35.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:11:35.072" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:11:35.072" endtime="20220131 13:11:35.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:11:35.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:11:35.073" endtime="20220131 13:11:35.073"/>
</kw>
<status status="PASS" starttime="20220131 13:11:35.063" endtime="20220131 13:11:35.073"/>
</kw>
<msg timestamp="20220131 13:11:35.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:11:35.063" endtime="20220131 13:11:35.073"/>
</kw>
<msg timestamp="20220131 13:11:35.074" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:11:35.063" endtime="20220131 13:11:35.074"/>
</kw>
<msg timestamp="20220131 13:11:35.074" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220131 13:11:35.062" endtime="20220131 13:11:35.074"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220131 13:11:35.074" level="INFO">${random} = MxdvyYPO</msg>
<status status="PASS" starttime="20220131 13:11:35.074" endtime="20220131 13:11:35.074"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:11:35.078" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:11:35.077" endtime="20220131 13:11:35.078"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:11:35.078" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:11:35.078" endtime="20220131 13:11:35.078"/>
</kw>
<status status="PASS" starttime="20220131 13:11:35.077" endtime="20220131 13:11:35.079"/>
</kw>
<msg timestamp="20220131 13:11:35.079" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:11:35.077" endtime="20220131 13:11:35.079"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220131 13:11:35.079" endtime="20220131 13:11:35.080"/>
</kw>
<msg timestamp="20220131 13:11:35.080" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220131 13:11:35.079" endtime="20220131 13:11:35.080"/>
</kw>
<status status="PASS" starttime="20220131 13:11:35.076" endtime="20220131 13:11:35.080"/>
</kw>
<msg timestamp="20220131 13:11:35.080" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:11:35.075" endtime="20220131 13:11:35.080"/>
</kw>
<msg timestamp="20220131 13:11:35.080" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220131 13:11:35.075" endtime="20220131 13:11:35.080"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:11:35.083" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:11:35.083" endtime="20220131 13:11:35.083"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:11:35.084" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:11:35.083" endtime="20220131 13:11:35.084"/>
</kw>
<status status="PASS" starttime="20220131 13:11:35.082" endtime="20220131 13:11:35.084"/>
</kw>
<msg timestamp="20220131 13:11:35.084" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:11:35.082" endtime="20220131 13:11:35.084"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:11:35.086" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220131 13:11:35.085" endtime="20220131 13:11:35.086"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:11:35.086" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220131 13:11:35.086" endtime="20220131 13:11:35.086"/>
</kw>
<status status="PASS" starttime="20220131 13:11:35.085" endtime="20220131 13:11:35.086"/>
</kw>
<msg timestamp="20220131 13:11:35.086" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220131 13:11:35.084" endtime="20220131 13:11:35.086"/>
</kw>
<status status="PASS" starttime="20220131 13:11:35.081" endtime="20220131 13:11:35.087"/>
</kw>
<msg timestamp="20220131 13:11:35.087" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220131 13:11:35.081" endtime="20220131 13:11:35.087"/>
</kw>
<msg timestamp="20220131 13:11:35.087" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220131 13:11:35.080" endtime="20220131 13:11:35.087"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:11:35.090" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220131 13:11:35.090" endtime="20220131 13:11:35.090"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:11:35.091" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220131 13:11:35.090" endtime="20220131 13:11:35.091"/>
</kw>
<status status="PASS" starttime="20220131 13:11:35.089" endtime="20220131 13:11:35.091"/>
</kw>
<msg timestamp="20220131 13:11:35.091" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220131 13:11:35.089" endtime="20220131 13:11:35.091"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:11:35.092" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220131 13:11:35.092" endtime="20220131 13:11:35.092"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:11:35.093" level="INFO">${result} = /wordcount-MxdvyYPO.txt</msg>
<status status="PASS" starttime="20220131 13:11:35.092" endtime="20220131 13:11:35.093"/>
</kw>
<status status="PASS" starttime="20220131 13:11:35.091" endtime="20220131 13:11:35.093"/>
</kw>
<msg timestamp="20220131 13:11:35.093" level="INFO">${path_with_leading} = /wordcount-MxdvyYPO.txt</msg>
<status status="PASS" starttime="20220131 13:11:35.091" endtime="20220131 13:11:35.093"/>
</kw>
<status status="PASS" starttime="20220131 13:11:35.088" endtime="20220131 13:11:35.093"/>
</kw>
<msg timestamp="20220131 13:11:35.093" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-MxdvyYPO.txt</msg>
<status status="PASS" starttime="20220131 13:11:35.088" endtime="20220131 13:11:35.093"/>
</kw>
<msg timestamp="20220131 13:11:35.094" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-MxdvyYPO.txt</msg>
<status status="PASS" starttime="20220131 13:11:35.087" endtime="20220131 13:11:35.094"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:11:35.097" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-MxdvyYPO.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:12:10.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:12:10.923" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:11:35.095" endtime="20220131 13:12:10.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:12:10.924" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-01-31 13:11:36 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.7:8032
2022-01-31 13:11:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-01-31 13:11:37 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-01-31 13:11:37 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-01-31 13:11:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-01-31 13:11:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-01-31 13:11:38 INFO  FileInputFormat:300 - Total input files to process : 3
2022-01-31 13:11:38 INFO  JobSubmitter:202 - number of splits:3
2022-01-31 13:11:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643634488585_0004
2022-01-31 13:11:38 INFO  JobSubmitter:299 - Executing with tokens: []
2022-01-31 13:11:39 INFO  Configuration:2824 - resource-types.xml not found
2022-01-31 13:11:39 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-01-31 13:11:39 INFO  YarnClientImpl:338 - Submitted application application_1643634488585_0004
2022-01-31 13:11:39 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1643634488585_0004/
2022-01-31 13:11:39 INFO  Job:1620 - Running job: job_1643634488585_0004
2022-01-31 13:11:47 INFO  Job:1641 - Job job_1643634488585_0004 running in uber mode : false
2022-01-31 13:11:47 INFO  Job:1648 -  map 0% reduce 0%
2022-01-31 13:11:53 INFO  Job:1648 -  map 33% reduce 0%
2022-01-31 13:12:00 INFO  Job:1648 -  map 67% reduce 0%
2022-01-31 13:12:05 INFO  Job:1648 -  map 100% reduce 0%
2022-01-31 13:12:09 INFO  Job:1648 -  map 100% reduce 100%
2022-01-31 13:12:10 INFO  Job:1659 - Job job_1643634488585_0004 completed successfully
2022-01-31 13:12:10 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1157659
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43852
		Total time spent by all reduces in occupied slots (ms)=13356
		Total time spent by all map tasks (ms)=10963
		Total time spent by all reduce tasks (ms)=3339
		Total vcore-milliseconds taken by all map tasks=10963
		Total vcore-milliseconds taken by all reduce tasks=3339
		Total megabyte-milliseconds taken by all map tasks=44904448
		Total megabyte-milliseconds taken by all reduce tasks=13676544
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=551
		CPU time spent (ms)=7250
		Physical memory (bytes) snapshot=1627992064
		Virtual memory (bytes) snapshot=15799652352
		Total committed heap usage (bytes)=1441792000
		Peak Map Physical memory (bytes)=449744896
		Peak Map Virtual memory (bytes)=3957862400
		Peak Reduce Physical memory (bytes)=349253632
		Peak Reduce Virtual memory (bytes)=3961192448
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220131 13:12:10.924" endtime="20220131 13:12:10.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:12:10.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:12:10.925" endtime="20220131 13:12:10.925"/>
</kw>
<status status="PASS" starttime="20220131 13:11:35.094" endtime="20220131 13:12:10.925"/>
</kw>
<msg timestamp="20220131 13:12:10.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:11:35.094" endtime="20220131 13:12:10.926"/>
</kw>
<msg timestamp="20220131 13:12:10.926" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220131 13:11:35.094" endtime="20220131 13:12:10.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:12:10.926" endtime="20220131 13:12:10.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:12:10.927" endtime="20220131 13:12:10.927"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220131 13:11:35.062" endtime="20220131 13:12:10.927"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220131 13:11:01.752" endtime="20220131 13:12:10.928"/>
</suite>
<suite id="s1-s4-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s4-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:08:43.027" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:08:46.331" level="INFO">${rc} = 255</msg>
<msg timestamp="20220131 13:08:46.331" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 13:08:43.023" endtime="20220131 13:08:46.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:08:46.333" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 13:08:46.332" endtime="20220131 13:08:46.333"/>
</kw>
<msg timestamp="20220131 13:08:46.333" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 13:08:43.022" endtime="20220131 13:08:46.333"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:08:46.337" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:08:49.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:08:49.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:08:46.335" endtime="20220131 13:08:49.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:08:49.132" level="INFO"/>
<status status="PASS" starttime="20220131 13:08:49.132" endtime="20220131 13:08:49.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:08:49.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:08:49.132" endtime="20220131 13:08:49.133"/>
</kw>
<status status="PASS" starttime="20220131 13:08:46.334" endtime="20220131 13:08:49.133"/>
</kw>
<msg timestamp="20220131 13:08:49.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:08:46.334" endtime="20220131 13:08:49.134"/>
</kw>
<msg timestamp="20220131 13:08:49.135" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220131 13:08:46.334" endtime="20220131 13:08:49.135"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:08:49.135" endtime="20220131 13:08:49.135"/>
</kw>
<status status="PASS" starttime="20220131 13:08:46.334" endtime="20220131 13:08:49.135"/>
</kw>
<status status="PASS" starttime="20220131 13:08:46.333" endtime="20220131 13:08:49.135"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:08:49.139" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:08:51.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:08:51.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:08:49.137" endtime="20220131 13:08:51.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:08:51.827" level="INFO"/>
<status status="PASS" starttime="20220131 13:08:51.826" endtime="20220131 13:08:51.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:08:51.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:08:51.827" endtime="20220131 13:08:51.828"/>
</kw>
<status status="PASS" starttime="20220131 13:08:49.137" endtime="20220131 13:08:51.828"/>
</kw>
<msg timestamp="20220131 13:08:51.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:08:49.137" endtime="20220131 13:08:51.828"/>
</kw>
<status status="PASS" starttime="20220131 13:08:49.136" endtime="20220131 13:08:51.829"/>
</kw>
<status status="PASS" starttime="20220131 13:08:49.136" endtime="20220131 13:08:51.829"/>
</kw>
<status status="PASS" starttime="20220131 13:08:49.135" endtime="20220131 13:08:51.829"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220131 13:08:51.829" endtime="20220131 13:08:51.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:08:51.832" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:08:54.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:08:54.713" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T13:08...</msg>
<status status="PASS" starttime="20220131 13:08:51.831" endtime="20220131 13:08:54.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:08:54.714" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T13:08:51.605Z",
  "modificationTime" : "2022-01-31T13:08:51.605Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220131 13:08:54.714" endtime="20220131 13:08:54.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:08:54.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:08:54.715" endtime="20220131 13:08:54.715"/>
</kw>
<status status="PASS" starttime="20220131 13:08:51.830" endtime="20220131 13:08:54.715"/>
</kw>
<msg timestamp="20220131 13:08:54.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:08:51.830" endtime="20220131 13:08:54.716"/>
</kw>
<msg timestamp="20220131 13:08:54.716" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T13:08...</msg>
<status status="PASS" starttime="20220131 13:08:51.829" endtime="20220131 13:08:54.716"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:08:54.716" endtime="20220131 13:08:54.716"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:08:54.720" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:08:54.720" endtime="20220131 13:08:54.720"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:08:54.721" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:08:54.720" endtime="20220131 13:08:54.721"/>
</kw>
<status status="PASS" starttime="20220131 13:08:54.719" endtime="20220131 13:08:54.721"/>
</kw>
<msg timestamp="20220131 13:08:54.721" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:08:54.719" endtime="20220131 13:08:54.721"/>
</kw>
<status status="PASS" starttime="20220131 13:08:54.718" endtime="20220131 13:08:54.721"/>
</kw>
<msg timestamp="20220131 13:08:54.721" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220131 13:08:54.717" endtime="20220131 13:08:54.721"/>
</kw>
<msg timestamp="20220131 13:08:54.722" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220131 13:08:54.717" endtime="20220131 13:08:54.722"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:08:54.724" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:08:57.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:08:57.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:08:54.723" endtime="20220131 13:08:57.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:08:57.576" level="INFO"/>
<status status="PASS" starttime="20220131 13:08:57.575" endtime="20220131 13:08:57.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:08:57.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:08:57.576" endtime="20220131 13:08:57.576"/>
</kw>
<status status="PASS" starttime="20220131 13:08:54.722" endtime="20220131 13:08:57.576"/>
</kw>
<msg timestamp="20220131 13:08:57.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:08:54.722" endtime="20220131 13:08:57.577"/>
</kw>
<status status="PASS" starttime="20220131 13:08:54.722" endtime="20220131 13:08:57.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:08:57.581" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:09:03.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:09:03.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:08:57.579" endtime="20220131 13:09:03.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:09:03.503" level="INFO"/>
<status status="PASS" starttime="20220131 13:09:03.503" endtime="20220131 13:09:03.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:09:03.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:09:03.504" endtime="20220131 13:09:03.504"/>
</kw>
<status status="PASS" starttime="20220131 13:08:57.578" endtime="20220131 13:09:03.505"/>
</kw>
<msg timestamp="20220131 13:09:03.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:08:57.578" endtime="20220131 13:09:03.505"/>
</kw>
<status status="PASS" starttime="20220131 13:08:57.578" endtime="20220131 13:09:03.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:09:03.508" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:09:08.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:09:08.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:09:03.506" endtime="20220131 13:09:08.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:09:08.004" level="INFO"/>
<status status="PASS" starttime="20220131 13:09:08.003" endtime="20220131 13:09:08.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:09:08.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:09:08.004" endtime="20220131 13:09:08.005"/>
</kw>
<status status="PASS" starttime="20220131 13:09:03.506" endtime="20220131 13:09:08.005"/>
</kw>
<msg timestamp="20220131 13:09:08.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:09:03.506" endtime="20220131 13:09:08.005"/>
</kw>
<status status="PASS" starttime="20220131 13:09:03.505" endtime="20220131 13:09:08.005"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:09:08.008" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:09:12.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:09:12.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:09:08.007" endtime="20220131 13:09:12.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:09:12.692" level="INFO"/>
<status status="PASS" starttime="20220131 13:09:12.691" endtime="20220131 13:09:12.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:09:12.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:09:12.692" endtime="20220131 13:09:12.694"/>
</kw>
<status status="PASS" starttime="20220131 13:09:08.006" endtime="20220131 13:09:12.694"/>
</kw>
<msg timestamp="20220131 13:09:12.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:09:08.006" endtime="20220131 13:09:12.694"/>
</kw>
<status status="PASS" starttime="20220131 13:09:08.006" endtime="20220131 13:09:12.694"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 13:08:43.022" endtime="20220131 13:09:12.695"/>
</test>
<test id="s1-s4-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:09:12.700" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:09:12.699" endtime="20220131 13:09:12.700"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:09:12.700" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:09:12.700" endtime="20220131 13:09:12.700"/>
</kw>
<status status="PASS" starttime="20220131 13:09:12.699" endtime="20220131 13:09:12.700"/>
</kw>
<msg timestamp="20220131 13:09:12.700" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:09:12.698" endtime="20220131 13:09:12.700"/>
</kw>
<status status="PASS" starttime="20220131 13:09:12.697" endtime="20220131 13:09:12.701"/>
</kw>
<msg timestamp="20220131 13:09:12.701" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 13:09:12.697" endtime="20220131 13:09:12.701"/>
</kw>
<msg timestamp="20220131 13:09:12.701" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 13:09:12.696" endtime="20220131 13:09:12.701"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:09:12.704" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:09:15.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:09:15.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:09:12.702" endtime="20220131 13:09:15.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:09:15.416" level="INFO"/>
<status status="PASS" starttime="20220131 13:09:15.415" endtime="20220131 13:09:15.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:09:15.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:09:15.417" endtime="20220131 13:09:15.418"/>
</kw>
<status status="PASS" starttime="20220131 13:09:12.702" endtime="20220131 13:09:15.418"/>
</kw>
<msg timestamp="20220131 13:09:15.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:09:12.702" endtime="20220131 13:09:15.418"/>
</kw>
<status status="PASS" starttime="20220131 13:09:12.701" endtime="20220131 13:09:15.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:09:15.422" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:09:18.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:09:18.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:09:15.420" endtime="20220131 13:09:18.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:09:18.217" level="INFO"/>
<status status="PASS" starttime="20220131 13:09:18.216" endtime="20220131 13:09:18.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:09:18.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:09:18.217" endtime="20220131 13:09:18.218"/>
</kw>
<status status="PASS" starttime="20220131 13:09:15.420" endtime="20220131 13:09:18.218"/>
</kw>
<msg timestamp="20220131 13:09:18.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:09:15.419" endtime="20220131 13:09:18.218"/>
</kw>
<status status="PASS" starttime="20220131 13:09:15.419" endtime="20220131 13:09:18.219"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 13:09:12.695" endtime="20220131 13:09:18.219"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220131 13:08:42.978" endtime="20220131 13:09:18.220"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="192883"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="730858"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-mr">ozone-mr</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="hadoop27">ozone-mr.hadoop27</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="hadoopfs-o3fs">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="mapreduce-o3fs">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="hadoopfs-ofs">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="mapreduce-ofs">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Createmrenv">ozone-mr.hadoop27.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="hadoop31">ozone-mr.hadoop31</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="hadoopfs-o3fs">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="mapreduce-o3fs">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="hadoopfs-ofs">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="mapreduce-ofs">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="Createmrenv">ozone-mr.hadoop31.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s3" name="hadoop32">ozone-mr.hadoop32</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="hadoopfs-o3fs">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s2" name="mapreduce-o3fs">ozone-mr.hadoop32.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s3" name="hadoopfs-ofs">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s4" name="mapreduce-ofs">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="Createmrenv">ozone-mr.hadoop32.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s4" name="hadoop33">ozone-mr.hadoop33</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s1" name="hadoopfs-o3fs">ozone-mr.hadoop33.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s2" name="mapreduce-o3fs">ozone-mr.hadoop33.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s3" name="hadoopfs-ofs">ozone-mr.hadoop33.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s4" name="mapreduce-ofs">ozone-mr.hadoop33.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s5" name="Createmrenv">ozone-mr.hadoop33.Createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
