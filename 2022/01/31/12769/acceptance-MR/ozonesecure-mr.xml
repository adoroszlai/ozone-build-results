<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220131 13:15:46.308" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:14:21.871" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:14:29.345" level="INFO">${rc} = 255</msg>
<msg timestamp="20220131 13:14:29.346" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 13:14:21.867" endtime="20220131 13:14:29.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:14:29.347" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 13:14:29.346" endtime="20220131 13:14:29.347"/>
</kw>
<msg timestamp="20220131 13:14:29.347" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220131 13:14:21.866" endtime="20220131 13:14:29.347"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:14:29.358" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:14:36.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:14:36.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:14:29.349" endtime="20220131 13:14:36.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:14:36.078" level="INFO"/>
<status status="PASS" starttime="20220131 13:14:36.078" endtime="20220131 13:14:36.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:14:36.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:14:36.079" endtime="20220131 13:14:36.079"/>
</kw>
<status status="PASS" starttime="20220131 13:14:29.349" endtime="20220131 13:14:36.079"/>
</kw>
<msg timestamp="20220131 13:14:36.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:14:29.349" endtime="20220131 13:14:36.081"/>
</kw>
<msg timestamp="20220131 13:14:36.081" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220131 13:14:29.348" endtime="20220131 13:14:36.081"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:14:36.081" endtime="20220131 13:14:36.082"/>
</kw>
<status status="PASS" starttime="20220131 13:14:29.348" endtime="20220131 13:14:36.082"/>
</kw>
<status status="PASS" starttime="20220131 13:14:29.347" endtime="20220131 13:14:36.082"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:14:36.094" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:14:42.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:14:42.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:14:36.087" endtime="20220131 13:14:42.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:14:42.516" level="INFO"/>
<status status="PASS" starttime="20220131 13:14:42.516" endtime="20220131 13:14:42.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:14:42.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:14:42.517" endtime="20220131 13:14:42.517"/>
</kw>
<status status="PASS" starttime="20220131 13:14:36.084" endtime="20220131 13:14:42.517"/>
</kw>
<msg timestamp="20220131 13:14:42.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:14:36.083" endtime="20220131 13:14:42.519"/>
</kw>
<status status="PASS" starttime="20220131 13:14:36.083" endtime="20220131 13:14:42.520"/>
</kw>
<status status="PASS" starttime="20220131 13:14:36.082" endtime="20220131 13:14:42.520"/>
</kw>
<status status="PASS" starttime="20220131 13:14:36.082" endtime="20220131 13:14:42.520"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220131 13:14:42.520" endtime="20220131 13:14:42.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:14:42.528" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:14:49.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:14:49.256" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T13:14...</msg>
<status status="PASS" starttime="20220131 13:14:42.522" endtime="20220131 13:14:49.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:14:49.257" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T13:14:42.335Z",
  "modificationTime" : "2022-01-31T13:14:42.335Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20220131 13:14:49.256" endtime="20220131 13:14:49.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:14:49.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:14:49.257" endtime="20220131 13:14:49.258"/>
</kw>
<status status="PASS" starttime="20220131 13:14:42.522" endtime="20220131 13:14:49.258"/>
</kw>
<msg timestamp="20220131 13:14:49.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:14:42.521" endtime="20220131 13:14:49.259"/>
</kw>
<msg timestamp="20220131 13:14:49.259" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-01-31T13:14...</msg>
<status status="PASS" starttime="20220131 13:14:42.521" endtime="20220131 13:14:49.259"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220131 13:14:49.259" endtime="20220131 13:14:49.260"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:14:49.264" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:14:49.263" endtime="20220131 13:14:49.264"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:14:49.265" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:14:49.264" endtime="20220131 13:14:49.265"/>
</kw>
<status status="PASS" starttime="20220131 13:14:49.263" endtime="20220131 13:14:49.265"/>
</kw>
<msg timestamp="20220131 13:14:49.265" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:14:49.262" endtime="20220131 13:14:49.265"/>
</kw>
<status status="PASS" starttime="20220131 13:14:49.261" endtime="20220131 13:14:49.265"/>
</kw>
<msg timestamp="20220131 13:14:49.265" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220131 13:14:49.260" endtime="20220131 13:14:49.266"/>
</kw>
<msg timestamp="20220131 13:14:49.266" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220131 13:14:49.260" endtime="20220131 13:14:49.266"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:14:49.269" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:14:55.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:14:55.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:14:49.267" endtime="20220131 13:14:55.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:14:55.809" level="INFO"/>
<status status="PASS" starttime="20220131 13:14:55.808" endtime="20220131 13:14:55.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:14:55.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:14:55.811" endtime="20220131 13:14:55.816"/>
</kw>
<status status="PASS" starttime="20220131 13:14:49.267" endtime="20220131 13:14:55.817"/>
</kw>
<msg timestamp="20220131 13:14:55.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:14:49.266" endtime="20220131 13:14:55.817"/>
</kw>
<status status="PASS" starttime="20220131 13:14:49.266" endtime="20220131 13:14:55.817"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:14:55.829" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:15:08.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:15:08.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:14:55.819" endtime="20220131 13:15:08.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:15:08.514" level="INFO"/>
<status status="PASS" starttime="20220131 13:15:08.514" endtime="20220131 13:15:08.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:15:08.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:15:08.515" endtime="20220131 13:15:08.515"/>
</kw>
<status status="PASS" starttime="20220131 13:14:55.818" endtime="20220131 13:15:08.515"/>
</kw>
<msg timestamp="20220131 13:15:08.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:14:55.818" endtime="20220131 13:15:08.516"/>
</kw>
<status status="PASS" starttime="20220131 13:14:55.817" endtime="20220131 13:15:08.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:15:08.520" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:15:18.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:15:18.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:15:08.518" endtime="20220131 13:15:18.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:15:18.935" level="INFO"/>
<status status="PASS" starttime="20220131 13:15:18.935" endtime="20220131 13:15:18.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:15:18.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:15:18.936" endtime="20220131 13:15:18.936"/>
</kw>
<status status="PASS" starttime="20220131 13:15:08.517" endtime="20220131 13:15:18.936"/>
</kw>
<msg timestamp="20220131 13:15:18.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:15:08.517" endtime="20220131 13:15:18.937"/>
</kw>
<status status="PASS" starttime="20220131 13:15:08.516" endtime="20220131 13:15:18.937"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:15:18.941" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:15:28.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:15:28.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:15:18.939" endtime="20220131 13:15:28.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:15:28.767" level="INFO"/>
<status status="PASS" starttime="20220131 13:15:28.767" endtime="20220131 13:15:28.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:15:28.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:15:28.767" endtime="20220131 13:15:28.768"/>
</kw>
<status status="PASS" starttime="20220131 13:15:18.938" endtime="20220131 13:15:28.768"/>
</kw>
<msg timestamp="20220131 13:15:28.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:15:18.938" endtime="20220131 13:15:28.769"/>
</kw>
<status status="PASS" starttime="20220131 13:15:18.938" endtime="20220131 13:15:28.769"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 13:14:21.865" endtime="20220131 13:15:28.769"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220131 13:15:28.775" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220131 13:15:28.775" endtime="20220131 13:15:28.775"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220131 13:15:28.776" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220131 13:15:28.775" endtime="20220131 13:15:28.776"/>
</kw>
<status status="PASS" starttime="20220131 13:15:28.774" endtime="20220131 13:15:28.776"/>
</kw>
<msg timestamp="20220131 13:15:28.776" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220131 13:15:28.773" endtime="20220131 13:15:28.776"/>
</kw>
<status status="PASS" starttime="20220131 13:15:28.773" endtime="20220131 13:15:28.777"/>
</kw>
<msg timestamp="20220131 13:15:28.777" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 13:15:28.772" endtime="20220131 13:15:28.777"/>
</kw>
<msg timestamp="20220131 13:15:28.777" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220131 13:15:28.772" endtime="20220131 13:15:28.777"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:15:28.780" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:15:34.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:15:34.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:15:28.778" endtime="20220131 13:15:34.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:15:34.840" level="INFO"/>
<status status="PASS" starttime="20220131 13:15:34.839" endtime="20220131 13:15:34.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:15:34.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:15:34.840" endtime="20220131 13:15:34.840"/>
</kw>
<status status="PASS" starttime="20220131 13:15:28.778" endtime="20220131 13:15:34.841"/>
</kw>
<msg timestamp="20220131 13:15:34.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:15:28.778" endtime="20220131 13:15:34.841"/>
</kw>
<status status="PASS" starttime="20220131 13:15:28.777" endtime="20220131 13:15:34.841"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:15:34.849" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:15:40.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:15:40.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:15:34.843" endtime="20220131 13:15:40.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:15:40.940" level="INFO"/>
<status status="PASS" starttime="20220131 13:15:40.939" endtime="20220131 13:15:40.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:15:40.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:15:40.940" endtime="20220131 13:15:40.941"/>
</kw>
<status status="PASS" starttime="20220131 13:15:34.842" endtime="20220131 13:15:40.941"/>
</kw>
<msg timestamp="20220131 13:15:40.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:15:34.842" endtime="20220131 13:15:40.942"/>
</kw>
<status status="PASS" starttime="20220131 13:15:34.842" endtime="20220131 13:15:40.942"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 13:15:28.770" endtime="20220131 13:15:40.942"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220131 13:14:21.803" endtime="20220131 13:15:40.944"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:14:16.348" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:14:16.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:14:16.355" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220131 13:14:16.343" endtime="20220131 13:14:16.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:14:16.356" level="INFO">om</msg>
<status status="PASS" starttime="20220131 13:14:16.355" endtime="20220131 13:14:16.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:14:16.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:14:16.356" endtime="20220131 13:14:16.356"/>
</kw>
<status status="PASS" starttime="20220131 13:14:16.342" endtime="20220131 13:14:16.357"/>
</kw>
<msg timestamp="20220131 13:14:16.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:14:16.342" endtime="20220131 13:14:16.358"/>
</kw>
<msg timestamp="20220131 13:14:16.358" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20220131 13:14:16.341" endtime="20220131 13:14:16.358"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220131 13:14:16.359" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220131 13:14:16.358" endtime="20220131 13:14:16.359"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220131 13:14:16.362" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220131 13:14:16.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20220131 13:14:16.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220131 13:14:16.361" endtime="20220131 13:14:16.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220131 13:14:16.371" level="INFO"/>
<status status="PASS" starttime="20220131 13:14:16.371" endtime="20220131 13:14:16.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220131 13:14:16.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220131 13:14:16.372" endtime="20220131 13:14:16.372"/>
</kw>
<status status="PASS" starttime="20220131 13:14:16.360" endtime="20220131 13:14:16.372"/>
</kw>
<msg timestamp="20220131 13:14:16.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220131 13:14:16.360" endtime="20220131 13:14:16.373"/>
</kw>
<status status="PASS" starttime="20220131 13:14:16.359" endtime="20220131 13:14:16.373"/>
</kw>
<status status="PASS" starttime="20220131 13:14:16.359" endtime="20220131 13:14:16.373"/>
</kw>
<status status="PASS" starttime="20220131 13:14:16.340" endtime="20220131 13:14:16.373"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220131 13:14:16.340" endtime="20220131 13:14:16.373"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220131 13:14:16.287" endtime="20220131 13:14:16.376"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="79230"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
