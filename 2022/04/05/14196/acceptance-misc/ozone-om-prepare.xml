<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0 (Python 3.6.9 on linux)" generated="20220405 03:38:09.406" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:33:53.901" level="INFO">${random} = 99854</msg>
<status status="PASS" starttime="20220405 03:33:53.901" endtime="20220405 03:33:53.901"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220405 03:33:53.903" level="INFO">${volume_name} = 99854-volume-for-cancel</msg>
<status status="PASS" starttime="20220405 03:33:53.902" endtime="20220405 03:33:53.903"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220405 03:33:53.904" level="INFO">${bucket_name} = 99854-bucket-for-cancel</msg>
<status status="PASS" starttime="20220405 03:33:53.903" endtime="20220405 03:33:53.904"/>
</kw>
<status status="PASS" starttime="20220405 03:33:53.901" endtime="20220405 03:33:53.904"/>
</kw>
<test id="s1-s1-t1" name="Cancel Ozone Manager Prepare">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:33:53.905" endtime="20220405 03:33:53.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:53.910" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:33:56.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:33:56.211" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20220405 03:33:53.907" endtime="20220405 03:33:56.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:33:56.212" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20220405 03:33:56.211" endtime="20220405 03:33:56.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:33:56.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:33:56.212" endtime="20220405 03:33:56.213"/>
</kw>
<status status="PASS" starttime="20220405 03:33:53.906" endtime="20220405 03:33:56.213"/>
</kw>
<msg timestamp="20220405 03:33:56.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:33:53.906" endtime="20220405 03:33:56.214"/>
</kw>
<msg timestamp="20220405 03:33:56.215" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20220405 03:33:53.906" endtime="20220405 03:33:56.215"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:33:56.215" endtime="20220405 03:33:56.216"/>
</kw>
<status status="PASS" starttime="20220405 03:33:56.215" endtime="20220405 03:33:56.216"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:33:53.905" endtime="20220405 03:33:56.216"/>
</test>
<test id="s1-s1-t2" name="Test write operations">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:33:56.218" endtime="20220405 03:33:56.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:56.222" level="INFO">Running command 'ozone sh volume create /99854-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:33:58.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:33:58.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:33:56.220" endtime="20220405 03:33:58.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:33:58.338" level="INFO"/>
<status status="PASS" starttime="20220405 03:33:58.337" endtime="20220405 03:33:58.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:33:58.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:33:58.338" endtime="20220405 03:33:58.339"/>
</kw>
<status status="PASS" starttime="20220405 03:33:56.219" endtime="20220405 03:33:58.339"/>
</kw>
<msg timestamp="20220405 03:33:58.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:33:56.219" endtime="20220405 03:33:58.340"/>
</kw>
<status status="PASS" starttime="20220405 03:33:56.219" endtime="20220405 03:33:58.340"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:58.345" level="INFO">Running command 'ozone sh bucket create /99854-volume-for-cancel/99854-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:00.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:34:00.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:33:58.342" endtime="20220405 03:34:00.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:00.468" level="INFO"/>
<status status="PASS" starttime="20220405 03:34:00.467" endtime="20220405 03:34:00.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:00.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:00.468" endtime="20220405 03:34:00.469"/>
</kw>
<status status="PASS" starttime="20220405 03:33:58.341" endtime="20220405 03:34:00.469"/>
</kw>
<msg timestamp="20220405 03:34:00.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:33:58.341" endtime="20220405 03:34:00.470"/>
</kw>
<status status="PASS" starttime="20220405 03:33:58.340" endtime="20220405 03:34:00.470"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:00.474" level="INFO">Running command 'ozone sh key put /99854-volume-for-cancel/99854-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:04.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:34:04.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:34:00.472" endtime="20220405 03:34:04.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:04.684" level="INFO"/>
<status status="PASS" starttime="20220405 03:34:04.683" endtime="20220405 03:34:04.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:04.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:04.685" endtime="20220405 03:34:04.685"/>
</kw>
<status status="PASS" starttime="20220405 03:34:00.472" endtime="20220405 03:34:04.686"/>
</kw>
<msg timestamp="20220405 03:34:04.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:34:00.471" endtime="20220405 03:34:04.686"/>
</kw>
<msg timestamp="20220405 03:34:04.686" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220405 03:34:00.470" endtime="20220405 03:34:04.686"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:04.690" level="INFO">Running command 'ozone sh key info /99854-volume-for-cancel/99854-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:07.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:34:07.150" level="INFO">${output} = {
  "volumeName" : "99854-volume-for-cancel",
  "bucketName" : "99854-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17526,
  "creationTime" : "2022-04-05T03:34:02.612Z",
  "modificationT...</msg>
<status status="PASS" starttime="20220405 03:34:04.688" endtime="20220405 03:34:07.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:07.151" level="INFO">{
  "volumeName" : "99854-volume-for-cancel",
  "bucketName" : "99854-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17526,
  "creationTime" : "2022-04-05T03:34:02.612Z",
  "modificationTime" : "2022-04-05T03:34:04.316Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 7,
    "localID" : 109611004723200103,
    "length" : 17526,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { },
  "replicationFactor" : 1,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20220405 03:34:07.150" endtime="20220405 03:34:07.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:07.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:07.151" endtime="20220405 03:34:07.152"/>
</kw>
<status status="PASS" starttime="20220405 03:34:04.687" endtime="20220405 03:34:07.152"/>
</kw>
<msg timestamp="20220405 03:34:07.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:34:04.687" endtime="20220405 03:34:07.153"/>
</kw>
<msg timestamp="20220405 03:34:07.153" level="INFO">${result} = {
  "volumeName" : "99854-volume-for-cancel",
  "bucketName" : "99854-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17526,
  "creationTime" : "2022-04-05T03:34:02.612Z",
  "modificationT...</msg>
<status status="PASS" starttime="20220405 03:34:04.687" endtime="20220405 03:34:07.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:34:07.154" endtime="20220405 03:34:07.155"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:33:56.217" endtime="20220405 03:34:07.156"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20220405 03:33:53.850" endtime="20220405 03:34:07.158"/>
</suite>
<suite id="s1-s2" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:11.563" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:33.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:34:33.038" level="INFO">${output} = 2022-04-05 03:34:12,748 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:34:12,844 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:34:11.560" endtime="20220405 03:34:33.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:33.039" level="INFO">2022-04-05 03:34:12,748 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:34:12,844 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:34:12,845 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:34:13,010 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare
2022-04-05 03:34:13,092 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:34:14,100 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:34:14,157 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:34:14,380 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-05 03:34:15,113 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2022-04-05 03:34:16,113 [Thread-3] INFO freon.ProgressBar: Progress: 14.00 % (14 out of 100)
2022-04-05 03:34:17,114 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2022-04-05 03:34:18,114 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2022-04-05 03:34:19,115 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2022-04-05 03:34:20,115 [Thread-3] INFO freon.ProgressBar: Progress: 32.00 % (32 out of 100)
2022-04-05 03:34:21,116 [Thread-3] INFO freon.ProgressBar: Progress: 32.00 % (32 out of 100)
2022-04-05 03:34:22,116 [Thread-3] INFO freon.ProgressBar: Progress: 32.00 % (32 out of 100)
2022-04-05 03:34:23,118 [Thread-3] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2022-04-05 03:34:24,118 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2022-04-05 03:34:25,119 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2022-04-05 03:34:26,119 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2022-04-05 03:34:27,120 [Thread-3] INFO freon.ProgressBar: Progress: 63.00 % (63 out of 100)
2022-04-05 03:34:28,121 [Thread-3] INFO freon.ProgressBar: Progress: 79.00 % (79 out of 100)
2022-04-05 03:34:29,122 [Thread-3] INFO freon.ProgressBar: Progress: 84.00 % (84 out of 100)
2022-04-05 03:34:30,123 [Thread-3] INFO freon.ProgressBar: Progress: 84.00 % (84 out of 100)
2022-04-05 03:34:31,123 [Thread-3] INFO freon.ProgressBar: Progress: 87.00 % (87 out of 100)
2022-04-05 03:34:32,124 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-04-05 03:34:32,681 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=43.353483, max=2578.424562, mean=182.81649391170117, stddev=504.0428176218607, median=70.724571, p75=81.765967, p95=115.858053, p98=2563.273282, p99=2571.76996, p999=2578.424562, mean_rate=5.252196901748555, m1=5.299782439823992, m5=5.219998171117322, m15=5.206666598364602, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:34:32,681 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 20
2022-04-05 03:34:32,681 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:34:32,681 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220405 03:34:33.038" endtime="20220405 03:34:33.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:33.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:33.039" endtime="20220405 03:34:33.040"/>
</kw>
<status status="PASS" starttime="20220405 03:34:11.559" endtime="20220405 03:34:33.040"/>
</kw>
<msg timestamp="20220405 03:34:33.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:34:11.559" endtime="20220405 03:34:33.041"/>
</kw>
<msg timestamp="20220405 03:34:33.042" level="INFO">${result} = 2022-04-05 03:34:12,748 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:34:12,844 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:34:11.559" endtime="20220405 03:34:33.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:34:33.042" endtime="20220405 03:34:33.042"/>
</kw>
<status status="PASS" starttime="20220405 03:34:11.558" endtime="20220405 03:34:33.043"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:34:33.043" level="INFO">${random} = 30350</msg>
<status status="PASS" starttime="20220405 03:34:33.043" endtime="20220405 03:34:33.043"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220405 03:34:33.045" level="INFO">${volume_name} = 30350-volume-for-prepare</msg>
<status status="PASS" starttime="20220405 03:34:33.043" endtime="20220405 03:34:33.045"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220405 03:34:33.046" level="INFO">${bucket_name} = 30350-bucket-for-prepare</msg>
<status status="PASS" starttime="20220405 03:34:33.045" endtime="20220405 03:34:33.047"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:33.050" level="INFO">Running command 'ozone sh volume create /30350-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:34.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:34:34.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:34:33.048" endtime="20220405 03:34:34.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:34.967" level="INFO"/>
<status status="PASS" starttime="20220405 03:34:34.967" endtime="20220405 03:34:34.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:34.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:34.967" endtime="20220405 03:34:34.968"/>
</kw>
<status status="PASS" starttime="20220405 03:34:33.048" endtime="20220405 03:34:34.968"/>
</kw>
<msg timestamp="20220405 03:34:34.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:34:33.047" endtime="20220405 03:34:34.969"/>
</kw>
<status status="PASS" starttime="20220405 03:34:33.047" endtime="20220405 03:34:34.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:34.972" level="INFO">Running command 'ozone sh bucket create /30350-volume-for-prepare/30350-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:36.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:34:36.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:34:34.970" endtime="20220405 03:34:36.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:36.902" level="INFO"/>
<status status="PASS" starttime="20220405 03:34:36.901" endtime="20220405 03:34:36.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:36.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:36.902" endtime="20220405 03:34:36.902"/>
</kw>
<status status="PASS" starttime="20220405 03:34:34.970" endtime="20220405 03:34:36.903"/>
</kw>
<msg timestamp="20220405 03:34:36.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:34:34.970" endtime="20220405 03:34:36.903"/>
</kw>
<status status="PASS" starttime="20220405 03:34:34.969" endtime="20220405 03:34:36.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:36.907" level="INFO">Running command 'ozone sh key put /30350-volume-for-prepare/30350-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:40.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:34:40.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:34:36.905" endtime="20220405 03:34:40.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:40.907" level="INFO"/>
<status status="PASS" starttime="20220405 03:34:40.906" endtime="20220405 03:34:40.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:40.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:40.907" endtime="20220405 03:34:40.908"/>
</kw>
<status status="PASS" starttime="20220405 03:34:36.905" endtime="20220405 03:34:40.908"/>
</kw>
<msg timestamp="20220405 03:34:40.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:34:36.904" endtime="20220405 03:34:40.909"/>
</kw>
<status status="PASS" starttime="20220405 03:34:36.904" endtime="20220405 03:34:40.909"/>
</kw>
<status status="PASS" starttime="20220405 03:34:11.557" endtime="20220405 03:34:40.909"/>
</kw>
<test id="s1-s2-t1" name="Prepare Ozone Manager">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:34:40.910" endtime="20220405 03:34:40.911"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:40.915" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:48.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:34:48.215" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220405 03:34:40.913" endtime="20220405 03:34:48.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:48.216" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20220405 03:34:48.215" endtime="20220405 03:34:48.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:48.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:48.216" endtime="20220405 03:34:48.217"/>
</kw>
<status status="PASS" starttime="20220405 03:34:40.912" endtime="20220405 03:34:48.217"/>
</kw>
<msg timestamp="20220405 03:34:48.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:34:40.912" endtime="20220405 03:34:48.218"/>
</kw>
<msg timestamp="20220405 03:34:48.218" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220405 03:34:40.911" endtime="20220405 03:34:48.218"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:34:48.219" endtime="20220405 03:34:48.219"/>
</kw>
<status status="PASS" starttime="20220405 03:34:48.218" endtime="20220405 03:34:48.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:34:40.909" endtime="20220405 03:34:48.219"/>
</test>
<test id="s1-s2-t2" name="Checks if the expected data is present in OM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:34:48.221" endtime="20220405 03:34:48.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:48.225" level="INFO">Running command 'ozone sh key info /30350-volume-for-prepare/30350-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:50.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:34:50.527" level="INFO">${output} = {
  "volumeName" : "30350-volume-for-prepare",
  "bucketName" : "30350-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-04-05T03:34:38.987Z",
  "modificati...</msg>
<status status="PASS" starttime="20220405 03:34:48.223" endtime="20220405 03:34:50.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:50.528" level="INFO">{
  "volumeName" : "30350-volume-for-prepare",
  "bucketName" : "30350-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-04-05T03:34:38.987Z",
  "modificationTime" : "2022-04-05T03:34:40.549Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 8,
    "localID" : 109611004723200204,
    "length" : 17526,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { },
  "replicationType" : "RATIS",
  "replicationFactor" : 1
}</msg>
<status status="PASS" starttime="20220405 03:34:50.527" endtime="20220405 03:34:50.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:50.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:50.528" endtime="20220405 03:34:50.529"/>
</kw>
<status status="PASS" starttime="20220405 03:34:48.222" endtime="20220405 03:34:50.529"/>
</kw>
<msg timestamp="20220405 03:34:50.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:34:48.222" endtime="20220405 03:34:50.530"/>
</kw>
<msg timestamp="20220405 03:34:50.530" level="INFO">${result} = {
  "volumeName" : "30350-volume-for-prepare",
  "bucketName" : "30350-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-04-05T03:34:38.987Z",
  "modificati...</msg>
<status status="PASS" starttime="20220405 03:34:48.221" endtime="20220405 03:34:50.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:34:50.530" endtime="20220405 03:34:50.531"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:34:48.220" endtime="20220405 03:34:50.531"/>
</test>
<test id="s1-s2-t3" name="Test write operation fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:34:50.532" endtime="20220405 03:34:50.532"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:50.535" level="INFO">Running command 'ozone sh key put /30350-volume-for-prepare/30350-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:52.607" level="INFO">${rc} = 255</msg>
<msg timestamp="20220405 03:34:52.607" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:34:50.533" endtime="20220405 03:34:52.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:52.610" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:34:52.608" endtime="20220405 03:34:52.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:52.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:52.610" endtime="20220405 03:34:52.611"/>
</kw>
<msg timestamp="20220405 03:34:52.611" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:34:50.533" endtime="20220405 03:34:52.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:34:52.611" endtime="20220405 03:34:52.612"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:52.615" level="INFO">Running command 'ozone sh key info /30350-volume-for-prepare/30350-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:34:54.748" level="INFO">${rc} = 255</msg>
<msg timestamp="20220405 03:34:54.748" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220405 03:34:52.613" endtime="20220405 03:34:54.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:34:54.750" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220405 03:34:54.749" endtime="20220405 03:34:54.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:34:54.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:34:54.750" endtime="20220405 03:34:54.750"/>
</kw>
<status status="PASS" starttime="20220405 03:34:52.612" endtime="20220405 03:34:54.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:34:50.531" endtime="20220405 03:34:54.751"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20220405 03:34:11.500" endtime="20220405 03:34:54.752"/>
</suite>
<suite id="s1-s3" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s3-t1" name="Test create volume fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:34:58.952" endtime="20220405 03:34:58.953"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:34:58.954" level="INFO">${random} = 24702</msg>
<status status="PASS" starttime="20220405 03:34:58.953" endtime="20220405 03:34:58.954"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220405 03:34:58.955" level="INFO">${volume_name} = 24702-volume-for-prepare</msg>
<status status="PASS" starttime="20220405 03:34:58.954" endtime="20220405 03:34:58.955"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:34:58.961" level="INFO">Running command 'ozone sh volume create /24702-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:35:01.056" level="INFO">${rc} = 255</msg>
<msg timestamp="20220405 03:35:01.056" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:34:58.956" endtime="20220405 03:35:01.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:35:01.057" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:35:01.056" endtime="20220405 03:35:01.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:35:01.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:35:01.057" endtime="20220405 03:35:01.058"/>
</kw>
<msg timestamp="20220405 03:35:01.058" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:34:58.956" endtime="20220405 03:35:01.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:35:01.059" endtime="20220405 03:35:01.059"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:35:01.062" level="INFO">Running command 'ozone sh volume info /24702-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:35:03.059" level="INFO">${rc} = 255</msg>
<msg timestamp="20220405 03:35:03.059" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24702-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220405 03:35:01.060" endtime="20220405 03:35:03.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:35:03.061" level="INFO">VOLUME_NOT_FOUND Volume 24702-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220405 03:35:03.060" endtime="20220405 03:35:03.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:35:03.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:35:03.061" endtime="20220405 03:35:03.062"/>
</kw>
<msg timestamp="20220405 03:35:03.062" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24702-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220405 03:35:01.059" endtime="20220405 03:35:03.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:35:03.062" endtime="20220405 03:35:03.063"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:34:58.952" endtime="20220405 03:35:03.063"/>
</test>
<test id="s1-s3-t2" name="Test list volumes succeeds">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:35:03.064" endtime="20220405 03:35:03.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:35:03.068" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:35:05.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:35:05.486" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "99854-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20220405 03:35:03.066" endtime="20220405 03:35:05.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:35:05.487" level="INFO">[ {
  "metadata" : { },
  "name" : "99854-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-04-05T03:33:58.248Z",
  "modificationTime" : "2022-04-05T03:33:58.248Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-04-05T03:32:45.834Z",
  "modificationTime" : "2022-04-05T03:32:45.834Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-04-05T03:33:03.623Z",
  "modificationTime" : "2022-04-05T03:33:03.623Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "22739-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-04-05T03:33:29.380Z",
  "modificationTime" : "2022-04-05T03:33:29.380Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "30350-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-04-05T03:34:34.872Z",
  "modificationTime" : "2022-04-05T03:34:34.872Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
} ]</msg>
<status status="PASS" starttime="20220405 03:35:05.487" endtime="20220405 03:35:05.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:35:05.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:35:05.488" endtime="20220405 03:35:05.488"/>
</kw>
<status status="PASS" starttime="20220405 03:35:03.066" endtime="20220405 03:35:05.489"/>
</kw>
<msg timestamp="20220405 03:35:05.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:35:03.065" endtime="20220405 03:35:05.490"/>
</kw>
<msg timestamp="20220405 03:35:05.490" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "99854-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20220405 03:35:03.065" endtime="20220405 03:35:05.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:35:03.064" endtime="20220405 03:35:05.490"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20220405 03:34:58.897" endtime="20220405 03:35:05.491"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:36:23.295" endtime="20220405 03:36:23.295"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:36:23.296" level="INFO">${random} = 00570</msg>
<status status="PASS" starttime="20220405 03:36:23.296" endtime="20220405 03:36:23.296"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220405 03:36:23.297" level="INFO">${volume_name} = 00570-volume-for-prepare</msg>
<status status="PASS" starttime="20220405 03:36:23.296" endtime="20220405 03:36:23.297"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:36:23.301" level="INFO">Running command 'ozone sh volume create /00570-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:36:25.466" level="INFO">${rc} = 255</msg>
<msg timestamp="20220405 03:36:25.466" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:36:23.298" endtime="20220405 03:36:25.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:36:25.468" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:36:25.467" endtime="20220405 03:36:25.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:36:25.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:36:25.468" endtime="20220405 03:36:25.469"/>
</kw>
<msg timestamp="20220405 03:36:25.469" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:36:23.297" endtime="20220405 03:36:25.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:36:25.469" endtime="20220405 03:36:25.469"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:36:25.472" level="INFO">Running command 'ozone sh volume info /00570-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:36:27.491" level="INFO">${rc} = 255</msg>
<msg timestamp="20220405 03:36:27.491" level="INFO">${output} = VOLUME_NOT_FOUND Volume 00570-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220405 03:36:25.470" endtime="20220405 03:36:27.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:36:27.492" level="INFO">VOLUME_NOT_FOUND Volume 00570-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220405 03:36:27.491" endtime="20220405 03:36:27.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:36:27.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:36:27.492" endtime="20220405 03:36:27.493"/>
</kw>
<msg timestamp="20220405 03:36:27.493" level="INFO">${result} = VOLUME_NOT_FOUND Volume 00570-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220405 03:36:25.470" endtime="20220405 03:36:27.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:36:27.493" endtime="20220405 03:36:27.494"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:36:23.294" endtime="20220405 03:36:27.494"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:36:27.496" endtime="20220405 03:36:27.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:36:27.500" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:36:29.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:36:29.978" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "99854-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20220405 03:36:27.498" endtime="20220405 03:36:29.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:36:29.979" level="INFO">[ {
  "metadata" : { },
  "name" : "99854-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-04-05T03:33:58.248Z",
  "modificationTime" : "2022-04-05T03:33:58.248Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-04-05T03:32:49.630Z",
  "modificationTime" : "2022-04-05T03:32:49.630Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-04-05T03:33:03.623Z",
  "modificationTime" : "2022-04-05T03:33:03.623Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "22739-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-04-05T03:33:29.380Z",
  "modificationTime" : "2022-04-05T03:33:29.380Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "30350-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-04-05T03:34:34.872Z",
  "modificationTime" : "2022-04-05T03:34:34.872Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
} ]</msg>
<status status="PASS" starttime="20220405 03:36:29.978" endtime="20220405 03:36:29.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:36:29.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:36:29.980" endtime="20220405 03:36:29.981"/>
</kw>
<status status="PASS" starttime="20220405 03:36:27.497" endtime="20220405 03:36:29.981"/>
</kw>
<msg timestamp="20220405 03:36:29.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:36:27.497" endtime="20220405 03:36:29.982"/>
</kw>
<msg timestamp="20220405 03:36:29.982" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "99854-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20220405 03:36:27.497" endtime="20220405 03:36:29.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:36:27.495" endtime="20220405 03:36:29.983"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20220405 03:36:23.242" endtime="20220405 03:36:29.984"/>
</suite>
<suite id="s1-s5" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s5-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:37:35.662" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:37:38.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:37:38.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:37:35.659" endtime="20220405 03:37:38.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:37:38.144" level="INFO"/>
<status status="PASS" starttime="20220405 03:37:38.144" endtime="20220405 03:37:38.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:37:38.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:37:38.145" endtime="20220405 03:37:38.146"/>
</kw>
<status status="PASS" starttime="20220405 03:37:35.658" endtime="20220405 03:37:38.146"/>
</kw>
<msg timestamp="20220405 03:37:38.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:37:35.658" endtime="20220405 03:37:38.147"/>
</kw>
<msg timestamp="20220405 03:37:38.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:37:35.657" endtime="20220405 03:37:38.148"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:37:38.148" endtime="20220405 03:37:38.148"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:37:38.165" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:37:40.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:37:40.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:37:38.163" endtime="20220405 03:37:40.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:37:40.504" level="INFO"/>
<status status="PASS" starttime="20220405 03:37:40.503" endtime="20220405 03:37:40.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:37:40.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:37:40.504" endtime="20220405 03:37:40.504"/>
</kw>
<status status="PASS" starttime="20220405 03:37:38.154" endtime="20220405 03:37:40.505"/>
</kw>
<msg timestamp="20220405 03:37:40.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:37:38.151" endtime="20220405 03:37:40.507"/>
</kw>
<msg timestamp="20220405 03:37:40.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:37:38.148" endtime="20220405 03:37:40.507"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:37:40.507" endtime="20220405 03:37:40.508"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:37:40.511" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:37:45.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:37:45.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:37:40.509" endtime="20220405 03:37:45.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:37:45.427" level="INFO"/>
<status status="PASS" starttime="20220405 03:37:45.426" endtime="20220405 03:37:45.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:37:45.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:37:45.427" endtime="20220405 03:37:45.427"/>
</kw>
<status status="PASS" starttime="20220405 03:37:40.508" endtime="20220405 03:37:45.428"/>
</kw>
<msg timestamp="20220405 03:37:45.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:37:40.508" endtime="20220405 03:37:45.428"/>
</kw>
<msg timestamp="20220405 03:37:45.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:37:40.508" endtime="20220405 03:37:45.429"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:37:45.429" endtime="20220405 03:37:45.429"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:37:35.657" endtime="20220405 03:37:45.429"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:37:35.606" endtime="20220405 03:37:45.431"/>
</suite>
<suite id="s1-s6" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:37:50.060" level="INFO">${random} = 26711</msg>
<status status="PASS" starttime="20220405 03:37:50.060" endtime="20220405 03:37:50.060"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:37:50.068" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-26711 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:37:53.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:37:53.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:37:50.062" endtime="20220405 03:37:53.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:37:53.941" level="INFO"/>
<status status="PASS" starttime="20220405 03:37:53.940" endtime="20220405 03:37:53.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:37:53.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:37:53.941" endtime="20220405 03:37:53.942"/>
</kw>
<status status="PASS" starttime="20220405 03:37:50.061" endtime="20220405 03:37:53.942"/>
</kw>
<msg timestamp="20220405 03:37:53.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:37:50.061" endtime="20220405 03:37:53.944"/>
</kw>
<msg timestamp="20220405 03:37:53.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:37:50.060" endtime="20220405 03:37:53.944"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:37:53.944" endtime="20220405 03:37:53.944"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:37:50.059" endtime="20220405 03:37:53.945"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:37:50.003" endtime="20220405 03:37:53.946"/>
</suite>
<suite id="s1-s7" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:01.525" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:33:27.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:33:27.268" level="INFO">${output} = 2022-04-05 03:33:02,711 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:33:02,801 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:33:01.522" endtime="20220405 03:33:27.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:33:27.269" level="INFO">2022-04-05 03:33:02,711 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:33:02,801 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:33:02,801 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:33:02,964 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare
2022-04-05 03:33:03,055 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:33:03,608 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-04-05 03:33:03,771 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with hadoop as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2022-04-05 03:33:04,063 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:33:04,877 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:33:05,125 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:33:05,209 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-05 03:33:06,126 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:33:07,126 [Thread-3] INFO freon.ProgressBar: Progress: 3.00 % (3 out of 100)
2022-04-05 03:33:08,127 [Thread-3] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2022-04-05 03:33:09,128 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2022-04-05 03:33:10,128 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2022-04-05 03:33:11,129 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2022-04-05 03:33:12,129 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2022-04-05 03:33:13,130 [Thread-3] INFO freon.ProgressBar: Progress: 33.00 % (33 out of 100)
2022-04-05 03:33:14,130 [Thread-3] INFO freon.ProgressBar: Progress: 39.00 % (39 out of 100)
2022-04-05 03:33:15,131 [Thread-3] INFO freon.ProgressBar: Progress: 39.00 % (39 out of 100)
2022-04-05 03:33:16,131 [Thread-3] INFO freon.ProgressBar: Progress: 39.00 % (39 out of 100)
2022-04-05 03:33:17,132 [Thread-3] INFO freon.ProgressBar: Progress: 44.00 % (44 out of 100)
2022-04-05 03:33:18,132 [Thread-3] INFO freon.ProgressBar: Progress: 44.00 % (44 out of 100)
2022-04-05 03:33:19,132 [Thread-3] INFO freon.ProgressBar: Progress: 45.00 % (45 out of 100)
2022-04-05 03:33:20,133 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2022-04-05 03:33:21,134 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2022-04-05 03:33:22,134 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2022-04-05 03:33:23,134 [Thread-3] INFO freon.ProgressBar: Progress: 62.00 % (62 out of 100)
2022-04-05 03:33:24,135 [Thread-3] INFO freon.ProgressBar: Progress: 75.00 % (75 out of 100)
2022-04-05 03:33:25,135 [Thread-3] INFO freon.ProgressBar: Progress: 89.00 % (89 out of 100)
2022-04-05 03:33:26,136 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-04-05 03:33:26,913 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=52.265376, max=2592.994228, mean=214.1873108358939, stddev=530.9371648580276, median=88.106361, p75=107.778851, p95=454.562693, p98=2570.161645, p99=2592.93564, p999=2592.994228, mean_rate=4.3352680323576696, m1=3.324808806011357, m5=3.2262880798547813, m15=3.2088460652853312, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:33:26,914 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 24
2022-04-05 03:33:26,914 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:33:26,914 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220405 03:33:27.269" endtime="20220405 03:33:27.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:33:27.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:33:27.269" endtime="20220405 03:33:27.270"/>
</kw>
<status status="PASS" starttime="20220405 03:33:01.521" endtime="20220405 03:33:27.270"/>
</kw>
<msg timestamp="20220405 03:33:27.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:33:01.521" endtime="20220405 03:33:27.271"/>
</kw>
<msg timestamp="20220405 03:33:27.272" level="INFO">${result} = 2022-04-05 03:33:02,711 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:33:02,801 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:33:01.520" endtime="20220405 03:33:27.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:33:27.272" endtime="20220405 03:33:27.272"/>
</kw>
<status status="PASS" starttime="20220405 03:33:01.519" endtime="20220405 03:33:27.272"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:33:27.273" level="INFO">${random} = 22739</msg>
<status status="PASS" starttime="20220405 03:33:27.273" endtime="20220405 03:33:27.273"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220405 03:33:27.275" level="INFO">${volume_name} = 22739-volume-for-prepare</msg>
<status status="PASS" starttime="20220405 03:33:27.273" endtime="20220405 03:33:27.275"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220405 03:33:27.276" level="INFO">${bucket_name} = 22739-bucket-for-prepare</msg>
<status status="PASS" starttime="20220405 03:33:27.275" endtime="20220405 03:33:27.276"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:27.280" level="INFO">Running command 'ozone sh volume create /22739-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:33:29.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:33:29.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:33:27.278" endtime="20220405 03:33:29.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:33:29.476" level="INFO"/>
<status status="PASS" starttime="20220405 03:33:29.475" endtime="20220405 03:33:29.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:33:29.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:33:29.476" endtime="20220405 03:33:29.476"/>
</kw>
<status status="PASS" starttime="20220405 03:33:27.277" endtime="20220405 03:33:29.477"/>
</kw>
<msg timestamp="20220405 03:33:29.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:33:27.277" endtime="20220405 03:33:29.477"/>
</kw>
<status status="PASS" starttime="20220405 03:33:27.276" endtime="20220405 03:33:29.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:29.480" level="INFO">Running command 'ozone sh bucket create /22739-volume-for-prepare/22739-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:33:31.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:33:31.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:33:29.479" endtime="20220405 03:33:31.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:33:31.587" level="INFO"/>
<status status="PASS" starttime="20220405 03:33:31.586" endtime="20220405 03:33:31.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:33:31.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:33:31.587" endtime="20220405 03:33:31.587"/>
</kw>
<status status="PASS" starttime="20220405 03:33:29.478" endtime="20220405 03:33:31.588"/>
</kw>
<msg timestamp="20220405 03:33:31.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:33:29.478" endtime="20220405 03:33:31.588"/>
</kw>
<status status="PASS" starttime="20220405 03:33:29.478" endtime="20220405 03:33:31.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:31.592" level="INFO">Running command 'ozone sh key put /22739-volume-for-prepare/22739-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:33:35.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:33:35.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:33:31.590" endtime="20220405 03:33:35.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:33:35.420" level="INFO"/>
<status status="PASS" starttime="20220405 03:33:35.419" endtime="20220405 03:33:35.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:33:35.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:33:35.420" endtime="20220405 03:33:35.420"/>
</kw>
<status status="PASS" starttime="20220405 03:33:31.590" endtime="20220405 03:33:35.421"/>
</kw>
<msg timestamp="20220405 03:33:35.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:33:31.589" endtime="20220405 03:33:35.421"/>
</kw>
<status status="PASS" starttime="20220405 03:33:31.589" endtime="20220405 03:33:35.422"/>
</kw>
<status status="PASS" starttime="20220405 03:33:01.519" endtime="20220405 03:33:35.422"/>
</kw>
<test id="s1-s7-t1" name="Prepare Ozone Manager">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:33:35.423" endtime="20220405 03:33:35.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:35.426" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:33:42.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:33:42.842" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220405 03:33:35.425" endtime="20220405 03:33:42.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:33:42.843" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20220405 03:33:42.842" endtime="20220405 03:33:42.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:33:42.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:33:42.843" endtime="20220405 03:33:42.844"/>
</kw>
<status status="PASS" starttime="20220405 03:33:35.424" endtime="20220405 03:33:42.844"/>
</kw>
<msg timestamp="20220405 03:33:42.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:33:35.424" endtime="20220405 03:33:42.845"/>
</kw>
<msg timestamp="20220405 03:33:42.845" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220405 03:33:35.423" endtime="20220405 03:33:42.845"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:33:42.845" endtime="20220405 03:33:42.846"/>
</kw>
<status status="PASS" starttime="20220405 03:33:42.845" endtime="20220405 03:33:42.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:33:35.422" endtime="20220405 03:33:42.846"/>
</test>
<test id="s1-s7-t2" name="Checks if the expected data is present in OM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:33:42.847" endtime="20220405 03:33:42.848"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:42.851" level="INFO">Running command 'ozone sh key info /22739-volume-for-prepare/22739-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:33:45.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:33:45.378" level="INFO">${output} = {
  "volumeName" : "22739-volume-for-prepare",
  "bucketName" : "22739-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-04-05T03:33:33.633Z",
  "modificati...</msg>
<status status="PASS" starttime="20220405 03:33:42.849" endtime="20220405 03:33:45.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:33:45.379" level="INFO">{
  "volumeName" : "22739-volume-for-prepare",
  "bucketName" : "22739-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-04-05T03:33:33.633Z",
  "modificationTime" : "2022-04-05T03:33:35.047Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 109611004723200101,
    "length" : 17526,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { },
  "replicationType" : "RATIS",
  "replicationFactor" : 1
}</msg>
<status status="PASS" starttime="20220405 03:33:45.379" endtime="20220405 03:33:45.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:33:45.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:33:45.380" endtime="20220405 03:33:45.380"/>
</kw>
<status status="PASS" starttime="20220405 03:33:42.849" endtime="20220405 03:33:45.380"/>
</kw>
<msg timestamp="20220405 03:33:45.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:33:42.848" endtime="20220405 03:33:45.381"/>
</kw>
<msg timestamp="20220405 03:33:45.381" level="INFO">${result} = {
  "volumeName" : "22739-volume-for-prepare",
  "bucketName" : "22739-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-04-05T03:33:33.633Z",
  "modificati...</msg>
<status status="PASS" starttime="20220405 03:33:42.848" endtime="20220405 03:33:45.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:33:45.381" endtime="20220405 03:33:45.382"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:33:42.847" endtime="20220405 03:33:45.382"/>
</test>
<test id="s1-s7-t3" name="Test write operation fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:33:45.384" endtime="20220405 03:33:45.384"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:45.387" level="INFO">Running command 'ozone sh key put /22739-volume-for-prepare/22739-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:33:47.434" level="INFO">${rc} = 255</msg>
<msg timestamp="20220405 03:33:47.434" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:33:45.385" endtime="20220405 03:33:47.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:33:47.435" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:33:47.434" endtime="20220405 03:33:47.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:33:47.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:33:47.435" endtime="20220405 03:33:47.436"/>
</kw>
<msg timestamp="20220405 03:33:47.436" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220405 03:33:45.384" endtime="20220405 03:33:47.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:33:47.437" endtime="20220405 03:33:47.437"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:33:47.439" level="INFO">Running command 'ozone sh key info /22739-volume-for-prepare/22739-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:33:49.495" level="INFO">${rc} = 255</msg>
<msg timestamp="20220405 03:33:49.495" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220405 03:33:47.438" endtime="20220405 03:33:49.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:33:49.496" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220405 03:33:49.496" endtime="20220405 03:33:49.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:33:49.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:33:49.497" endtime="20220405 03:33:49.497"/>
</kw>
<status status="PASS" starttime="20220405 03:33:47.437" endtime="20220405 03:33:49.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:33:45.383" endtime="20220405 03:33:49.498"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20220405 03:33:01.461" endtime="20220405 03:33:49.499"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="131702"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Readdata">ozone-om-prepare.Readdata</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
