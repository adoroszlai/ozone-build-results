<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0 (Python 3.6.9 on linux)" generated="20220405 03:41:54.855" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:39:43.156" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:39:46.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:39:46.238" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220405 03:39:43.153" endtime="20220405 03:39:46.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:39:46.240" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20220405 03:39:46.239" endtime="20220405 03:39:46.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:39:46.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:39:46.240" endtime="20220405 03:39:46.240"/>
</kw>
<status status="PASS" starttime="20220405 03:39:43.152" endtime="20220405 03:39:46.241"/>
</kw>
<msg timestamp="20220405 03:39:46.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:39:43.152" endtime="20220405 03:39:46.242"/>
</kw>
<msg timestamp="20220405 03:39:46.243" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220405 03:39:43.152" endtime="20220405 03:39:46.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:39:46.243" endtime="20220405 03:39:46.243"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:39:43.151" endtime="20220405 03:39:46.243"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:39:46.248" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:39:49.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:39:49.250" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20220405 03:39:46.246" endtime="20220405 03:39:49.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:39:49.255" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20220405 03:39:49.251" endtime="20220405 03:39:49.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:39:49.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:39:49.255" endtime="20220405 03:39:49.256"/>
</kw>
<status status="PASS" starttime="20220405 03:39:46.245" endtime="20220405 03:39:49.257"/>
</kw>
<msg timestamp="20220405 03:39:49.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:39:46.245" endtime="20220405 03:39:49.257"/>
</kw>
<msg timestamp="20220405 03:39:49.257" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20220405 03:39:46.245" endtime="20220405 03:39:49.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:39:49.258" endtime="20220405 03:39:49.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:39:49.258" endtime="20220405 03:39:49.259"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:39:46.244" endtime="20220405 03:39:49.259"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:39:49.264" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:39:52.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:39:52.252" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220405 03:39:49.262" endtime="20220405 03:39:52.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:39:52.253" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20220405 03:39:52.253" endtime="20220405 03:39:52.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:39:52.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:39:52.254" endtime="20220405 03:39:52.254"/>
</kw>
<status status="PASS" starttime="20220405 03:39:49.261" endtime="20220405 03:39:52.255"/>
</kw>
<msg timestamp="20220405 03:39:52.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:39:49.261" endtime="20220405 03:39:52.255"/>
</kw>
<msg timestamp="20220405 03:39:52.255" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220405 03:39:49.260" endtime="20220405 03:39:52.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:39:52.256" endtime="20220405 03:39:52.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:39:49.259" endtime="20220405 03:39:52.256"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:39:52.261" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:39:55.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:39:55.242" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220405 03:39:52.259" endtime="20220405 03:39:55.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:39:55.243" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20220405 03:39:55.242" endtime="20220405 03:39:55.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:39:55.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:39:55.243" endtime="20220405 03:39:55.244"/>
</kw>
<status status="PASS" starttime="20220405 03:39:52.258" endtime="20220405 03:39:55.244"/>
</kw>
<msg timestamp="20220405 03:39:55.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:39:52.258" endtime="20220405 03:39:55.244"/>
</kw>
<msg timestamp="20220405 03:39:55.245" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20220405 03:39:52.258" endtime="20220405 03:39:55.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:39:55.245" endtime="20220405 03:39:55.245"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:39:52.257" endtime="20220405 03:39:55.246"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:39:43.099" endtime="20220405 03:39:55.248"/>
</suite>
<suite id="s1-s2" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:39:59.706" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:40:02.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:40:02.627" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:39:59.703" endtime="20220405 03:40:02.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:40:02.628" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:40:02.627" endtime="20220405 03:40:02.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:40:02.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:40:02.628" endtime="20220405 03:40:02.629"/>
</kw>
<status status="PASS" starttime="20220405 03:39:59.702" endtime="20220405 03:40:02.629"/>
</kw>
<msg timestamp="20220405 03:40:02.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:39:59.702" endtime="20220405 03:40:02.630"/>
</kw>
<msg timestamp="20220405 03:40:02.631" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:39:59.702" endtime="20220405 03:40:02.631"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:40:02.631" endtime="20220405 03:40:02.631"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:40:02.634" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:40:05.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:40:05.560" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:40:02.633" endtime="20220405 03:40:05.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:40:05.561" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:40:05.560" endtime="20220405 03:40:05.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:40:05.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:40:05.562" endtime="20220405 03:40:05.562"/>
</kw>
<status status="PASS" starttime="20220405 03:40:02.632" endtime="20220405 03:40:05.563"/>
</kw>
<msg timestamp="20220405 03:40:05.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:40:02.632" endtime="20220405 03:40:05.563"/>
</kw>
<msg timestamp="20220405 03:40:05.563" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:40:02.631" endtime="20220405 03:40:05.563"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:40:05.564" endtime="20220405 03:40:05.564"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:40:05.567" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:40:10.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:40:10.689" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:40:05.565" endtime="20220405 03:40:10.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:40:10.691" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:40:10.690" endtime="20220405 03:40:10.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:40:10.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:40:10.691" endtime="20220405 03:40:10.692"/>
</kw>
<status status="PASS" starttime="20220405 03:40:05.565" endtime="20220405 03:40:10.692"/>
</kw>
<msg timestamp="20220405 03:40:10.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:40:05.565" endtime="20220405 03:40:10.692"/>
</kw>
<msg timestamp="20220405 03:40:10.693" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:40:05.564" endtime="20220405 03:40:10.693"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:40:10.693" endtime="20220405 03:40:10.693"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:39:59.701" endtime="20220405 03:40:10.694"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:39:59.649" endtime="20220405 03:40:10.695"/>
</suite>
<suite id="s1-s3" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s3-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:40:26.362" level="INFO">${random} = 86444</msg>
<status status="PASS" starttime="20220405 03:40:26.361" endtime="20220405 03:40:26.362"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:40:26.366" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-86444 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:40:31.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:40:31.016" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:40:26.363" endtime="20220405 03:40:31.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:40:31.017" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:40:31.017" endtime="20220405 03:40:31.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:40:31.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:40:31.017" endtime="20220405 03:40:31.018"/>
</kw>
<status status="PASS" starttime="20220405 03:40:26.363" endtime="20220405 03:40:31.018"/>
</kw>
<msg timestamp="20220405 03:40:31.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:40:26.362" endtime="20220405 03:40:31.020"/>
</kw>
<msg timestamp="20220405 03:40:31.020" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:40:26.362" endtime="20220405 03:40:31.020"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:40:31.020" endtime="20220405 03:40:31.020"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:40:26.360" endtime="20220405 03:40:31.021"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:40:26.310" endtime="20220405 03:40:31.022"/>
</suite>
<suite id="s1-s4" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:41:12.873" level="INFO">${random} = 77902</msg>
<status status="PASS" starttime="20220405 03:41:12.872" endtime="20220405 03:41:12.873"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:41:12.879" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-77902 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:41:39.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:41:39.387" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:41:12.874" endtime="20220405 03:41:39.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:41:39.388" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:41:39.387" endtime="20220405 03:41:39.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:41:39.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:41:39.388" endtime="20220405 03:41:39.389"/>
</kw>
<status status="PASS" starttime="20220405 03:41:12.874" endtime="20220405 03:41:39.389"/>
</kw>
<msg timestamp="20220405 03:41:39.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:41:12.874" endtime="20220405 03:41:39.390"/>
</kw>
<msg timestamp="20220405 03:41:39.390" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220405 03:41:12.873" endtime="20220405 03:41:39.390"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:41:39.391" endtime="20220405 03:41:39.391"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:41:12.871" endtime="20220405 03:41:39.391"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:41:12.810" endtime="20220405 03:41:39.392"/>
</suite>
<suite id="s1-s5" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s5-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:39:20.734" endtime="20220405 03:39:20.734"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:39:20.743" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:39:20.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:39:20.855" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 05 Apr 2022 03:39:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 05 Apr 2022 03:18:36 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20220405 03:39:20.736" endtime="20220405 03:39:20.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:39:20.856" level="INFO">HTTP/1.1 200 OK
Date: Tue, 05 Apr 2022 03:39:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 05 Apr 2022 03:18:36 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220405 03:39:20.855" endtime="20220405 03:39:20.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:39:20.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:39:20.856" endtime="20220405 03:39:20.857"/>
</kw>
<status status="PASS" starttime="20220405 03:39:20.735" endtime="20220405 03:39:20.857"/>
</kw>
<msg timestamp="20220405 03:39:20.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:39:20.735" endtime="20220405 03:39:20.858"/>
</kw>
<msg timestamp="20220405 03:39:20.859" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 05 Apr 2022 03:39:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 05 Apr 2022 03:18:36 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20220405 03:39:20.735" endtime="20220405 03:39:20.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:39:20.859" endtime="20220405 03:39:20.859"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:39:20.733" endtime="20220405 03:39:20.860"/>
</test>
<test id="s1-s5-t2" name="Basic Freon smoketest">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:39:20.862" endtime="20220405 03:39:20.863"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:39:20.863" level="INFO">${random} = 6xVNkpxOSp</msg>
<status status="PASS" starttime="20220405 03:39:20.863" endtime="20220405 03:39:20.863"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:39:20.871" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 6xVNkpxOSp  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:39:32.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:39:32.395" level="INFO">${output} = 2022-04-05 03:39:23,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:39:23,287 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:39:20.869" endtime="20220405 03:39:32.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:39:32.396" level="INFO">2022-04-05 03:39:23,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:39:23,287 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:39:23,287 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:39:23,477 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6xVNkpxOSp
2022-04-05 03:39:23,545 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:24,547 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:25,548 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:26,548 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:27,551 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:27,592 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-04-05 03:39:27,855 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with hadoop as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2022-04-05 03:39:28,554 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:29,107 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:39:29,396 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-05 03:39:29,554 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:30,555 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:31,555 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:39:32,023 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3350.891348, max=3350.891348, mean=3350.891348, stddev=0.0, median=3350.891348, p75=3350.891348, p95=3350.891348, p98=3350.891348, p99=3350.891348, p999=3350.891348, mean_rate=0.2453557895016847, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:39:32,024 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2022-04-05 03:39:32,025 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:39:32,025 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:39:32.396" endtime="20220405 03:39:32.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:39:32.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:39:32.397" endtime="20220405 03:39:32.397"/>
</kw>
<status status="PASS" starttime="20220405 03:39:20.869" endtime="20220405 03:39:32.397"/>
</kw>
<msg timestamp="20220405 03:39:32.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:39:20.868" endtime="20220405 03:39:32.398"/>
</kw>
<msg timestamp="20220405 03:39:32.398" level="INFO">${result} = 2022-04-05 03:39:23,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:39:23,287 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:39:20.867" endtime="20220405 03:39:32.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:39:32.399" endtime="20220405 03:39:32.399"/>
</kw>
<status status="PASS" starttime="20220405 03:39:20.864" endtime="20220405 03:39:32.399"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:39:32.407" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 6xVNkpxOSp  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:39:38.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:39:38.564" level="INFO">${output} = 2022-04-05 03:39:34,267 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:39:34,413 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:39:32.403" endtime="20220405 03:39:38.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:39:38.565" level="INFO">2022-04-05 03:39:34,267 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:39:34,413 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:39:34,413 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:39:34,579 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6xVNkpxOSp
2022-04-05 03:39:34,670 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:35,676 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:36,395 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:39:36,677 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:39:37,678 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:39:38,205 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=57.056901, max=57.056901, mean=57.056901, stddev=0.0, median=57.056901, p75=57.056901, p95=57.056901, p98=57.056901, p99=57.056901, p999=57.056901, mean_rate=0.9542947687271829, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:39:38,206 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-04-05 03:39:38,206 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:39:38,206 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:39:38.564" endtime="20220405 03:39:38.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:39:38.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:39:38.565" endtime="20220405 03:39:38.566"/>
</kw>
<status status="PASS" starttime="20220405 03:39:32.402" endtime="20220405 03:39:38.569"/>
</kw>
<msg timestamp="20220405 03:39:38.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:39:32.402" endtime="20220405 03:39:38.570"/>
</kw>
<msg timestamp="20220405 03:39:38.570" level="INFO">${result} = 2022-04-05 03:39:34,267 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:39:34,413 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:39:32.400" endtime="20220405 03:39:38.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:39:38.571" endtime="20220405 03:39:38.571"/>
</kw>
<status status="PASS" starttime="20220405 03:39:32.399" endtime="20220405 03:39:38.571"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:39:20.862" endtime="20220405 03:39:38.571"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:39:20.669" endtime="20220405 03:39:38.573"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="72393"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
