<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0 (Python 3.6.9 on linux)" generated="20220405 03:49:59.280" rpa="false" schemaversion="3">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Validator">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:47:28.649" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:47:33.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:47:33.151" level="INFO">${output} = 2022-04-05 03:47:29,766 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:29,891 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:28.646" endtime="20220405 03:47:33.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:47:33.153" level="INFO">2022-04-05 03:47:29,766 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:29,891 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:47:29,892 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:47:30,035 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2022-04-05 03:47:30,131 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:47:31,120 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:47:31,137 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:47:32,137 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:47:32,790 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=47.512899, max=47.512899, mean=47.512899, stddev=0.0, median=47.512899, p75=47.512899, p95=47.512899, p98=47.512899, p99=47.512899, p999=47.512899, mean_rate=0.9769413252176056, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:47:32,791 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-04-05 03:47:32,791 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:47:32,791 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:47:33.152" endtime="20220405 03:47:33.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:47:33.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:47:33.153" endtime="20220405 03:47:33.154"/>
</kw>
<status status="PASS" starttime="20220405 03:47:28.645" endtime="20220405 03:47:33.154"/>
</kw>
<msg timestamp="20220405 03:47:33.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:47:28.645" endtime="20220405 03:47:33.155"/>
</kw>
<msg timestamp="20220405 03:47:33.156" level="INFO">${result} = 2022-04-05 03:47:29,766 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:29,891 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:28.645" endtime="20220405 03:47:33.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:47:33.156" endtime="20220405 03:47:33.157"/>
</kw>
<status status="PASS" starttime="20220405 03:47:28.643" endtime="20220405 03:47:33.157"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:47:28.643" endtime="20220405 03:47:33.157"/>
</test>
<test id="s1-s1-t2" name="DN Chunk Validator">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:47:33.160" endtime="20220405 03:47:33.161"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:47:33.164" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:47:37.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:47:37.601" level="INFO">${output} = 2022-04-05 03:47:34,301 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:34,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:33.162" endtime="20220405 03:47:37.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:47:37.602" level="INFO">2022-04-05 03:47:34,301 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:34,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:47:34,414 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:47:34,563 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre
2022-04-05 03:47:34,651 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:47:35,078 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=b10f020c-7aac-47ef-b003-6df7f6772775
2022-04-05 03:47:35,513 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:47:35,661 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:47:35,673 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-05 03:47:36,662 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-04-05 03:47:37,249 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.710796, max=9.56248, mean=3.7547321099999955, stddev=1.6922481013899817, median=3.309193, p75=4.69169, p95=6.729286, p98=8.628082, p99=8.770482, p999=9.56248, mean_rate=97.15811238778642, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:47:37,250 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-04-05 03:47:37,250 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:47:37,250 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220405 03:47:37.602" endtime="20220405 03:47:37.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:47:37.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:47:37.603" endtime="20220405 03:47:37.603"/>
</kw>
<status status="PASS" starttime="20220405 03:47:33.162" endtime="20220405 03:47:37.603"/>
</kw>
<msg timestamp="20220405 03:47:37.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:47:33.161" endtime="20220405 03:47:37.604"/>
</kw>
<msg timestamp="20220405 03:47:37.605" level="INFO">${result} = 2022-04-05 03:47:34,301 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:34,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:33.161" endtime="20220405 03:47:37.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:47:37.605" endtime="20220405 03:47:37.605"/>
</kw>
<status status="PASS" starttime="20220405 03:47:33.159" endtime="20220405 03:47:37.605"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:47:33.158" endtime="20220405 03:47:37.606"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20220405 03:47:28.597" endtime="20220405 03:47:37.607"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:48:40.798" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:48:45.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:48:45.825" level="INFO">${output} = 2022-04-05 03:48:41,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:48:42,035 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:48:40.794" endtime="20220405 03:48:45.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:48:45.826" level="INFO">2022-04-05 03:48:41,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:48:42,035 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:48:42,038 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:48:42,187 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2022-04-05 03:48:42,281 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:48:43,289 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:48:43,626 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:48:44,290 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:48:45,290 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:48:45,446 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=45.236916, max=45.236916, mean=45.236916, stddev=0.0, median=45.236916, p75=45.236916, p95=45.236916, p98=45.236916, p99=45.236916, p999=45.236916, mean_rate=0.9842694102228954, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:48:45,447 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-04-05 03:48:45,447 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:48:45,447 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:48:45.825" endtime="20220405 03:48:45.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:48:45.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:48:45.826" endtime="20220405 03:48:45.827"/>
</kw>
<status status="PASS" starttime="20220405 03:48:40.794" endtime="20220405 03:48:45.828"/>
</kw>
<msg timestamp="20220405 03:48:45.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:48:40.794" endtime="20220405 03:48:45.829"/>
</kw>
<msg timestamp="20220405 03:48:45.829" level="INFO">${result} = 2022-04-05 03:48:41,923 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:48:42,035 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:48:40.793" endtime="20220405 03:48:45.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:48:45.829" endtime="20220405 03:48:45.830"/>
</kw>
<status status="PASS" starttime="20220405 03:48:40.792" endtime="20220405 03:48:45.830"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:48:40.791" endtime="20220405 03:48:45.831"/>
</test>
<test id="s1-s2-t2" name="DN Chunk Validator">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:48:45.834" endtime="20220405 03:48:45.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:48:45.838" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:49:09.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:49:09.864" level="INFO">${output} = 2022-04-05 03:48:47,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:48:47,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:48:45.836" endtime="20220405 03:49:09.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:49:09.865" level="INFO">2022-04-05 03:48:47,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:48:47,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:48:47,204 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:48:47,360 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre
2022-04-05 03:48:47,471 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:48,187 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=b10f020c-7aac-47ef-b003-6df7f6772775
2022-04-05 03:48:48,472 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:48,637 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:48:48,813 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-05 03:48:49,473 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:50,473 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:51,473 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:52,474 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:53,474 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:54,475 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:55,476 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:56,476 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:57,477 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:58,477 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:48:59,478 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:00,478 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:01,479 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:02,479 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:03,480 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:04,481 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:05,481 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:06,481 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:07,482 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:08,482 [Thread-3] INFO freon.ProgressBar: Progress: 67.00 % (67 out of 100)
2022-04-05 03:49:09,483 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-04-05 03:49:09,507 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.020596, max=8.489785, mean=3.434742779999998, stddev=1.3983527510936329, median=2.986794, p75=4.131593, p95=6.386488, p98=7.444986, p99=8.471585, p999=8.489785, mean_rate=78.80736613964409, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:49:09,508 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 22
2022-04-05 03:49:09,508 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:49:09,508 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220405 03:49:09.865" endtime="20220405 03:49:09.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:49:09.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:49:09.866" endtime="20220405 03:49:09.866"/>
</kw>
<status status="PASS" starttime="20220405 03:48:45.835" endtime="20220405 03:49:09.867"/>
</kw>
<msg timestamp="20220405 03:49:09.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:48:45.835" endtime="20220405 03:49:09.867"/>
</kw>
<msg timestamp="20220405 03:49:09.868" level="INFO">${result} = 2022-04-05 03:48:47,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:48:47,204 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:48:45.834" endtime="20220405 03:49:09.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:49:09.868" endtime="20220405 03:49:09.868"/>
</kw>
<status status="PASS" starttime="20220405 03:48:45.832" endtime="20220405 03:49:09.869"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:48:45.831" endtime="20220405 03:49:09.869"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20220405 03:48:40.740" endtime="20220405 03:49:09.870"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s3-t1" name="Ozone Client Key Generator">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:49:13.943" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:49:18.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:49:18.943" level="INFO">${output} = 2022-04-05 03:49:15,204 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:15,300 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:13.941" endtime="20220405 03:49:18.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:49:18.944" level="INFO">2022-04-05 03:49:15,204 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:15,300 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:49:15,300 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:49:15,473 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2022-04-05 03:49:15,535 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:49:16,551 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:49:16,745 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:49:16,928 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-05 03:49:17,555 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:49:18,555 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:49:18,589 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1732.898023, max=1732.898023, mean=1732.898023, stddev=0.0, median=1732.898023, p75=1732.898023, p95=1732.898023, p98=1732.898023, p99=1732.898023, p999=1732.898023, mean_rate=0.3968422897087705, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:49:18,590 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-04-05 03:49:18,591 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:49:18,591 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:49:18.943" endtime="20220405 03:49:18.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:49:18.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:49:18.944" endtime="20220405 03:49:18.945"/>
</kw>
<status status="PASS" starttime="20220405 03:49:13.940" endtime="20220405 03:49:18.945"/>
</kw>
<msg timestamp="20220405 03:49:18.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:49:13.940" endtime="20220405 03:49:18.947"/>
</kw>
<msg timestamp="20220405 03:49:18.947" level="INFO">${result} = 2022-04-05 03:49:15,204 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:15,300 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:13.939" endtime="20220405 03:49:18.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:49:18.947" endtime="20220405 03:49:18.947"/>
</kw>
<status status="PASS" starttime="20220405 03:49:13.938" endtime="20220405 03:49:18.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:49:13.937" endtime="20220405 03:49:18.948"/>
</test>
<test id="s1-s3-t2" name="OM Key Generator">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:49:18.955" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:49:22.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:49:22.060" level="INFO">${output} = 2022-04-05 03:49:20,133 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:20,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:18.952" endtime="20220405 03:49:22.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:49:22.061" level="INFO">2022-04-05 03:49:20,133 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:20,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:49:20,267 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:49:20,417 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost
2022-04-05 03:49:20,487 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:49:21,492 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:49:22,011 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=88.351445, max=88.351445, mean=88.351445, stddev=0.0, median=88.351445, p75=88.351445, p95=88.351445, p98=88.351445, p99=88.351445, p999=88.351445, mean_rate=0.9791430765193039, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:49:22,013 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-04-05 03:49:22,015 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:49:22,015 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:49:22.060" endtime="20220405 03:49:22.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:49:22.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:49:22.061" endtime="20220405 03:49:22.062"/>
</kw>
<status status="PASS" starttime="20220405 03:49:18.952" endtime="20220405 03:49:22.063"/>
</kw>
<msg timestamp="20220405 03:49:22.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:49:18.952" endtime="20220405 03:49:22.063"/>
</kw>
<msg timestamp="20220405 03:49:22.064" level="INFO">${result} = 2022-04-05 03:49:20,133 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:20,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:18.951" endtime="20220405 03:49:22.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:49:22.064" endtime="20220405 03:49:22.064"/>
</kw>
<status status="PASS" starttime="20220405 03:49:18.950" endtime="20220405 03:49:22.065"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:49:18.949" endtime="20220405 03:49:22.065"/>
</test>
<test id="s1-s3-t3" name="OM Bucket Generator">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:49:22.073" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:49:25.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:49:25.265" level="INFO">${output} = 2022-04-05 03:49:23,238 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:23,406 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:22.071" endtime="20220405 03:49:25.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:49:25.267" level="INFO">2022-04-05 03:49:23,238 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:23,406 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:49:23,406 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:49:23,574 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost
2022-04-05 03:49:23,643 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:49:24,648 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:49:25,197 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=15.127073, max=15.127073, mean=15.127073, stddev=0.0, median=15.127073, p75=15.127073, p95=15.127073, p98=15.127073, p99=15.127073, p999=15.127073, mean_rate=0.9855484866389517, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:49:25,198 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-04-05 03:49:25,198 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:49:25,198 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:49:25.266" endtime="20220405 03:49:25.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:49:25.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:49:25.267" endtime="20220405 03:49:25.267"/>
</kw>
<status status="PASS" starttime="20220405 03:49:22.070" endtime="20220405 03:49:25.268"/>
</kw>
<msg timestamp="20220405 03:49:25.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:49:22.070" endtime="20220405 03:49:25.268"/>
</kw>
<msg timestamp="20220405 03:49:25.269" level="INFO">${result} = 2022-04-05 03:49:23,238 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:23,406 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:22.069" endtime="20220405 03:49:25.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:49:25.269" endtime="20220405 03:49:25.269"/>
</kw>
<status status="PASS" starttime="20220405 03:49:22.067" endtime="20220405 03:49:25.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:49:22.066" endtime="20220405 03:49:25.270"/>
</test>
<test id="s1-s3-t4" name="DN Chunk Generator">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:49:25.276" endtime="20220405 03:49:25.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:49:25.280" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:49:31.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:49:31.362" level="INFO">${output} = 2022-04-05 03:49:26,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:26,822 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:25.278" endtime="20220405 03:49:31.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:49:31.363" level="INFO">2022-04-05 03:49:26,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:26,822 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:49:26,822 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:49:27,351 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost
2022-04-05 03:49:27,383 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:27,837 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:49:28,052 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-05 03:49:28,392 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:29,393 [Thread-4] INFO freon.ProgressBar: Progress: 40.00 % (40 out of 100)
2022-04-05 03:49:30,393 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-04-05 03:49:31,008 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=7.928287, max=610.499537, mean=23.71497341438868, stddev=58.754777829253825, median=16.670371, p75=20.356064, p95=28.596451, p98=37.298235, p99=45.361121, p999=610.499537, mean_rate=32.71311144139977, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:49:31,008 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-04-05 03:49:31,009 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:49:31,009 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220405 03:49:31.363" endtime="20220405 03:49:31.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:49:31.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:49:31.364" endtime="20220405 03:49:31.364"/>
</kw>
<status status="PASS" starttime="20220405 03:49:25.278" endtime="20220405 03:49:31.365"/>
</kw>
<msg timestamp="20220405 03:49:31.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:49:25.278" endtime="20220405 03:49:31.366"/>
</kw>
<msg timestamp="20220405 03:49:31.366" level="INFO">${result} = 2022-04-05 03:49:26,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:26,822 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:25.277" endtime="20220405 03:49:31.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:49:31.366" endtime="20220405 03:49:31.367"/>
</kw>
<status status="PASS" starttime="20220405 03:49:25.275" endtime="20220405 03:49:31.367"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:49:25.274" endtime="20220405 03:49:31.367"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20220405 03:49:13.891" endtime="20220405 03:49:31.368"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:49:35.510" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:49:39.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:49:39.936" level="INFO">${output} = 2022-04-05 03:49:36,597 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:36,727 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:35.507" endtime="20220405 03:49:39.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:49:39.937" level="INFO">2022-04-05 03:49:36,597 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:36,727 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:49:36,727 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:49:36,893 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2022-04-05 03:49:36,988 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:49:37,939 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:49:37,993 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:49:38,994 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:49:39,576 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=45.765122, max=45.765122, mean=45.765122, stddev=0.0, median=45.765122, p75=45.765122, p95=45.765122, p98=45.765122, p99=45.765122, p999=45.765122, mean_rate=0.9883529825862514, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:49:39,577 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-04-05 03:49:39,577 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:49:39,577 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:49:39.936" endtime="20220405 03:49:39.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:49:39.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:49:39.937" endtime="20220405 03:49:39.938"/>
</kw>
<status status="PASS" starttime="20220405 03:49:35.506" endtime="20220405 03:49:39.938"/>
</kw>
<msg timestamp="20220405 03:49:39.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:49:35.506" endtime="20220405 03:49:39.939"/>
</kw>
<msg timestamp="20220405 03:49:39.940" level="INFO">${result} = 2022-04-05 03:49:36,597 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:36,727 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:35.506" endtime="20220405 03:49:39.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:49:39.940" endtime="20220405 03:49:39.940"/>
</kw>
<status status="PASS" starttime="20220405 03:49:35.504" endtime="20220405 03:49:39.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:49:35.503" endtime="20220405 03:49:39.941"/>
</test>
<test id="s1-s4-t2" name="DN Chunk Validator">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:49:39.943" endtime="20220405 03:49:39.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:49:39.947" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:49:44.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:49:44.234" level="INFO">${output} = 2022-04-05 03:49:41,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:41,121 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:39.945" endtime="20220405 03:49:44.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:49:44.235" level="INFO">2022-04-05 03:49:41,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:41,121 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:49:41,121 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:49:41,281 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost
2022-04-05 03:49:41,377 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:41,747 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=b10f020c-7aac-47ef-b003-6df7f6772775
2022-04-05 03:49:42,201 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:49:42,373 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-05 03:49:42,382 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:49:43,382 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-04-05 03:49:43,867 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.853297, max=22.129062, mean=4.130992615686594, stddev=2.6902396100573056, median=3.181495, p75=5.148392, p95=8.899885, p98=9.892584, p99=22.129062, p999=22.129062, mean_rate=96.71271134353178, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:49:43,867 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-04-05 03:49:43,867 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:49:43,867 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220405 03:49:44.234" endtime="20220405 03:49:44.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:49:44.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:49:44.236" endtime="20220405 03:49:44.236"/>
</kw>
<status status="PASS" starttime="20220405 03:49:39.945" endtime="20220405 03:49:44.237"/>
</kw>
<msg timestamp="20220405 03:49:44.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:49:39.945" endtime="20220405 03:49:44.237"/>
</kw>
<msg timestamp="20220405 03:49:44.237" level="INFO">${result} = 2022-04-05 03:49:41,027 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:49:41,121 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:49:39.944" endtime="20220405 03:49:44.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:49:44.238" endtime="20220405 03:49:44.238"/>
</kw>
<status status="PASS" starttime="20220405 03:49:39.942" endtime="20220405 03:49:44.238"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:49:39.941" endtime="20220405 03:49:44.238"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20220405 03:49:35.454" endtime="20220405 03:49:44.240"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Generator">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:47:07.067" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:47:11.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:47:11.987" level="INFO">${output} = 2022-04-05 03:47:08,171 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:08,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:07.064" endtime="20220405 03:47:11.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:47:11.988" level="INFO">2022-04-05 03:47:08,171 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:08,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:47:08,267 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:47:08,442 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2022-04-05 03:47:08,584 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:47:09,463 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-04-05 03:47:09,565 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with hadoop as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2022-04-05 03:47:09,592 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:47:10,097 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:47:10,279 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-05 03:47:10,593 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:47:11,593 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:47:11,634 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1872.744671, max=1872.744671, mean=1872.744671, stddev=0.0, median=1872.744671, p75=1872.744671, p95=1872.744671, p98=1872.744671, p99=1872.744671, p999=1872.744671, mean_rate=0.4910086951742901, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:47:11,634 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-04-05 03:47:11,634 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:47:11,635 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:47:11.988" endtime="20220405 03:47:11.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:47:11.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:47:11.988" endtime="20220405 03:47:11.989"/>
</kw>
<status status="PASS" starttime="20220405 03:47:07.064" endtime="20220405 03:47:11.989"/>
</kw>
<msg timestamp="20220405 03:47:11.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:47:07.064" endtime="20220405 03:47:11.991"/>
</kw>
<msg timestamp="20220405 03:47:11.991" level="INFO">${result} = 2022-04-05 03:47:08,171 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:08,267 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:07.063" endtime="20220405 03:47:11.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:47:11.991" endtime="20220405 03:47:11.992"/>
</kw>
<status status="PASS" starttime="20220405 03:47:07.062" endtime="20220405 03:47:11.992"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:47:07.061" endtime="20220405 03:47:11.992"/>
</test>
<test id="s1-s5-t2" name="OM Key Generator">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:47:11.998" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:47:15.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:47:15.131" level="INFO">${output} = 2022-04-05 03:47:13,167 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:13,287 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:11.997" endtime="20220405 03:47:15.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:47:15.132" level="INFO">2022-04-05 03:47:13,167 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:13,287 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:47:13,287 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:47:13,445 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2022-04-05 03:47:13,534 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:47:14,540 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:47:15,087 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=56.694376, max=56.694376, mean=56.694376, stddev=0.0, median=56.694376, p75=56.694376, p95=56.694376, p98=56.694376, p99=56.694376, p999=56.694376, mean_rate=0.9826942897262165, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:47:15,092 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-04-05 03:47:15,092 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:47:15,092 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:47:15.132" endtime="20220405 03:47:15.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:47:15.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:47:15.133" endtime="20220405 03:47:15.133"/>
</kw>
<status status="PASS" starttime="20220405 03:47:11.996" endtime="20220405 03:47:15.134"/>
</kw>
<msg timestamp="20220405 03:47:15.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:47:11.996" endtime="20220405 03:47:15.134"/>
</kw>
<msg timestamp="20220405 03:47:15.134" level="INFO">${result} = 2022-04-05 03:47:13,167 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:13,287 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:11.995" endtime="20220405 03:47:15.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:47:15.135" endtime="20220405 03:47:15.135"/>
</kw>
<status status="PASS" starttime="20220405 03:47:11.994" endtime="20220405 03:47:15.135"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:47:11.993" endtime="20220405 03:47:15.135"/>
</test>
<test id="s1-s5-t3" name="OM Bucket Generator">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:47:15.141" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:47:18.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:47:18.267" level="INFO">${output} = 2022-04-05 03:47:16,363 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:16,454 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:15.139" endtime="20220405 03:47:18.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:47:18.268" level="INFO">2022-04-05 03:47:16,363 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:16,454 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:47:16,454 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:47:16,594 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2022-04-05 03:47:16,656 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-05 03:47:17,662 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-05 03:47:18,225 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=28.676938, max=28.676938, mean=28.676938, stddev=0.0, median=28.676938, p75=28.676938, p95=28.676938, p98=28.676938, p99=28.676938, p999=28.676938, mean_rate=0.9877578321550844, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:47:18,226 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-04-05 03:47:18,226 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:47:18,226 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220405 03:47:18.267" endtime="20220405 03:47:18.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:47:18.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:47:18.268" endtime="20220405 03:47:18.269"/>
</kw>
<status status="PASS" starttime="20220405 03:47:15.138" endtime="20220405 03:47:18.269"/>
</kw>
<msg timestamp="20220405 03:47:18.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:47:15.138" endtime="20220405 03:47:18.269"/>
</kw>
<msg timestamp="20220405 03:47:18.270" level="INFO">${result} = 2022-04-05 03:47:16,363 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:16,454 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:15.138" endtime="20220405 03:47:18.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:47:18.270" endtime="20220405 03:47:18.270"/>
</kw>
<status status="PASS" starttime="20220405 03:47:15.136" endtime="20220405 03:47:18.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:47:15.136" endtime="20220405 03:47:18.271"/>
</test>
<test id="s1-s5-t4" name="DN Chunk Generator">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:47:18.274" endtime="20220405 03:47:18.274"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:47:18.277" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:47:24.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:47:24.587" level="INFO">${output} = 2022-04-05 03:47:19,407 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:19,508 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:18.276" endtime="20220405 03:47:24.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:47:24.588" level="INFO">2022-04-05 03:47:19,407 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:19,508 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-05 03:47:19,508 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-05 03:47:20,134 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre
2022-04-05 03:47:20,178 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:47:20,579 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-05 03:47:20,774 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-05 03:47:21,195 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-04-05 03:47:22,195 [Thread-4] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2022-04-05 03:47:23,196 [Thread-4] INFO freon.ProgressBar: Progress: 85.00 % (85 out of 100)
2022-04-05 03:47:24,196 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-04-05 03:47:24,224 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=7.945383, max=577.914449, mean=27.12039757261002, stddev=55.55439439929685, median=20.187456, p75=25.269845, p95=34.990424, p98=49.020795, p99=64.553361, p999=577.914449, mean_rate=28.280592069568307, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-05 03:47:24,225 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-04-05 03:47:24,231 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-05 03:47:24,231 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220405 03:47:24.587" endtime="20220405 03:47:24.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:47:24.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:47:24.588" endtime="20220405 03:47:24.589"/>
</kw>
<status status="PASS" starttime="20220405 03:47:18.275" endtime="20220405 03:47:24.589"/>
</kw>
<msg timestamp="20220405 03:47:24.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:47:18.275" endtime="20220405 03:47:24.590"/>
</kw>
<msg timestamp="20220405 03:47:24.590" level="INFO">${result} = 2022-04-05 03:47:19,407 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-05 03:47:19,508 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220405 03:47:18.274" endtime="20220405 03:47:24.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:47:24.590" endtime="20220405 03:47:24.591"/>
</kw>
<status status="PASS" starttime="20220405 03:47:18.273" endtime="20220405 03:47:24.591"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:47:18.272" endtime="20220405 03:47:24.591"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20220405 03:47:07.015" endtime="20220405 03:47:24.593"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="81981"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Validate">restart.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Validate">restart.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3" name="Generate">restart.Generate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5" name="Generate">restart.Generate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
