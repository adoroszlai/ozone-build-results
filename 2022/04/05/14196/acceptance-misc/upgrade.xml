<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0 (Python 3.6.9 on linux)" generated="20220405 03:59:34.562" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:51:48.504" level="INFO">${random} = 83814</msg>
<status status="PASS" starttime="20220405 03:51:48.504" endtime="20220405 03:51:48.504"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:51:48.509" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-83814 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:51:51.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:51:51.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:51:48.506" endtime="20220405 03:51:51.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:51:51.991" level="INFO"/>
<status status="PASS" starttime="20220405 03:51:51.990" endtime="20220405 03:51:51.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:51:51.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:51:51.991" endtime="20220405 03:51:51.992"/>
</kw>
<status status="PASS" starttime="20220405 03:51:48.506" endtime="20220405 03:51:51.992"/>
</kw>
<msg timestamp="20220405 03:51:51.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:51:48.505" endtime="20220405 03:51:51.992"/>
</kw>
<msg timestamp="20220405 03:51:51.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:51:48.504" endtime="20220405 03:51:51.993"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:51:51.993" endtime="20220405 03:51:51.993"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:51:48.503" endtime="20220405 03:51:51.993"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:51:48.452" endtime="20220405 03:51:51.995"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:55:12.414" level="INFO">${random} = 44533</msg>
<status status="PASS" starttime="20220405 03:55:12.414" endtime="20220405 03:55:12.414"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:55:12.419" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-44533 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:55:16.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:55:16.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:12.416" endtime="20220405 03:55:16.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:55:16.183" level="INFO"/>
<status status="PASS" starttime="20220405 03:55:16.182" endtime="20220405 03:55:16.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:55:16.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:55:16.183" endtime="20220405 03:55:16.184"/>
</kw>
<status status="PASS" starttime="20220405 03:55:12.415" endtime="20220405 03:55:16.184"/>
</kw>
<msg timestamp="20220405 03:55:16.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:55:12.415" endtime="20220405 03:55:16.184"/>
</kw>
<msg timestamp="20220405 03:55:16.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:12.414" endtime="20220405 03:55:16.184"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:55:16.185" endtime="20220405 03:55:16.185"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:55:12.413" endtime="20220405 03:55:16.185"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:55:12.363" endtime="20220405 03:55:16.187"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:55:19.235" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:55:21.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:55:21.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:19.233" endtime="20220405 03:55:21.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:55:21.198" level="INFO"/>
<status status="PASS" starttime="20220405 03:55:21.197" endtime="20220405 03:55:21.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:55:21.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:55:21.198" endtime="20220405 03:55:21.199"/>
</kw>
<status status="PASS" starttime="20220405 03:55:19.232" endtime="20220405 03:55:21.199"/>
</kw>
<msg timestamp="20220405 03:55:21.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:55:19.232" endtime="20220405 03:55:21.199"/>
</kw>
<msg timestamp="20220405 03:55:21.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:19.231" endtime="20220405 03:55:21.205"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:55:21.205" endtime="20220405 03:55:21.206"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:55:21.217" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:55:23.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:55:23.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:21.216" endtime="20220405 03:55:23.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:55:23.378" level="INFO"/>
<status status="PASS" starttime="20220405 03:55:23.378" endtime="20220405 03:55:23.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:55:23.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:55:23.379" endtime="20220405 03:55:23.379"/>
</kw>
<status status="PASS" starttime="20220405 03:55:21.207" endtime="20220405 03:55:23.380"/>
</kw>
<msg timestamp="20220405 03:55:23.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:55:21.207" endtime="20220405 03:55:23.380"/>
</kw>
<msg timestamp="20220405 03:55:23.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:21.206" endtime="20220405 03:55:23.380"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:55:23.381" endtime="20220405 03:55:23.381"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:55:19.230" endtime="20220405 03:55:23.381"/>
</test>
<test id="s1-s3-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:55:23.386" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:55:34.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:55:34.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:23.385" endtime="20220405 03:55:34.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:55:34.885" level="INFO"/>
<status status="PASS" starttime="20220405 03:55:34.884" endtime="20220405 03:55:34.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:55:34.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:55:34.885" endtime="20220405 03:55:34.886"/>
</kw>
<status status="PASS" starttime="20220405 03:55:23.384" endtime="20220405 03:55:34.886"/>
</kw>
<msg timestamp="20220405 03:55:34.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:55:23.384" endtime="20220405 03:55:34.886"/>
</kw>
<msg timestamp="20220405 03:55:34.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:23.383" endtime="20220405 03:55:34.887"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:55:34.887" endtime="20220405 03:55:34.887"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:55:23.382" endtime="20220405 03:55:34.887"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220405 03:55:19.178" endtime="20220405 03:55:34.889"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:55:37.923" level="INFO">${random} = 74324</msg>
<status status="PASS" starttime="20220405 03:55:37.923" endtime="20220405 03:55:37.924"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:55:37.928" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-74324 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:55:41.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:55:41.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:37.925" endtime="20220405 03:55:41.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:55:41.305" level="INFO"/>
<status status="PASS" starttime="20220405 03:55:41.303" endtime="20220405 03:55:41.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:55:41.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:55:41.305" endtime="20220405 03:55:41.306"/>
</kw>
<status status="PASS" starttime="20220405 03:55:37.925" endtime="20220405 03:55:41.306"/>
</kw>
<msg timestamp="20220405 03:55:41.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:55:37.924" endtime="20220405 03:55:41.306"/>
</kw>
<msg timestamp="20220405 03:55:41.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:37.924" endtime="20220405 03:55:41.306"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:55:41.307" endtime="20220405 03:55:41.307"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:55:37.922" endtime="20220405 03:55:41.307"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:55:37.873" endtime="20220405 03:55:41.309"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s5-t1" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:55:44.400" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:55:48.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:55:48.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:44.398" endtime="20220405 03:55:48.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:55:48.319" level="INFO"/>
<status status="PASS" starttime="20220405 03:55:48.318" endtime="20220405 03:55:48.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:55:48.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:55:48.319" endtime="20220405 03:55:48.320"/>
</kw>
<status status="PASS" starttime="20220405 03:55:44.397" endtime="20220405 03:55:48.320"/>
</kw>
<msg timestamp="20220405 03:55:48.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:55:44.397" endtime="20220405 03:55:48.320"/>
</kw>
<msg timestamp="20220405 03:55:48.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:44.396" endtime="20220405 03:55:48.321"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:55:48.321" endtime="20220405 03:55:48.321"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:55:44.394" endtime="20220405 03:55:48.321"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220405 03:55:44.342" endtime="20220405 03:55:48.323"/>
</suite>
<suite id="s1-s6" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s6-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:55:05.842" level="INFO">${random} = 70432</msg>
<status status="PASS" starttime="20220405 03:55:05.841" endtime="20220405 03:55:05.842"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:55:05.847" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-70432 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:55:09.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:55:09.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:05.844" endtime="20220405 03:55:09.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:55:09.344" level="INFO"/>
<status status="PASS" starttime="20220405 03:55:09.343" endtime="20220405 03:55:09.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:55:09.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:55:09.344" endtime="20220405 03:55:09.345"/>
</kw>
<status status="PASS" starttime="20220405 03:55:05.843" endtime="20220405 03:55:09.345"/>
</kw>
<msg timestamp="20220405 03:55:09.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:55:05.843" endtime="20220405 03:55:09.346"/>
</kw>
<msg timestamp="20220405 03:55:09.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:55:05.842" endtime="20220405 03:55:09.346"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:55:09.346" endtime="20220405 03:55:09.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:55:05.840" endtime="20220405 03:55:09.347"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:55:05.788" endtime="20220405 03:55:09.349"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s7-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:51:36.338" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:51:38.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:51:38.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:51:36.334" endtime="20220405 03:51:38.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:51:38.341" level="INFO"/>
<status status="PASS" starttime="20220405 03:51:38.341" endtime="20220405 03:51:38.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:51:38.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:51:38.342" endtime="20220405 03:51:38.342"/>
</kw>
<status status="PASS" starttime="20220405 03:51:36.334" endtime="20220405 03:51:38.343"/>
</kw>
<msg timestamp="20220405 03:51:38.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:51:36.333" endtime="20220405 03:51:38.345"/>
</kw>
<msg timestamp="20220405 03:51:38.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:51:36.333" endtime="20220405 03:51:38.345"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:51:38.347" endtime="20220405 03:51:38.348"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:51:38.354" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:51:40.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:51:40.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:51:38.349" endtime="20220405 03:51:40.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:51:40.589" level="INFO"/>
<status status="PASS" starttime="20220405 03:51:40.589" endtime="20220405 03:51:40.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:51:40.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:51:40.590" endtime="20220405 03:51:40.590"/>
</kw>
<status status="PASS" starttime="20220405 03:51:38.349" endtime="20220405 03:51:40.592"/>
</kw>
<msg timestamp="20220405 03:51:40.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:51:38.349" endtime="20220405 03:51:40.592"/>
</kw>
<msg timestamp="20220405 03:51:40.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:51:38.348" endtime="20220405 03:51:40.592"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:51:40.593" endtime="20220405 03:51:40.594"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:51:36.332" endtime="20220405 03:51:40.594"/>
</test>
<test id="s1-s7-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:51:40.602" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:51:45.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:51:45.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:51:40.597" endtime="20220405 03:51:45.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:51:45.362" level="INFO"/>
<status status="PASS" starttime="20220405 03:51:45.361" endtime="20220405 03:51:45.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:51:45.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:51:45.362" endtime="20220405 03:51:45.363"/>
</kw>
<status status="PASS" starttime="20220405 03:51:40.596" endtime="20220405 03:51:45.363"/>
</kw>
<msg timestamp="20220405 03:51:45.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:51:40.596" endtime="20220405 03:51:45.363"/>
</kw>
<msg timestamp="20220405 03:51:45.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:51:40.595" endtime="20220405 03:51:45.364"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:51:45.364" endtime="20220405 03:51:45.364"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:51:40.594" endtime="20220405 03:51:45.364"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220405 03:51:36.281" endtime="20220405 03:51:45.366"/>
</suite>
<suite id="s1-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:25.287" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220405 03:58:25.286" endtime="20220405 03:58:25.287"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:25.287" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:58:25.287" endtime="20220405 03:58:25.288"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:58:25.288" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:58:25.288" endtime="20220405 03:58:25.288"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:58:25.289" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220405 03:58:25.288" endtime="20220405 03:58:25.289"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:58:25.291" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:58:25.291" level="INFO">${version_file_contents} = #Tue Apr 05 03:57:08 UTC 2022
cTime=1649130636390
clusterID=CID-8d8c66ec-a894-48a2-a7b4-7e2e64cbec5d
nodeType=SCM
scmUuid=207dfe88-4dd9-4a28-b5bf-06397ebbe701
layoutVersion=2
</msg>
<status status="PASS" starttime="20220405 03:58:25.290" endtime="20220405 03:58:25.291"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:58:25.292" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220405 03:58:25.291" endtime="20220405 03:58:25.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:58:25.292" endtime="20220405 03:58:25.292"/>
</kw>
<status status="PASS" starttime="20220405 03:58:25.290" endtime="20220405 03:58:25.292"/>
</kw>
<status status="PASS" starttime="20220405 03:58:25.289" endtime="20220405 03:58:25.293"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:58:25.286" endtime="20220405 03:58:25.293"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:58:25.235" endtime="20220405 03:58:25.294"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s9-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:59:01.033" level="INFO">${random} = 57860</msg>
<status status="PASS" starttime="20220405 03:59:01.032" endtime="20220405 03:59:01.033"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:59:01.037" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-57860 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:59:04.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:59:04.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:59:01.034" endtime="20220405 03:59:04.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:59:04.571" level="INFO"/>
<status status="PASS" starttime="20220405 03:59:04.570" endtime="20220405 03:59:04.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:59:04.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:59:04.571" endtime="20220405 03:59:04.571"/>
</kw>
<status status="PASS" starttime="20220405 03:59:01.034" endtime="20220405 03:59:04.572"/>
</kw>
<msg timestamp="20220405 03:59:04.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:59:01.034" endtime="20220405 03:59:04.573"/>
</kw>
<msg timestamp="20220405 03:59:04.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:59:01.033" endtime="20220405 03:59:04.573"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:59:04.573" endtime="20220405 03:59:04.574"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:59:01.031" endtime="20220405 03:59:04.574"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:59:00.983" endtime="20220405 03:59:04.575"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s10-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:59:07.796" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:59:10.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:59:10.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:59:07.792" endtime="20220405 03:59:10.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:59:10.020" level="INFO"/>
<status status="PASS" starttime="20220405 03:59:10.019" endtime="20220405 03:59:10.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:59:10.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:59:10.020" endtime="20220405 03:59:10.021"/>
</kw>
<status status="PASS" starttime="20220405 03:59:07.791" endtime="20220405 03:59:10.021"/>
</kw>
<msg timestamp="20220405 03:59:10.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:59:07.791" endtime="20220405 03:59:10.022"/>
</kw>
<msg timestamp="20220405 03:59:10.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:59:07.790" endtime="20220405 03:59:10.023"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:59:10.023" endtime="20220405 03:59:10.027"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:59:10.031" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:59:12.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:59:12.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:59:10.028" endtime="20220405 03:59:12.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:59:12.229" level="INFO"/>
<status status="PASS" starttime="20220405 03:59:12.229" endtime="20220405 03:59:12.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:59:12.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:59:12.230" endtime="20220405 03:59:12.230"/>
</kw>
<status status="PASS" starttime="20220405 03:59:10.028" endtime="20220405 03:59:12.231"/>
</kw>
<msg timestamp="20220405 03:59:12.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:59:10.028" endtime="20220405 03:59:12.231"/>
</kw>
<msg timestamp="20220405 03:59:12.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:59:10.027" endtime="20220405 03:59:12.231"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:59:12.232" endtime="20220405 03:59:12.232"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:59:07.789" endtime="20220405 03:59:12.232"/>
</test>
<test id="s1-s10-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:59:12.238" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:59:14.278" level="INFO">${rc} = 255</msg>
<msg timestamp="20220405 03:59:14.278" level="INFO">${output} = INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20220405 03:59:12.236" endtime="20220405 03:59:14.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:59:14.280" level="INFO">INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20220405 03:59:14.279" endtime="20220405 03:59:14.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:59:14.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20220405 03:59:14.281" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20220405 03:59:14.280" endtime="20220405 03:59:14.281"/>
</kw>
<status status="FAIL" starttime="20220405 03:59:12.235" endtime="20220405 03:59:14.282"/>
</kw>
<msg timestamp="20220405 03:59:14.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220405 03:59:12.235" endtime="20220405 03:59:14.283"/>
</kw>
<status status="FAIL" starttime="20220405 03:59:12.234" endtime="20220405 03:59:14.283"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220405 03:59:14.284" endtime="20220405 03:59:14.284"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220405 03:59:12.233" endtime="20220405 03:59:14.284">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20220405 03:59:07.737" endtime="20220405 03:59:14.285"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:28.386" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220405 03:58:28.385" endtime="20220405 03:58:28.386"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:28.386" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:58:28.386" endtime="20220405 03:58:28.386"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:58:28.387" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:58:28.386" endtime="20220405 03:58:28.387"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:58:28.387" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220405 03:58:28.387" endtime="20220405 03:58:28.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:58:28.388" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:58:28.389" level="INFO">${version_file_contents} = #Tue Apr 05 03:57:27 UTC 2022
cTime=1649130732699
clusterID=b509cb83-9946-4459-ba12-9125ca69a04b
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220405 03:58:28.388" endtime="20220405 03:58:28.389"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:58:28.390" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220405 03:58:28.389" endtime="20220405 03:58:28.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:58:28.390" endtime="20220405 03:58:28.390"/>
</kw>
<status status="PASS" starttime="20220405 03:58:28.388" endtime="20220405 03:58:28.390"/>
</kw>
<status status="PASS" starttime="20220405 03:58:28.387" endtime="20220405 03:58:28.390"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:58:28.384" endtime="20220405 03:58:28.390"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:58:28.331" endtime="20220405 03:58:28.391"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:31.533" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220405 03:58:31.533" endtime="20220405 03:58:31.534"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:31.534" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:58:31.534" endtime="20220405 03:58:31.534"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:58:31.535" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:58:31.534" endtime="20220405 03:58:31.535"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:58:31.535" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220405 03:58:31.535" endtime="20220405 03:58:31.535"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:58:31.537" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:58:31.537" level="INFO">${version_file_contents} = #Tue Apr 05 03:57:09 UTC 2022
cTime=1649130735386
clusterID=bef96cf0-9682-4144-8a67-7c1f387ef9e1
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220405 03:58:31.536" endtime="20220405 03:58:31.537"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:58:31.537" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220405 03:58:31.537" endtime="20220405 03:58:31.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:58:31.538" endtime="20220405 03:58:31.538"/>
</kw>
<status status="PASS" starttime="20220405 03:58:31.536" endtime="20220405 03:58:31.538"/>
</kw>
<status status="PASS" starttime="20220405 03:58:31.536" endtime="20220405 03:58:31.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:58:31.532" endtime="20220405 03:58:31.539"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:58:31.480" endtime="20220405 03:58:31.539"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:34.905" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220405 03:58:34.905" endtime="20220405 03:58:34.905"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:34.906" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:58:34.906" endtime="20220405 03:58:34.906"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:58:34.906" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:58:34.906" endtime="20220405 03:58:34.906"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:58:34.907" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220405 03:58:34.907" endtime="20220405 03:58:34.907"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:58:34.909" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:58:34.909" level="INFO">${version_file_contents} = #Tue Apr 05 03:57:27 UTC 2022
cTime=1649130734950
clusterID=02bb47f5-480b-40d4-a88a-92be5e55e6f3
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220405 03:58:34.908" endtime="20220405 03:58:34.909"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:58:34.910" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220405 03:58:34.909" endtime="20220405 03:58:34.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:58:34.910" endtime="20220405 03:58:34.910"/>
</kw>
<status status="PASS" starttime="20220405 03:58:34.908" endtime="20220405 03:58:34.911"/>
</kw>
<status status="PASS" starttime="20220405 03:58:34.907" endtime="20220405 03:58:34.911"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:58:34.904" endtime="20220405 03:58:34.911"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:58:34.849" endtime="20220405 03:58:34.911"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:37.998" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220405 03:58:37.997" endtime="20220405 03:58:37.998"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:37.998" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:58:37.998" endtime="20220405 03:58:37.998"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:58:37.999" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:58:37.999" endtime="20220405 03:58:37.999"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:58:38.000" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220405 03:58:37.999" endtime="20220405 03:58:38.000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:58:38.001" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:58:38.001" level="INFO">${version_file_contents} = #Tue Apr 05 03:51:02 UTC 2022
cTime=1649130642754
clusterID=CID-8d8c66ec-a894-48a2-a7b4-7e2e64cbec5d
omUuid=c8496471-5bc6-45e8-a123-49ee4ae3a7cd
nodeType=OM
scmUuid=207dfe88-4dd9-4a28-b5bf-06397ebbe70...</msg>
<status status="PASS" starttime="20220405 03:58:38.001" endtime="20220405 03:58:38.001"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:58:38.002" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220405 03:58:38.001" endtime="20220405 03:58:38.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:58:38.002" endtime="20220405 03:58:38.003"/>
</kw>
<status status="PASS" starttime="20220405 03:58:38.000" endtime="20220405 03:58:38.003"/>
</kw>
<status status="PASS" starttime="20220405 03:58:38.000" endtime="20220405 03:58:38.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:58:37.997" endtime="20220405 03:58:38.003"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:58:37.947" endtime="20220405 03:58:38.004"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:41.150" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220405 03:58:41.150" endtime="20220405 03:58:41.151"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:41.151" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:58:41.151" endtime="20220405 03:58:41.151"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:58:41.152" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:58:41.151" endtime="20220405 03:58:41.152"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:58:41.152" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220405 03:58:41.152" endtime="20220405 03:58:41.152"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:58:41.153" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:58:41.154" level="INFO">${version_file_contents} = #Tue Apr 05 03:51:02 UTC 2022
cTime=1649130645399
clusterID=CID-8d8c66ec-a894-48a2-a7b4-7e2e64cbec5d
omUuid=687cdfc1-9f5f-4dfe-9863-44f9d6caccd5
nodeType=OM
scmUuid=207dfe88-4dd9-4a28-b5bf-06397ebbe70...</msg>
<status status="PASS" starttime="20220405 03:58:41.153" endtime="20220405 03:58:41.154"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:58:41.154" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220405 03:58:41.154" endtime="20220405 03:58:41.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:58:41.154" endtime="20220405 03:58:41.155"/>
</kw>
<status status="PASS" starttime="20220405 03:58:41.153" endtime="20220405 03:58:41.155"/>
</kw>
<status status="PASS" starttime="20220405 03:58:41.152" endtime="20220405 03:58:41.155"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:58:41.149" endtime="20220405 03:58:41.155"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:58:41.097" endtime="20220405 03:58:41.156"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:44.269" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220405 03:58:44.269" endtime="20220405 03:58:44.269"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:58:44.270" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:58:44.269" endtime="20220405 03:58:44.270"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:58:44.270" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:58:44.270" endtime="20220405 03:58:44.270"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:58:44.271" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220405 03:58:44.271" endtime="20220405 03:58:44.271"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:58:44.272" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:58:44.273" level="INFO">${version_file_contents} = #Tue Apr 05 03:51:03 UTC 2022
cTime=1649130646614
clusterID=CID-8d8c66ec-a894-48a2-a7b4-7e2e64cbec5d
omUuid=ca815bd8-561e-4fba-bbdc-982c7b01af28
nodeType=OM
scmUuid=207dfe88-4dd9-4a28-b5bf-06397ebbe70...</msg>
<status status="PASS" starttime="20220405 03:58:44.272" endtime="20220405 03:58:44.273"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:58:44.273" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220405 03:58:44.273" endtime="20220405 03:58:44.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:58:44.273" endtime="20220405 03:58:44.274"/>
</kw>
<status status="PASS" starttime="20220405 03:58:44.272" endtime="20220405 03:58:44.274"/>
</kw>
<status status="PASS" starttime="20220405 03:58:44.271" endtime="20220405 03:58:44.274"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:58:44.268" endtime="20220405 03:58:44.274"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:58:44.217" endtime="20220405 03:58:44.275"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:58:47.300" level="INFO">${random} = 89978</msg>
<status status="PASS" starttime="20220405 03:58:47.299" endtime="20220405 03:58:47.300"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:58:47.305" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-89978 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:58:51.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:58:51.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:58:47.302" endtime="20220405 03:58:51.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:58:51.171" level="INFO"/>
<status status="PASS" starttime="20220405 03:58:51.170" endtime="20220405 03:58:51.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:58:51.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:58:51.171" endtime="20220405 03:58:51.171"/>
</kw>
<status status="PASS" starttime="20220405 03:58:47.301" endtime="20220405 03:58:51.172"/>
</kw>
<msg timestamp="20220405 03:58:51.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:58:47.301" endtime="20220405 03:58:51.173"/>
</kw>
<msg timestamp="20220405 03:58:51.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:58:47.300" endtime="20220405 03:58:51.174"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:58:51.174" endtime="20220405 03:58:51.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:58:47.298" endtime="20220405 03:58:51.174"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:58:47.248" endtime="20220405 03:58:51.176"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:58:54.306" level="INFO">${random} = 65486</msg>
<status status="PASS" starttime="20220405 03:58:54.306" endtime="20220405 03:58:54.306"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:58:54.312" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-65486 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:58:57.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:58:57.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:58:54.308" endtime="20220405 03:58:57.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:58:57.926" level="INFO"/>
<status status="PASS" starttime="20220405 03:58:57.926" endtime="20220405 03:58:57.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:58:57.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:58:57.927" endtime="20220405 03:58:57.927"/>
</kw>
<status status="PASS" starttime="20220405 03:58:54.308" endtime="20220405 03:58:57.928"/>
</kw>
<msg timestamp="20220405 03:58:57.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:58:54.307" endtime="20220405 03:58:57.929"/>
</kw>
<msg timestamp="20220405 03:58:57.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:58:54.307" endtime="20220405 03:58:57.929"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:58:57.930" endtime="20220405 03:58:57.930"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:58:54.305" endtime="20220405 03:58:57.930"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:58:54.252" endtime="20220405 03:58:57.931"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:57:01.562" endtime="20220405 03:57:01.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:57:01.568" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:58:19.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:58:19.606" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220405 03:57:01.564" endtime="20220405 03:58:19.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:58:19.608" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220405 03:58:19.607" endtime="20220405 03:58:19.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:58:19.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:58:19.608" endtime="20220405 03:58:19.608"/>
</kw>
<status status="PASS" starttime="20220405 03:57:01.564" endtime="20220405 03:58:19.609"/>
</kw>
<msg timestamp="20220405 03:58:19.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:57:01.563" endtime="20220405 03:58:19.610"/>
</kw>
<msg timestamp="20220405 03:58:19.610" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220405 03:57:01.563" endtime="20220405 03:58:19.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:58:19.611" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220405 03:58:19.610" endtime="20220405 03:58:19.611"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:57:01.561" endtime="20220405 03:58:19.611"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220405 03:58:19.613" endtime="20220405 03:58:19.613"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:58:19.616" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:58:22.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:58:22.144" level="INFO">${output} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220405 03:58:19.614" endtime="20220405 03:58:22.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:58:22.148" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220405 03:58:22.148" endtime="20220405 03:58:22.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:58:22.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:58:22.148" endtime="20220405 03:58:22.149"/>
</kw>
<status status="PASS" starttime="20220405 03:58:19.614" endtime="20220405 03:58:22.149"/>
</kw>
<msg timestamp="20220405 03:58:22.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:58:19.614" endtime="20220405 03:58:22.150"/>
</kw>
<msg timestamp="20220405 03:58:22.150" level="INFO">${result} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220405 03:58:19.613" endtime="20220405 03:58:22.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:58:22.150" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220405 03:58:22.150" endtime="20220405 03:58:22.150"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:58:19.612" endtime="20220405 03:58:22.151"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20220405 03:57:01.497" endtime="20220405 03:58:22.154"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:09.675" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220405 03:53:09.675" endtime="20220405 03:53:09.675"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:09.676" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:53:09.676" endtime="20220405 03:53:09.676"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:53:09.676" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:53:09.676" endtime="20220405 03:53:09.677"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:53:09.677" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220405 03:53:09.677" endtime="20220405 03:53:09.677"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:53:09.678" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:53:09.679" level="INFO">${version_file_contents} = #Tue Apr 05 03:52:12 UTC 2022
cTime=1649130732699
clusterID=b509cb83-9946-4459-ba12-9125ca69a04b
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220405 03:53:09.678" endtime="20220405 03:53:09.679"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:53:09.679" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220405 03:53:09.679" endtime="20220405 03:53:09.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:09.679" endtime="20220405 03:53:09.680"/>
</kw>
<status status="PASS" starttime="20220405 03:53:09.678" endtime="20220405 03:53:09.680"/>
</kw>
<status status="PASS" starttime="20220405 03:53:09.677" endtime="20220405 03:53:09.680"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:09.674" endtime="20220405 03:53:09.680"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:53:09.621" endtime="20220405 03:53:09.681"/>
</suite>
<suite id="s1-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:53:54.845" level="INFO">${random} = 57354</msg>
<status status="PASS" starttime="20220405 03:53:54.844" endtime="20220405 03:53:54.845"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:53:54.851" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-57354 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:53:58.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:53:58.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:54.847" endtime="20220405 03:53:58.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:53:58.638" level="INFO"/>
<status status="PASS" starttime="20220405 03:53:58.637" endtime="20220405 03:53:58.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:53:58.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:53:58.638" endtime="20220405 03:53:58.638"/>
</kw>
<status status="PASS" starttime="20220405 03:53:54.847" endtime="20220405 03:53:58.639"/>
</kw>
<msg timestamp="20220405 03:53:58.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:53:54.846" endtime="20220405 03:53:58.640"/>
</kw>
<msg timestamp="20220405 03:53:58.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:54.845" endtime="20220405 03:53:58.641"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:58.641" endtime="20220405 03:53:58.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:54.843" endtime="20220405 03:53:58.642"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:53:54.784" endtime="20220405 03:53:58.643"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:12.863" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220405 03:53:12.862" endtime="20220405 03:53:12.863"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:12.863" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:53:12.863" endtime="20220405 03:53:12.863"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:53:12.864" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:53:12.863" endtime="20220405 03:53:12.864"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:53:12.864" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220405 03:53:12.864" endtime="20220405 03:53:12.865"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:53:12.866" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:53:12.866" level="INFO">${version_file_contents} = #Tue Apr 05 03:52:15 UTC 2022
cTime=1649130735386
clusterID=bef96cf0-9682-4144-8a67-7c1f387ef9e1
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220405 03:53:12.866" endtime="20220405 03:53:12.866"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:53:12.867" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220405 03:53:12.866" endtime="20220405 03:53:12.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:12.867" endtime="20220405 03:53:12.867"/>
</kw>
<status status="PASS" starttime="20220405 03:53:12.865" endtime="20220405 03:53:12.867"/>
</kw>
<status status="PASS" starttime="20220405 03:53:12.865" endtime="20220405 03:53:12.868"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:12.861" endtime="20220405 03:53:12.868"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:53:12.809" endtime="20220405 03:53:12.868"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:16.067" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220405 03:53:16.066" endtime="20220405 03:53:16.067"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:16.067" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:53:16.067" endtime="20220405 03:53:16.068"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:53:16.068" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:53:16.068" endtime="20220405 03:53:16.068"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:53:16.069" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220405 03:53:16.068" endtime="20220405 03:53:16.069"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:53:16.070" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:53:16.071" level="INFO">${version_file_contents} = #Tue Apr 05 03:52:14 UTC 2022
cTime=1649130734950
clusterID=02bb47f5-480b-40d4-a88a-92be5e55e6f3
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220405 03:53:16.070" endtime="20220405 03:53:16.071"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:53:16.072" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220405 03:53:16.071" endtime="20220405 03:53:16.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:16.072" endtime="20220405 03:53:16.073"/>
</kw>
<status status="PASS" starttime="20220405 03:53:16.070" endtime="20220405 03:53:16.074"/>
</kw>
<status status="PASS" starttime="20220405 03:53:16.069" endtime="20220405 03:53:16.074"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:16.066" endtime="20220405 03:53:16.074"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:53:16.012" endtime="20220405 03:53:16.075"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:19.145" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220405 03:53:19.145" endtime="20220405 03:53:19.145"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:19.146" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:53:19.146" endtime="20220405 03:53:19.146"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:53:19.147" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:53:19.146" endtime="20220405 03:53:19.147"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:53:19.147" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220405 03:53:19.147" endtime="20220405 03:53:19.147"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:53:19.148" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:53:19.149" level="INFO">${version_file_contents} = #Tue Apr 05 03:51:02 UTC 2022
cTime=1649130642754
clusterID=CID-8d8c66ec-a894-48a2-a7b4-7e2e64cbec5d
omUuid=c8496471-5bc6-45e8-a123-49ee4ae3a7cd
nodeType=OM
scmUuid=207dfe88-4dd9-4a28-b5bf-06397ebbe70...</msg>
<status status="PASS" starttime="20220405 03:53:19.148" endtime="20220405 03:53:19.149"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:53:19.149" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220405 03:53:19.149" endtime="20220405 03:53:19.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:19.149" endtime="20220405 03:53:19.150"/>
</kw>
<status status="PASS" starttime="20220405 03:53:19.148" endtime="20220405 03:53:19.150"/>
</kw>
<status status="PASS" starttime="20220405 03:53:19.147" endtime="20220405 03:53:19.150"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:19.144" endtime="20220405 03:53:19.150"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:53:19.092" endtime="20220405 03:53:19.151"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:22.279" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220405 03:53:22.278" endtime="20220405 03:53:22.279"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:22.279" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:53:22.279" endtime="20220405 03:53:22.279"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:53:22.280" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:53:22.279" endtime="20220405 03:53:22.280"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:53:22.280" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220405 03:53:22.280" endtime="20220405 03:53:22.280"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:53:22.282" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:53:22.282" level="INFO">${version_file_contents} = #Tue Apr 05 03:51:02 UTC 2022
cTime=1649130645399
clusterID=CID-8d8c66ec-a894-48a2-a7b4-7e2e64cbec5d
omUuid=687cdfc1-9f5f-4dfe-9863-44f9d6caccd5
nodeType=OM
scmUuid=207dfe88-4dd9-4a28-b5bf-06397ebbe70...</msg>
<status status="PASS" starttime="20220405 03:53:22.281" endtime="20220405 03:53:22.282"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:53:22.282" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220405 03:53:22.282" endtime="20220405 03:53:22.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:22.283" endtime="20220405 03:53:22.283"/>
</kw>
<status status="PASS" starttime="20220405 03:53:22.281" endtime="20220405 03:53:22.283"/>
</kw>
<status status="PASS" starttime="20220405 03:53:22.281" endtime="20220405 03:53:22.283"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:22.277" endtime="20220405 03:53:22.284"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:53:22.226" endtime="20220405 03:53:22.284"/>
</suite>
<suite id="s1-s26" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s26-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:25.379" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220405 03:53:25.378" endtime="20220405 03:53:25.379"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:25.379" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:53:25.379" endtime="20220405 03:53:25.379"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:53:25.380" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:53:25.379" endtime="20220405 03:53:25.380"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:53:25.380" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220405 03:53:25.380" endtime="20220405 03:53:25.380"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:53:25.382" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:53:25.382" level="INFO">${version_file_contents} = #Tue Apr 05 03:51:03 UTC 2022
cTime=1649130646614
clusterID=CID-8d8c66ec-a894-48a2-a7b4-7e2e64cbec5d
omUuid=ca815bd8-561e-4fba-bbdc-982c7b01af28
nodeType=OM
scmUuid=207dfe88-4dd9-4a28-b5bf-06397ebbe70...</msg>
<status status="PASS" starttime="20220405 03:53:25.381" endtime="20220405 03:53:25.382"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:53:25.383" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220405 03:53:25.382" endtime="20220405 03:53:25.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:25.383" endtime="20220405 03:53:25.383"/>
</kw>
<status status="PASS" starttime="20220405 03:53:25.381" endtime="20220405 03:53:25.383"/>
</kw>
<status status="PASS" starttime="20220405 03:53:25.380" endtime="20220405 03:53:25.383"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:25.377" endtime="20220405 03:53:25.384"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:53:25.326" endtime="20220405 03:53:25.384"/>
</suite>
<suite id="s1-s27" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s27-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220405 03:53:28.492" level="INFO">${random} = 58195</msg>
<status status="PASS" starttime="20220405 03:53:28.491" endtime="20220405 03:53:28.492"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:53:28.497" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-58195 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:53:32.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:53:32.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:28.493" endtime="20220405 03:53:32.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:53:32.405" level="INFO"/>
<status status="PASS" starttime="20220405 03:53:32.404" endtime="20220405 03:53:32.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:53:32.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:53:32.405" endtime="20220405 03:53:32.405"/>
</kw>
<status status="PASS" starttime="20220405 03:53:28.493" endtime="20220405 03:53:32.406"/>
</kw>
<msg timestamp="20220405 03:53:32.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:53:28.492" endtime="20220405 03:53:32.407"/>
</kw>
<msg timestamp="20220405 03:53:32.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:28.492" endtime="20220405 03:53:32.407"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:32.407" endtime="20220405 03:53:32.408"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:28.490" endtime="20220405 03:53:32.408"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220405 03:53:28.439" endtime="20220405 03:53:32.409"/>
</suite>
<suite id="s1-s28" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s28-t1" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:53:35.520" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:53:40.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:53:40.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:35.517" endtime="20220405 03:53:40.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:53:40.153" level="INFO"/>
<status status="PASS" starttime="20220405 03:53:40.152" endtime="20220405 03:53:40.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:53:40.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:53:40.153" endtime="20220405 03:53:40.154"/>
</kw>
<status status="PASS" starttime="20220405 03:53:35.516" endtime="20220405 03:53:40.154"/>
</kw>
<msg timestamp="20220405 03:53:40.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:53:35.516" endtime="20220405 03:53:40.155"/>
</kw>
<msg timestamp="20220405 03:53:40.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:35.515" endtime="20220405 03:53:40.156"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:40.156" endtime="20220405 03:53:40.156"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:35.514" endtime="20220405 03:53:40.156"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220405 03:53:35.462" endtime="20220405 03:53:40.157"/>
</suite>
<suite id="s1-s29" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s29-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:53:43.356" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:53:45.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:53:45.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:43.353" endtime="20220405 03:53:45.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:53:45.442" level="INFO"/>
<status status="PASS" starttime="20220405 03:53:45.441" endtime="20220405 03:53:45.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:53:45.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:53:45.442" endtime="20220405 03:53:45.442"/>
</kw>
<status status="PASS" starttime="20220405 03:53:43.352" endtime="20220405 03:53:45.443"/>
</kw>
<msg timestamp="20220405 03:53:45.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:53:43.352" endtime="20220405 03:53:45.444"/>
</kw>
<msg timestamp="20220405 03:53:45.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:43.351" endtime="20220405 03:53:45.444"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:45.445" endtime="20220405 03:53:45.445"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:53:45.449" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:53:47.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:53:47.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:45.447" endtime="20220405 03:53:47.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:53:47.563" level="INFO"/>
<status status="PASS" starttime="20220405 03:53:47.562" endtime="20220405 03:53:47.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:53:47.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:53:47.563" endtime="20220405 03:53:47.563"/>
</kw>
<status status="PASS" starttime="20220405 03:53:45.446" endtime="20220405 03:53:47.564"/>
</kw>
<msg timestamp="20220405 03:53:47.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:53:45.446" endtime="20220405 03:53:47.564"/>
</kw>
<msg timestamp="20220405 03:53:47.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:45.445" endtime="20220405 03:53:47.565"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:47.565" endtime="20220405 03:53:47.565"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:43.350" endtime="20220405 03:53:47.566"/>
</test>
<test id="s1-s29-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220405 03:53:47.572" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220405 03:53:51.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20220405 03:53:51.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:47.570" endtime="20220405 03:53:51.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220405 03:53:51.553" level="INFO"/>
<status status="PASS" starttime="20220405 03:53:51.552" endtime="20220405 03:53:51.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220405 03:53:51.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220405 03:53:51.553" endtime="20220405 03:53:51.554"/>
</kw>
<status status="PASS" starttime="20220405 03:53:47.569" endtime="20220405 03:53:51.554"/>
</kw>
<msg timestamp="20220405 03:53:51.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220405 03:53:47.568" endtime="20220405 03:53:51.554"/>
</kw>
<msg timestamp="20220405 03:53:51.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220405 03:53:47.568" endtime="20220405 03:53:51.555"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:51.555" endtime="20220405 03:53:51.555"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:47.567" endtime="20220405 03:53:51.556"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220405 03:53:43.300" endtime="20220405 03:53:51.557"/>
</suite>
<suite id="s1-s30" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s30-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:06.473" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220405 03:53:06.472" endtime="20220405 03:53:06.473"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220405 03:53:06.473" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220405 03:53:06.473" endtime="20220405 03:53:06.474"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220405 03:53:06.474" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220405 03:53:06.474" endtime="20220405 03:53:06.474"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220405 03:53:06.475" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220405 03:53:06.474" endtime="20220405 03:53:06.475"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220405 03:53:06.476" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220405 03:53:06.476" level="INFO">${version_file_contents} = #Tue Apr 05 03:50:36 UTC 2022
cTime=1649130636390
clusterID=CID-8d8c66ec-a894-48a2-a7b4-7e2e64cbec5d
nodeType=SCM
scmUuid=207dfe88-4dd9-4a28-b5bf-06397ebbe701
layoutVersion=0
</msg>
<status status="PASS" starttime="20220405 03:53:06.476" endtime="20220405 03:53:06.476"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220405 03:53:06.477" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220405 03:53:06.476" endtime="20220405 03:53:06.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220405 03:53:06.477" endtime="20220405 03:53:06.478"/>
</kw>
<status status="PASS" starttime="20220405 03:53:06.475" endtime="20220405 03:53:06.478"/>
</kw>
<status status="PASS" starttime="20220405 03:53:06.475" endtime="20220405 03:53:06.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220405 03:53:06.471" endtime="20220405 03:53:06.478"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220405 03:53:06.415" endtime="20220405 03:53:06.479"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="163161"/>
</suite>
<statistics>
<total>
<stat pass="34" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="34" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="1" skip="0" id="s1-s10" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Generate">upgrade.Generate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s29" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s30" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
