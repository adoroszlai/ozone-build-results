<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0 (Python 3.6.9 on linux)" generated="20220412 13:39:43.010" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:29:42.623" level="INFO">${random} = 40935</msg>
<status status="PASS" starttime="20220412 13:29:42.623" endtime="20220412 13:29:42.623"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:29:42.630" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-40935 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:29:47.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:29:47.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:29:42.626" endtime="20220412 13:29:47.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:29:47.499" level="INFO"/>
<status status="PASS" starttime="20220412 13:29:47.498" endtime="20220412 13:29:47.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:29:47.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:29:47.499" endtime="20220412 13:29:47.500"/>
</kw>
<status status="PASS" starttime="20220412 13:29:42.625" endtime="20220412 13:29:47.500"/>
</kw>
<msg timestamp="20220412 13:29:47.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:29:42.625" endtime="20220412 13:29:47.500"/>
</kw>
<msg timestamp="20220412 13:29:47.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:29:42.624" endtime="20220412 13:29:47.501"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:29:47.501" endtime="20220412 13:29:47.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:29:42.622" endtime="20220412 13:29:47.502"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:29:42.557" endtime="20220412 13:29:47.508"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:34:15.999" level="INFO">${random} = 92178</msg>
<status status="PASS" starttime="20220412 13:34:15.998" endtime="20220412 13:34:15.999"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:34:16.005" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-92178 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:34:20.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:34:20.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:16.001" endtime="20220412 13:34:20.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:34:20.662" level="INFO"/>
<status status="PASS" starttime="20220412 13:34:20.661" endtime="20220412 13:34:20.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:34:20.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:34:20.663" endtime="20220412 13:34:20.664"/>
</kw>
<status status="PASS" starttime="20220412 13:34:16.000" endtime="20220412 13:34:20.664"/>
</kw>
<msg timestamp="20220412 13:34:20.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:34:16.000" endtime="20220412 13:34:20.665"/>
</kw>
<msg timestamp="20220412 13:34:20.665" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:15.999" endtime="20220412 13:34:20.665"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:34:20.665" endtime="20220412 13:34:20.666"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:34:15.997" endtime="20220412 13:34:20.666"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:34:15.941" endtime="20220412 13:34:20.668"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:34:25.387" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:34:28.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:34:28.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:25.382" endtime="20220412 13:34:28.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:34:28.601" level="INFO"/>
<status status="PASS" starttime="20220412 13:34:28.598" endtime="20220412 13:34:28.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:34:28.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:34:28.601" endtime="20220412 13:34:28.602"/>
</kw>
<status status="PASS" starttime="20220412 13:34:25.381" endtime="20220412 13:34:28.602"/>
</kw>
<msg timestamp="20220412 13:34:28.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:34:25.381" endtime="20220412 13:34:28.602"/>
</kw>
<msg timestamp="20220412 13:34:28.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:25.380" endtime="20220412 13:34:28.603"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:34:28.603" endtime="20220412 13:34:28.606"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:34:28.619" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:34:31.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:34:31.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:28.612" endtime="20220412 13:34:31.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:34:31.693" level="INFO"/>
<status status="PASS" starttime="20220412 13:34:31.691" endtime="20220412 13:34:31.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:34:31.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:34:31.695" endtime="20220412 13:34:31.696"/>
</kw>
<status status="PASS" starttime="20220412 13:34:28.610" endtime="20220412 13:34:31.696"/>
</kw>
<msg timestamp="20220412 13:34:31.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:34:28.609" endtime="20220412 13:34:31.697"/>
</kw>
<msg timestamp="20220412 13:34:31.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:28.606" endtime="20220412 13:34:31.697"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:34:31.697" endtime="20220412 13:34:31.699"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:34:25.379" endtime="20220412 13:34:31.700"/>
</test>
<test id="s1-s3-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:34:31.718" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:34:38.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:34:38.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:31.712" endtime="20220412 13:34:38.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:34:38.170" level="INFO"/>
<status status="PASS" starttime="20220412 13:34:38.169" endtime="20220412 13:34:38.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:34:38.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:34:38.170" endtime="20220412 13:34:38.171"/>
</kw>
<status status="PASS" starttime="20220412 13:34:31.711" endtime="20220412 13:34:38.172"/>
</kw>
<msg timestamp="20220412 13:34:38.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:34:31.710" endtime="20220412 13:34:38.172"/>
</kw>
<msg timestamp="20220412 13:34:38.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:31.707" endtime="20220412 13:34:38.173"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:34:38.173" endtime="20220412 13:34:38.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:34:31.703" endtime="20220412 13:34:38.174"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220412 13:34:25.312" endtime="20220412 13:34:38.176"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:34:42.515" level="INFO">${random} = 14862</msg>
<status status="PASS" starttime="20220412 13:34:42.514" endtime="20220412 13:34:42.515"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:34:42.521" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-14862 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:34:48.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:34:48.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:42.517" endtime="20220412 13:34:48.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:34:48.259" level="INFO"/>
<status status="PASS" starttime="20220412 13:34:48.259" endtime="20220412 13:34:48.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:34:48.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:34:48.260" endtime="20220412 13:34:48.261"/>
</kw>
<status status="PASS" starttime="20220412 13:34:42.517" endtime="20220412 13:34:48.261"/>
</kw>
<msg timestamp="20220412 13:34:48.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:34:42.516" endtime="20220412 13:34:48.261"/>
</kw>
<msg timestamp="20220412 13:34:48.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:42.515" endtime="20220412 13:34:48.262"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:34:48.262" endtime="20220412 13:34:48.263"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:34:42.513" endtime="20220412 13:34:48.263"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:34:42.449" endtime="20220412 13:34:48.264"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s5-t1" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:34:52.996" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:35:00.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:35:00.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:52.992" endtime="20220412 13:35:00.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:35:00.214" level="INFO"/>
<status status="PASS" starttime="20220412 13:35:00.213" endtime="20220412 13:35:00.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:35:00.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:35:00.214" endtime="20220412 13:35:00.214"/>
</kw>
<status status="PASS" starttime="20220412 13:34:52.992" endtime="20220412 13:35:00.215"/>
</kw>
<msg timestamp="20220412 13:35:00.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:34:52.991" endtime="20220412 13:35:00.216"/>
</kw>
<msg timestamp="20220412 13:35:00.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:52.990" endtime="20220412 13:35:00.216"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:35:00.216" endtime="20220412 13:35:00.217"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:34:52.989" endtime="20220412 13:35:00.217"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220412 13:34:52.933" endtime="20220412 13:35:00.219"/>
</suite>
<suite id="s1-s6" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s6-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:34:06.751" level="INFO">${random} = 16687</msg>
<status status="PASS" starttime="20220412 13:34:06.751" endtime="20220412 13:34:06.752"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:34:06.758" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-16687 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:34:11.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:34:11.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:06.754" endtime="20220412 13:34:11.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:34:11.662" level="INFO"/>
<status status="PASS" starttime="20220412 13:34:11.661" endtime="20220412 13:34:11.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:34:11.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:34:11.662" endtime="20220412 13:34:11.663"/>
</kw>
<status status="PASS" starttime="20220412 13:34:06.753" endtime="20220412 13:34:11.663"/>
</kw>
<msg timestamp="20220412 13:34:11.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:34:06.753" endtime="20220412 13:34:11.663"/>
</kw>
<msg timestamp="20220412 13:34:11.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:34:06.752" endtime="20220412 13:34:11.663"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:34:11.664" endtime="20220412 13:34:11.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:34:06.750" endtime="20220412 13:34:11.664"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:34:06.695" endtime="20220412 13:34:11.666"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s7-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:29:24.219" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:29:27.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:29:27.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:29:24.214" endtime="20220412 13:29:27.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:29:27.203" level="INFO"/>
<status status="PASS" starttime="20220412 13:29:27.201" endtime="20220412 13:29:27.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:29:27.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:29:27.203" endtime="20220412 13:29:27.204"/>
</kw>
<status status="PASS" starttime="20220412 13:29:24.213" endtime="20220412 13:29:27.205"/>
</kw>
<msg timestamp="20220412 13:29:27.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:29:24.213" endtime="20220412 13:29:27.205"/>
</kw>
<msg timestamp="20220412 13:29:27.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:29:24.211" endtime="20220412 13:29:27.205"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:29:27.205" endtime="20220412 13:29:27.206"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:29:27.217" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:29:30.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:29:30.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:29:27.211" endtime="20220412 13:29:30.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:29:30.243" level="INFO"/>
<status status="PASS" starttime="20220412 13:29:30.242" endtime="20220412 13:29:30.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:29:30.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:29:30.243" endtime="20220412 13:29:30.244"/>
</kw>
<status status="PASS" starttime="20220412 13:29:27.210" endtime="20220412 13:29:30.244"/>
</kw>
<msg timestamp="20220412 13:29:30.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:29:27.207" endtime="20220412 13:29:30.245"/>
</kw>
<msg timestamp="20220412 13:29:30.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:29:27.206" endtime="20220412 13:29:30.245"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:29:30.245" endtime="20220412 13:29:30.246"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:29:24.210" endtime="20220412 13:29:30.246"/>
</test>
<test id="s1-s7-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:29:30.254" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:29:37.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:29:37.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:29:30.249" endtime="20220412 13:29:37.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:29:37.904" level="INFO"/>
<status status="PASS" starttime="20220412 13:29:37.903" endtime="20220412 13:29:37.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:29:37.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:29:37.905" endtime="20220412 13:29:37.905"/>
</kw>
<status status="PASS" starttime="20220412 13:29:30.249" endtime="20220412 13:29:37.906"/>
</kw>
<msg timestamp="20220412 13:29:37.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:29:30.249" endtime="20220412 13:29:37.906"/>
</kw>
<msg timestamp="20220412 13:29:37.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:29:30.248" endtime="20220412 13:29:37.907"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:29:37.907" endtime="20220412 13:29:37.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:29:30.247" endtime="20220412 13:29:37.908"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220412 13:29:24.149" endtime="20220412 13:29:37.911"/>
</suite>
<suite id="s1-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:05.191" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220412 13:38:05.191" endtime="20220412 13:38:05.191"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:05.192" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:38:05.192" endtime="20220412 13:38:05.192"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:38:05.193" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:38:05.192" endtime="20220412 13:38:05.193"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:38:05.193" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220412 13:38:05.193" endtime="20220412 13:38:05.193"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:38:05.195" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:38:05.195" level="INFO">${version_file_contents} = #Tue Apr 12 13:36:40 UTC 2022
cTime=1649770078592
clusterID=CID-876cfc8f-ecf2-493f-b804-dcaaf85206d1
nodeType=SCM
scmUuid=09fe77f5-b698-4196-b651-c98e30be1626
layoutVersion=2
</msg>
<status status="PASS" starttime="20220412 13:38:05.194" endtime="20220412 13:38:05.195"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:38:05.196" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220412 13:38:05.195" endtime="20220412 13:38:05.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:38:05.196" endtime="20220412 13:38:05.196"/>
</kw>
<status status="PASS" starttime="20220412 13:38:05.194" endtime="20220412 13:38:05.196"/>
</kw>
<status status="PASS" starttime="20220412 13:38:05.193" endtime="20220412 13:38:05.196"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:38:05.190" endtime="20220412 13:38:05.197"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:38:05.132" endtime="20220412 13:38:05.198"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s9-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:38:59.337" level="INFO">${random} = 14989</msg>
<status status="PASS" starttime="20220412 13:38:59.336" endtime="20220412 13:38:59.337"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:38:59.345" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-14989 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:39:04.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:39:04.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:38:59.340" endtime="20220412 13:39:04.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:39:04.468" level="INFO"/>
<status status="PASS" starttime="20220412 13:39:04.466" endtime="20220412 13:39:04.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:39:04.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:39:04.468" endtime="20220412 13:39:04.469"/>
</kw>
<status status="PASS" starttime="20220412 13:38:59.339" endtime="20220412 13:39:04.469"/>
</kw>
<msg timestamp="20220412 13:39:04.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:38:59.339" endtime="20220412 13:39:04.471"/>
</kw>
<msg timestamp="20220412 13:39:04.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:38:59.337" endtime="20220412 13:39:04.471"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:39:04.472" endtime="20220412 13:39:04.472"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:38:59.335" endtime="20220412 13:39:04.472"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:38:59.281" endtime="20220412 13:39:04.474"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s10-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:39:08.963" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:39:12.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:39:12.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:39:08.958" endtime="20220412 13:39:12.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:39:12.018" level="INFO"/>
<status status="PASS" starttime="20220412 13:39:12.017" endtime="20220412 13:39:12.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:39:12.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:39:12.018" endtime="20220412 13:39:12.019"/>
</kw>
<status status="PASS" starttime="20220412 13:39:08.957" endtime="20220412 13:39:12.019"/>
</kw>
<msg timestamp="20220412 13:39:12.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:39:08.957" endtime="20220412 13:39:12.020"/>
</kw>
<msg timestamp="20220412 13:39:12.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:39:08.956" endtime="20220412 13:39:12.021"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:39:12.021" endtime="20220412 13:39:12.022"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:39:12.029" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:39:14.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:39:14.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:39:12.025" endtime="20220412 13:39:14.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:39:14.953" level="INFO"/>
<status status="PASS" starttime="20220412 13:39:14.952" endtime="20220412 13:39:14.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:39:14.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:39:14.953" endtime="20220412 13:39:14.954"/>
</kw>
<status status="PASS" starttime="20220412 13:39:12.024" endtime="20220412 13:39:14.954"/>
</kw>
<msg timestamp="20220412 13:39:14.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:39:12.024" endtime="20220412 13:39:14.955"/>
</kw>
<msg timestamp="20220412 13:39:14.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:39:12.022" endtime="20220412 13:39:14.955"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:39:14.956" endtime="20220412 13:39:14.956"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:39:08.955" endtime="20220412 13:39:14.956"/>
</test>
<test id="s1-s10-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:39:14.963" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:39:18.085" level="INFO">${rc} = 255</msg>
<msg timestamp="20220412 13:39:18.085" level="INFO">${output} = INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20220412 13:39:14.961" endtime="20220412 13:39:18.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:39:18.086" level="INFO">INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20220412 13:39:18.085" endtime="20220412 13:39:18.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:39:18.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20220412 13:39:18.088" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20220412 13:39:18.087" endtime="20220412 13:39:18.088"/>
</kw>
<status status="FAIL" starttime="20220412 13:39:14.960" endtime="20220412 13:39:18.090"/>
</kw>
<msg timestamp="20220412 13:39:18.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220412 13:39:14.960" endtime="20220412 13:39:18.090"/>
</kw>
<status status="FAIL" starttime="20220412 13:39:14.959" endtime="20220412 13:39:18.091"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220412 13:39:18.091" endtime="20220412 13:39:18.091"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220412 13:39:14.958" endtime="20220412 13:39:18.091">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20220412 13:39:08.900" endtime="20220412 13:39:18.094"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:10.466" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220412 13:38:10.466" endtime="20220412 13:38:10.466"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:10.467" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:38:10.467" endtime="20220412 13:38:10.467"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:38:10.468" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:38:10.467" endtime="20220412 13:38:10.468"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:38:10.468" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220412 13:38:10.468" endtime="20220412 13:38:10.468"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:38:10.470" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:38:10.470" level="INFO">${version_file_contents} = #Tue Apr 12 13:36:53 UTC 2022
cTime=1649770218014
clusterID=728725aa-2270-47a8-9417-b5a055d1f50a
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220412 13:38:10.469" endtime="20220412 13:38:10.470"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:38:10.471" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220412 13:38:10.470" endtime="20220412 13:38:10.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:38:10.471" endtime="20220412 13:38:10.471"/>
</kw>
<status status="PASS" starttime="20220412 13:38:10.469" endtime="20220412 13:38:10.471"/>
</kw>
<status status="PASS" starttime="20220412 13:38:10.468" endtime="20220412 13:38:10.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:38:10.465" endtime="20220412 13:38:10.472"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:38:10.410" endtime="20220412 13:38:10.473"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:14.862" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220412 13:38:14.861" endtime="20220412 13:38:14.862"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:14.863" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:38:14.862" endtime="20220412 13:38:14.863"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:38:14.863" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:38:14.863" endtime="20220412 13:38:14.863"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:38:14.864" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220412 13:38:14.864" endtime="20220412 13:38:14.864"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:38:14.865" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:38:14.866" level="INFO">${version_file_contents} = #Tue Apr 12 13:36:48 UTC 2022
cTime=1649770216253
clusterID=c81ae907-a367-4834-bd0b-01801b555c95
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220412 13:38:14.865" endtime="20220412 13:38:14.866"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:38:14.866" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220412 13:38:14.866" endtime="20220412 13:38:14.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:38:14.866" endtime="20220412 13:38:14.867"/>
</kw>
<status status="PASS" starttime="20220412 13:38:14.865" endtime="20220412 13:38:14.867"/>
</kw>
<status status="PASS" starttime="20220412 13:38:14.864" endtime="20220412 13:38:14.867"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:38:14.861" endtime="20220412 13:38:14.867"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:38:14.807" endtime="20220412 13:38:14.868"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:19.498" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220412 13:38:19.497" endtime="20220412 13:38:19.498"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:19.499" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:38:19.498" endtime="20220412 13:38:19.499"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:38:19.500" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:38:19.499" endtime="20220412 13:38:19.500"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:38:19.502" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220412 13:38:19.500" endtime="20220412 13:38:19.503"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:38:19.504" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:38:19.504" level="INFO">${version_file_contents} = #Tue Apr 12 13:37:10 UTC 2022
cTime=1649770218983
clusterID=140bcd6d-a8d2-4a3b-a94e-747506e62d0c
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220412 13:38:19.504" endtime="20220412 13:38:19.505"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:38:19.506" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220412 13:38:19.505" endtime="20220412 13:38:19.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:38:19.506" endtime="20220412 13:38:19.506"/>
</kw>
<status status="PASS" starttime="20220412 13:38:19.503" endtime="20220412 13:38:19.506"/>
</kw>
<status status="PASS" starttime="20220412 13:38:19.503" endtime="20220412 13:38:19.506"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:38:19.497" endtime="20220412 13:38:19.507"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:38:19.436" endtime="20220412 13:38:19.508"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:24.376" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220412 13:38:24.375" endtime="20220412 13:38:24.376"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:24.377" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:38:24.376" endtime="20220412 13:38:24.377"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:38:24.377" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:38:24.377" endtime="20220412 13:38:24.377"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:38:24.378" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220412 13:38:24.377" endtime="20220412 13:38:24.378"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:38:24.379" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:38:24.380" level="INFO">${version_file_contents} = #Tue Apr 12 13:28:39 UTC 2022
cTime=1649770097941
clusterID=CID-876cfc8f-ecf2-493f-b804-dcaaf85206d1
omUuid=fa1dee9e-d57d-4971-92eb-2f0787a333fc
nodeType=OM
scmUuid=09fe77f5-b698-4196-b651-c98e30be162...</msg>
<status status="PASS" starttime="20220412 13:38:24.379" endtime="20220412 13:38:24.380"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:38:24.380" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220412 13:38:24.380" endtime="20220412 13:38:24.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:38:24.380" endtime="20220412 13:38:24.381"/>
</kw>
<status status="PASS" starttime="20220412 13:38:24.378" endtime="20220412 13:38:24.381"/>
</kw>
<status status="PASS" starttime="20220412 13:38:24.378" endtime="20220412 13:38:24.381"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:38:24.374" endtime="20220412 13:38:24.381"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:38:24.318" endtime="20220412 13:38:24.383"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:29.344" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220412 13:38:29.343" endtime="20220412 13:38:29.344"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:29.344" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:38:29.344" endtime="20220412 13:38:29.344"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:38:29.345" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:38:29.344" endtime="20220412 13:38:29.345"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:38:29.345" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220412 13:38:29.345" endtime="20220412 13:38:29.346"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:38:29.347" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:38:29.347" level="INFO">${version_file_contents} = #Tue Apr 12 13:28:39 UTC 2022
cTime=1649770091758
clusterID=CID-876cfc8f-ecf2-493f-b804-dcaaf85206d1
omUuid=a7896188-76ed-455b-8a0b-af5f75371cde
nodeType=OM
scmUuid=09fe77f5-b698-4196-b651-c98e30be162...</msg>
<status status="PASS" starttime="20220412 13:38:29.347" endtime="20220412 13:38:29.347"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:38:29.350" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220412 13:38:29.348" endtime="20220412 13:38:29.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:38:29.350" endtime="20220412 13:38:29.351"/>
</kw>
<status status="PASS" starttime="20220412 13:38:29.346" endtime="20220412 13:38:29.351"/>
</kw>
<status status="PASS" starttime="20220412 13:38:29.346" endtime="20220412 13:38:29.351"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:38:29.342" endtime="20220412 13:38:29.351"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:38:29.283" endtime="20220412 13:38:29.353"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:34.636" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220412 13:38:34.635" endtime="20220412 13:38:34.636"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:38:34.636" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:38:34.636" endtime="20220412 13:38:34.637"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:38:34.637" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:38:34.637" endtime="20220412 13:38:34.637"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:38:34.638" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220412 13:38:34.637" endtime="20220412 13:38:34.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:38:34.639" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:38:34.640" level="INFO">${version_file_contents} = #Tue Apr 12 13:28:39 UTC 2022
cTime=1649770095999
clusterID=CID-876cfc8f-ecf2-493f-b804-dcaaf85206d1
omUuid=7631ac2b-362a-4c16-baca-17c801af5c77
nodeType=OM
scmUuid=09fe77f5-b698-4196-b651-c98e30be162...</msg>
<status status="PASS" starttime="20220412 13:38:34.639" endtime="20220412 13:38:34.640"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:38:34.640" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220412 13:38:34.640" endtime="20220412 13:38:34.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:38:34.640" endtime="20220412 13:38:34.641"/>
</kw>
<status status="PASS" starttime="20220412 13:38:34.638" endtime="20220412 13:38:34.641"/>
</kw>
<status status="PASS" starttime="20220412 13:38:34.638" endtime="20220412 13:38:34.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:38:34.634" endtime="20220412 13:38:34.641"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:38:34.579" endtime="20220412 13:38:34.642"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:38:39.180" level="INFO">${random} = 02145</msg>
<status status="PASS" starttime="20220412 13:38:39.180" endtime="20220412 13:38:39.180"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:38:39.186" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-02145 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:38:45.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:38:45.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:38:39.182" endtime="20220412 13:38:45.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:38:45.047" level="INFO"/>
<status status="PASS" starttime="20220412 13:38:45.047" endtime="20220412 13:38:45.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:38:45.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:38:45.048" endtime="20220412 13:38:45.049"/>
</kw>
<status status="PASS" starttime="20220412 13:38:39.182" endtime="20220412 13:38:45.049"/>
</kw>
<msg timestamp="20220412 13:38:45.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:38:39.181" endtime="20220412 13:38:45.051"/>
</kw>
<msg timestamp="20220412 13:38:45.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:38:39.180" endtime="20220412 13:38:45.051"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:38:45.051" endtime="20220412 13:38:45.052"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:38:39.178" endtime="20220412 13:38:45.052"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:38:39.117" endtime="20220412 13:38:45.053"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:38:49.953" level="INFO">${random} = 14163</msg>
<status status="PASS" starttime="20220412 13:38:49.951" endtime="20220412 13:38:49.953"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:38:49.965" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-14163 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:38:54.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:38:54.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:38:49.958" endtime="20220412 13:38:54.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:38:54.859" level="INFO"/>
<status status="PASS" starttime="20220412 13:38:54.859" endtime="20220412 13:38:54.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:38:54.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:38:54.860" endtime="20220412 13:38:54.860"/>
</kw>
<status status="PASS" starttime="20220412 13:38:49.958" endtime="20220412 13:38:54.861"/>
</kw>
<msg timestamp="20220412 13:38:54.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:38:49.957" endtime="20220412 13:38:54.862"/>
</kw>
<msg timestamp="20220412 13:38:54.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:38:49.953" endtime="20220412 13:38:54.863"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:38:54.863" endtime="20220412 13:38:54.863"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:38:49.950" endtime="20220412 13:38:54.864"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:38:49.854" endtime="20220412 13:38:54.865"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220412 13:36:32.001" endtime="20220412 13:36:32.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:36:32.009" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:37:55.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:37:55.676" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220412 13:36:32.004" endtime="20220412 13:37:55.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:37:55.678" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220412 13:37:55.677" endtime="20220412 13:37:55.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:37:55.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:37:55.678" endtime="20220412 13:37:55.679"/>
</kw>
<status status="PASS" starttime="20220412 13:36:32.003" endtime="20220412 13:37:55.679"/>
</kw>
<msg timestamp="20220412 13:37:55.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:36:32.003" endtime="20220412 13:37:55.681"/>
</kw>
<msg timestamp="20220412 13:37:55.683" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220412 13:36:32.003" endtime="20220412 13:37:55.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:37:55.684" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220412 13:37:55.684" endtime="20220412 13:37:55.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:36:32.000" endtime="20220412 13:37:55.685"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220412 13:37:55.686" endtime="20220412 13:37:55.688"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:37:55.692" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:37:59.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:37:59.842" level="INFO">${output} = com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
...</msg>
<status status="PASS" starttime="20220412 13:37:55.690" endtime="20220412 13:37:59.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:37:59.843" level="INFO">com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:425)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:411)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:294)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:173)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:137)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220412 13:37:59.842" endtime="20220412 13:37:59.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:37:59.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:37:59.843" endtime="20220412 13:37:59.844"/>
</kw>
<status status="PASS" starttime="20220412 13:37:55.689" endtime="20220412 13:37:59.844"/>
</kw>
<msg timestamp="20220412 13:37:59.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:37:55.689" endtime="20220412 13:37:59.845"/>
</kw>
<msg timestamp="20220412 13:37:59.848" level="INFO">${result} = com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
...</msg>
<status status="PASS" starttime="20220412 13:37:55.688" endtime="20220412 13:37:59.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:37:59.849" level="INFO">com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:425)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:411)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:294)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:173)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:137)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220412 13:37:59.848" endtime="20220412 13:37:59.849"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:37:55.685" endtime="20220412 13:37:59.849"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20220412 13:36:31.935" endtime="20220412 13:37:59.852"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:24.729" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220412 13:31:24.729" endtime="20220412 13:31:24.730"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:24.730" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:31:24.730" endtime="20220412 13:31:24.730"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:31:24.731" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:31:24.731" endtime="20220412 13:31:24.732"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:31:24.733" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220412 13:31:24.732" endtime="20220412 13:31:24.733"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:31:24.735" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:31:24.735" level="INFO">${version_file_contents} = #Tue Apr 12 13:30:18 UTC 2022
cTime=1649770218014
clusterID=728725aa-2270-47a8-9417-b5a055d1f50a
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220412 13:31:24.734" endtime="20220412 13:31:24.735"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:31:24.736" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220412 13:31:24.735" endtime="20220412 13:31:24.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:31:24.736" endtime="20220412 13:31:24.737"/>
</kw>
<status status="PASS" starttime="20220412 13:31:24.734" endtime="20220412 13:31:24.737"/>
</kw>
<status status="PASS" starttime="20220412 13:31:24.733" endtime="20220412 13:31:24.737"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:31:24.728" endtime="20220412 13:31:24.737"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:31:24.655" endtime="20220412 13:31:24.739"/>
</suite>
<suite id="s1-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:32:31.781" level="INFO">${random} = 83310</msg>
<status status="PASS" starttime="20220412 13:32:31.780" endtime="20220412 13:32:31.781"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:32:31.789" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-83310 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:32:36.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:32:36.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:32:31.784" endtime="20220412 13:32:36.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:32:36.834" level="INFO"/>
<status status="PASS" starttime="20220412 13:32:36.833" endtime="20220412 13:32:36.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:32:36.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:32:36.834" endtime="20220412 13:32:36.835"/>
</kw>
<status status="PASS" starttime="20220412 13:32:31.783" endtime="20220412 13:32:36.836"/>
</kw>
<msg timestamp="20220412 13:32:36.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:32:31.783" endtime="20220412 13:32:36.839"/>
</kw>
<msg timestamp="20220412 13:32:36.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:32:31.781" endtime="20220412 13:32:36.839"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:32:36.840" endtime="20220412 13:32:36.840"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:32:31.779" endtime="20220412 13:32:36.840"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:32:31.714" endtime="20220412 13:32:36.841"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:29.335" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220412 13:31:29.334" endtime="20220412 13:31:29.335"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:29.335" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:31:29.335" endtime="20220412 13:31:29.335"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:31:29.336" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:31:29.336" endtime="20220412 13:31:29.336"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:31:29.337" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220412 13:31:29.336" endtime="20220412 13:31:29.337"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:31:29.338" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:31:29.338" level="INFO">${version_file_contents} = #Tue Apr 12 13:30:16 UTC 2022
cTime=1649770216253
clusterID=c81ae907-a367-4834-bd0b-01801b555c95
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220412 13:31:29.338" endtime="20220412 13:31:29.338"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:31:29.339" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220412 13:31:29.339" endtime="20220412 13:31:29.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:31:29.339" endtime="20220412 13:31:29.340"/>
</kw>
<status status="PASS" starttime="20220412 13:31:29.337" endtime="20220412 13:31:29.340"/>
</kw>
<status status="PASS" starttime="20220412 13:31:29.337" endtime="20220412 13:31:29.340"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:31:29.333" endtime="20220412 13:31:29.340"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:31:29.271" endtime="20220412 13:31:29.341"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:33.678" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220412 13:31:33.677" endtime="20220412 13:31:33.678"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:33.678" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:31:33.678" endtime="20220412 13:31:33.678"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:31:33.679" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:31:33.679" endtime="20220412 13:31:33.679"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:31:33.680" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220412 13:31:33.680" endtime="20220412 13:31:33.680"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:31:33.681" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:31:33.682" level="INFO">${version_file_contents} = #Tue Apr 12 13:30:18 UTC 2022
cTime=1649770218983
clusterID=140bcd6d-a8d2-4a3b-a94e-747506e62d0c
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220412 13:31:33.681" endtime="20220412 13:31:33.682"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:31:33.682" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220412 13:31:33.682" endtime="20220412 13:31:33.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:31:33.683" endtime="20220412 13:31:33.683"/>
</kw>
<status status="PASS" starttime="20220412 13:31:33.681" endtime="20220412 13:31:33.683"/>
</kw>
<status status="PASS" starttime="20220412 13:31:33.680" endtime="20220412 13:31:33.683"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:31:33.676" endtime="20220412 13:31:33.683"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:31:33.607" endtime="20220412 13:31:33.685"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:38.180" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220412 13:31:38.180" endtime="20220412 13:31:38.180"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:38.181" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:31:38.181" endtime="20220412 13:31:38.181"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:31:38.182" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:31:38.181" endtime="20220412 13:31:38.182"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:31:38.182" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220412 13:31:38.182" endtime="20220412 13:31:38.182"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:31:38.184" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:31:38.184" level="INFO">${version_file_contents} = #Tue Apr 12 13:28:39 UTC 2022
cTime=1649770097941
clusterID=CID-876cfc8f-ecf2-493f-b804-dcaaf85206d1
omUuid=fa1dee9e-d57d-4971-92eb-2f0787a333fc
nodeType=OM
scmUuid=09fe77f5-b698-4196-b651-c98e30be162...</msg>
<status status="PASS" starttime="20220412 13:31:38.183" endtime="20220412 13:31:38.184"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:31:38.185" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220412 13:31:38.184" endtime="20220412 13:31:38.185"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:31:38.185" endtime="20220412 13:31:38.185"/>
</kw>
<status status="PASS" starttime="20220412 13:31:38.183" endtime="20220412 13:31:38.185"/>
</kw>
<status status="PASS" starttime="20220412 13:31:38.182" endtime="20220412 13:31:38.185"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:31:38.179" endtime="20220412 13:31:38.186"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:31:38.122" endtime="20220412 13:31:38.187"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:42.530" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220412 13:31:42.529" endtime="20220412 13:31:42.530"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:42.531" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:31:42.530" endtime="20220412 13:31:42.531"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:31:42.531" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:31:42.531" endtime="20220412 13:31:42.532"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:31:42.532" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220412 13:31:42.532" endtime="20220412 13:31:42.532"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:31:42.533" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:31:42.534" level="INFO">${version_file_contents} = #Tue Apr 12 13:28:39 UTC 2022
cTime=1649770091758
clusterID=CID-876cfc8f-ecf2-493f-b804-dcaaf85206d1
omUuid=a7896188-76ed-455b-8a0b-af5f75371cde
nodeType=OM
scmUuid=09fe77f5-b698-4196-b651-c98e30be162...</msg>
<status status="PASS" starttime="20220412 13:31:42.533" endtime="20220412 13:31:42.534"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:31:42.534" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220412 13:31:42.534" endtime="20220412 13:31:42.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:31:42.535" endtime="20220412 13:31:42.535"/>
</kw>
<status status="PASS" starttime="20220412 13:31:42.533" endtime="20220412 13:31:42.535"/>
</kw>
<status status="PASS" starttime="20220412 13:31:42.532" endtime="20220412 13:31:42.535"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:31:42.528" endtime="20220412 13:31:42.536"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:31:42.473" endtime="20220412 13:31:42.536"/>
</suite>
<suite id="s1-s26" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s26-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:46.988" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220412 13:31:46.987" endtime="20220412 13:31:46.988"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:46.989" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:31:46.988" endtime="20220412 13:31:46.989"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:31:46.989" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:31:46.989" endtime="20220412 13:31:46.989"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:31:46.990" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220412 13:31:46.989" endtime="20220412 13:31:46.990"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:31:46.991" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:31:46.992" level="INFO">${version_file_contents} = #Tue Apr 12 13:28:39 UTC 2022
cTime=1649770095999
clusterID=CID-876cfc8f-ecf2-493f-b804-dcaaf85206d1
omUuid=7631ac2b-362a-4c16-baca-17c801af5c77
nodeType=OM
scmUuid=09fe77f5-b698-4196-b651-c98e30be162...</msg>
<status status="PASS" starttime="20220412 13:31:46.991" endtime="20220412 13:31:46.992"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:31:46.992" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220412 13:31:46.992" endtime="20220412 13:31:46.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:31:46.992" endtime="20220412 13:31:46.993"/>
</kw>
<status status="PASS" starttime="20220412 13:31:46.990" endtime="20220412 13:31:46.993"/>
</kw>
<status status="PASS" starttime="20220412 13:31:46.990" endtime="20220412 13:31:46.993"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:31:46.986" endtime="20220412 13:31:46.993"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:31:46.931" endtime="20220412 13:31:46.994"/>
</suite>
<suite id="s1-s27" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s27-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:31:51.279" level="INFO">${random} = 54258</msg>
<status status="PASS" starttime="20220412 13:31:51.278" endtime="20220412 13:31:51.279"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:31:51.285" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-54258 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:31:57.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:31:57.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:31:51.281" endtime="20220412 13:31:57.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:31:57.590" level="INFO"/>
<status status="PASS" starttime="20220412 13:31:57.586" endtime="20220412 13:31:57.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:31:57.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:31:57.594" endtime="20220412 13:31:57.596"/>
</kw>
<status status="PASS" starttime="20220412 13:31:51.280" endtime="20220412 13:31:57.596"/>
</kw>
<msg timestamp="20220412 13:31:57.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:31:51.280" endtime="20220412 13:31:57.598"/>
</kw>
<msg timestamp="20220412 13:31:57.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:31:51.279" endtime="20220412 13:31:57.599"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:31:57.599" endtime="20220412 13:31:57.600"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:31:51.277" endtime="20220412 13:31:57.600"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:31:51.221" endtime="20220412 13:31:57.601"/>
</suite>
<suite id="s1-s28" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s28-t1" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:32:02.671" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:32:09.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:32:09.918" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:32:02.665" endtime="20220412 13:32:09.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:32:09.920" level="INFO"/>
<status status="PASS" starttime="20220412 13:32:09.919" endtime="20220412 13:32:09.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:32:09.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:32:09.920" endtime="20220412 13:32:09.920"/>
</kw>
<status status="PASS" starttime="20220412 13:32:02.664" endtime="20220412 13:32:09.921"/>
</kw>
<msg timestamp="20220412 13:32:09.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:32:02.664" endtime="20220412 13:32:09.922"/>
</kw>
<msg timestamp="20220412 13:32:09.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:32:02.662" endtime="20220412 13:32:09.922"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:32:09.923" endtime="20220412 13:32:09.923"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:32:02.662" endtime="20220412 13:32:09.923"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220412 13:32:02.592" endtime="20220412 13:32:09.926"/>
</suite>
<suite id="s1-s29" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s29-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:32:14.765" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:32:18.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:32:18.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:32:14.760" endtime="20220412 13:32:18.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:32:18.174" level="INFO"/>
<status status="PASS" starttime="20220412 13:32:18.173" endtime="20220412 13:32:18.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:32:18.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:32:18.175" endtime="20220412 13:32:18.176"/>
</kw>
<status status="PASS" starttime="20220412 13:32:14.759" endtime="20220412 13:32:18.176"/>
</kw>
<msg timestamp="20220412 13:32:18.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:32:14.758" endtime="20220412 13:32:18.178"/>
</kw>
<msg timestamp="20220412 13:32:18.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:32:14.756" endtime="20220412 13:32:18.179"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:32:18.179" endtime="20220412 13:32:18.180"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:32:18.192" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:32:21.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:32:21.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:32:18.187" endtime="20220412 13:32:21.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:32:21.364" level="INFO"/>
<status status="PASS" starttime="20220412 13:32:21.363" endtime="20220412 13:32:21.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:32:21.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:32:21.365" endtime="20220412 13:32:21.365"/>
</kw>
<status status="PASS" starttime="20220412 13:32:18.182" endtime="20220412 13:32:21.366"/>
</kw>
<msg timestamp="20220412 13:32:21.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:32:18.181" endtime="20220412 13:32:21.366"/>
</kw>
<msg timestamp="20220412 13:32:21.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:32:18.180" endtime="20220412 13:32:21.367"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:32:21.372" endtime="20220412 13:32:21.373"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:32:14.754" endtime="20220412 13:32:21.373"/>
</test>
<test id="s1-s29-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:32:21.384" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:32:27.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:32:27.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:32:21.381" endtime="20220412 13:32:27.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:32:27.150" level="INFO"/>
<status status="PASS" starttime="20220412 13:32:27.149" endtime="20220412 13:32:27.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:32:27.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:32:27.150" endtime="20220412 13:32:27.151"/>
</kw>
<status status="PASS" starttime="20220412 13:32:21.380" endtime="20220412 13:32:27.151"/>
</kw>
<msg timestamp="20220412 13:32:27.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:32:21.380" endtime="20220412 13:32:27.152"/>
</kw>
<msg timestamp="20220412 13:32:27.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220412 13:32:21.379" endtime="20220412 13:32:27.152"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:32:27.152" endtime="20220412 13:32:27.153"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:32:21.378" endtime="20220412 13:32:27.153"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220412 13:32:14.678" endtime="20220412 13:32:27.155"/>
</suite>
<suite id="s1-s30" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s30-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:19.533" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220412 13:31:19.530" endtime="20220412 13:31:19.533"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220412 13:31:19.535" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220412 13:31:19.533" endtime="20220412 13:31:19.535"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220412 13:31:19.536" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220412 13:31:19.535" endtime="20220412 13:31:19.536"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220412 13:31:19.536" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220412 13:31:19.536" endtime="20220412 13:31:19.536"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220412 13:31:19.538" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220412 13:31:19.538" level="INFO">${version_file_contents} = #Tue Apr 12 13:27:58 UTC 2022
cTime=1649770078592
clusterID=CID-876cfc8f-ecf2-493f-b804-dcaaf85206d1
nodeType=SCM
scmUuid=09fe77f5-b698-4196-b651-c98e30be1626
layoutVersion=0
</msg>
<status status="PASS" starttime="20220412 13:31:19.537" endtime="20220412 13:31:19.538"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220412 13:31:19.539" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220412 13:31:19.539" endtime="20220412 13:31:19.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:31:19.540" endtime="20220412 13:31:19.540"/>
</kw>
<status status="PASS" starttime="20220412 13:31:19.537" endtime="20220412 13:31:19.540"/>
</kw>
<status status="PASS" starttime="20220412 13:31:19.537" endtime="20220412 13:31:19.540"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:31:19.529" endtime="20220412 13:31:19.541"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220412 13:31:19.452" endtime="20220412 13:31:19.542"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="199918"/>
</suite>
<statistics>
<total>
<stat pass="34" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="34" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="1" skip="0" id="s1-s10" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Generate">upgrade.Generate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s29" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s30" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
