<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0 (Python 3.6.9 on linux)" generated="20220412 13:17:57.799" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:15:13.827" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:15:17.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:15:17.619" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topolog...</msg>
<status status="PASS" starttime="20220412 13:15:13.823" endtime="20220412 13:15:17.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:15:17.621" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20220412 13:15:17.620" endtime="20220412 13:15:17.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:15:17.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:15:17.621" endtime="20220412 13:15:17.621"/>
</kw>
<status status="PASS" starttime="20220412 13:15:13.822" endtime="20220412 13:15:17.622"/>
</kw>
<msg timestamp="20220412 13:15:17.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:15:13.822" endtime="20220412 13:15:17.623"/>
</kw>
<msg timestamp="20220412 13:15:17.624" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topolog...</msg>
<status status="PASS" starttime="20220412 13:15:13.821" endtime="20220412 13:15:17.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:15:17.624" endtime="20220412 13:15:17.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:15:13.819" endtime="20220412 13:15:17.627"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:15:17.634" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:15:21.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:15:21.346" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20220412 13:15:17.631" endtime="20220412 13:15:21.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:15:21.347" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20220412 13:15:21.346" endtime="20220412 13:15:21.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:15:21.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:15:21.347" endtime="20220412 13:15:21.348"/>
</kw>
<status status="PASS" starttime="20220412 13:15:17.631" endtime="20220412 13:15:21.348"/>
</kw>
<msg timestamp="20220412 13:15:21.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:15:17.630" endtime="20220412 13:15:21.349"/>
</kw>
<msg timestamp="20220412 13:15:21.349" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20220412 13:15:17.630" endtime="20220412 13:15:21.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:15:21.350" endtime="20220412 13:15:21.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:15:21.350" endtime="20220412 13:15:21.351"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:15:17.629" endtime="20220412 13:15:21.351"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:15:21.357" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:15:25.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:15:25.039" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topolog...</msg>
<status status="PASS" starttime="20220412 13:15:21.355" endtime="20220412 13:15:25.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:15:25.041" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20220412 13:15:25.040" endtime="20220412 13:15:25.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:15:25.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:15:25.041" endtime="20220412 13:15:25.042"/>
</kw>
<status status="PASS" starttime="20220412 13:15:21.354" endtime="20220412 13:15:25.042"/>
</kw>
<msg timestamp="20220412 13:15:25.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:15:21.354" endtime="20220412 13:15:25.042"/>
</kw>
<msg timestamp="20220412 13:15:25.043" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topolog...</msg>
<status status="PASS" starttime="20220412 13:15:21.353" endtime="20220412 13:15:25.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:15:25.043" endtime="20220412 13:15:25.044"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:15:21.352" endtime="20220412 13:15:25.044"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:15:25.049" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:15:28.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:15:29.000" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topolog...</msg>
<status status="PASS" starttime="20220412 13:15:25.047" endtime="20220412 13:15:29.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:15:29.001" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20220412 13:15:29.000" endtime="20220412 13:15:29.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:15:29.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:15:29.001" endtime="20220412 13:15:29.002"/>
</kw>
<status status="PASS" starttime="20220412 13:15:25.046" endtime="20220412 13:15:29.002"/>
</kw>
<msg timestamp="20220412 13:15:29.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:15:25.046" endtime="20220412 13:15:29.003"/>
</kw>
<msg timestamp="20220412 13:15:29.003" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topolog...</msg>
<status status="PASS" starttime="20220412 13:15:25.046" endtime="20220412 13:15:29.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:15:29.003" endtime="20220412 13:15:29.004"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:15:25.045" endtime="20220412 13:15:29.004"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:15:13.750" endtime="20220412 13:15:29.006"/>
</suite>
<suite id="s1-s2" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:15:35.042" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:15:38.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:15:38.883" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:15:35.037" endtime="20220412 13:15:38.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:15:38.885" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:15:38.884" endtime="20220412 13:15:38.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:15:38.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:15:38.886" endtime="20220412 13:15:38.886"/>
</kw>
<status status="PASS" starttime="20220412 13:15:35.036" endtime="20220412 13:15:38.887"/>
</kw>
<msg timestamp="20220412 13:15:38.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:15:35.035" endtime="20220412 13:15:38.888"/>
</kw>
<msg timestamp="20220412 13:15:38.888" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:15:35.034" endtime="20220412 13:15:38.888"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:15:38.889" endtime="20220412 13:15:38.889"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:15:38.894" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:15:42.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:15:42.911" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:15:38.891" endtime="20220412 13:15:42.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:15:42.913" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:15:42.912" endtime="20220412 13:15:42.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:15:42.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:15:42.913" endtime="20220412 13:15:42.913"/>
</kw>
<status status="PASS" starttime="20220412 13:15:38.890" endtime="20220412 13:15:42.914"/>
</kw>
<msg timestamp="20220412 13:15:42.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:15:38.890" endtime="20220412 13:15:42.914"/>
</kw>
<msg timestamp="20220412 13:15:42.915" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:15:38.889" endtime="20220412 13:15:42.915"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:15:42.915" endtime="20220412 13:15:42.915"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:15:42.920" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:15:50.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:15:50.205" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:15:42.917" endtime="20220412 13:15:50.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:15:50.206" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:15:50.205" endtime="20220412 13:15:50.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:15:50.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:15:50.207" endtime="20220412 13:15:50.208"/>
</kw>
<status status="PASS" starttime="20220412 13:15:42.916" endtime="20220412 13:15:50.208"/>
</kw>
<msg timestamp="20220412 13:15:50.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:15:42.916" endtime="20220412 13:15:50.208"/>
</kw>
<msg timestamp="20220412 13:15:50.209" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:15:42.916" endtime="20220412 13:15:50.209"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:15:50.209" endtime="20220412 13:15:50.209"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:15:35.033" endtime="20220412 13:15:50.210"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:15:34.976" endtime="20220412 13:15:50.211"/>
</suite>
<suite id="s1-s3" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s3-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:16:09.027" level="INFO">${random} = 63810</msg>
<status status="PASS" starttime="20220412 13:16:09.027" endtime="20220412 13:16:09.027"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:16:09.034" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-63810 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:16:37.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:16:37.205" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:16:09.029" endtime="20220412 13:16:37.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:16:37.206" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:16:37.206" endtime="20220412 13:16:37.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:16:37.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:16:37.207" endtime="20220412 13:16:37.207"/>
</kw>
<status status="PASS" starttime="20220412 13:16:09.029" endtime="20220412 13:16:37.208"/>
</kw>
<msg timestamp="20220412 13:16:37.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:16:09.028" endtime="20220412 13:16:37.209"/>
</kw>
<msg timestamp="20220412 13:16:37.209" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:16:09.028" endtime="20220412 13:16:37.209"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:16:37.210" endtime="20220412 13:16:37.210"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:16:09.026" endtime="20220412 13:16:37.210"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:16:08.967" endtime="20220412 13:16:37.213"/>
</suite>
<suite id="s1-s4" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:17:34.311" level="INFO">${random} = 29809</msg>
<status status="PASS" starttime="20220412 13:17:34.310" endtime="20220412 13:17:34.311"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:17:34.322" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-29809 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:17:40.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:17:40.513" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:17:34.313" endtime="20220412 13:17:40.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:17:40.514" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:17:40.513" endtime="20220412 13:17:40.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:17:40.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:17:40.514" endtime="20220412 13:17:40.515"/>
</kw>
<status status="PASS" starttime="20220412 13:17:34.312" endtime="20220412 13:17:40.515"/>
</kw>
<msg timestamp="20220412 13:17:40.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:17:34.312" endtime="20220412 13:17:40.517"/>
</kw>
<msg timestamp="20220412 13:17:40.517" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20220412 13:17:34.311" endtime="20220412 13:17:40.517"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:17:40.517" endtime="20220412 13:17:40.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:17:34.309" endtime="20220412 13:17:40.518"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:17:34.254" endtime="20220412 13:17:40.519"/>
</suite>
<suite id="s1-s5" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s5-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220412 13:14:46.817" endtime="20220412 13:14:46.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:14:46.833" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:14:47.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:14:47.063" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 12 Apr 2022 13:14:46 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 12 Apr 2022 12:50:00 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20220412 13:14:46.824" endtime="20220412 13:14:47.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:14:47.064" level="INFO">HTTP/1.1 200 OK
Date: Tue, 12 Apr 2022 13:14:46 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 12 Apr 2022 12:50:00 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220412 13:14:47.064" endtime="20220412 13:14:47.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:14:47.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:14:47.065" endtime="20220412 13:14:47.069"/>
</kw>
<status status="PASS" starttime="20220412 13:14:46.823" endtime="20220412 13:14:47.070"/>
</kw>
<msg timestamp="20220412 13:14:47.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:14:46.822" endtime="20220412 13:14:47.074"/>
</kw>
<msg timestamp="20220412 13:14:47.075" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 12 Apr 2022 13:14:46 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 12 Apr 2022 12:50:00 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20220412 13:14:46.818" endtime="20220412 13:14:47.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:14:47.078" endtime="20220412 13:14:47.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:14:46.811" endtime="20220412 13:14:47.079"/>
</test>
<test id="s1-s5-t2" name="Basic Freon smoketest">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220412 13:14:47.089" endtime="20220412 13:14:47.090"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220412 13:14:47.095" level="INFO">${random} = Wz00YgqSkF</msg>
<status status="PASS" starttime="20220412 13:14:47.090" endtime="20220412 13:14:47.095"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:14:47.117" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p Wz00YgqSkF  2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:15:00.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:15:00.067" level="INFO">${output} = 2022-04-12 13:14:50,820 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-12 13:14:51,070 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220412 13:14:47.104" endtime="20220412 13:15:00.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:15:00.068" level="INFO">2022-04-12 13:14:50,820 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-12 13:14:51,070 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-12 13:14:51,070 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-12 13:14:51,306 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Wz00YgqSkF
2022-04-12 13:14:51,431 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:14:52,434 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:14:53,435 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:14:53,861 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-04-12 13:14:54,111 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with hadoop as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2022-04-12 13:14:54,435 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:14:55,435 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:14:55,900 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-12 13:14:56,230 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-04-12 13:14:56,436 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:14:57,436 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:14:58,437 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:14:59,438 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-12 13:14:59,556 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4765.996742, max=4765.996742, mean=4765.996742, stddev=0.0, median=4765.996742, p75=4765.996742, p95=4765.996742, p98=4765.996742, p99=4765.996742, p999=4765.996742, mean_rate=0.18816314855895291, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2022-04-12 13:14:59,558 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2022-04-12 13:14:59,568 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-12 13:14:59,568 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220412 13:15:00.067" endtime="20220412 13:15:00.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:15:00.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:15:00.069" endtime="20220412 13:15:00.070"/>
</kw>
<status status="PASS" starttime="20220412 13:14:47.102" endtime="20220412 13:15:00.070"/>
</kw>
<msg timestamp="20220412 13:15:00.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:14:47.101" endtime="20220412 13:15:00.071"/>
</kw>
<msg timestamp="20220412 13:15:00.071" level="INFO">${result} = 2022-04-12 13:14:50,820 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-12 13:14:51,070 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220412 13:14:47.097" endtime="20220412 13:15:00.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:15:00.071" endtime="20220412 13:15:00.072"/>
</kw>
<status status="PASS" starttime="20220412 13:14:47.095" endtime="20220412 13:15:00.072"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220412 13:15:00.078" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p Wz00YgqSkF  2&gt;&amp;1'.</msg>
<msg timestamp="20220412 13:15:07.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20220412 13:15:07.901" level="INFO">${output} = 2022-04-12 13:15:02,361 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-12 13:15:02,525 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220412 13:15:00.075" endtime="20220412 13:15:07.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220412 13:15:07.902" level="INFO">2022-04-12 13:15:02,361 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-12 13:15:02,525 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-04-12 13:15:02,525 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-04-12 13:15:02,737 [main] INFO freon.BaseFreonGenerator: Executing test with prefix Wz00YgqSkF
2022-04-12 13:15:02,884 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:15:03,886 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:15:04,887 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:15:05,395 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-04-12 13:15:05,888 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-04-12 13:15:06,889 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-04-12 13:15:07,530 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=101.997352, max=101.997352, mean=101.997352, stddev=0.0, median=101.997352, p75=101.997352, p95=101.997352, p98=101.997352, p99=101.997352, p999=101.997352, mean_rate=0.9304591764488337, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-04-12 13:15:07,535 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-04-12 13:15:07,535 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-04-12 13:15:07,535 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220412 13:15:07.901" endtime="20220412 13:15:07.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220412 13:15:07.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220412 13:15:07.903" endtime="20220412 13:15:07.903"/>
</kw>
<status status="PASS" starttime="20220412 13:15:00.075" endtime="20220412 13:15:07.904"/>
</kw>
<msg timestamp="20220412 13:15:07.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220412 13:15:00.074" endtime="20220412 13:15:07.905"/>
</kw>
<msg timestamp="20220412 13:15:07.905" level="INFO">${result} = 2022-04-12 13:15:02,361 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-04-12 13:15:02,525 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220412 13:15:00.073" endtime="20220412 13:15:07.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220412 13:15:07.905" endtime="20220412 13:15:07.906"/>
</kw>
<status status="PASS" starttime="20220412 13:15:00.072" endtime="20220412 13:15:07.906"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220412 13:14:47.087" endtime="20220412 13:15:07.906"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220412 13:14:46.707" endtime="20220412 13:15:07.908"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="86203"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="9" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
