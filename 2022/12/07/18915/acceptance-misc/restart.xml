<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221207 03:35:38.295" rpa="false" schemaversion="3">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:32:22.458" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:32:28.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:32:28.867" level="INFO">${output} = 2022-12-07 03:32:24,067 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:24,193 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:22.454" endtime="20221207 03:32:28.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:32:28.868" level="INFO">2022-12-07 03:32:24,067 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:24,193 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:32:24,193 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:32:24,369 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-12-07 03:32:24,449 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:25,461 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:26,418 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:32:26,461 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:27,462 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:28,463 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:32:28,493 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=40.837149, max=40.837149, mean=40.837149, stddev=0.0, median=40.837149, p75=40.837149, p95=40.837149, p98=40.837149, p99=40.837149, p999=40.837149, mean_rate=0.9595540226266369, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:32:28,501 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-12-07 03:32:28,506 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:32:28,506 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:32:28.867" endtime="20221207 03:32:28.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:32:28.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:32:28.868" endtime="20221207 03:32:28.869"/>
</kw>
<status status="PASS" starttime="20221207 03:32:22.453" endtime="20221207 03:32:28.869"/>
</kw>
<msg timestamp="20221207 03:32:28.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:32:22.453" endtime="20221207 03:32:28.870"/>
</kw>
<msg timestamp="20221207 03:32:28.871" level="INFO">${result} = 2022-12-07 03:32:24,067 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:24,193 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:22.452" endtime="20221207 03:32:28.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:32:28.871" endtime="20221207 03:32:28.871"/>
</kw>
<status status="PASS" starttime="20221207 03:32:22.451" endtime="20221207 03:32:28.871"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:32:22.450" endtime="20221207 03:32:28.872"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221207 03:32:22.360" endtime="20221207 03:32:28.873"/>
</suite>
<suite id="s1-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:32:34.012" endtime="20221207 03:32:34.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:32:34.018" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:32:41.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:32:41.950" level="INFO">${output} = 2022-12-07 03:32:35,744 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:35,886 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:34.014" endtime="20221207 03:32:41.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:32:41.951" level="INFO">2022-12-07 03:32:35,744 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:35,886 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:32:35,886 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:32:36,679 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-12-07 03:32:36,727 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:32:37,326 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:32:37,647 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:32:37,729 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:32:38,730 [Thread-4] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2022-12-07 03:32:39,730 [Thread-4] INFO freon.ProgressBar: Progress: 54.00 % (54 out of 100)
2022-12-07 03:32:40,734 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-12-07 03:32:41,602 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=11.666728, max=856.355865, mean=30.348848995295167, stddev=82.54633775188847, median=21.310434, p75=25.41668, p95=34.692481, p98=42.556968, p99=44.445389, p999=856.355865, mean_rate=24.557044156941252, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:32:41,603 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-12-07 03:32:41,603 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:32:41,603 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221207 03:32:41.950" endtime="20221207 03:32:41.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:32:41.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:32:41.951" endtime="20221207 03:32:41.952"/>
</kw>
<status status="PASS" starttime="20221207 03:32:34.013" endtime="20221207 03:32:41.952"/>
</kw>
<msg timestamp="20221207 03:32:41.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:32:34.013" endtime="20221207 03:32:41.954"/>
</kw>
<msg timestamp="20221207 03:32:41.954" level="INFO">${result} = 2022-12-07 03:32:35,744 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:35,886 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:34.012" endtime="20221207 03:32:41.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:32:41.954" endtime="20221207 03:32:41.955"/>
</kw>
<status status="PASS" starttime="20221207 03:32:34.010" endtime="20221207 03:32:41.955"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:32:34.009" endtime="20221207 03:32:41.955"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221207 03:32:33.960" endtime="20221207 03:32:41.957"/>
</suite>
<suite id="s1-s3" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:32:46.954" endtime="20221207 03:32:46.954"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:32:46.959" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:32:52.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:32:52.260" level="INFO">${output} = 2022-12-07 03:32:48,481 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:48,621 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:46.955" endtime="20221207 03:32:52.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:32:52.261" level="INFO">2022-12-07 03:32:48,481 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:48,621 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:32:48,621 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:32:48,789 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-12-07 03:32:48,851 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:32:49,297 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=6b4c2973-c71f-4640-ae4e-447bb108574e
2022-12-07 03:32:49,860 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:32:49,919 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:32:50,172 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:32:50,861 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:32:51,861 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-12-07 03:32:51,913 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.949419, max=12.930826, mean=4.43112948955126, stddev=2.2122265212262207, median=4.06284, p75=5.024649, p95=8.280481, p98=10.610903, p99=12.233219, p999=12.930826, mean_rate=94.2551697426601, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:32:51,914 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-12-07 03:32:51,914 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:32:51,914 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221207 03:32:52.261" endtime="20221207 03:32:52.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:32:52.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:32:52.262" endtime="20221207 03:32:52.262"/>
</kw>
<status status="PASS" starttime="20221207 03:32:46.955" endtime="20221207 03:32:52.263"/>
</kw>
<msg timestamp="20221207 03:32:52.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:32:46.955" endtime="20221207 03:32:52.264"/>
</kw>
<msg timestamp="20221207 03:32:52.264" level="INFO">${result} = 2022-12-07 03:32:48,481 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:48,621 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:46.954" endtime="20221207 03:32:52.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:32:52.264" endtime="20221207 03:32:52.265"/>
</kw>
<status status="PASS" starttime="20221207 03:32:46.952" endtime="20221207 03:32:52.265"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:32:46.951" endtime="20221207 03:32:52.265"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221207 03:32:46.907" endtime="20221207 03:32:52.267"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:34:04.838" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:34:11.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:34:11.773" level="INFO">${output} = 2022-12-07 03:34:06,588 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:06,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:04.833" endtime="20221207 03:34:11.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:34:11.774" level="INFO">2022-12-07 03:34:06,588 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:06,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:34:06,760 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:34:07,043 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-12-07 03:34:07,114 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:08,115 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:09,115 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:09,282 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:34:10,116 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:11,116 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:34:11,394 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=46.424835, max=46.424835, mean=46.424835, stddev=0.0, median=46.424835, p75=46.424835, p95=46.424835, p98=46.424835, p99=46.424835, p999=46.424835, mean_rate=0.974091479147839, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:34:11,394 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-12-07 03:34:11,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:34:11,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:34:11.773" endtime="20221207 03:34:11.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:34:11.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:34:11.774" endtime="20221207 03:34:11.775"/>
</kw>
<status status="PASS" starttime="20221207 03:34:04.832" endtime="20221207 03:34:11.775"/>
</kw>
<msg timestamp="20221207 03:34:11.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:34:04.832" endtime="20221207 03:34:11.777"/>
</kw>
<msg timestamp="20221207 03:34:11.777" level="INFO">${result} = 2022-12-07 03:34:06,588 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:06,760 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:04.831" endtime="20221207 03:34:11.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:34:11.777" endtime="20221207 03:34:11.778"/>
</kw>
<status status="PASS" starttime="20221207 03:34:04.830" endtime="20221207 03:34:11.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:34:04.829" endtime="20221207 03:34:11.778"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221207 03:34:04.785" endtime="20221207 03:34:11.779"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:34:16.719" endtime="20221207 03:34:16.719"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:34:16.724" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:34:29.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:34:29.536" level="INFO">${output} = 2022-12-07 03:34:18,241 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:18,345 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:16.721" endtime="20221207 03:34:29.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:34:29.537" level="INFO">2022-12-07 03:34:18,241 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:18,345 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:34:18,345 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:34:18,531 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2022-12-07 03:34:18,606 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:34:19,167 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=6b4c2973-c71f-4640-ae4e-447bb108574e
2022-12-07 03:34:19,610 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:34:19,691 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:34:20,021 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:34:20,610 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:34:21,611 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:34:22,611 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:34:23,612 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:34:24,612 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:34:25,613 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:34:26,614 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:34:27,615 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:34:28,616 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-12-07 03:34:29,185 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.288321, max=13.447625, mean=4.072750030000002, stddev=2.0071744628338988, median=3.531133, p75=4.614543, p95=8.791582, p98=9.66519, p99=11.148504, p999=13.447625, mean_rate=96.48978340651745, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:34:29,186 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2022-12-07 03:34:29,186 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:34:29,186 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221207 03:34:29.536" endtime="20221207 03:34:29.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:34:29.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:34:29.537" endtime="20221207 03:34:29.538"/>
</kw>
<status status="PASS" starttime="20221207 03:34:16.720" endtime="20221207 03:34:29.538"/>
</kw>
<msg timestamp="20221207 03:34:29.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:34:16.720" endtime="20221207 03:34:29.540"/>
</kw>
<msg timestamp="20221207 03:34:29.540" level="INFO">${result} = 2022-12-07 03:34:18,241 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:18,345 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:16.719" endtime="20221207 03:34:29.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:34:29.540" endtime="20221207 03:34:29.541"/>
</kw>
<status status="PASS" starttime="20221207 03:34:16.718" endtime="20221207 03:34:29.541"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:34:16.717" endtime="20221207 03:34:29.541"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221207 03:34:16.671" endtime="20221207 03:34:29.542"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:34:34.617" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:34:41.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:34:41.477" level="INFO">${output} = 2022-12-07 03:34:36,505 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:36,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:34.613" endtime="20221207 03:34:41.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:34:41.478" level="INFO">2022-12-07 03:34:36,505 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:36,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:34:36,686 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:34:36,906 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2022-12-07 03:34:36,999 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:38,000 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:38,800 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:34:39,001 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:39,084 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:34:40,003 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:41,004 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:34:41,077 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2498.12516, max=2498.12516, mean=2498.12516, stddev=0.0, median=2498.12516, p75=2498.12516, p95=2498.12516, p98=2498.12516, p99=2498.12516, p999=2498.12516, mean_rate=0.3048928274377914, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:34:41,077 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-12-07 03:34:41,078 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:34:41,078 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:34:41.478" endtime="20221207 03:34:41.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:34:41.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:34:41.479" endtime="20221207 03:34:41.479"/>
</kw>
<status status="PASS" starttime="20221207 03:34:34.613" endtime="20221207 03:34:41.480"/>
</kw>
<msg timestamp="20221207 03:34:41.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:34:34.613" endtime="20221207 03:34:41.481"/>
</kw>
<msg timestamp="20221207 03:34:41.481" level="INFO">${result} = 2022-12-07 03:34:36,505 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:36,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:34.612" endtime="20221207 03:34:41.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:34:41.482" endtime="20221207 03:34:41.482"/>
</kw>
<status status="PASS" starttime="20221207 03:34:34.611" endtime="20221207 03:34:41.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:34:34.610" endtime="20221207 03:34:41.482"/>
</test>
<test id="s1-s6-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:34:41.489" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:34:45.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:34:45.422" level="INFO">${output} = 2022-12-07 03:34:43,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:43,392 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:41.487" endtime="20221207 03:34:45.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:34:45.423" level="INFO">2022-12-07 03:34:43,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:43,392 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:34:43,392 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:34:43,609 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2022-12-07 03:34:43,699 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:44,707 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:34:45,370 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=97.709707, max=97.709707, mean=97.709707, stddev=0.0, median=97.709707, p75=97.709707, p95=97.709707, p98=97.709707, p99=97.709707, p999=97.709707, mean_rate=0.9790085059049167, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:34:45,371 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-12-07 03:34:45,371 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:34:45,371 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:34:45.422" endtime="20221207 03:34:45.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:34:45.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:34:45.423" endtime="20221207 03:34:45.424"/>
</kw>
<status status="PASS" starttime="20221207 03:34:41.486" endtime="20221207 03:34:45.424"/>
</kw>
<msg timestamp="20221207 03:34:45.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:34:41.486" endtime="20221207 03:34:45.425"/>
</kw>
<msg timestamp="20221207 03:34:45.425" level="INFO">${result} = 2022-12-07 03:34:43,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:43,392 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:41.486" endtime="20221207 03:34:45.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:34:45.425" endtime="20221207 03:34:45.426"/>
</kw>
<status status="PASS" starttime="20221207 03:34:41.484" endtime="20221207 03:34:45.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:34:41.484" endtime="20221207 03:34:45.426"/>
</test>
<test id="s1-s6-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:34:45.433" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:34:49.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:34:49.431" level="INFO">${output} = 2022-12-07 03:34:46,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:47,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:45.431" endtime="20221207 03:34:49.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:34:49.433" level="INFO">2022-12-07 03:34:46,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:47,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:34:47,092 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:34:47,259 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2022-12-07 03:34:47,353 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:48,354 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:49,355 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:34:49,383 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=22.148804, max=22.148804, mean=22.148804, stddev=0.0, median=22.148804, p75=22.148804, p95=22.148804, p98=22.148804, p99=22.148804, p999=22.148804, mean_rate=0.9812416235082257, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:34:49,384 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-12-07 03:34:49,384 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:34:49,384 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:34:49.432" endtime="20221207 03:34:49.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:34:49.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:34:49.433" endtime="20221207 03:34:49.433"/>
</kw>
<status status="PASS" starttime="20221207 03:34:45.430" endtime="20221207 03:34:49.434"/>
</kw>
<msg timestamp="20221207 03:34:49.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:34:45.430" endtime="20221207 03:34:49.434"/>
</kw>
<msg timestamp="20221207 03:34:49.435" level="INFO">${result} = 2022-12-07 03:34:46,968 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:47,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:45.429" endtime="20221207 03:34:49.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:34:49.435" endtime="20221207 03:34:49.435"/>
</kw>
<status status="PASS" starttime="20221207 03:34:45.428" endtime="20221207 03:34:49.435"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:34:45.427" endtime="20221207 03:34:49.436"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221207 03:34:34.566" endtime="20221207 03:34:49.437"/>
</suite>
<suite id="s1-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:34:54.327" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:34:59.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:34:59.711" level="INFO">${output} = 2022-12-07 03:34:55,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:55,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:54.323" endtime="20221207 03:34:59.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:34:59.713" level="INFO">2022-12-07 03:34:55,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:55,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:34:55,930 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:34:56,123 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2022-12-07 03:34:56,197 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:57,207 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:57,401 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:34:58,207 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:34:59,208 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:34:59,341 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=45.867798, max=45.867798, mean=45.867798, stddev=0.0, median=45.867798, p75=45.867798, p95=45.867798, p98=45.867798, p99=45.867798, p999=45.867798, mean_rate=0.9770002514505548, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:34:59,341 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-12-07 03:34:59,341 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:34:59,342 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:34:59.712" endtime="20221207 03:34:59.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:34:59.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:34:59.713" endtime="20221207 03:34:59.714"/>
</kw>
<status status="PASS" starttime="20221207 03:34:54.323" endtime="20221207 03:34:59.714"/>
</kw>
<msg timestamp="20221207 03:34:59.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:34:54.323" endtime="20221207 03:34:59.728"/>
</kw>
<msg timestamp="20221207 03:34:59.728" level="INFO">${result} = 2022-12-07 03:34:55,794 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:34:55,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:34:54.322" endtime="20221207 03:34:59.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:34:59.729" endtime="20221207 03:34:59.729"/>
</kw>
<status status="PASS" starttime="20221207 03:34:54.321" endtime="20221207 03:34:59.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:34:54.320" endtime="20221207 03:34:59.730"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20221207 03:34:54.277" endtime="20221207 03:34:59.731"/>
</suite>
<suite id="s1-s8" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s8-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:35:04.578" endtime="20221207 03:35:04.578"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:35:04.584" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:35:12.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:35:12.417" level="INFO">${output} = 2022-12-07 03:35:06,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:35:06,262 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:35:04.580" endtime="20221207 03:35:12.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:35:12.419" level="INFO">2022-12-07 03:35:06,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:35:06,262 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:35:06,262 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:35:06,981 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2022-12-07 03:35:07,020 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:35:07,564 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:35:07,855 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:35:08,021 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:35:09,022 [Thread-4] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2022-12-07 03:35:10,022 [Thread-4] INFO freon.ProgressBar: Progress: 46.00 % (46 out of 100)
2022-12-07 03:35:11,023 [Thread-4] INFO freon.ProgressBar: Progress: 91.00 % (91 out of 100)
2022-12-07 03:35:12,023 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-12-07 03:35:12,059 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=11.708505, max=921.282308, mean=33.65306548116438, stddev=88.461195385804, median=23.741819, p75=28.413162, p95=41.463582, p98=42.776095, p99=56.695624, p999=921.282308, mean_rate=23.215018169665772, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:35:12,060 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-12-07 03:35:12,060 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:35:12,060 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221207 03:35:12.418" endtime="20221207 03:35:12.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:35:12.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:35:12.419" endtime="20221207 03:35:12.419"/>
</kw>
<status status="PASS" starttime="20221207 03:35:04.579" endtime="20221207 03:35:12.420"/>
</kw>
<msg timestamp="20221207 03:35:12.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:35:04.579" endtime="20221207 03:35:12.421"/>
</kw>
<msg timestamp="20221207 03:35:12.422" level="INFO">${result} = 2022-12-07 03:35:06,041 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:35:06,262 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:35:04.578" endtime="20221207 03:35:12.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:35:12.422" endtime="20221207 03:35:12.422"/>
</kw>
<status status="PASS" starttime="20221207 03:35:04.577" endtime="20221207 03:35:12.422"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:35:04.576" endtime="20221207 03:35:12.423"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20221207 03:35:04.530" endtime="20221207 03:35:12.424"/>
</suite>
<suite id="s1-s9" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:35:17.330" endtime="20221207 03:35:17.330"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:35:17.335" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:35:22.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:35:22.537" level="INFO">${output} = 2022-12-07 03:35:18,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:35:18,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:35:17.331" endtime="20221207 03:35:22.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:35:22.538" level="INFO">2022-12-07 03:35:18,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:35:18,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:35:18,918 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:35:19,071 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2022-12-07 03:35:19,132 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:35:19,576 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=6b4c2973-c71f-4640-ae4e-447bb108574e
2022-12-07 03:35:20,024 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:35:20,140 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-07 03:35:20,277 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:35:21,142 [Thread-3] INFO freon.ProgressBar: Progress: 30.00 % (30 out of 100)
2022-12-07 03:35:22,142 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-12-07 03:35:22,187 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.919517, max=12.743416, mean=3.589071700000002, stddev=1.9446225044525252, median=2.988627, p75=4.144238, p95=7.248466, p98=8.80038, p99=11.180802, p999=12.743416, mean_rate=83.41221216127383, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:35:22,188 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-12-07 03:35:22,188 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:35:22,188 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221207 03:35:22.537" endtime="20221207 03:35:22.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:35:22.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:35:22.538" endtime="20221207 03:35:22.539"/>
</kw>
<status status="PASS" starttime="20221207 03:35:17.331" endtime="20221207 03:35:22.539"/>
</kw>
<msg timestamp="20221207 03:35:22.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:35:17.331" endtime="20221207 03:35:22.541"/>
</kw>
<msg timestamp="20221207 03:35:22.541" level="INFO">${result} = 2022-12-07 03:35:18,806 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:35:18,918 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:35:17.330" endtime="20221207 03:35:22.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:35:22.541" endtime="20221207 03:35:22.542"/>
</kw>
<status status="PASS" starttime="20221207 03:35:17.328" endtime="20221207 03:35:22.542"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:35:17.327" endtime="20221207 03:35:22.542"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20221207 03:35:17.284" endtime="20221207 03:35:22.543"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s10-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:32:00.828" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:32:08.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:32:08.806" level="INFO">${output} = 2022-12-07 03:32:02,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:03,056 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:00.824" endtime="20221207 03:32:08.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:32:08.807" level="INFO">2022-12-07 03:32:02,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:03,056 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:32:03,056 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:32:03,274 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2022-12-07 03:32:03,394 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:04,403 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:04,780 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-07 03:32:04,953 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-07 03:32:05,403 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:05,869 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:32:06,221 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:32:06,403 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:07,413 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:08,414 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:32:08,457 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2886.572947, max=2886.572947, mean=2886.572947, stddev=0.0, median=2886.572947, p75=2886.572947, p95=2886.572947, p98=2886.572947, p99=2886.572947, p999=2886.572947, mean_rate=0.28988050741972243, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:32:08,457 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-12-07 03:32:08,458 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:32:08,458 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:32:08.807" endtime="20221207 03:32:08.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:32:08.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:32:08.808" endtime="20221207 03:32:08.808"/>
</kw>
<status status="PASS" starttime="20221207 03:32:00.824" endtime="20221207 03:32:08.809"/>
</kw>
<msg timestamp="20221207 03:32:08.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:32:00.823" endtime="20221207 03:32:08.810"/>
</kw>
<msg timestamp="20221207 03:32:08.810" level="INFO">${result} = 2022-12-07 03:32:02,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:03,056 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:00.823" endtime="20221207 03:32:08.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:32:08.811" endtime="20221207 03:32:08.811"/>
</kw>
<status status="PASS" starttime="20221207 03:32:00.821" endtime="20221207 03:32:08.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:32:00.820" endtime="20221207 03:32:08.811"/>
</test>
<test id="s1-s10-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:32:08.818" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:32:13.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:32:13.090" level="INFO">${output} = 2022-12-07 03:32:10,638 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:10,848 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:08.815" endtime="20221207 03:32:13.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:32:13.091" level="INFO">2022-12-07 03:32:10,638 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:10,848 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:32:10,848 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:32:11,077 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2022-12-07 03:32:11,171 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:12,173 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:32:13,029 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=85.923023, max=85.923023, mean=85.923023, stddev=0.0, median=85.923023, p75=85.923023, p95=85.923023, p98=85.923023, p99=85.923023, p999=85.923023, mean_rate=0.9615072560053731, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:32:13,031 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-12-07 03:32:13,031 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:32:13,031 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:32:13.090" endtime="20221207 03:32:13.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:32:13.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:32:13.092" endtime="20221207 03:32:13.092"/>
</kw>
<status status="PASS" starttime="20221207 03:32:08.815" endtime="20221207 03:32:13.093"/>
</kw>
<msg timestamp="20221207 03:32:13.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:32:08.815" endtime="20221207 03:32:13.093"/>
</kw>
<msg timestamp="20221207 03:32:13.093" level="INFO">${result} = 2022-12-07 03:32:10,638 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:10,848 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:08.814" endtime="20221207 03:32:13.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:32:13.094" endtime="20221207 03:32:13.094"/>
</kw>
<status status="PASS" starttime="20221207 03:32:08.813" endtime="20221207 03:32:13.094"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:32:08.812" endtime="20221207 03:32:13.094"/>
</test>
<test id="s1-s10-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:32:13.101" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:32:17.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:32:17.368" level="INFO">${output} = 2022-12-07 03:32:14,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:15,226 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:13.099" endtime="20221207 03:32:17.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:32:17.371" level="INFO">2022-12-07 03:32:14,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:15,226 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:32:15,226 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:32:15,389 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2022-12-07 03:32:15,447 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:32:16,455 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:32:17,226 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=24.781222, max=24.781222, mean=24.781222, stddev=0.0, median=24.781222, p75=24.781222, p95=24.781222, p98=24.781222, p99=24.781222, p999=24.781222, mean_rate=0.9528347830508109, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:32:17,235 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-12-07 03:32:17,235 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:32:17,235 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:32:17.369" endtime="20221207 03:32:17.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:32:17.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:32:17.371" endtime="20221207 03:32:17.372"/>
</kw>
<status status="PASS" starttime="20221207 03:32:13.099" endtime="20221207 03:32:17.372"/>
</kw>
<msg timestamp="20221207 03:32:17.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:32:13.098" endtime="20221207 03:32:17.373"/>
</kw>
<msg timestamp="20221207 03:32:17.375" level="INFO">${result} = 2022-12-07 03:32:14,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:32:15,226 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:32:13.098" endtime="20221207 03:32:17.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:32:17.376" endtime="20221207 03:32:17.376"/>
</kw>
<status status="PASS" starttime="20221207 03:32:13.096" endtime="20221207 03:32:17.376"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:32:13.096" endtime="20221207 03:32:17.377"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20221207 03:32:00.772" endtime="20221207 03:32:17.380"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="89821"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s10" name="Generate">restart.Generate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
