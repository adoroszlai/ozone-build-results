<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221207 03:27:05.246" rpa="false" schemaversion="3">
<suite id="s1" name="ozones3-haproxy" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:26:35.131" endtime="20221207 03:26:35.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:26:35.137" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:26:35.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:26:35.218" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 07 Dec 2022 03:26:35 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 07 Dec 2022 02:52:46 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221207 03:26:35.133" endtime="20221207 03:26:35.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:26:35.223" level="INFO">HTTP/1.1 200 OK
Date: Wed, 07 Dec 2022 03:26:35 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 07 Dec 2022 02:52:46 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221207 03:26:35.218" endtime="20221207 03:26:35.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:26:35.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:26:35.223" endtime="20221207 03:26:35.225"/>
</kw>
<status status="PASS" starttime="20221207 03:26:35.133" endtime="20221207 03:26:35.225"/>
</kw>
<msg timestamp="20221207 03:26:35.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:26:35.132" endtime="20221207 03:26:35.227"/>
</kw>
<msg timestamp="20221207 03:26:35.227" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 07 Dec 2022 03:26:35 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 07 Dec 2022 02:52:46 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221207 03:26:35.132" endtime="20221207 03:26:35.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:26:35.227" endtime="20221207 03:26:35.227"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:26:35.130" endtime="20221207 03:26:35.228"/>
</test>
<test id="s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:26:35.233" endtime="20221207 03:26:35.234"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221207 03:26:35.234" level="INFO">${random} = uRwksNOgEx</msg>
<status status="PASS" starttime="20221207 03:26:35.234" endtime="20221207 03:26:35.234"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:26:35.247" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p uRwksNOgEx  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:26:42.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:26:42.753" level="INFO">${output} = 2022-12-07 03:26:36,916 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:26:37,037 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:26:35.240" endtime="20221207 03:26:42.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:26:42.754" level="INFO">2022-12-07 03:26:36,916 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:26:37,037 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:26:37,037 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:26:37,235 [main] INFO freon.BaseFreonGenerator: Executing test with prefix uRwksNOgEx and number-of-tests 1
2022-12-07 03:26:37,289 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:26:38,296 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:26:38,684 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-07 03:26:38,862 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-07 03:26:39,297 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:26:39,637 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:26:39,937 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:26:40,302 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:26:41,303 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:26:42,304 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:26:42,379 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2431.031709, max=2431.031709, mean=2431.031709, stddev=0.0, median=2431.031709, p75=2431.031709, p95=2431.031709, p98=2431.031709, p99=2431.031709, p999=2431.031709, mean_rate=0.28730497482607376, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:26:42,380 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-12-07 03:26:42,380 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:26:42,380 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:26:42.753" endtime="20221207 03:26:42.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:26:42.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:26:42.755" endtime="20221207 03:26:42.755"/>
</kw>
<status status="PASS" starttime="20221207 03:26:35.238" endtime="20221207 03:26:42.756"/>
</kw>
<msg timestamp="20221207 03:26:42.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:26:35.238" endtime="20221207 03:26:42.756"/>
</kw>
<msg timestamp="20221207 03:26:42.761" level="INFO">${result} = 2022-12-07 03:26:36,916 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:26:37,037 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:26:35.237" endtime="20221207 03:26:42.761"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:26:42.761" endtime="20221207 03:26:42.761"/>
</kw>
<status status="PASS" starttime="20221207 03:26:35.234" endtime="20221207 03:26:42.762"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:26:42.768" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p uRwksNOgEx  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:26:49.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:26:49.167" level="INFO">${output} = 2022-12-07 03:26:44,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:26:44,679 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:26:42.765" endtime="20221207 03:26:49.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:26:49.168" level="INFO">2022-12-07 03:26:44,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:26:44,679 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:26:44,679 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:26:44,939 [main] INFO freon.BaseFreonGenerator: Executing test with prefix uRwksNOgEx and number-of-tests 1
2022-12-07 03:26:45,040 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:26:46,052 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:26:46,629 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:26:47,052 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:26:48,053 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:26:48,807 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=63.828904, max=63.828904, mean=63.828904, stddev=0.0, median=63.828904, p75=63.828904, p95=63.828904, p98=63.828904, p99=63.828904, p999=63.828904, mean_rate=0.9671876857725746, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:26:48,808 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-12-07 03:26:48,808 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:26:48,808 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:26:49.167" endtime="20221207 03:26:49.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:26:49.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:26:49.168" endtime="20221207 03:26:49.169"/>
</kw>
<status status="PASS" starttime="20221207 03:26:42.765" endtime="20221207 03:26:49.169"/>
</kw>
<msg timestamp="20221207 03:26:49.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:26:42.764" endtime="20221207 03:26:49.170"/>
</kw>
<msg timestamp="20221207 03:26:49.170" level="INFO">${result} = 2022-12-07 03:26:44,551 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:26:44,679 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:26:42.764" endtime="20221207 03:26:49.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:26:49.170" endtime="20221207 03:26:49.170"/>
</kw>
<status status="PASS" starttime="20221207 03:26:42.762" endtime="20221207 03:26:49.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:26:35.232" endtime="20221207 03:26:49.171"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221207 03:26:35.075" endtime="20221207 03:26:49.173"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="ozones3-haproxy">ozones3-haproxy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
