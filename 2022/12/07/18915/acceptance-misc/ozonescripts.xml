<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221207 03:30:52.754" rpa="false" schemaversion="3">
<suite id="s1" name="ozonescripts">
<suite id="s1-s1" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:29:05.669" endtime="20221207 03:29:05.670"/>
</kw>
<test id="s1-s1-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:05.676" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:08.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:08.221" level="INFO">${output} = PipelineID=0ea15517-31fd-418f-a5fa-ee1ac10faa07 is created. Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_...</msg>
<status status="PASS" starttime="20221207 03:29:05.672" endtime="20221207 03:29:08.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:08.222" level="INFO">PipelineID=0ea15517-31fd-418f-a5fa-ee1ac10faa07 is created. Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-12-07T03:29:08.115Z[UTC]]</msg>
<status status="PASS" starttime="20221207 03:29:08.222" endtime="20221207 03:29:08.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:08.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:08.223" endtime="20221207 03:29:08.223"/>
</kw>
<status status="PASS" starttime="20221207 03:29:05.672" endtime="20221207 03:29:08.224"/>
</kw>
<msg timestamp="20221207 03:29:08.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:29:05.672" endtime="20221207 03:29:08.225"/>
</kw>
<msg timestamp="20221207 03:29:08.225" level="INFO">${output} = PipelineID=0ea15517-31fd-418f-a5fa-ee1ac10faa07 is created. Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_...</msg>
<status status="PASS" starttime="20221207 03:29:05.671" endtime="20221207 03:29:08.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:08.225" endtime="20221207 03:29:08.226"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:08.226" endtime="20221207 03:29:08.226"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:08.230" level="INFO">Running command 'echo "PipelineID=0ea15517-31fd-418f-a5fa-ee1ac10faa07 is created. Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-12-07T03:29:08.115Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:08.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:08.234" level="INFO">${output} = 0ea15517-31fd-418f-a5fa-ee1ac10faa07</msg>
<status status="PASS" starttime="20221207 03:29:08.228" endtime="20221207 03:29:08.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:08.235" level="INFO">0ea15517-31fd-418f-a5fa-ee1ac10faa07</msg>
<status status="PASS" starttime="20221207 03:29:08.235" endtime="20221207 03:29:08.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:08.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:08.236" endtime="20221207 03:29:08.236"/>
</kw>
<status status="PASS" starttime="20221207 03:29:08.227" endtime="20221207 03:29:08.236"/>
</kw>
<msg timestamp="20221207 03:29:08.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:29:08.227" endtime="20221207 03:29:08.237"/>
</kw>
<msg timestamp="20221207 03:29:08.237" level="INFO">${pipeline} = 0ea15517-31fd-418f-a5fa-ee1ac10faa07</msg>
<status status="PASS" starttime="20221207 03:29:08.226" endtime="20221207 03:29:08.237"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221207 03:29:08.238" level="INFO">${PIPELINE} = 0ea15517-31fd-418f-a5fa-ee1ac10faa07</msg>
<status status="PASS" starttime="20221207 03:29:08.237" endtime="20221207 03:29:08.238"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:29:05.670" endtime="20221207 03:29:08.238"/>
</test>
<test id="s1-s1-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:08.243" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:10.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:10.473" level="INFO">${output} = Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221207 03:29:08.241" endtime="20221207 03:29:10.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:10.474" level="INFO">Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-12-07T03:29:08.115Z[UTC]]
Pipeline[ Id: 69cb44d2-7cd5-49df-bf5d-b4c958256dcc, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:9a975f29-c963-477e-9764-0c1e8b62c795, CreationTimestamp2022-12-07T03:28:29.841Z[UTC]]</msg>
<status status="PASS" starttime="20221207 03:29:10.473" endtime="20221207 03:29:10.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:10.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:10.474" endtime="20221207 03:29:10.475"/>
</kw>
<status status="PASS" starttime="20221207 03:29:08.240" endtime="20221207 03:29:10.475"/>
</kw>
<msg timestamp="20221207 03:29:10.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:29:08.240" endtime="20221207 03:29:10.476"/>
</kw>
<msg timestamp="20221207 03:29:10.476" level="INFO">${output} = Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221207 03:29:08.239" endtime="20221207 03:29:10.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:10.476" endtime="20221207 03:29:10.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:29:08.239" endtime="20221207 03:29:10.477"/>
</test>
<test id="s1-s1-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:10.482" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:12.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:12.885" level="INFO">${output} = Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221207 03:29:10.479" endtime="20221207 03:29:12.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:12.887" level="INFO">Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-12-07T03:29:08.115Z[UTC]]
Pipeline[ Id: 69cb44d2-7cd5-49df-bf5d-b4c958256dcc, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:9a975f29-c963-477e-9764-0c1e8b62c795, CreationTimestamp2022-12-07T03:28:29.841Z[UTC]]</msg>
<status status="PASS" starttime="20221207 03:29:12.886" endtime="20221207 03:29:12.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:12.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:12.887" endtime="20221207 03:29:12.887"/>
</kw>
<status status="PASS" starttime="20221207 03:29:10.479" endtime="20221207 03:29:12.888"/>
</kw>
<msg timestamp="20221207 03:29:12.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:29:10.479" endtime="20221207 03:29:12.888"/>
</kw>
<msg timestamp="20221207 03:29:12.888" level="INFO">${output} = Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221207 03:29:10.478" endtime="20221207 03:29:12.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:12.889" endtime="20221207 03:29:12.889"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:29:10.477" endtime="20221207 03:29:12.889"/>
</test>
<test id="s1-s1-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:12.895" level="INFO">Running command 'ozone admin pipeline deactivate "0ea15517-31fd-418f-a5fa-ee1ac10faa07" 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:15.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:15.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221207 03:29:12.893" endtime="20221207 03:29:15.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:15.225" level="INFO"/>
<status status="PASS" starttime="20221207 03:29:15.224" endtime="20221207 03:29:15.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:15.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:15.225" endtime="20221207 03:29:15.226"/>
</kw>
<status status="PASS" starttime="20221207 03:29:12.892" endtime="20221207 03:29:15.226"/>
</kw>
<msg timestamp="20221207 03:29:15.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:29:12.892" endtime="20221207 03:29:15.227"/>
</kw>
<status status="PASS" starttime="20221207 03:29:12.891" endtime="20221207 03:29:15.227"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:15.231" level="INFO">Running command 'ozone admin pipeline list | grep "0ea15517-31fd-418f-a5fa-ee1ac10faa07" 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:17.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:17.522" level="INFO">${output} = Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221207 03:29:15.228" endtime="20221207 03:29:17.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:17.523" level="INFO">Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2022-12-07T03:29:08.115Z[UTC]]</msg>
<status status="PASS" starttime="20221207 03:29:17.522" endtime="20221207 03:29:17.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:17.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:17.524" endtime="20221207 03:29:17.524"/>
</kw>
<status status="PASS" starttime="20221207 03:29:15.228" endtime="20221207 03:29:17.525"/>
</kw>
<msg timestamp="20221207 03:29:17.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:29:15.228" endtime="20221207 03:29:17.525"/>
</kw>
<msg timestamp="20221207 03:29:17.525" level="INFO">${output} = Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221207 03:29:15.227" endtime="20221207 03:29:17.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:17.526" endtime="20221207 03:29:17.526"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:29:12.891" endtime="20221207 03:29:17.526"/>
</test>
<test id="s1-s1-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:17.531" level="INFO">Running command 'ozone admin pipeline activate "0ea15517-31fd-418f-a5fa-ee1ac10faa07" 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:20.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:20.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221207 03:29:17.529" endtime="20221207 03:29:20.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:20.144" level="INFO"/>
<status status="PASS" starttime="20221207 03:29:20.143" endtime="20221207 03:29:20.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:20.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:20.144" endtime="20221207 03:29:20.145"/>
</kw>
<status status="PASS" starttime="20221207 03:29:17.529" endtime="20221207 03:29:20.145"/>
</kw>
<msg timestamp="20221207 03:29:20.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:29:17.528" endtime="20221207 03:29:20.145"/>
</kw>
<status status="PASS" starttime="20221207 03:29:17.528" endtime="20221207 03:29:20.146"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:20.149" level="INFO">Running command 'ozone admin pipeline list | grep "0ea15517-31fd-418f-a5fa-ee1ac10faa07" 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:22.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:22.573" level="INFO">${output} = Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221207 03:29:20.147" endtime="20221207 03:29:22.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:22.574" level="INFO">Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-12-07T03:29:08.115Z[UTC]]</msg>
<status status="PASS" starttime="20221207 03:29:22.573" endtime="20221207 03:29:22.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:22.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:22.575" endtime="20221207 03:29:22.575"/>
</kw>
<status status="PASS" starttime="20221207 03:29:20.147" endtime="20221207 03:29:22.576"/>
</kw>
<msg timestamp="20221207 03:29:22.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:29:20.146" endtime="20221207 03:29:22.576"/>
</kw>
<msg timestamp="20221207 03:29:22.576" level="INFO">${output} = Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221207 03:29:20.146" endtime="20221207 03:29:22.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:22.576" endtime="20221207 03:29:22.577"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:29:17.527" endtime="20221207 03:29:22.577"/>
</test>
<test id="s1-s1-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:22.582" level="INFO">Running command 'ozone admin pipeline close "0ea15517-31fd-418f-a5fa-ee1ac10faa07" 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:25.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:25.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221207 03:29:22.580" endtime="20221207 03:29:25.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:25.054" level="INFO"/>
<status status="PASS" starttime="20221207 03:29:25.053" endtime="20221207 03:29:25.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:25.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:25.054" endtime="20221207 03:29:25.055"/>
</kw>
<status status="PASS" starttime="20221207 03:29:22.579" endtime="20221207 03:29:25.055"/>
</kw>
<msg timestamp="20221207 03:29:25.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:29:22.579" endtime="20221207 03:29:25.056"/>
</kw>
<status status="PASS" starttime="20221207 03:29:22.578" endtime="20221207 03:29:25.056"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:25.060" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:27.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:27.637" level="INFO">${output} = Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221207 03:29:25.058" endtime="20221207 03:29:27.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:27.638" level="INFO">Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2022-12-07T03:29:08.115Z[UTC]]
Pipeline[ Id: 69cb44d2-7cd5-49df-bf5d-b4c958256dcc, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:9a975f29-c963-477e-9764-0c1e8b62c795, CreationTimestamp2022-12-07T03:28:29.841Z[UTC]]</msg>
<status status="PASS" starttime="20221207 03:29:27.637" endtime="20221207 03:29:27.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:27.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:27.638" endtime="20221207 03:29:27.639"/>
</kw>
<status status="PASS" starttime="20221207 03:29:25.057" endtime="20221207 03:29:27.639"/>
</kw>
<msg timestamp="20221207 03:29:27.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:29:25.056" endtime="20221207 03:29:27.640"/>
</kw>
<msg timestamp="20221207 03:29:27.640" level="INFO">${output} = Pipeline[ Id: 0ea15517-31fd-418f-a5fa-ee1ac10faa07, Nodes: 9a975f29-c963-477e-9764-0c1e8b62c795{ip: 172.20.0.3, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221207 03:29:25.056" endtime="20221207 03:29:27.640"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20221207 03:29:27.640" endtime="20221207 03:29:27.641"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20221207 03:29:27.641" endtime="20221207 03:29:27.642"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:29:22.578" endtime="20221207 03:29:27.642"/>
</test>
<test id="s1-s1-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:29:27.646" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:29.540" level="INFO">${rc} = 255</msg>
<msg timestamp="20221207 03:29:29.540" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20221207 03:29:27.643" endtime="20221207 03:29:29.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:29.541" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20221207 03:29:29.540" endtime="20221207 03:29:29.541"/>
</kw>
<msg timestamp="20221207 03:29:29.542" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20221207 03:29:27.643" endtime="20221207 03:29:29.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:29.542" endtime="20221207 03:29:29.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:29.542" endtime="20221207 03:29:29.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:29.543" endtime="20221207 03:29:29.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:29.543" endtime="20221207 03:29:29.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:29.544" endtime="20221207 03:29:29.544"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:29:27.642" endtime="20221207 03:29:29.544"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20221207 03:29:05.626" endtime="20221207 03:29:29.545"/>
</suite>
<suite id="s1-s2" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s2-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:28:48.501" endtime="20221207 03:28:48.502"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221207 03:28:48.503" level="INFO">${random} = xfyUNR1KrM</msg>
<status status="PASS" starttime="20221207 03:28:48.502" endtime="20221207 03:28:48.503"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:28:48.510" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p xfyUNR1KrM --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:28:56.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:28:56.877" level="INFO">${output} = 2022-12-07 03:28:50,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:28:50,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:28:48.505" endtime="20221207 03:28:56.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:28:56.878" level="INFO">2022-12-07 03:28:50,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:28:50,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:28:50,212 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:28:50,425 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xfyUNR1KrM and number-of-tests 1
2022-12-07 03:28:50,497 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:28:51,498 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:28:52,499 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:28:53,499 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:28:53,656 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-07 03:28:53,786 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-07 03:28:54,404 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:28:54,500 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:28:54,657 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:28:55,501 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:28:56,502 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:28:56,532 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=1928.062862, max=1928.062862, mean=1928.062862, stddev=0.0, median=1928.062862, p75=1928.062862, p95=1928.062862, p98=1928.062862, p99=1928.062862, p999=1928.062862, mean_rate=0.3684118527089634, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:28:56,533 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-12-07 03:28:56,533 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:28:56,533 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:28:56.878" endtime="20221207 03:28:56.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:28:56.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:28:56.879" endtime="20221207 03:28:56.879"/>
</kw>
<status status="PASS" starttime="20221207 03:28:48.504" endtime="20221207 03:28:56.879"/>
</kw>
<msg timestamp="20221207 03:28:56.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:28:48.504" endtime="20221207 03:28:56.881"/>
</kw>
<msg timestamp="20221207 03:28:56.881" level="INFO">${result} = 2022-12-07 03:28:50,034 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:28:50,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:28:48.503" endtime="20221207 03:28:56.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:28:56.881" endtime="20221207 03:28:56.882"/>
</kw>
<status status="PASS" starttime="20221207 03:28:48.503" endtime="20221207 03:28:56.882"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:28:56.887" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p xfyUNR1KrM  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:29:02.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:29:02.290" level="INFO">${output} = 2022-12-07 03:28:58,248 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:28:58,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:28:56.885" endtime="20221207 03:29:02.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:29:02.291" level="INFO">2022-12-07 03:28:58,248 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:28:58,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:28:58,358 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:28:58,514 [main] INFO freon.BaseFreonGenerator: Executing test with prefix xfyUNR1KrM and number-of-tests 1
2022-12-07 03:28:58,587 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:28:59,592 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:29:00,000 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:29:00,592 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:29:01,593 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:29:01,934 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=46.169112, max=46.169112, mean=46.169112, stddev=0.0, median=46.169112, p75=46.169112, p95=46.169112, p98=46.169112, p99=46.169112, p999=46.169112, mean_rate=0.9667452781712332, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:29:01,935 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-12-07 03:29:01,935 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:29:01,936 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:29:02.291" endtime="20221207 03:29:02.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:29:02.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:29:02.292" endtime="20221207 03:29:02.293"/>
</kw>
<status status="PASS" starttime="20221207 03:28:56.884" endtime="20221207 03:29:02.293"/>
</kw>
<msg timestamp="20221207 03:29:02.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:28:56.884" endtime="20221207 03:29:02.294"/>
</kw>
<msg timestamp="20221207 03:29:02.294" level="INFO">${result} = 2022-12-07 03:28:58,248 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:28:58,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:28:56.883" endtime="20221207 03:29:02.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:29:02.294" endtime="20221207 03:29:02.295"/>
</kw>
<status status="PASS" starttime="20221207 03:28:56.882" endtime="20221207 03:29:02.295"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:28:48.500" endtime="20221207 03:29:02.295"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20221207 03:28:48.441" endtime="20221207 03:29:02.296"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="37774"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonescripts">ozonescripts</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Pipeline">ozonescripts.Pipeline</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Single Node">ozonescripts.Single Node</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
