<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221207 03:25:25.400" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:01.216" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:04.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:04.737" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20221207 03:21:01.212" endtime="20221207 03:21:04.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:04.739" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221207 03:21:04.738" endtime="20221207 03:21:04.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:04.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:04.739" endtime="20221207 03:21:04.739"/>
</kw>
<status status="PASS" starttime="20221207 03:21:01.211" endtime="20221207 03:21:04.740"/>
</kw>
<msg timestamp="20221207 03:21:04.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:01.211" endtime="20221207 03:21:04.741"/>
</kw>
<msg timestamp="20221207 03:21:04.742" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20221207 03:21:01.210" endtime="20221207 03:21:04.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:21:04.742" endtime="20221207 03:21:04.742"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:21:01.210" endtime="20221207 03:21:04.743"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:04.749" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:08.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:08.247" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20221207 03:21:04.746" endtime="20221207 03:21:08.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:08.248" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221207 03:21:08.247" endtime="20221207 03:21:08.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:08.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:08.248" endtime="20221207 03:21:08.249"/>
</kw>
<status status="PASS" starttime="20221207 03:21:04.746" endtime="20221207 03:21:08.249"/>
</kw>
<msg timestamp="20221207 03:21:08.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:04.745" endtime="20221207 03:21:08.250"/>
</kw>
<msg timestamp="20221207 03:21:08.250" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20221207 03:21:04.745" endtime="20221207 03:21:08.250"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:21:08.250" endtime="20221207 03:21:08.251"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:21:08.251" endtime="20221207 03:21:08.251"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:21:04.744" endtime="20221207 03:21:08.251"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:08.257" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:12.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:12.062" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20221207 03:21:08.255" endtime="20221207 03:21:12.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:12.063" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221207 03:21:12.062" endtime="20221207 03:21:12.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:12.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:12.064" endtime="20221207 03:21:12.065"/>
</kw>
<status status="PASS" starttime="20221207 03:21:08.255" endtime="20221207 03:21:12.065"/>
</kw>
<msg timestamp="20221207 03:21:12.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:08.254" endtime="20221207 03:21:12.066"/>
</kw>
<msg timestamp="20221207 03:21:12.067" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20221207 03:21:08.253" endtime="20221207 03:21:12.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:21:12.067" endtime="20221207 03:21:12.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:21:08.253" endtime="20221207 03:21:12.068"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:12.076" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:15.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:15.439" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20221207 03:21:12.072" endtime="20221207 03:21:15.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:15.440" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221207 03:21:15.439" endtime="20221207 03:21:15.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:15.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:15.440" endtime="20221207 03:21:15.441"/>
</kw>
<status status="PASS" starttime="20221207 03:21:12.071" endtime="20221207 03:21:15.441"/>
</kw>
<msg timestamp="20221207 03:21:15.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:12.070" endtime="20221207 03:21:15.442"/>
</kw>
<msg timestamp="20221207 03:21:15.442" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topolog...</msg>
<status status="PASS" starttime="20221207 03:21:12.070" endtime="20221207 03:21:15.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:21:15.442" endtime="20221207 03:21:15.443"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:21:12.069" endtime="20221207 03:21:15.443"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221207 03:21:01.164" endtime="20221207 03:21:15.444"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:20.884" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:33.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:33.904" level="INFO">${output} = 2022-12-07 03:21:22,927 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:21:23,045 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:21:20.880" endtime="20221207 03:21:33.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:33.906" level="INFO">2022-12-07 03:21:22,927 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:21:23,045 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:21:23,045 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:21:23,215 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-12-07 03:21:23,330 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-07 03:21:24,331 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-07 03:21:24,483 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-07 03:21:24,552 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-07 03:21:25,289 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:21:25,332 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-07 03:21:25,651 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:21:26,332 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-07 03:21:27,332 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-07 03:21:28,333 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-07 03:21:29,333 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-07 03:21:30,334 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2022-12-07 03:21:31,338 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (4 out of 10)
2022-12-07 03:21:32,338 [Thread-5] INFO freon.ProgressBar: Progress: 90.00 % (9 out of 10)
2022-12-07 03:21:33,339 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-12-07 03:21:33,532 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=123.922349, max=4805.118036, mean=761.8429563155463, stddev=1391.480187955024, median=158.584182, p75=317.041463, p95=4805.118036, p98=4805.118036, p99=4805.118036, p999=4805.118036, mean_rate=1.1181413310547217, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:21:33,533 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2022-12-07 03:21:33,533 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:21:33,533 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221207 03:21:33.905" endtime="20221207 03:21:33.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:33.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:33.906" endtime="20221207 03:21:33.909"/>
</kw>
<status status="PASS" starttime="20221207 03:21:20.879" endtime="20221207 03:21:33.910"/>
</kw>
<msg timestamp="20221207 03:21:33.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:20.879" endtime="20221207 03:21:33.911"/>
</kw>
<msg timestamp="20221207 03:21:33.913" level="INFO">${result} = 2022-12-07 03:21:22,927 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:21:23,045 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:21:20.879" endtime="20221207 03:21:33.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:21:33.913" endtime="20221207 03:21:33.913"/>
</kw>
<status status="PASS" starttime="20221207 03:21:20.878" endtime="20221207 03:21:33.913"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:21:33.915" endtime="20221207 03:21:33.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:33.919" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:34.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:34.250" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221207 03:21:33.917" endtime="20221207 03:21:34.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:34.252" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221207 03:21:34.250" endtime="20221207 03:21:34.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:34.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:34.252" endtime="20221207 03:21:34.253"/>
</kw>
<status status="PASS" starttime="20221207 03:21:33.916" endtime="20221207 03:21:34.253"/>
</kw>
<msg timestamp="20221207 03:21:34.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:33.916" endtime="20221207 03:21:34.254"/>
</kw>
<msg timestamp="20221207 03:21:34.254" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221207 03:21:33.915" endtime="20221207 03:21:34.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:21:34.254" endtime="20221207 03:21:34.255"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:34.260" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:34.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:34.289" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221207 03:21:34.257" endtime="20221207 03:21:34.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:34.290" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221207 03:21:34.289" endtime="20221207 03:21:34.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:34.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:34.290" endtime="20221207 03:21:34.291"/>
</kw>
<status status="PASS" starttime="20221207 03:21:34.256" endtime="20221207 03:21:34.291"/>
</kw>
<msg timestamp="20221207 03:21:34.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:34.256" endtime="20221207 03:21:34.292"/>
</kw>
<msg timestamp="20221207 03:21:34.292" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221207 03:21:34.255" endtime="20221207 03:21:34.292"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221207 03:21:34.293" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221207 03:21:34.293" endtime="20221207 03:21:34.294"/>
</kw>
<status status="FAIL" starttime="20221207 03:21:33.914" endtime="20221207 03:21:34.294"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:21:44.296" endtime="20221207 03:21:44.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:44.302" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:44.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:44.323" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221207 03:21:44.298" endtime="20221207 03:21:44.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:44.324" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221207 03:21:44.324" endtime="20221207 03:21:44.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:44.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:44.325" endtime="20221207 03:21:44.325"/>
</kw>
<status status="PASS" starttime="20221207 03:21:44.297" endtime="20221207 03:21:44.326"/>
</kw>
<msg timestamp="20221207 03:21:44.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:44.297" endtime="20221207 03:21:44.326"/>
</kw>
<msg timestamp="20221207 03:21:44.327" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221207 03:21:44.297" endtime="20221207 03:21:44.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:21:44.327" endtime="20221207 03:21:44.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:44.331" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:44.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:44.348" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221207 03:21:44.329" endtime="20221207 03:21:44.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:44.349" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221207 03:21:44.349" endtime="20221207 03:21:44.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:44.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:44.350" endtime="20221207 03:21:44.350"/>
</kw>
<status status="PASS" starttime="20221207 03:21:44.328" endtime="20221207 03:21:44.350"/>
</kw>
<msg timestamp="20221207 03:21:44.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:44.328" endtime="20221207 03:21:44.351"/>
</kw>
<msg timestamp="20221207 03:21:44.351" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221207 03:21:44.327" endtime="20221207 03:21:44.351"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221207 03:21:44.352" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221207 03:21:44.351" endtime="20221207 03:21:44.352"/>
</kw>
<status status="FAIL" starttime="20221207 03:21:44.295" endtime="20221207 03:21:44.353"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:21:54.354" endtime="20221207 03:21:54.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:54.360" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:54.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:54.378" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221207 03:21:54.357" endtime="20221207 03:21:54.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:54.379" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221207 03:21:54.379" endtime="20221207 03:21:54.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:54.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:54.380" endtime="20221207 03:21:54.380"/>
</kw>
<status status="PASS" starttime="20221207 03:21:54.356" endtime="20221207 03:21:54.381"/>
</kw>
<msg timestamp="20221207 03:21:54.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:54.356" endtime="20221207 03:21:54.381"/>
</kw>
<msg timestamp="20221207 03:21:54.382" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221207 03:21:54.355" endtime="20221207 03:21:54.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:21:54.382" endtime="20221207 03:21:54.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:21:54.387" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:21:54.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:21:54.404" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221207 03:21:54.384" endtime="20221207 03:21:54.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:21:54.405" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221207 03:21:54.405" endtime="20221207 03:21:54.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:21:54.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:21:54.406" endtime="20221207 03:21:54.406"/>
</kw>
<status status="PASS" starttime="20221207 03:21:54.384" endtime="20221207 03:21:54.406"/>
</kw>
<msg timestamp="20221207 03:21:54.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:21:54.383" endtime="20221207 03:21:54.407"/>
</kw>
<msg timestamp="20221207 03:21:54.407" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221207 03:21:54.383" endtime="20221207 03:21:54.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221207 03:21:54.409" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221207 03:21:54.407" endtime="20221207 03:21:54.410"/>
</kw>
<status status="FAIL" starttime="20221207 03:21:54.354" endtime="20221207 03:21:54.410"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:04.412" endtime="20221207 03:22:04.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.417" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.436" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":2},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20221207 03:22:04.414" endtime="20221207 03:22:04.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.437" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":2},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20221207 03:22:04.436" endtime="20221207 03:22:04.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.438" endtime="20221207 03:22:04.438"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.413" endtime="20221207 03:22:04.439"/>
</kw>
<msg timestamp="20221207 03:22:04.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.413" endtime="20221207 03:22:04.439"/>
</kw>
<msg timestamp="20221207 03:22:04.440" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":2},{"ContainerID":2,"NumberOfKeys":2},{"ContainerID":3,"NumberOfKeys":4},{"ContainerID":4,"NumberOfKeys":3}]}}</msg>
<status status="PASS" starttime="20221207 03:22:04.412" endtime="20221207 03:22:04.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.440" endtime="20221207 03:22:04.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.445" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.461" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221207 03:22:04.442" endtime="20221207 03:22:04.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.463" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221207 03:22:04.462" endtime="20221207 03:22:04.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.463" endtime="20221207 03:22:04.464"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.441" endtime="20221207 03:22:04.464"/>
</kw>
<msg timestamp="20221207 03:22:04.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.441" endtime="20221207 03:22:04.465"/>
</kw>
<msg timestamp="20221207 03:22:04.465" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221207 03:22:04.441" endtime="20221207 03:22:04.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.465" endtime="20221207 03:22:04.466"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.411" endtime="20221207 03:22:04.466"/>
</kw>
<status status="PASS" starttime="20221207 03:21:33.914" endtime="20221207 03:22:04.466"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:21:20.877" endtime="20221207 03:22:04.466"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.472" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.524" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"dde4a9be-64a4-4a2e-93aa-bb2db759616f","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1670383...</msg>
<status status="PASS" starttime="20221207 03:22:04.470" endtime="20221207 03:22:04.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.525" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"dde4a9be-64a4-4a2e-93aa-bb2db759616f","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1670383321773,"storageReport":{"capacity":89297309696,"used":11271,"remaining":29039386624},"pipelines":[{"pipelineID":"34732c4e-8f8d-4124-9976-39e73a7e9a7b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"16f779e1-1633-42d6-b083-a683158dd8da","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"0b084bfa-30cf-4232-9112-d167cda7e294","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1670383158058,"revision":"565775c7dd9920ef792248d605d566f551bc6074","buildDate":"2022-12-07T02:52Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"0a3e3529-f29f-48cd-82e8-339da749ee1c","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1670383321747,"storageReport":{"capacity":89297309696,"used":11271,"remaining":29039386624},"pipelines":[{"pipelineID":"34732c4e-8f8d-4124-9976-39e73a7e9a7b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"16f779e1-1633-42d6-b083-a683158dd8da","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"93131012-043b-4559-a281-bf3c3d700240","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1670383158582,"revision":"565775c7dd9920ef792248d605d566f551bc6074","buildDate":"2022-12-07T02:52Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"a4102a67-41a8-452c-91a3-5d380d717f9f","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1670383316771,"storageReport":{"capacity":89297309696,"used":17411,"remaining":29039386624},"pipelines":[{"pipelineID":"5927413d-dddc-43cc-8e3d-e54a397bc476","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"935fbbe6-94fe-40b3-8fb2-0894ca31ab96","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"f63e88bd-b0f5-461e-9c69-e6afd4825ad6","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1670383159685,"revision":"565775c7dd9920ef792248d605d566f551bc6074","buildDate":"2022-12-07T02:52Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"6491771c-49cb-4070-aae4-0c1acb9e8211","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1670383316774,"storageReport":{"capacity":89297309696,"used":17411,"remaining":29039386624},"pipelines":[{"pipelineID":"5927413d-dddc-43cc-8e3d-e54a397bc476","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"b7f05196-da1e-406b-9422-f7622f63a9b7","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"f63e88bd-b0f5-461e-9c69-e6afd4825ad6","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1670383157700,"revision":"565775c7dd9920ef792248d605d566f551bc6074","buildDate":"2022-12-07T02:52Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"d0830c52-f56d-4cbc-b248-77b24b132b86","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1670383316787,"storageReport":{"capacity":89297309696,"used":21507,"remaining":29039386624},"pipelines":[{"pipelineID":"5927413d-dddc-43cc-8e3d-e54a397bc476","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"05d09170-d7ae-42ac-bcb2-d6cc2d70543e","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"f63e88bd-b0f5-461e-9c69-e6afd4825ad6","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1670383159451,"revision":"565775c7dd9920ef792248d605d566f551bc6074","buildDate":"2022-12-07T02:52Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"b5f014aa-dfa8-4713-a2e9-9357511ec4de","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1670383321792,"storageReport":{"capacity":89297309696,"used":11271,"remaining":29039386624},"pipelines":[{"pipelineID":"34732c4e-8f8d-4124-9976-39e73a7e9a7b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"16f779e1-1633-42d6-b083-a683158dd8da","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"895d0891-f6c7-408c-9ff1-d1f5f23939df","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1670383159542,"revision":"565775c7dd9920ef792248d605d566f551bc6074","buildDate":"2022-12-07T02:52Z","layoutVersion":4,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20221207 03:22:04.524" endtime="20221207 03:22:04.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.526" endtime="20221207 03:22:04.526"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.469" endtime="20221207 03:22:04.526"/>
</kw>
<msg timestamp="20221207 03:22:04.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.469" endtime="20221207 03:22:04.527"/>
</kw>
<msg timestamp="20221207 03:22:04.528" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"dde4a9be-64a4-4a2e-93aa-bb2db759616f","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1670383...</msg>
<status status="PASS" starttime="20221207 03:22:04.468" endtime="20221207 03:22:04.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.528" endtime="20221207 03:22:04.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.528" endtime="20221207 03:22:04.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.529" endtime="20221207 03:22:04.529"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.529" endtime="20221207 03:22:04.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.534" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.567" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"5927413d-dddc-43cc-8e3d-e54a397bc476","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2...</msg>
<status status="PASS" starttime="20221207 03:22:04.531" endtime="20221207 03:22:04.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.568" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"5927413d-dddc-43cc-8e3d-e54a397bc476","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114918,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"34732c4e-8f8d-4124-9976-39e73a7e9a7b","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115055,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"05d09170-d7ae-42ac-bcb2-d6cc2d70543e","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114701,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"16f779e1-1633-42d6-b083-a683158dd8da","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115294,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"935fbbe6-94fe-40b3-8fb2-0894ca31ab96","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115133,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"895d0891-f6c7-408c-9ff1-d1f5f23939df","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114749,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"b7f05196-da1e-406b-9422-f7622f63a9b7","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":114951,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"0b084bfa-30cf-4232-9112-d167cda7e294","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":117138,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f63e88bd-b0f5-461e-9c69-e6afd4825ad6","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115179,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"93131012-043b-4559-a281-bf3c3d700240","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115207,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20221207 03:22:04.567" endtime="20221207 03:22:04.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.569" endtime="20221207 03:22:04.569"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.531" endtime="20221207 03:22:04.570"/>
</kw>
<msg timestamp="20221207 03:22:04.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.530" endtime="20221207 03:22:04.570"/>
</kw>
<msg timestamp="20221207 03:22:04.570" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"5927413d-dddc-43cc-8e3d-e54a397bc476","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2...</msg>
<status status="PASS" starttime="20221207 03:22:04.530" endtime="20221207 03:22:04.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.571" endtime="20221207 03:22:04.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.571" endtime="20221207 03:22:04.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.572" endtime="20221207 03:22:04.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.572" endtime="20221207 03:22:04.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.573" endtime="20221207 03:22:04.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.573" endtime="20221207 03:22:04.574"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.578" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.645" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":174236319744},"containers":4,"missingContainers":0,"openContainers":4,"volumes...</msg>
<status status="PASS" starttime="20221207 03:22:04.575" endtime="20221207 03:22:04.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.646" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":174236319744},"containers":4,"missingContainers":0,"openContainers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221207 03:22:04.645" endtime="20221207 03:22:04.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.646" endtime="20221207 03:22:04.647"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.575" endtime="20221207 03:22:04.647"/>
</kw>
<msg timestamp="20221207 03:22:04.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.574" endtime="20221207 03:22:04.648"/>
</kw>
<msg timestamp="20221207 03:22:04.649" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":174236319744},"containers":4,"missingContainers":0,"openContainers":4,"volumes...</msg>
<status status="PASS" starttime="20221207 03:22:04.574" endtime="20221207 03:22:04.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.649" endtime="20221207 03:22:04.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.649" endtime="20221207 03:22:04.650"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.650" endtime="20221207 03:22:04.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.655" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.684" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"a4102a67-41a8-452c-91a3-5d380d717f9f","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1670383244310,"lastSeenTime":1670383244310,"last...</msg>
<status status="PASS" starttime="20221207 03:22:04.652" endtime="20221207 03:22:04.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.685" level="INFO">[{"containerId":1,"datanodeUuid":"a4102a67-41a8-452c-91a3-5d380d717f9f","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1670383244310,"lastSeenTime":1670383244310,"lastBcsId":0},{"containerId":1,"datanodeUuid":"6491771c-49cb-4070-aae4-0c1acb9e8211","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1670383244424,"lastSeenTime":1670383244424,"lastBcsId":0},{"containerId":1,"datanodeUuid":"d0830c52-f56d-4cbc-b248-77b24b132b86","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1670383244512,"lastSeenTime":1670383244512,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221207 03:22:04.684" endtime="20221207 03:22:04.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.685" endtime="20221207 03:22:04.686"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.652" endtime="20221207 03:22:04.686"/>
</kw>
<msg timestamp="20221207 03:22:04.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.651" endtime="20221207 03:22:04.687"/>
</kw>
<msg timestamp="20221207 03:22:04.687" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"a4102a67-41a8-452c-91a3-5d380d717f9f","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1670383244310,"lastSeenTime":1670383244310,"last...</msg>
<status status="PASS" starttime="20221207 03:22:04.651" endtime="20221207 03:22:04.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.688" endtime="20221207 03:22:04.688"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:04.467" endtime="20221207 03:22:04.688"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:04.691" endtime="20221207 03:22:04.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.695" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.721" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221207 03:22:04.693" endtime="20221207 03:22:04.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.722" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0c211d12.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.f3fa3186.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.7a2a2c6f.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.721" endtime="20221207 03:22:04.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.722" endtime="20221207 03:22:04.723"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.692" endtime="20221207 03:22:04.723"/>
</kw>
<msg timestamp="20221207 03:22:04.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.692" endtime="20221207 03:22:04.724"/>
</kw>
<msg timestamp="20221207 03:22:04.724" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221207 03:22:04.691" endtime="20221207 03:22:04.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.724" endtime="20221207 03:22:04.725"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:04.690" endtime="20221207 03:22:04.725"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.733" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.741" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:04.730" endtime="20221207 03:22:04.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.742" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:04.742" endtime="20221207 03:22:04.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.743" endtime="20221207 03:22:04.744"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.730" endtime="20221207 03:22:04.744"/>
</kw>
<msg timestamp="20221207 03:22:04.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.729" endtime="20221207 03:22:04.745"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.728" endtime="20221207 03:22:04.745"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.749" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.764" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.747" endtime="20221207 03:22:04.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.766" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:04.765" endtime="20221207 03:22:04.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.766" endtime="20221207 03:22:04.767"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.747" endtime="20221207 03:22:04.767"/>
</kw>
<msg timestamp="20221207 03:22:04.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.746" endtime="20221207 03:22:04.768"/>
</kw>
<msg timestamp="20221207 03:22:04.768" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.746" endtime="20221207 03:22:04.768"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:04.769" endtime="20221207 03:22:04.769"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:04.769" endtime="20221207 03:22:04.769"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.769" endtime="20221207 03:22:04.769"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.769" endtime="20221207 03:22:04.770"/>
</branch>
<status status="PASS" starttime="20221207 03:22:04.768" endtime="20221207 03:22:04.770"/>
</if>
<status status="PASS" starttime="20221207 03:22:04.745" endtime="20221207 03:22:04.770"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:04.770" endtime="20221207 03:22:04.771"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.770" endtime="20221207 03:22:04.771"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.776" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.790" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.773" endtime="20221207 03:22:04.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.793" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:04.791" endtime="20221207 03:22:04.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.793" endtime="20221207 03:22:04.794"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.772" endtime="20221207 03:22:04.794"/>
</kw>
<msg timestamp="20221207 03:22:04.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.772" endtime="20221207 03:22:04.795"/>
</kw>
<msg timestamp="20221207 03:22:04.796" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.772" endtime="20221207 03:22:04.796"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:04.796" endtime="20221207 03:22:04.796"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:04.796" endtime="20221207 03:22:04.797"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.797" endtime="20221207 03:22:04.797"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.797" endtime="20221207 03:22:04.797"/>
</branch>
<status status="PASS" starttime="20221207 03:22:04.796" endtime="20221207 03:22:04.797"/>
</if>
<status status="PASS" starttime="20221207 03:22:04.771" endtime="20221207 03:22:04.797"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:04.727" endtime="20221207 03:22:04.798"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.806" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.810" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:04.803" endtime="20221207 03:22:04.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.811" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:04.810" endtime="20221207 03:22:04.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.811" endtime="20221207 03:22:04.812"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.803" endtime="20221207 03:22:04.812"/>
</kw>
<msg timestamp="20221207 03:22:04.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.802" endtime="20221207 03:22:04.812"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.802" endtime="20221207 03:22:04.813"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.817" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.834" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.815" endtime="20221207 03:22:04.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.835" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:04.835" endtime="20221207 03:22:04.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.836" endtime="20221207 03:22:04.836"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.814" endtime="20221207 03:22:04.837"/>
</kw>
<msg timestamp="20221207 03:22:04.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.814" endtime="20221207 03:22:04.837"/>
</kw>
<msg timestamp="20221207 03:22:04.838" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.813" endtime="20221207 03:22:04.838"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:04.838" endtime="20221207 03:22:04.838"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:04.838" endtime="20221207 03:22:04.838"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.839" endtime="20221207 03:22:04.839"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.838" endtime="20221207 03:22:04.839"/>
</branch>
<status status="PASS" starttime="20221207 03:22:04.838" endtime="20221207 03:22:04.839"/>
</if>
<status status="PASS" starttime="20221207 03:22:04.813" endtime="20221207 03:22:04.839"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:04.840" endtime="20221207 03:22:04.840"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.839" endtime="20221207 03:22:04.841"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.846" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.862" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.842" endtime="20221207 03:22:04.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.863" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:04.863" endtime="20221207 03:22:04.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.864" endtime="20221207 03:22:04.864"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.842" endtime="20221207 03:22:04.865"/>
</kw>
<msg timestamp="20221207 03:22:04.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.842" endtime="20221207 03:22:04.865"/>
</kw>
<msg timestamp="20221207 03:22:04.866" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.841" endtime="20221207 03:22:04.866"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:04.866" endtime="20221207 03:22:04.866"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:04.866" endtime="20221207 03:22:04.866"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.866" endtime="20221207 03:22:04.867"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.866" endtime="20221207 03:22:04.867"/>
</branch>
<status status="PASS" starttime="20221207 03:22:04.866" endtime="20221207 03:22:04.867"/>
</if>
<status status="PASS" starttime="20221207 03:22:04.841" endtime="20221207 03:22:04.867"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:04.868" endtime="20221207 03:22:04.868"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.867" endtime="20221207 03:22:04.869"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.873" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.890" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.871" endtime="20221207 03:22:04.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.891" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:04.890" endtime="20221207 03:22:04.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.891" endtime="20221207 03:22:04.892"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.870" endtime="20221207 03:22:04.892"/>
</kw>
<msg timestamp="20221207 03:22:04.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.870" endtime="20221207 03:22:04.893"/>
</kw>
<msg timestamp="20221207 03:22:04.893" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.869" endtime="20221207 03:22:04.893"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:04.893" endtime="20221207 03:22:04.894"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:04.893" endtime="20221207 03:22:04.894"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.894" endtime="20221207 03:22:04.896"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.894" endtime="20221207 03:22:04.896"/>
</branch>
<status status="PASS" starttime="20221207 03:22:04.893" endtime="20221207 03:22:04.896"/>
</if>
<status status="PASS" starttime="20221207 03:22:04.869" endtime="20221207 03:22:04.896"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:04.897" endtime="20221207 03:22:04.897"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.896" endtime="20221207 03:22:04.897"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.901" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.923" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.899" endtime="20221207 03:22:04.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.924" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:04.923" endtime="20221207 03:22:04.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.925" endtime="20221207 03:22:04.926"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.898" endtime="20221207 03:22:04.926"/>
</kw>
<msg timestamp="20221207 03:22:04.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.898" endtime="20221207 03:22:04.927"/>
</kw>
<msg timestamp="20221207 03:22:04.927" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.898" endtime="20221207 03:22:04.927"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:04.928" endtime="20221207 03:22:04.928"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:04.927" endtime="20221207 03:22:04.928"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:04.928" endtime="20221207 03:22:04.928"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.928" endtime="20221207 03:22:04.928"/>
</branch>
<status status="PASS" starttime="20221207 03:22:04.927" endtime="20221207 03:22:04.928"/>
</if>
<status status="PASS" starttime="20221207 03:22:04.897" endtime="20221207 03:22:04.929"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:04.801" endtime="20221207 03:22:04.929"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.937" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:04.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:04.941" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:04.934" endtime="20221207 03:22:04.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:04.942" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:04.941" endtime="20221207 03:22:04.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:04.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:04.942" endtime="20221207 03:22:04.943"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.933" endtime="20221207 03:22:04.943"/>
</kw>
<msg timestamp="20221207 03:22:04.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.933" endtime="20221207 03:22:04.944"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.932" endtime="20221207 03:22:04.944"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:04.949" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:05.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:05.000" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.946" endtime="20221207 03:22:05.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:05.002" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:05.001" endtime="20221207 03:22:05.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:05.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:05.003" endtime="20221207 03:22:05.003"/>
</kw>
<status status="PASS" starttime="20221207 03:22:04.946" endtime="20221207 03:22:05.004"/>
</kw>
<msg timestamp="20221207 03:22:05.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:04.945" endtime="20221207 03:22:05.004"/>
</kw>
<msg timestamp="20221207 03:22:05.005" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:04.945" endtime="20221207 03:22:05.005"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:05.005" endtime="20221207 03:22:05.006"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:05.005" endtime="20221207 03:22:05.006"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:05.006" endtime="20221207 03:22:05.006"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.006" endtime="20221207 03:22:05.006"/>
</branch>
<status status="PASS" starttime="20221207 03:22:05.005" endtime="20221207 03:22:05.006"/>
</if>
<status status="PASS" starttime="20221207 03:22:04.944" endtime="20221207 03:22:05.007"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:05.007" endtime="20221207 03:22:05.008"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.007" endtime="20221207 03:22:05.008"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:05.013" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:05.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:05.038" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:05.010" endtime="20221207 03:22:05.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:05.039" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:05.038" endtime="20221207 03:22:05.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:05.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:05.039" endtime="20221207 03:22:05.040"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.010" endtime="20221207 03:22:05.040"/>
</kw>
<msg timestamp="20221207 03:22:05.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:05.009" endtime="20221207 03:22:05.041"/>
</kw>
<msg timestamp="20221207 03:22:05.041" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:05.009" endtime="20221207 03:22:05.041"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:05.042" endtime="20221207 03:22:05.042"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:05.042" endtime="20221207 03:22:05.042"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:05.042" endtime="20221207 03:22:05.043"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.042" endtime="20221207 03:22:05.043"/>
</branch>
<status status="PASS" starttime="20221207 03:22:05.041" endtime="20221207 03:22:05.043"/>
</if>
<status status="PASS" starttime="20221207 03:22:05.008" endtime="20221207 03:22:05.043"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:05.044" endtime="20221207 03:22:05.044"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.043" endtime="20221207 03:22:05.044"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:05.049" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:05.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:05.067" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:05.046" endtime="20221207 03:22:05.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:05.069" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:05.068" endtime="20221207 03:22:05.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:05.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:05.069" endtime="20221207 03:22:05.069"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.046" endtime="20221207 03:22:05.070"/>
</kw>
<msg timestamp="20221207 03:22:05.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:05.046" endtime="20221207 03:22:05.071"/>
</kw>
<msg timestamp="20221207 03:22:05.071" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:05.045" endtime="20221207 03:22:05.071"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:05.072" endtime="20221207 03:22:05.072"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:05.072" endtime="20221207 03:22:05.072"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:05.072" endtime="20221207 03:22:05.072"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.072" endtime="20221207 03:22:05.072"/>
</branch>
<status status="PASS" starttime="20221207 03:22:05.071" endtime="20221207 03:22:05.072"/>
</if>
<status status="PASS" starttime="20221207 03:22:05.044" endtime="20221207 03:22:05.073"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:05.073" endtime="20221207 03:22:05.074"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.073" endtime="20221207 03:22:05.074"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:05.079" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:05.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:05.098" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:05.076" endtime="20221207 03:22:05.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:05.099" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:05.099" endtime="20221207 03:22:05.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:05.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:05.100" endtime="20221207 03:22:05.100"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.075" endtime="20221207 03:22:05.101"/>
</kw>
<msg timestamp="20221207 03:22:05.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:05.075" endtime="20221207 03:22:05.101"/>
</kw>
<msg timestamp="20221207 03:22:05.101" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:05.075" endtime="20221207 03:22:05.101"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:05.102" endtime="20221207 03:22:05.102"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:05.102" endtime="20221207 03:22:05.102"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:05.102" endtime="20221207 03:22:05.103"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.102" endtime="20221207 03:22:05.103"/>
</branch>
<status status="PASS" starttime="20221207 03:22:05.102" endtime="20221207 03:22:05.103"/>
</if>
<status status="PASS" starttime="20221207 03:22:05.074" endtime="20221207 03:22:05.103"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:04.931" endtime="20221207 03:22:05.103"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:05.110" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:05.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:05.113" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:05.107" endtime="20221207 03:22:05.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:05.114" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:05.114" endtime="20221207 03:22:05.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:05.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:05.114" endtime="20221207 03:22:05.115"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.106" endtime="20221207 03:22:05.115"/>
</kw>
<msg timestamp="20221207 03:22:05.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:05.106" endtime="20221207 03:22:05.116"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.106" endtime="20221207 03:22:05.116"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:05.120" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:05.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:05.148" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:05.118" endtime="20221207 03:22:05.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:05.150" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:05.148" endtime="20221207 03:22:05.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:05.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:05.150" endtime="20221207 03:22:05.150"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.118" endtime="20221207 03:22:05.151"/>
</kw>
<msg timestamp="20221207 03:22:05.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:05.117" endtime="20221207 03:22:05.151"/>
</kw>
<msg timestamp="20221207 03:22:05.152" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:05.117" endtime="20221207 03:22:05.152"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:05.153" endtime="20221207 03:22:05.153"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:05.152" endtime="20221207 03:22:05.153"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:05.153" endtime="20221207 03:22:05.153"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.153" endtime="20221207 03:22:05.153"/>
</branch>
<status status="PASS" starttime="20221207 03:22:05.152" endtime="20221207 03:22:05.153"/>
</if>
<status status="PASS" starttime="20221207 03:22:05.116" endtime="20221207 03:22:05.154"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:05.154" endtime="20221207 03:22:05.155"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.154" endtime="20221207 03:22:05.155"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:05.161" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:05.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:05.196" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:05.157" endtime="20221207 03:22:05.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:05.197" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:05.196" endtime="20221207 03:22:05.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:05.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:05.198" endtime="20221207 03:22:05.198"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.157" endtime="20221207 03:22:05.200"/>
</kw>
<msg timestamp="20221207 03:22:05.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:05.156" endtime="20221207 03:22:05.201"/>
</kw>
<msg timestamp="20221207 03:22:05.201" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:05.156" endtime="20221207 03:22:05.201"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:05.201" endtime="20221207 03:22:05.201"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:05.201" endtime="20221207 03:22:05.202"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:05.202" endtime="20221207 03:22:05.202"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.202" endtime="20221207 03:22:05.202"/>
</branch>
<status status="PASS" starttime="20221207 03:22:05.201" endtime="20221207 03:22:05.202"/>
</if>
<status status="PASS" starttime="20221207 03:22:05.155" endtime="20221207 03:22:05.202"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:05.105" endtime="20221207 03:22:05.205"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221207 03:21:20.839" endtime="20221207 03:22:05.207"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:05.225" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:05.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:05.229" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:05.222" endtime="20221207 03:22:05.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:05.230" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:05.230" endtime="20221207 03:22:05.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:05.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:05.230" endtime="20221207 03:22:05.231"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.222" endtime="20221207 03:22:05.231"/>
</kw>
<msg timestamp="20221207 03:22:05.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:05.222" endtime="20221207 03:22:05.233"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.221" endtime="20221207 03:22:05.233"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:05.234" endtime="20221207 03:22:05.234"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.233" endtime="20221207 03:22:05.234"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221207 03:22:05.235" level="INFO">${random} = fhjll</msg>
<status status="PASS" starttime="20221207 03:22:05.235" endtime="20221207 03:22:05.235"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221207 03:22:05.236" level="INFO">${VOLUME} = vol-fhjll</msg>
<status status="PASS" starttime="20221207 03:22:05.235" endtime="20221207 03:22:05.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:05.241" level="INFO">Running command 'ozone sh volume create /vol-fhjll 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:09.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:09.095" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:05.237" endtime="20221207 03:22:09.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:09.097" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:09.096" endtime="20221207 03:22:09.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:09.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:09.098" endtime="20221207 03:22:09.098"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.237" endtime="20221207 03:22:09.099"/>
</kw>
<msg timestamp="20221207 03:22:09.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:05.236" endtime="20221207 03:22:09.099"/>
</kw>
<msg timestamp="20221207 03:22:09.100" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:05.236" endtime="20221207 03:22:09.100"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:09.100" endtime="20221207 03:22:09.100"/>
</kw>
<status status="PASS" starttime="20221207 03:22:05.234" endtime="20221207 03:22:09.101"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:05.220" endtime="20221207 03:22:09.101"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221207 03:22:09.105" level="INFO">${random} = twksj</msg>
<status status="PASS" starttime="20221207 03:22:09.104" endtime="20221207 03:22:09.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221207 03:22:09.105" level="INFO">${BUCKET} = buc-twksj</msg>
<status status="PASS" starttime="20221207 03:22:09.105" endtime="20221207 03:22:09.106"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:09.114" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-fhjll/buc-twksj 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:13.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:13.025" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:09.109" endtime="20221207 03:22:13.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:13.027" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:13.026" endtime="20221207 03:22:13.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:13.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:13.027" endtime="20221207 03:22:13.028"/>
</kw>
<status status="PASS" starttime="20221207 03:22:09.107" endtime="20221207 03:22:13.028"/>
</kw>
<msg timestamp="20221207 03:22:13.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:09.106" endtime="20221207 03:22:13.028"/>
</kw>
<msg timestamp="20221207 03:22:13.029" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:09.106" endtime="20221207 03:22:13.029"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:13.029" endtime="20221207 03:22:13.029"/>
</kw>
<status status="PASS" starttime="20221207 03:22:09.103" endtime="20221207 03:22:13.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:09.102" endtime="20221207 03:22:13.030"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:13.036" level="INFO">Running command 'ozone sh key put /vol-fhjll/buc-twksj/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:19.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:19.527" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:13.034" endtime="20221207 03:22:19.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:19.529" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:19.528" endtime="20221207 03:22:19.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:19.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:19.529" endtime="20221207 03:22:19.529"/>
</kw>
<status status="PASS" starttime="20221207 03:22:13.033" endtime="20221207 03:22:19.530"/>
</kw>
<msg timestamp="20221207 03:22:19.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:13.033" endtime="20221207 03:22:19.530"/>
</kw>
<msg timestamp="20221207 03:22:19.530" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:13.032" endtime="20221207 03:22:19.530"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:19.530" endtime="20221207 03:22:19.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:19.536" level="INFO">Running command 'ozone sh key put /vol-fhjll/buc-twksj/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:25.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:25.928" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:19.533" endtime="20221207 03:22:25.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:25.930" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:25.929" endtime="20221207 03:22:25.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:25.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:25.930" endtime="20221207 03:22:25.931"/>
</kw>
<status status="PASS" starttime="20221207 03:22:19.532" endtime="20221207 03:22:25.931"/>
</kw>
<msg timestamp="20221207 03:22:25.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:19.532" endtime="20221207 03:22:25.932"/>
</kw>
<msg timestamp="20221207 03:22:25.932" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:22:19.531" endtime="20221207 03:22:25.932"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:25.932" endtime="20221207 03:22:25.933"/>
</kw>
<status status="PASS" starttime="20221207 03:22:13.032" endtime="20221207 03:22:25.933"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:13.031" endtime="20221207 03:22:25.933"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:25.939" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:25.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:25.943" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:25.937" endtime="20221207 03:22:25.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:25.945" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:25.944" endtime="20221207 03:22:25.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:25.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:25.945" endtime="20221207 03:22:25.946"/>
</kw>
<status status="PASS" starttime="20221207 03:22:25.936" endtime="20221207 03:22:25.946"/>
</kw>
<msg timestamp="20221207 03:22:25.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:25.936" endtime="20221207 03:22:25.946"/>
</kw>
<status status="PASS" starttime="20221207 03:22:25.936" endtime="20221207 03:22:25.947"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:25.951" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:25.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:25.991" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:25.949" endtime="20221207 03:22:25.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:25.993" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:25.991" endtime="20221207 03:22:25.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:25.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:25.993" endtime="20221207 03:22:25.994"/>
</kw>
<status status="PASS" starttime="20221207 03:22:25.948" endtime="20221207 03:22:25.994"/>
</kw>
<msg timestamp="20221207 03:22:25.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:25.948" endtime="20221207 03:22:25.995"/>
</kw>
<msg timestamp="20221207 03:22:25.995" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:25.947" endtime="20221207 03:22:25.995"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:25.996" endtime="20221207 03:22:25.996"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:25.996" endtime="20221207 03:22:25.996"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:25.996" endtime="20221207 03:22:25.997"/>
</kw>
<status status="PASS" starttime="20221207 03:22:25.996" endtime="20221207 03:22:25.997"/>
</branch>
<status status="PASS" starttime="20221207 03:22:25.995" endtime="20221207 03:22:25.997"/>
</if>
<status status="PASS" starttime="20221207 03:22:25.947" endtime="20221207 03:22:25.997"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:25.998" endtime="20221207 03:22:25.999"/>
</kw>
<status status="PASS" starttime="20221207 03:22:25.997" endtime="20221207 03:22:25.999"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.005" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.022" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.001" endtime="20221207 03:22:26.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.023" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.022" endtime="20221207 03:22:26.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.024" endtime="20221207 03:22:26.024"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.001" endtime="20221207 03:22:26.025"/>
</kw>
<msg timestamp="20221207 03:22:26.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.000" endtime="20221207 03:22:26.025"/>
</kw>
<msg timestamp="20221207 03:22:26.025" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.000" endtime="20221207 03:22:26.025"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.026" endtime="20221207 03:22:26.026"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.026" endtime="20221207 03:22:26.026"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.026" endtime="20221207 03:22:26.027"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.026" endtime="20221207 03:22:26.027"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.026" endtime="20221207 03:22:26.027"/>
</if>
<status status="PASS" starttime="20221207 03:22:25.999" endtime="20221207 03:22:26.027"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.027" endtime="20221207 03:22:26.028"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.027" endtime="20221207 03:22:26.028"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.033" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.051" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.030" endtime="20221207 03:22:26.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.053" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.052" endtime="20221207 03:22:26.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.053" endtime="20221207 03:22:26.054"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.030" endtime="20221207 03:22:26.054"/>
</kw>
<msg timestamp="20221207 03:22:26.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.029" endtime="20221207 03:22:26.055"/>
</kw>
<msg timestamp="20221207 03:22:26.055" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.029" endtime="20221207 03:22:26.055"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.056" endtime="20221207 03:22:26.056"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.056" endtime="20221207 03:22:26.056"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.056" endtime="20221207 03:22:26.056"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.056" endtime="20221207 03:22:26.056"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.055" endtime="20221207 03:22:26.056"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.028" endtime="20221207 03:22:26.057"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.057" endtime="20221207 03:22:26.058"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.057" endtime="20221207 03:22:26.058"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.063" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.080" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.060" endtime="20221207 03:22:26.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.081" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.080" endtime="20221207 03:22:26.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.081" endtime="20221207 03:22:26.082"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.059" endtime="20221207 03:22:26.082"/>
</kw>
<msg timestamp="20221207 03:22:26.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.059" endtime="20221207 03:22:26.082"/>
</kw>
<msg timestamp="20221207 03:22:26.083" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.059" endtime="20221207 03:22:26.083"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.083" endtime="20221207 03:22:26.083"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.083" endtime="20221207 03:22:26.083"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.084" endtime="20221207 03:22:26.084"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.083" endtime="20221207 03:22:26.084"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.083" endtime="20221207 03:22:26.084"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.058" endtime="20221207 03:22:26.084"/>
</kw>
<status status="PASS" starttime="20221207 03:22:25.935" endtime="20221207 03:22:26.084"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:25.934" endtime="20221207 03:22:26.085"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.092" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.095" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:26.089" endtime="20221207 03:22:26.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.096" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:26.096" endtime="20221207 03:22:26.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.097" endtime="20221207 03:22:26.097"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.088" endtime="20221207 03:22:26.098"/>
</kw>
<msg timestamp="20221207 03:22:26.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.088" endtime="20221207 03:22:26.098"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.087" endtime="20221207 03:22:26.098"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.103" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.125" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.101" endtime="20221207 03:22:26.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.126" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.125" endtime="20221207 03:22:26.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.126" endtime="20221207 03:22:26.128"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.100" endtime="20221207 03:22:26.128"/>
</kw>
<msg timestamp="20221207 03:22:26.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.100" endtime="20221207 03:22:26.129"/>
</kw>
<msg timestamp="20221207 03:22:26.129" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.099" endtime="20221207 03:22:26.129"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.129" endtime="20221207 03:22:26.130"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.129" endtime="20221207 03:22:26.130"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.130" endtime="20221207 03:22:26.130"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.130" endtime="20221207 03:22:26.130"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.129" endtime="20221207 03:22:26.130"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.099" endtime="20221207 03:22:26.131"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.131" endtime="20221207 03:22:26.132"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.131" endtime="20221207 03:22:26.132"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.137" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.153" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.134" endtime="20221207 03:22:26.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.155" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.154" endtime="20221207 03:22:26.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.155" endtime="20221207 03:22:26.156"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.133" endtime="20221207 03:22:26.156"/>
</kw>
<msg timestamp="20221207 03:22:26.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.133" endtime="20221207 03:22:26.157"/>
</kw>
<msg timestamp="20221207 03:22:26.157" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.133" endtime="20221207 03:22:26.157"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.158" endtime="20221207 03:22:26.158"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.158" endtime="20221207 03:22:26.158"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.158" endtime="20221207 03:22:26.158"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.158" endtime="20221207 03:22:26.158"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.157" endtime="20221207 03:22:26.158"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.132" endtime="20221207 03:22:26.159"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.159" endtime="20221207 03:22:26.160"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.159" endtime="20221207 03:22:26.160"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.165" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.181" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.162" endtime="20221207 03:22:26.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.182" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.181" endtime="20221207 03:22:26.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.182" endtime="20221207 03:22:26.183"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.161" endtime="20221207 03:22:26.183"/>
</kw>
<msg timestamp="20221207 03:22:26.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.161" endtime="20221207 03:22:26.184"/>
</kw>
<msg timestamp="20221207 03:22:26.184" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.160" endtime="20221207 03:22:26.184"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.184" endtime="20221207 03:22:26.184"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.184" endtime="20221207 03:22:26.184"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.185" endtime="20221207 03:22:26.185"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.185" endtime="20221207 03:22:26.185"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.184" endtime="20221207 03:22:26.185"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.160" endtime="20221207 03:22:26.185"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.186" endtime="20221207 03:22:26.186"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.185" endtime="20221207 03:22:26.186"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.191" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.206" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.188" endtime="20221207 03:22:26.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.208" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.207" endtime="20221207 03:22:26.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.209" endtime="20221207 03:22:26.209"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.187" endtime="20221207 03:22:26.210"/>
</kw>
<msg timestamp="20221207 03:22:26.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.187" endtime="20221207 03:22:26.211"/>
</kw>
<msg timestamp="20221207 03:22:26.211" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.187" endtime="20221207 03:22:26.211"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.211" endtime="20221207 03:22:26.211"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.211" endtime="20221207 03:22:26.211"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.212" endtime="20221207 03:22:26.212"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.212" endtime="20221207 03:22:26.212"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.211" endtime="20221207 03:22:26.212"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.186" endtime="20221207 03:22:26.212"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.087" endtime="20221207 03:22:26.213"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:26.086" endtime="20221207 03:22:26.213"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.219" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.224" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:26.217" endtime="20221207 03:22:26.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.225" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:26.224" endtime="20221207 03:22:26.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.225" endtime="20221207 03:22:26.225"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.216" endtime="20221207 03:22:26.226"/>
</kw>
<msg timestamp="20221207 03:22:26.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.216" endtime="20221207 03:22:26.226"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.215" endtime="20221207 03:22:26.226"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.231" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.249" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.228" endtime="20221207 03:22:26.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.251" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.250" endtime="20221207 03:22:26.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.251" endtime="20221207 03:22:26.252"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.228" endtime="20221207 03:22:26.252"/>
</kw>
<msg timestamp="20221207 03:22:26.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.227" endtime="20221207 03:22:26.253"/>
</kw>
<msg timestamp="20221207 03:22:26.253" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.227" endtime="20221207 03:22:26.253"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.253" endtime="20221207 03:22:26.253"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.253" endtime="20221207 03:22:26.254"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.254" endtime="20221207 03:22:26.254"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.254" endtime="20221207 03:22:26.254"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.253" endtime="20221207 03:22:26.254"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.226" endtime="20221207 03:22:26.254"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.255" endtime="20221207 03:22:26.255"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.254" endtime="20221207 03:22:26.255"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.260" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.275" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.258" endtime="20221207 03:22:26.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.276" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.276" endtime="20221207 03:22:26.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.277" endtime="20221207 03:22:26.277"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.257" endtime="20221207 03:22:26.278"/>
</kw>
<msg timestamp="20221207 03:22:26.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.257" endtime="20221207 03:22:26.278"/>
</kw>
<msg timestamp="20221207 03:22:26.279" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.256" endtime="20221207 03:22:26.279"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.279" endtime="20221207 03:22:26.279"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.279" endtime="20221207 03:22:26.279"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.279" endtime="20221207 03:22:26.280"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.279" endtime="20221207 03:22:26.280"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.279" endtime="20221207 03:22:26.280"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.256" endtime="20221207 03:22:26.280"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.281" endtime="20221207 03:22:26.281"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.280" endtime="20221207 03:22:26.281"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.286" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.303" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.283" endtime="20221207 03:22:26.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.304" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.303" endtime="20221207 03:22:26.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.304" endtime="20221207 03:22:26.305"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.283" endtime="20221207 03:22:26.305"/>
</kw>
<msg timestamp="20221207 03:22:26.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.283" endtime="20221207 03:22:26.306"/>
</kw>
<msg timestamp="20221207 03:22:26.306" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.282" endtime="20221207 03:22:26.306"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.306" endtime="20221207 03:22:26.306"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.306" endtime="20221207 03:22:26.306"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.307" endtime="20221207 03:22:26.307"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.306" endtime="20221207 03:22:26.307"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.306" endtime="20221207 03:22:26.307"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.281" endtime="20221207 03:22:26.307"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.308" endtime="20221207 03:22:26.308"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.307" endtime="20221207 03:22:26.308"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.313" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.329" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.311" endtime="20221207 03:22:26.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.331" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.330" endtime="20221207 03:22:26.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.331" endtime="20221207 03:22:26.331"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.310" endtime="20221207 03:22:26.332"/>
</kw>
<msg timestamp="20221207 03:22:26.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.309" endtime="20221207 03:22:26.333"/>
</kw>
<msg timestamp="20221207 03:22:26.333" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.309" endtime="20221207 03:22:26.333"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.333" endtime="20221207 03:22:26.334"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.333" endtime="20221207 03:22:26.334"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.334" endtime="20221207 03:22:26.334"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.334" endtime="20221207 03:22:26.334"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.333" endtime="20221207 03:22:26.334"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.308" endtime="20221207 03:22:26.334"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.215" endtime="20221207 03:22:26.335"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:26.214" endtime="20221207 03:22:26.335"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.341" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.344" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:26.338" endtime="20221207 03:22:26.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.346" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221207 03:22:26.345" endtime="20221207 03:22:26.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.346" endtime="20221207 03:22:26.346"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.338" endtime="20221207 03:22:26.347"/>
</kw>
<msg timestamp="20221207 03:22:26.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.338" endtime="20221207 03:22:26.347"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.337" endtime="20221207 03:22:26.347"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.351" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.374" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.349" endtime="20221207 03:22:26.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.376" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.375" endtime="20221207 03:22:26.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.376" endtime="20221207 03:22:26.377"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.349" endtime="20221207 03:22:26.377"/>
</kw>
<msg timestamp="20221207 03:22:26.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.348" endtime="20221207 03:22:26.378"/>
</kw>
<msg timestamp="20221207 03:22:26.378" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.348" endtime="20221207 03:22:26.378"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.379" endtime="20221207 03:22:26.379"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.379" endtime="20221207 03:22:26.379"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.379" endtime="20221207 03:22:26.380"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.379" endtime="20221207 03:22:26.380"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.379" endtime="20221207 03:22:26.380"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.347" endtime="20221207 03:22:26.380"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.381" endtime="20221207 03:22:26.381"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.380" endtime="20221207 03:22:26.382"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.387" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.403" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.384" endtime="20221207 03:22:26.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.404" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.403" endtime="20221207 03:22:26.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.405" endtime="20221207 03:22:26.405"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.383" endtime="20221207 03:22:26.406"/>
</kw>
<msg timestamp="20221207 03:22:26.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.383" endtime="20221207 03:22:26.406"/>
</kw>
<msg timestamp="20221207 03:22:26.407" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.382" endtime="20221207 03:22:26.407"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.407" endtime="20221207 03:22:26.407"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.407" endtime="20221207 03:22:26.407"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.407" endtime="20221207 03:22:26.408"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.407" endtime="20221207 03:22:26.408"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.407" endtime="20221207 03:22:26.408"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.382" endtime="20221207 03:22:26.408"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.409" endtime="20221207 03:22:26.409"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.408" endtime="20221207 03:22:26.409"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.420" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.438" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.412" endtime="20221207 03:22:26.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.439" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.438" endtime="20221207 03:22:26.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.439" endtime="20221207 03:22:26.440"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.411" endtime="20221207 03:22:26.440"/>
</kw>
<msg timestamp="20221207 03:22:26.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.411" endtime="20221207 03:22:26.441"/>
</kw>
<msg timestamp="20221207 03:22:26.441" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.410" endtime="20221207 03:22:26.442"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.442" endtime="20221207 03:22:26.442"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.442" endtime="20221207 03:22:26.442"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.442" endtime="20221207 03:22:26.443"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.442" endtime="20221207 03:22:26.443"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.442" endtime="20221207 03:22:26.443"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.409" endtime="20221207 03:22:26.443"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:22:26.444" endtime="20221207 03:22:26.444"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.443" endtime="20221207 03:22:26.444"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.450" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.465" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.447" endtime="20221207 03:22:26.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.466" level="INFO">200</msg>
<status status="PASS" starttime="20221207 03:22:26.465" endtime="20221207 03:22:26.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.467" endtime="20221207 03:22:26.467"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.446" endtime="20221207 03:22:26.468"/>
</kw>
<msg timestamp="20221207 03:22:26.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.446" endtime="20221207 03:22:26.468"/>
</kw>
<msg timestamp="20221207 03:22:26.469" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221207 03:22:26.445" endtime="20221207 03:22:26.469"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.469" endtime="20221207 03:22:26.469"/>
</kw>
<status status="NOT RUN" starttime="20221207 03:22:26.469" endtime="20221207 03:22:26.469"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.470" endtime="20221207 03:22:26.470"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.470" endtime="20221207 03:22:26.470"/>
</branch>
<status status="PASS" starttime="20221207 03:22:26.469" endtime="20221207 03:22:26.470"/>
</if>
<status status="PASS" starttime="20221207 03:22:26.444" endtime="20221207 03:22:26.470"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.337" endtime="20221207 03:22:26.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:26.336" endtime="20221207 03:22:26.471"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.480" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.502" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:22:26.477" endtime="20221207 03:22:26.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.504" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:22:26.503" endtime="20221207 03:22:26.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.504" endtime="20221207 03:22:26.508"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.476" endtime="20221207 03:22:26.509"/>
</kw>
<msg timestamp="20221207 03:22:26.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.476" endtime="20221207 03:22:26.509"/>
</kw>
<msg timestamp="20221207 03:22:26.510" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:22:26.475" endtime="20221207 03:22:26.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.510" endtime="20221207 03:22:26.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:22:26.510" endtime="20221207 03:22:26.511"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.474" endtime="20221207 03:22:26.511"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.474" endtime="20221207 03:22:26.511"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.473" endtime="20221207 03:22:26.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:26.472" endtime="20221207 03:22:26.511"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:26.519" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fhjll 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:26.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:26.537" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:26.516" endtime="20221207 03:22:26.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:26.539" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:26.538" endtime="20221207 03:22:26.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:26.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:26.539" endtime="20221207 03:22:26.540"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.516" endtime="20221207 03:22:26.540"/>
</kw>
<msg timestamp="20221207 03:22:26.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:26.515" endtime="20221207 03:22:26.541"/>
</kw>
<msg timestamp="20221207 03:22:26.541" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:26.515" endtime="20221207 03:22:26.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221207 03:22:26.542" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221207 03:22:26.541" endtime="20221207 03:22:26.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:26.543" endtime="20221207 03:22:26.543"/>
</kw>
<status status="FAIL" starttime="20221207 03:22:26.514" endtime="20221207 03:22:26.544"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:36.550" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fhjll 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:36.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:36.566" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:36.547" endtime="20221207 03:22:36.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:36.567" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:36.567" endtime="20221207 03:22:36.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:36.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:36.568" endtime="20221207 03:22:36.568"/>
</kw>
<status status="PASS" starttime="20221207 03:22:36.546" endtime="20221207 03:22:36.569"/>
</kw>
<msg timestamp="20221207 03:22:36.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:36.546" endtime="20221207 03:22:36.569"/>
</kw>
<msg timestamp="20221207 03:22:36.570" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:36.545" endtime="20221207 03:22:36.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221207 03:22:36.571" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221207 03:22:36.570" endtime="20221207 03:22:36.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:36.571" endtime="20221207 03:22:36.571"/>
</kw>
<status status="FAIL" starttime="20221207 03:22:36.544" endtime="20221207 03:22:36.572"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:46.579" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fhjll 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:46.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:46.596" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:46.575" endtime="20221207 03:22:46.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:46.597" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:46.596" endtime="20221207 03:22:46.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:46.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:46.598" endtime="20221207 03:22:46.598"/>
</kw>
<status status="PASS" starttime="20221207 03:22:46.575" endtime="20221207 03:22:46.598"/>
</kw>
<msg timestamp="20221207 03:22:46.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:46.574" endtime="20221207 03:22:46.599"/>
</kw>
<msg timestamp="20221207 03:22:46.599" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:46.574" endtime="20221207 03:22:46.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221207 03:22:46.601" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221207 03:22:46.600" endtime="20221207 03:22:46.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:46.601" endtime="20221207 03:22:46.601"/>
</kw>
<status status="FAIL" starttime="20221207 03:22:46.573" endtime="20221207 03:22:46.602"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:22:56.608" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fhjll 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:22:56.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:22:56.625" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:56.605" endtime="20221207 03:22:56.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:22:56.627" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:56.626" endtime="20221207 03:22:56.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:22:56.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:22:56.627" endtime="20221207 03:22:56.628"/>
</kw>
<status status="PASS" starttime="20221207 03:22:56.605" endtime="20221207 03:22:56.628"/>
</kw>
<msg timestamp="20221207 03:22:56.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:22:56.604" endtime="20221207 03:22:56.629"/>
</kw>
<msg timestamp="20221207 03:22:56.629" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221207 03:22:56.604" endtime="20221207 03:22:56.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221207 03:22:56.630" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221207 03:22:56.629" endtime="20221207 03:22:56.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221207 03:22:56.631" endtime="20221207 03:22:56.631"/>
</kw>
<status status="FAIL" starttime="20221207 03:22:56.603" endtime="20221207 03:22:56.633"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:06.639" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fhjll 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:06.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:06.661" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.636" endtime="20221207 03:23:06.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:06.662" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.661" endtime="20221207 03:23:06.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:06.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:06.663" endtime="20221207 03:23:06.663"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.635" endtime="20221207 03:23:06.663"/>
</kw>
<msg timestamp="20221207 03:23:06.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:06.635" endtime="20221207 03:23:06.664"/>
</kw>
<msg timestamp="20221207 03:23:06.664" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.634" endtime="20221207 03:23:06.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.665" endtime="20221207 03:23:06.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.665" endtime="20221207 03:23:06.666"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.633" endtime="20221207 03:23:06.666"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.514" endtime="20221207 03:23:06.666"/>
</kw>
<status status="PASS" starttime="20221207 03:22:26.513" endtime="20221207 03:23:06.666"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:22:26.512" endtime="20221207 03:23:06.666"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:06.674" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fhjll/buc-twksj 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:06.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:06.700" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.671" endtime="20221207 03:23:06.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:06.702" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.701" endtime="20221207 03:23:06.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:06.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:06.702" endtime="20221207 03:23:06.702"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.670" endtime="20221207 03:23:06.703"/>
</kw>
<msg timestamp="20221207 03:23:06.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:06.670" endtime="20221207 03:23:06.703"/>
</kw>
<msg timestamp="20221207 03:23:06.704" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.670" endtime="20221207 03:23:06.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.704" endtime="20221207 03:23:06.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.709" endtime="20221207 03:23:06.709"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.669" endtime="20221207 03:23:06.709"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.669" endtime="20221207 03:23:06.709"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.668" endtime="20221207 03:23:06.709"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:23:06.667" endtime="20221207 03:23:06.710"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:06.720" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fhjll/buc-twksj/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:06.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:06.737" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.718" endtime="20221207 03:23:06.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:06.739" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.738" endtime="20221207 03:23:06.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:06.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:06.739" endtime="20221207 03:23:06.740"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.717" endtime="20221207 03:23:06.740"/>
</kw>
<msg timestamp="20221207 03:23:06.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:06.717" endtime="20221207 03:23:06.741"/>
</kw>
<msg timestamp="20221207 03:23:06.741" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.716" endtime="20221207 03:23:06.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.741" endtime="20221207 03:23:06.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.742" endtime="20221207 03:23:06.743"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.716" endtime="20221207 03:23:06.743"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.715" endtime="20221207 03:23:06.743"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.714" endtime="20221207 03:23:06.743"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:23:06.711" endtime="20221207 03:23:06.743"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:23:06.746" endtime="20221207 03:23:06.746"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:06.753" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fhjll/buc-twksj/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:06.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:06.770" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.750" endtime="20221207 03:23:06.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:06.772" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.771" endtime="20221207 03:23:06.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:06.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:06.772" endtime="20221207 03:23:06.773"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.750" endtime="20221207 03:23:06.773"/>
</kw>
<msg timestamp="20221207 03:23:06.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:06.749" endtime="20221207 03:23:06.774"/>
</kw>
<msg timestamp="20221207 03:23:06.774" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.749" endtime="20221207 03:23:06.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.774" endtime="20221207 03:23:06.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.775" endtime="20221207 03:23:06.775"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.748" endtime="20221207 03:23:06.776"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.748" endtime="20221207 03:23:06.776"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.747" endtime="20221207 03:23:06.776"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.746" endtime="20221207 03:23:06.776"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:23:06.745" endtime="20221207 03:23:06.776"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:06.784" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-fhjll/buc-twksj&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:06.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:06.799" level="INFO">${output} = {"status":"OK","path":"/vol-fhjll/buc-twksj","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-fhjll/buc-twksj/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221207 03:23:06.782" endtime="20221207 03:23:06.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:06.800" level="INFO">{"status":"OK","path":"/vol-fhjll/buc-twksj","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-fhjll/buc-twksj/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20221207 03:23:06.800" endtime="20221207 03:23:06.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:06.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:06.801" endtime="20221207 03:23:06.801"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.781" endtime="20221207 03:23:06.802"/>
</kw>
<msg timestamp="20221207 03:23:06.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:06.781" endtime="20221207 03:23:06.803"/>
</kw>
<msg timestamp="20221207 03:23:06.804" level="INFO">${result} = {"status":"OK","path":"/vol-fhjll/buc-twksj","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-fhjll/buc-twksj/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221207 03:23:06.780" endtime="20221207 03:23:06.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.804" endtime="20221207 03:23:06.804"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.804" endtime="20221207 03:23:06.805"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.780" endtime="20221207 03:23:06.805"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.779" endtime="20221207 03:23:06.805"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.778" endtime="20221207 03:23:06.805"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:23:06.778" endtime="20221207 03:23:06.806"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:06.814" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-fhjll 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:06.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:06.831" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.811" endtime="20221207 03:23:06.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:06.832" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.832" endtime="20221207 03:23:06.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:06.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:06.833" endtime="20221207 03:23:06.833"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.810" endtime="20221207 03:23:06.834"/>
</kw>
<msg timestamp="20221207 03:23:06.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:06.810" endtime="20221207 03:23:06.834"/>
</kw>
<msg timestamp="20221207 03:23:06.835" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.809" endtime="20221207 03:23:06.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.835" endtime="20221207 03:23:06.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.835" endtime="20221207 03:23:06.836"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.809" endtime="20221207 03:23:06.836"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.809" endtime="20221207 03:23:06.836"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.808" endtime="20221207 03:23:06.836"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:23:06.807" endtime="20221207 03:23:06.836"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:06.844" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-fhjll/buc-twksj 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:06.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:06.863" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.842" endtime="20221207 03:23:06.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:06.865" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.864" endtime="20221207 03:23:06.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:06.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:06.865" endtime="20221207 03:23:06.866"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.841" endtime="20221207 03:23:06.866"/>
</kw>
<msg timestamp="20221207 03:23:06.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:06.841" endtime="20221207 03:23:06.866"/>
</kw>
<msg timestamp="20221207 03:23:06.867" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.840" endtime="20221207 03:23:06.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.867" endtime="20221207 03:23:06.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.868" endtime="20221207 03:23:06.868"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.839" endtime="20221207 03:23:06.868"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.839" endtime="20221207 03:23:06.868"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.838" endtime="20221207 03:23:06.869"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:23:06.837" endtime="20221207 03:23:06.869"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:06.876" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:06.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:06.892" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.874" endtime="20221207 03:23:06.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:06.894" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.893" endtime="20221207 03:23:06.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:06.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:06.894" endtime="20221207 03:23:06.895"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.873" endtime="20221207 03:23:06.895"/>
</kw>
<msg timestamp="20221207 03:23:06.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:06.873" endtime="20221207 03:23:06.896"/>
</kw>
<msg timestamp="20221207 03:23:06.896" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221207 03:23:06.872" endtime="20221207 03:23:06.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.896" endtime="20221207 03:23:06.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:06.897" endtime="20221207 03:23:06.897"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.872" endtime="20221207 03:23:06.898"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.871" endtime="20221207 03:23:06.898"/>
</kw>
<status status="PASS" starttime="20221207 03:23:06.871" endtime="20221207 03:23:06.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:23:06.870" endtime="20221207 03:23:06.898"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20221207 03:22:05.210" endtime="20221207 03:23:06.900"/>
</suite>
<status status="PASS" starttime="20221207 03:21:20.816" endtime="20221207 03:23:06.903"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:12.350" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:15.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:15.871" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:12.346" endtime="20221207 03:23:15.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:15.873" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:15.872" endtime="20221207 03:23:15.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:15.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:15.873" endtime="20221207 03:23:15.873"/>
</kw>
<status status="PASS" starttime="20221207 03:23:12.345" endtime="20221207 03:23:15.874"/>
</kw>
<msg timestamp="20221207 03:23:15.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:12.345" endtime="20221207 03:23:15.875"/>
</kw>
<msg timestamp="20221207 03:23:15.875" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:12.344" endtime="20221207 03:23:15.875"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:15.876" endtime="20221207 03:23:15.876"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:15.880" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:19.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:19.591" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:15.878" endtime="20221207 03:23:19.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:19.592" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:19.591" endtime="20221207 03:23:19.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:19.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:19.592" endtime="20221207 03:23:19.593"/>
</kw>
<status status="PASS" starttime="20221207 03:23:15.877" endtime="20221207 03:23:19.593"/>
</kw>
<msg timestamp="20221207 03:23:19.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:15.877" endtime="20221207 03:23:19.594"/>
</kw>
<msg timestamp="20221207 03:23:19.594" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:15.876" endtime="20221207 03:23:19.594"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:19.594" endtime="20221207 03:23:19.594"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:19.598" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:23:25.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:23:25.819" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:19.596" endtime="20221207 03:23:25.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:23:25.820" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:25.819" endtime="20221207 03:23:25.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:23:25.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:23:25.820" endtime="20221207 03:23:25.821"/>
</kw>
<status status="PASS" starttime="20221207 03:23:19.595" endtime="20221207 03:23:25.821"/>
</kw>
<msg timestamp="20221207 03:23:25.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:19.595" endtime="20221207 03:23:25.822"/>
</kw>
<msg timestamp="20221207 03:23:25.822" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:19.594" endtime="20221207 03:23:25.822"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:23:25.822" endtime="20221207 03:23:25.823"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:23:12.343" endtime="20221207 03:23:25.823"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221207 03:23:12.298" endtime="20221207 03:23:25.825"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221207 03:23:35.267" level="INFO">${random} = 77642</msg>
<status status="PASS" starttime="20221207 03:23:35.267" endtime="20221207 03:23:35.267"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:23:35.273" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-77642 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:24:13.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:24:13.927" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:35.269" endtime="20221207 03:24:13.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:24:13.928" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:24:13.927" endtime="20221207 03:24:13.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:24:13.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:24:13.929" endtime="20221207 03:24:13.930"/>
</kw>
<status status="PASS" starttime="20221207 03:23:35.268" endtime="20221207 03:24:13.930"/>
</kw>
<msg timestamp="20221207 03:24:13.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:23:35.268" endtime="20221207 03:24:13.931"/>
</kw>
<msg timestamp="20221207 03:24:13.932" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:23:35.267" endtime="20221207 03:24:13.932"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:24:13.932" endtime="20221207 03:24:13.932"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:23:35.266" endtime="20221207 03:24:13.933"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221207 03:23:35.220" endtime="20221207 03:24:13.934"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221207 03:25:02.519" level="INFO">${random} = 22403</msg>
<status status="PASS" starttime="20221207 03:25:02.518" endtime="20221207 03:25:02.519"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:25:02.524" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-22403 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:25:09.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:25:09.145" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:25:02.520" endtime="20221207 03:25:09.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:25:09.146" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:25:09.146" endtime="20221207 03:25:09.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:25:09.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:25:09.147" endtime="20221207 03:25:09.147"/>
</kw>
<status status="PASS" starttime="20221207 03:25:02.520" endtime="20221207 03:25:09.148"/>
</kw>
<msg timestamp="20221207 03:25:09.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:25:02.520" endtime="20221207 03:25:09.149"/>
</kw>
<msg timestamp="20221207 03:25:09.149" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221207 03:25:02.519" endtime="20221207 03:25:09.149"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:25:09.150" endtime="20221207 03:25:09.150"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:25:02.517" endtime="20221207 03:25:09.150"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221207 03:25:02.471" endtime="20221207 03:25:09.153"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:20:33.143" endtime="20221207 03:20:33.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:20:33.153" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:20:33.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:20:33.394" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 07 Dec 2022 03:20:33 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 07 Dec 2022 02:52:46 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221207 03:20:33.147" endtime="20221207 03:20:33.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:20:33.405" level="INFO">HTTP/1.1 200 OK
Date: Wed, 07 Dec 2022 03:20:33 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 07 Dec 2022 02:52:46 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221207 03:20:33.394" endtime="20221207 03:20:33.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:20:33.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:20:33.406" endtime="20221207 03:20:33.408"/>
</kw>
<status status="PASS" starttime="20221207 03:20:33.146" endtime="20221207 03:20:33.409"/>
</kw>
<msg timestamp="20221207 03:20:33.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:20:33.146" endtime="20221207 03:20:33.411"/>
</kw>
<msg timestamp="20221207 03:20:33.412" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 07 Dec 2022 03:20:33 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 07 Dec 2022 02:52:46 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221207 03:20:33.144" endtime="20221207 03:20:33.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:20:33.414" endtime="20221207 03:20:33.415"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:20:33.142" endtime="20221207 03:20:33.416"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221207 03:20:33.421" endtime="20221207 03:20:33.421"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221207 03:20:33.423" level="INFO">${random} = 6u3F9eI9nO</msg>
<status status="PASS" starttime="20221207 03:20:33.421" endtime="20221207 03:20:33.423"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:20:33.436" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 6u3F9eI9nO  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:20:47.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:20:47.099" level="INFO">${output} = 2022-12-07 03:20:35,962 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:20:36,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:20:33.431" endtime="20221207 03:20:47.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:20:47.101" level="INFO">2022-12-07 03:20:35,962 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:20:36,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:20:36,092 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:20:36,329 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6u3F9eI9nO and number-of-tests 1
2022-12-07 03:20:36,424 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:37,427 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:38,427 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:39,428 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-07 03:20:39,428 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:40,162 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-07 03:20:40,429 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:41,430 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:42,054 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:20:42,430 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:42,444 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-07 03:20:43,432 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:44,434 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:45,436 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:46,436 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:20:46,727 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5377.287768, max=5377.287768, mean=5377.287768, stddev=0.0, median=5377.287768, p75=5377.287768, p95=5377.287768, p98=5377.287768, p99=5377.287768, p999=5377.287768, mean_rate=0.1569550281055398, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:20:46,729 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2022-12-07 03:20:46,731 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:20:46,731 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:20:47.100" endtime="20221207 03:20:47.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:20:47.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:20:47.101" endtime="20221207 03:20:47.102"/>
</kw>
<status status="PASS" starttime="20221207 03:20:33.429" endtime="20221207 03:20:47.102"/>
</kw>
<msg timestamp="20221207 03:20:47.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:20:33.428" endtime="20221207 03:20:47.103"/>
</kw>
<msg timestamp="20221207 03:20:47.103" level="INFO">${result} = 2022-12-07 03:20:35,962 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:20:36,092 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:20:33.426" endtime="20221207 03:20:47.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:20:47.103" endtime="20221207 03:20:47.104"/>
</kw>
<status status="PASS" starttime="20221207 03:20:33.423" endtime="20221207 03:20:47.104"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221207 03:20:47.109" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 6u3F9eI9nO  2&gt;&amp;1'.</msg>
<msg timestamp="20221207 03:20:55.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20221207 03:20:55.184" level="INFO">${output} = 2022-12-07 03:20:49,546 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:20:49,743 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:20:47.107" endtime="20221207 03:20:55.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221207 03:20:55.185" level="INFO">2022-12-07 03:20:49,546 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:20:49,743 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-07 03:20:49,745 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-07 03:20:49,950 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 6u3F9eI9nO and number-of-tests 1
2022-12-07 03:20:50,044 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:51,052 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:52,054 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:52,356 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-07 03:20:53,055 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-07 03:20:54,055 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-07 03:20:54,825 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=55.241067, max=55.241067, mean=55.241067, stddev=0.0, median=55.241067, p75=55.241067, p95=55.241067, p98=55.241067, p99=55.241067, p999=55.241067, mean_rate=0.8930140940708459, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-07 03:20:54,826 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-12-07 03:20:54,827 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-07 03:20:54,827 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221207 03:20:55.184" endtime="20221207 03:20:55.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221207 03:20:55.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221207 03:20:55.185" endtime="20221207 03:20:55.186"/>
</kw>
<status status="PASS" starttime="20221207 03:20:47.106" endtime="20221207 03:20:55.186"/>
</kw>
<msg timestamp="20221207 03:20:55.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221207 03:20:47.106" endtime="20221207 03:20:55.187"/>
</kw>
<msg timestamp="20221207 03:20:55.187" level="INFO">${result} = 2022-12-07 03:20:49,546 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-07 03:20:49,743 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221207 03:20:47.105" endtime="20221207 03:20:55.187"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221207 03:20:55.187" endtime="20221207 03:20:55.188"/>
</kw>
<status status="PASS" starttime="20221207 03:20:47.104" endtime="20221207 03:20:55.188"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221207 03:20:33.418" endtime="20221207 03:20:55.188"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221207 03:20:33.040" endtime="20221207 03:20:55.190"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="201440"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
