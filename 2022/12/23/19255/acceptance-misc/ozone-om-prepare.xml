<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221223 07:45:09.281" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:39:01.273" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:39:26.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20221223 07:39:26.021" level="INFO">${output} = 2022-12-23 07:39:02,924 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-23 07:39:03,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221223 07:39:01.267" endtime="20221223 07:39:26.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221223 07:39:26.022" level="INFO">2022-12-23 07:39:02,924 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-23 07:39:03,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-23 07:39:03,132 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-23 07:39:03,308 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-12-23 07:39:03,411 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-23 07:39:04,265 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-23 07:39:04,412 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-23 07:39:04,441 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-23 07:39:05,413 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-23 07:39:05,647 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-23 07:39:06,020 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-23 07:39:06,416 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-23 07:39:07,416 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-23 07:39:08,420 [Thread-3] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2022-12-23 07:39:09,421 [Thread-3] INFO freon.ProgressBar: Progress: 8.00 % (8 out of 100)
2022-12-23 07:39:10,422 [Thread-3] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2022-12-23 07:39:11,422 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2022-12-23 07:39:12,423 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2022-12-23 07:39:13,423 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2022-12-23 07:39:14,423 [Thread-3] INFO freon.ProgressBar: Progress: 26.00 % (26 out of 100)
2022-12-23 07:39:15,424 [Thread-3] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2022-12-23 07:39:16,425 [Thread-3] INFO freon.ProgressBar: Progress: 41.00 % (41 out of 100)
2022-12-23 07:39:17,426 [Thread-3] INFO freon.ProgressBar: Progress: 49.00 % (49 out of 100)
2022-12-23 07:39:18,427 [Thread-3] INFO freon.ProgressBar: Progress: 59.00 % (59 out of 100)
2022-12-23 07:39:19,432 [Thread-3] INFO freon.ProgressBar: Progress: 68.00 % (68 out of 100)
2022-12-23 07:39:20,432 [Thread-3] INFO freon.ProgressBar: Progress: 73.00 % (73 out of 100)
2022-12-23 07:39:21,433 [Thread-3] INFO freon.ProgressBar: Progress: 73.00 % (73 out of 100)
2022-12-23 07:39:22,440 [Thread-3] INFO freon.ProgressBar: Progress: 74.00 % (74 out of 100)
2022-12-23 07:39:23,441 [Thread-3] INFO freon.ProgressBar: Progress: 84.00 % (84 out of 100)
2022-12-23 07:39:24,441 [Thread-3] INFO freon.ProgressBar: Progress: 95.00 % (95 out of 100)
2022-12-23 07:39:25,442 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-12-23 07:39:25,668 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=67.670376, max=2864.532497, mean=197.07187901020006, stddev=432.55089404749134, median=110.889687, p75=138.585194, p95=319.195389, p98=2581.986964, p99=2656.251152, p999=2864.532497, mean_rate=4.740408107525807, m1=2.6939009757580994, m5=1.9955094764821846, m15=1.8661629198681258, rate_unit=events/second, duration_unit=milliseconds
2022-12-23 07:39:25,669 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 22
2022-12-23 07:39:25,669 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-23 07:39:25,669 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221223 07:39:26.021" endtime="20221223 07:39:26.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221223 07:39:26.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221223 07:39:26.022" endtime="20221223 07:39:26.023"/>
</kw>
<status status="PASS" starttime="20221223 07:39:01.267" endtime="20221223 07:39:26.023"/>
</kw>
<msg timestamp="20221223 07:39:26.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221223 07:39:01.266" endtime="20221223 07:39:26.024"/>
</kw>
<msg timestamp="20221223 07:39:26.025" level="INFO">${result} = 2022-12-23 07:39:02,924 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-23 07:39:03,132 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221223 07:39:01.265" endtime="20221223 07:39:26.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221223 07:39:26.025" endtime="20221223 07:39:26.025"/>
</kw>
<status status="PASS" starttime="20221223 07:39:01.263" endtime="20221223 07:39:26.025"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221223 07:39:26.026" level="INFO">${random} = 32360</msg>
<status status="PASS" starttime="20221223 07:39:26.025" endtime="20221223 07:39:26.026"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221223 07:39:26.027" level="INFO">${volume_name} = 32360-volume-for-prepare</msg>
<status status="PASS" starttime="20221223 07:39:26.026" endtime="20221223 07:39:26.027"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221223 07:39:26.029" level="INFO">${bucket_name} = 32360-bucket-for-prepare</msg>
<status status="PASS" starttime="20221223 07:39:26.027" endtime="20221223 07:39:26.029"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:39:26.032" level="INFO">Running command 'ozone sh volume create /32360-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:39:28.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20221223 07:39:28.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221223 07:39:26.030" endtime="20221223 07:39:28.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221223 07:39:28.556" level="INFO"/>
<status status="PASS" starttime="20221223 07:39:28.555" endtime="20221223 07:39:28.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221223 07:39:28.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221223 07:39:28.556" endtime="20221223 07:39:28.556"/>
</kw>
<status status="PASS" starttime="20221223 07:39:26.030" endtime="20221223 07:39:28.557"/>
</kw>
<msg timestamp="20221223 07:39:28.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221223 07:39:26.030" endtime="20221223 07:39:28.557"/>
</kw>
<status status="PASS" starttime="20221223 07:39:26.029" endtime="20221223 07:39:28.558"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:39:28.562" level="INFO">Running command 'ozone sh bucket create /32360-volume-for-prepare/32360-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:39:31.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20221223 07:39:31.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221223 07:39:28.559" endtime="20221223 07:39:31.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221223 07:39:31.371" level="INFO"/>
<status status="PASS" starttime="20221223 07:39:31.371" endtime="20221223 07:39:31.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221223 07:39:31.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221223 07:39:31.372" endtime="20221223 07:39:31.372"/>
</kw>
<status status="PASS" starttime="20221223 07:39:28.559" endtime="20221223 07:39:31.372"/>
</kw>
<msg timestamp="20221223 07:39:31.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221223 07:39:28.558" endtime="20221223 07:39:31.373"/>
</kw>
<status status="PASS" starttime="20221223 07:39:28.558" endtime="20221223 07:39:31.373"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:39:31.377" level="INFO">Running command 'ozone sh key put /32360-volume-for-prepare/32360-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:39:36.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20221223 07:39:36.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221223 07:39:31.374" endtime="20221223 07:39:36.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221223 07:39:36.092" level="INFO"/>
<status status="PASS" starttime="20221223 07:39:36.091" endtime="20221223 07:39:36.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221223 07:39:36.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221223 07:39:36.092" endtime="20221223 07:39:36.092"/>
</kw>
<status status="PASS" starttime="20221223 07:39:31.374" endtime="20221223 07:39:36.093"/>
</kw>
<msg timestamp="20221223 07:39:36.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221223 07:39:31.374" endtime="20221223 07:39:36.093"/>
</kw>
<status status="PASS" starttime="20221223 07:39:31.373" endtime="20221223 07:39:36.094"/>
</kw>
<status status="PASS" starttime="20221223 07:39:01.263" endtime="20221223 07:39:36.094"/>
</kw>
<test id="s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221223 07:39:36.096" endtime="20221223 07:39:36.096"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:39:36.100" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:44:36.095" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20221223 07:39:36.098" endtime="20221223 07:44:36.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221223 07:44:36.096" endtime="20221223 07:44:36.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221223 07:44:36.096" endtime="20221223 07:44:36.096"/>
</kw>
<status status="FAIL" starttime="20221223 07:39:36.097" endtime="20221223 07:44:36.096"/>
</kw>
<msg timestamp="20221223 07:44:36.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20221223 07:39:36.097" endtime="20221223 07:44:36.097"/>
</kw>
<status status="FAIL" starttime="20221223 07:39:36.096" endtime="20221223 07:44:36.097"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20221223 07:44:36.097" endtime="20221223 07:44:36.097"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20221223 07:39:36.094" endtime="20221223 07:44:36.098">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221223 07:44:36.100" endtime="20221223 07:44:36.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:44:36.105" level="INFO">Running command 'ozone sh key info /32360-volume-for-prepare/32360-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:44:39.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20221223 07:44:39.060" level="INFO">${output} = {
  "volumeName" : "32360-volume-for-prepare",
  "bucketName" : "32360-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-12-23T07:39:33.737Z",
  "modificati...</msg>
<status status="PASS" starttime="20221223 07:44:36.102" endtime="20221223 07:44:39.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221223 07:44:39.061" level="INFO">{
  "volumeName" : "32360-volume-for-prepare",
  "bucketName" : "32360-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-12-23T07:39:33.737Z",
  "modificationTime" : "2022-12-23T07:39:35.711Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 109611004723200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221223 07:44:39.060" endtime="20221223 07:44:39.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221223 07:44:39.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221223 07:44:39.061" endtime="20221223 07:44:39.062"/>
</kw>
<status status="PASS" starttime="20221223 07:44:36.102" endtime="20221223 07:44:39.062"/>
</kw>
<msg timestamp="20221223 07:44:39.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221223 07:44:36.102" endtime="20221223 07:44:39.063"/>
</kw>
<msg timestamp="20221223 07:44:39.063" level="INFO">${result} = {
  "volumeName" : "32360-volume-for-prepare",
  "bucketName" : "32360-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-12-23T07:39:33.737Z",
  "modificati...</msg>
<status status="PASS" starttime="20221223 07:44:36.101" endtime="20221223 07:44:39.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221223 07:44:39.063" endtime="20221223 07:44:39.064"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221223 07:44:36.100" endtime="20221223 07:44:39.064"/>
</test>
<test id="s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221223 07:44:39.066" endtime="20221223 07:44:39.066"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:44:39.069" level="INFO">Running command 'ozone sh key put /32360-volume-for-prepare/32360-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:44:41.596" level="INFO">${rc} = 255</msg>
<msg timestamp="20221223 07:44:41.596" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221223 07:44:39.067" endtime="20221223 07:44:41.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221223 07:44:41.598" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221223 07:44:41.597" endtime="20221223 07:44:41.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221223 07:44:41.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221223 07:44:41.598" endtime="20221223 07:44:41.599"/>
</kw>
<msg timestamp="20221223 07:44:41.599" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221223 07:44:39.066" endtime="20221223 07:44:41.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221223 07:44:41.599" endtime="20221223 07:44:41.600"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:44:41.603" level="INFO">Running command 'ozone sh key info /32360-volume-for-prepare/32360-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:44:43.946" level="INFO">${rc} = 255</msg>
<msg timestamp="20221223 07:44:43.946" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221223 07:44:41.600" endtime="20221223 07:44:43.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221223 07:44:43.948" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221223 07:44:43.947" endtime="20221223 07:44:43.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221223 07:44:43.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221223 07:44:43.948" endtime="20221223 07:44:43.948"/>
</kw>
<status status="PASS" starttime="20221223 07:44:41.600" endtime="20221223 07:44:43.949"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221223 07:44:39.065" endtime="20221223 07:44:43.949"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="FAIL" starttime="20221223 07:39:01.181" endtime="20221223 07:44:43.951"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
