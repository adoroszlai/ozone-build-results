<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221223 07:53:25.633" rpa="false" schemaversion="3">
<suite id="s1" name="ozones3-haproxy" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221223 07:52:54.189" endtime="20221223 07:52:54.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:52:54.195" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:52:54.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20221223 07:52:54.281" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 23 Dec 2022 07:52:54 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 23 Dec 2022 07:21:48 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221223 07:52:54.191" endtime="20221223 07:52:54.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221223 07:52:54.282" level="INFO">HTTP/1.1 200 OK
Date: Fri, 23 Dec 2022 07:52:54 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 23 Dec 2022 07:21:48 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221223 07:52:54.281" endtime="20221223 07:52:54.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221223 07:52:54.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221223 07:52:54.283" endtime="20221223 07:52:54.283"/>
</kw>
<status status="PASS" starttime="20221223 07:52:54.191" endtime="20221223 07:52:54.283"/>
</kw>
<msg timestamp="20221223 07:52:54.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221223 07:52:54.191" endtime="20221223 07:52:54.285"/>
</kw>
<msg timestamp="20221223 07:52:54.285" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 23 Dec 2022 07:52:54 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 23 Dec 2022 07:21:48 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221223 07:52:54.190" endtime="20221223 07:52:54.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221223 07:52:54.285" endtime="20221223 07:52:54.286"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221223 07:52:54.188" endtime="20221223 07:52:54.286"/>
</test>
<test id="s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221223 07:52:54.289" endtime="20221223 07:52:54.293"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221223 07:52:54.294" level="INFO">${random} = DMhZZpH16S</msg>
<status status="PASS" starttime="20221223 07:52:54.293" endtime="20221223 07:52:54.294"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:52:54.303" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p DMhZZpH16S  2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:53:02.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20221223 07:53:02.229" level="INFO">${output} = 2022-12-23 07:52:56,233 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-23 07:52:56,448 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221223 07:52:54.296" endtime="20221223 07:53:02.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221223 07:53:02.230" level="INFO">2022-12-23 07:52:56,233 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-23 07:52:56,448 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-23 07:52:56,448 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-23 07:52:56,683 [main] INFO freon.BaseFreonGenerator: Executing test with prefix DMhZZpH16S and number-of-tests 1
2022-12-23 07:52:56,798 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-23 07:52:57,802 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-23 07:52:58,055 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-23 07:52:58,180 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-23 07:52:58,803 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-23 07:52:59,018 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-23 07:52:59,367 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-23 07:52:59,803 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-23 07:53:00,803 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-23 07:53:01,804 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-23 07:53:01,866 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2684.499496, max=2684.499496, mean=2684.499496, stddev=0.0, median=2684.499496, p75=2684.499496, p95=2684.499496, p98=2684.499496, p99=2684.499496, p999=2684.499496, mean_rate=0.274520989553809, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-23 07:53:01,866 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-12-23 07:53:01,866 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-23 07:53:01,866 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221223 07:53:02.229" endtime="20221223 07:53:02.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221223 07:53:02.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221223 07:53:02.230" endtime="20221223 07:53:02.231"/>
</kw>
<status status="PASS" starttime="20221223 07:52:54.296" endtime="20221223 07:53:02.231"/>
</kw>
<msg timestamp="20221223 07:53:02.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221223 07:52:54.296" endtime="20221223 07:53:02.232"/>
</kw>
<msg timestamp="20221223 07:53:02.232" level="INFO">${result} = 2022-12-23 07:52:56,233 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-23 07:52:56,448 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221223 07:52:54.295" endtime="20221223 07:53:02.232"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221223 07:53:02.232" endtime="20221223 07:53:02.233"/>
</kw>
<status status="PASS" starttime="20221223 07:52:54.294" endtime="20221223 07:53:02.233"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221223 07:53:02.238" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p DMhZZpH16S  2&gt;&amp;1'.</msg>
<msg timestamp="20221223 07:53:08.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20221223 07:53:08.957" level="INFO">${output} = 2022-12-23 07:53:04,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-23 07:53:04,517 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221223 07:53:02.235" endtime="20221223 07:53:08.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221223 07:53:08.958" level="INFO">2022-12-23 07:53:04,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-23 07:53:04,517 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-23 07:53:04,517 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-23 07:53:04,709 [main] INFO freon.BaseFreonGenerator: Executing test with prefix DMhZZpH16S and number-of-tests 1
2022-12-23 07:53:04,786 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-23 07:53:05,797 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-23 07:53:06,366 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-23 07:53:06,798 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-23 07:53:07,798 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-23 07:53:08,575 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=74.207529, max=74.207529, mean=74.207529, stddev=0.0, median=74.207529, p75=74.207529, p95=74.207529, p98=74.207529, p99=74.207529, p999=74.207529, mean_rate=0.9610449917335763, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-23 07:53:08,576 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-12-23 07:53:08,576 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-23 07:53:08,576 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221223 07:53:08.957" endtime="20221223 07:53:08.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221223 07:53:08.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221223 07:53:08.958" endtime="20221223 07:53:08.959"/>
</kw>
<status status="PASS" starttime="20221223 07:53:02.235" endtime="20221223 07:53:08.959"/>
</kw>
<msg timestamp="20221223 07:53:08.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221223 07:53:02.235" endtime="20221223 07:53:08.960"/>
</kw>
<msg timestamp="20221223 07:53:08.960" level="INFO">${result} = 2022-12-23 07:53:04,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-23 07:53:04,517 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221223 07:53:02.234" endtime="20221223 07:53:08.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221223 07:53:08.960" endtime="20221223 07:53:08.961"/>
</kw>
<status status="PASS" starttime="20221223 07:53:02.233" endtime="20221223 07:53:08.961"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221223 07:52:54.288" endtime="20221223 07:53:08.961"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221223 07:52:54.130" endtime="20221223 07:53:08.963"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="ozones3-haproxy">ozones3-haproxy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
