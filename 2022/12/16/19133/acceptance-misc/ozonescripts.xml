<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221216 10:42:54.030" rpa="false" schemaversion="3">
<suite id="s1" name="ozonescripts">
<suite id="s1-s1" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:40:58.398" endtime="20221216 10:40:58.399"/>
</kw>
<test id="s1-s1-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:40:58.406" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:01.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:41:01.758" level="INFO">${output} = PipelineID=6186c7f9-b6cc-44b8-a48f-c34bfcb6a879 is created. Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_...</msg>
<status status="PASS" starttime="20221216 10:40:58.402" endtime="20221216 10:41:01.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:01.760" level="INFO">PipelineID=6186c7f9-b6cc-44b8-a48f-c34bfcb6a879 is created. Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-12-16T10:41:01.583Z[UTC]]</msg>
<status status="PASS" starttime="20221216 10:41:01.758" endtime="20221216 10:41:01.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:41:01.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:41:01.761" endtime="20221216 10:41:01.761"/>
</kw>
<status status="PASS" starttime="20221216 10:40:58.402" endtime="20221216 10:41:01.762"/>
</kw>
<msg timestamp="20221216 10:41:01.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:40:58.401" endtime="20221216 10:41:01.765"/>
</kw>
<msg timestamp="20221216 10:41:01.765" level="INFO">${output} = PipelineID=6186c7f9-b6cc-44b8-a48f-c34bfcb6a879 is created. Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_...</msg>
<status status="PASS" starttime="20221216 10:40:58.401" endtime="20221216 10:41:01.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:01.765" endtime="20221216 10:41:01.766"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:01.766" endtime="20221216 10:41:01.767"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:41:01.773" level="INFO">Running command 'echo "PipelineID=6186c7f9-b6cc-44b8-a48f-c34bfcb6a879 is created. Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-12-16T10:41:01.583Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:01.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:41:01.777" level="INFO">${output} = 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879</msg>
<status status="PASS" starttime="20221216 10:41:01.770" endtime="20221216 10:41:01.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:01.778" level="INFO">6186c7f9-b6cc-44b8-a48f-c34bfcb6a879</msg>
<status status="PASS" starttime="20221216 10:41:01.778" endtime="20221216 10:41:01.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:41:01.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:41:01.779" endtime="20221216 10:41:01.780"/>
</kw>
<status status="PASS" starttime="20221216 10:41:01.769" endtime="20221216 10:41:01.780"/>
</kw>
<msg timestamp="20221216 10:41:01.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:41:01.768" endtime="20221216 10:41:01.781"/>
</kw>
<msg timestamp="20221216 10:41:01.781" level="INFO">${pipeline} = 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879</msg>
<status status="PASS" starttime="20221216 10:41:01.767" endtime="20221216 10:41:01.781"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221216 10:41:01.782" level="INFO">${PIPELINE} = 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879</msg>
<status status="PASS" starttime="20221216 10:41:01.781" endtime="20221216 10:41:01.782"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:40:58.400" endtime="20221216 10:41:01.783"/>
</test>
<test id="s1-s1-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:41:01.789" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:05.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:41:05.021" level="INFO">${output} = Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221216 10:41:01.787" endtime="20221216 10:41:05.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:05.023" level="INFO">Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-12-16T10:41:01.583Z[UTC]]
Pipeline[ Id: 58af040b-e8f4-49e1-b95a-881309f2ec8b, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:83f3120b-4f48-4ee0-90fd-46784628cc87, CreationTimestamp2022-12-16T10:40:16.275Z[UTC]]</msg>
<status status="PASS" starttime="20221216 10:41:05.022" endtime="20221216 10:41:05.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:41:05.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:41:05.023" endtime="20221216 10:41:05.024"/>
</kw>
<status status="PASS" starttime="20221216 10:41:01.786" endtime="20221216 10:41:05.024"/>
</kw>
<msg timestamp="20221216 10:41:05.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:41:01.785" endtime="20221216 10:41:05.025"/>
</kw>
<msg timestamp="20221216 10:41:05.025" level="INFO">${output} = Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221216 10:41:01.785" endtime="20221216 10:41:05.025"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:05.025" endtime="20221216 10:41:05.026"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:41:01.784" endtime="20221216 10:41:05.026"/>
</test>
<test id="s1-s1-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:41:05.033" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:08.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:41:08.192" level="INFO">${output} = Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221216 10:41:05.030" endtime="20221216 10:41:08.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:08.193" level="INFO">Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-12-16T10:41:01.583Z[UTC]]
Pipeline[ Id: 58af040b-e8f4-49e1-b95a-881309f2ec8b, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:83f3120b-4f48-4ee0-90fd-46784628cc87, CreationTimestamp2022-12-16T10:40:16.275Z[UTC]]</msg>
<status status="PASS" starttime="20221216 10:41:08.192" endtime="20221216 10:41:08.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:41:08.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:41:08.194" endtime="20221216 10:41:08.194"/>
</kw>
<status status="PASS" starttime="20221216 10:41:05.030" endtime="20221216 10:41:08.195"/>
</kw>
<msg timestamp="20221216 10:41:08.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:41:05.029" endtime="20221216 10:41:08.196"/>
</kw>
<msg timestamp="20221216 10:41:08.196" level="INFO">${output} = Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221216 10:41:05.029" endtime="20221216 10:41:08.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:08.197" endtime="20221216 10:41:08.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:41:05.028" endtime="20221216 10:41:08.198"/>
</test>
<test id="s1-s1-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:41:08.205" level="INFO">Running command 'ozone admin pipeline deactivate "6186c7f9-b6cc-44b8-a48f-c34bfcb6a879" 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:11.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:41:11.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221216 10:41:08.202" endtime="20221216 10:41:11.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:11.379" level="INFO"/>
<status status="PASS" starttime="20221216 10:41:11.378" endtime="20221216 10:41:11.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:41:11.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:41:11.380" endtime="20221216 10:41:11.380"/>
</kw>
<status status="PASS" starttime="20221216 10:41:08.201" endtime="20221216 10:41:11.381"/>
</kw>
<msg timestamp="20221216 10:41:11.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:41:08.201" endtime="20221216 10:41:11.381"/>
</kw>
<status status="PASS" starttime="20221216 10:41:08.200" endtime="20221216 10:41:11.382"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:41:11.386" level="INFO">Running command 'ozone admin pipeline list | grep "6186c7f9-b6cc-44b8-a48f-c34bfcb6a879" 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:14.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:41:14.690" level="INFO">${output} = Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221216 10:41:11.384" endtime="20221216 10:41:14.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:14.691" level="INFO">Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2022-12-16T10:41:01.583Z[UTC]]</msg>
<status status="PASS" starttime="20221216 10:41:14.690" endtime="20221216 10:41:14.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:41:14.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:41:14.692" endtime="20221216 10:41:14.692"/>
</kw>
<status status="PASS" starttime="20221216 10:41:11.383" endtime="20221216 10:41:14.694"/>
</kw>
<msg timestamp="20221216 10:41:14.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:41:11.383" endtime="20221216 10:41:14.695"/>
</kw>
<msg timestamp="20221216 10:41:14.695" level="INFO">${output} = Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221216 10:41:11.382" endtime="20221216 10:41:14.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:14.695" endtime="20221216 10:41:14.696"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:41:08.199" endtime="20221216 10:41:14.696"/>
</test>
<test id="s1-s1-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:41:14.702" level="INFO">Running command 'ozone admin pipeline activate "6186c7f9-b6cc-44b8-a48f-c34bfcb6a879" 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:17.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:41:17.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221216 10:41:14.700" endtime="20221216 10:41:17.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:17.723" level="INFO"/>
<status status="PASS" starttime="20221216 10:41:17.722" endtime="20221216 10:41:17.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:41:17.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:41:17.723" endtime="20221216 10:41:17.724"/>
</kw>
<status status="PASS" starttime="20221216 10:41:14.699" endtime="20221216 10:41:17.724"/>
</kw>
<msg timestamp="20221216 10:41:17.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:41:14.699" endtime="20221216 10:41:17.725"/>
</kw>
<status status="PASS" starttime="20221216 10:41:14.698" endtime="20221216 10:41:17.725"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:41:17.729" level="INFO">Running command 'ozone admin pipeline list | grep "6186c7f9-b6cc-44b8-a48f-c34bfcb6a879" 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:20.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:41:20.669" level="INFO">${output} = Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221216 10:41:17.727" endtime="20221216 10:41:20.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:20.670" level="INFO">Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2022-12-16T10:41:01.583Z[UTC]]</msg>
<status status="PASS" starttime="20221216 10:41:20.669" endtime="20221216 10:41:20.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:41:20.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:41:20.671" endtime="20221216 10:41:20.672"/>
</kw>
<status status="PASS" starttime="20221216 10:41:17.726" endtime="20221216 10:41:20.672"/>
</kw>
<msg timestamp="20221216 10:41:20.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:41:17.726" endtime="20221216 10:41:20.672"/>
</kw>
<msg timestamp="20221216 10:41:20.673" level="INFO">${output} = Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221216 10:41:17.725" endtime="20221216 10:41:20.673"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:20.673" endtime="20221216 10:41:20.674"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:41:14.697" endtime="20221216 10:41:20.674"/>
</test>
<test id="s1-s1-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:41:20.681" level="INFO">Running command 'ozone admin pipeline close "6186c7f9-b6cc-44b8-a48f-c34bfcb6a879" 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:23.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:41:23.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221216 10:41:20.678" endtime="20221216 10:41:23.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:23.557" level="INFO"/>
<status status="PASS" starttime="20221216 10:41:23.556" endtime="20221216 10:41:23.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:41:23.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:41:23.557" endtime="20221216 10:41:23.558"/>
</kw>
<status status="PASS" starttime="20221216 10:41:20.677" endtime="20221216 10:41:23.559"/>
</kw>
<msg timestamp="20221216 10:41:23.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:41:20.677" endtime="20221216 10:41:23.559"/>
</kw>
<status status="PASS" starttime="20221216 10:41:20.676" endtime="20221216 10:41:23.560"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:41:23.564" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:26.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:41:26.657" level="INFO">${output} = Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221216 10:41:23.562" endtime="20221216 10:41:26.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:26.658" level="INFO">Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2022-12-16T10:41:01.583Z[UTC]]
Pipeline[ Id: 58af040b-e8f4-49e1-b95a-881309f2ec8b, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:83f3120b-4f48-4ee0-90fd-46784628cc87, CreationTimestamp2022-12-16T10:40:16.275Z[UTC]]</msg>
<status status="PASS" starttime="20221216 10:41:26.657" endtime="20221216 10:41:26.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:41:26.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:41:26.658" endtime="20221216 10:41:26.659"/>
</kw>
<status status="PASS" starttime="20221216 10:41:23.561" endtime="20221216 10:41:26.660"/>
</kw>
<msg timestamp="20221216 10:41:26.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:41:23.561" endtime="20221216 10:41:26.660"/>
</kw>
<msg timestamp="20221216 10:41:26.661" level="INFO">${output} = Pipeline[ Id: 6186c7f9-b6cc-44b8-a48f-c34bfcb6a879, Nodes: 83f3120b-4f48-4ee0-90fd-46784628cc87{ip: 172.20.0.4, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" starttime="20221216 10:41:23.560" endtime="20221216 10:41:26.661"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20221216 10:41:26.661" endtime="20221216 10:41:26.662"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20221216 10:41:26.662" endtime="20221216 10:41:26.663"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:41:20.675" endtime="20221216 10:41:26.663"/>
</test>
<test id="s1-s1-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:41:26.670" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:41:29.024" level="INFO">${rc} = 255</msg>
<msg timestamp="20221216 10:41:29.024" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20221216 10:41:26.667" endtime="20221216 10:41:29.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:41:29.026" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20221216 10:41:29.025" endtime="20221216 10:41:29.026"/>
</kw>
<msg timestamp="20221216 10:41:29.027" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20221216 10:41:26.666" endtime="20221216 10:41:29.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:29.027" endtime="20221216 10:41:29.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:29.028" endtime="20221216 10:41:29.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:29.028" endtime="20221216 10:41:29.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:29.029" endtime="20221216 10:41:29.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:41:29.030" endtime="20221216 10:41:29.030"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:41:26.665" endtime="20221216 10:41:29.030"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20221216 10:40:58.334" endtime="20221216 10:41:29.033"/>
</suite>
<suite id="s1-s2" name="Single Node" source="/opt/hadoop/smoketest/basic/single_node.robot">
<test id="s1-s2-t1" name="Basic Freon smoketest for one datanode" line="25">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:40:37.536" endtime="20221216 10:40:37.537"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221216 10:40:37.538" level="INFO">${random} = hVomTwPVaH</msg>
<status status="PASS" starttime="20221216 10:40:37.537" endtime="20221216 10:40:37.538"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<arg>args=--replication ONE --replication-type RATIS</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:40:37.545" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p hVomTwPVaH --replication ONE --replication-type RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:40:47.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:40:47.731" level="INFO">${output} = 2022-12-16 10:40:39,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:40:40,036 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:40:37.540" endtime="20221216 10:40:47.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:40:47.732" level="INFO">2022-12-16 10:40:39,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:40:40,036 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-16 10:40:40,036 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-16 10:40:40,256 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hVomTwPVaH and number-of-tests 1
2022-12-16 10:40:40,325 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:40:41,327 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:40:42,327 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:40:43,328 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:40:43,687 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-16 10:40:43,878 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-16 10:40:44,328 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:40:44,792 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-16 10:40:45,177 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-16 10:40:45,329 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:40:46,329 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:40:47,330 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-16 10:40:47,370 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2700.36034, max=2700.36034, mean=2700.36034, stddev=0.0, median=2700.36034, p75=2700.36034, p95=2700.36034, p98=2700.36034, p99=2700.36034, p999=2700.36034, mean_rate=0.29051335940005507, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-16 10:40:47,370 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2022-12-16 10:40:47,370 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-16 10:40:47,370 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221216 10:40:47.731" endtime="20221216 10:40:47.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:40:47.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:40:47.732" endtime="20221216 10:40:47.733"/>
</kw>
<status status="PASS" starttime="20221216 10:40:37.540" endtime="20221216 10:40:47.733"/>
</kw>
<msg timestamp="20221216 10:40:47.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:40:37.539" endtime="20221216 10:40:47.735"/>
</kw>
<msg timestamp="20221216 10:40:47.735" level="INFO">${result} = 2022-12-16 10:40:39,858 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:40:40,036 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:40:37.539" endtime="20221216 10:40:47.735"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:40:47.735" endtime="20221216 10:40:47.736"/>
</kw>
<status status="PASS" starttime="20221216 10:40:37.538" endtime="20221216 10:40:47.736"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:40:47.742" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p hVomTwPVaH  2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:40:54.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:40:54.114" level="INFO">${output} = 2022-12-16 10:40:49,498 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:40:49,694 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:40:47.739" endtime="20221216 10:40:54.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:40:54.116" level="INFO">2022-12-16 10:40:49,498 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:40:49,694 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-16 10:40:49,694 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-16 10:40:49,908 [main] INFO freon.BaseFreonGenerator: Executing test with prefix hVomTwPVaH and number-of-tests 1
2022-12-16 10:40:49,997 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:40:51,006 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:40:51,621 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-16 10:40:52,007 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:40:53,007 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-16 10:40:53,754 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=46.099882, max=46.099882, mean=46.099882, stddev=0.0, median=46.099882, p75=46.099882, p95=46.099882, p98=46.099882, p99=46.099882, p999=46.099882, mean_rate=0.9621127910686562, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-16 10:40:53,754 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-12-16 10:40:53,755 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-16 10:40:53,756 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221216 10:40:54.115" endtime="20221216 10:40:54.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:40:54.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:40:54.116" endtime="20221216 10:40:54.117"/>
</kw>
<status status="PASS" starttime="20221216 10:40:47.739" endtime="20221216 10:40:54.117"/>
</kw>
<msg timestamp="20221216 10:40:54.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:40:47.739" endtime="20221216 10:40:54.118"/>
</kw>
<msg timestamp="20221216 10:40:54.118" level="INFO">${result} = 2022-12-16 10:40:49,498 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:40:49,694 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:40:47.738" endtime="20221216 10:40:54.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:40:54.118" endtime="20221216 10:40:54.119"/>
</kw>
<status status="PASS" starttime="20221216 10:40:47.736" endtime="20221216 10:40:54.120"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:40:37.534" endtime="20221216 10:40:54.120"/>
</test>
<doc>Smoketest for one datanode</doc>
<status status="PASS" starttime="20221216 10:40:37.419" endtime="20221216 10:40:54.121"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="47401"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonescripts">ozonescripts</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Pipeline">ozonescripts.Pipeline</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Single Node">ozonescripts.Single Node</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
