<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221216 10:28:40.337" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:22:09.272" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:22:41.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:22:41.984" level="INFO">${output} = 2022-12-16 10:22:11,851 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:22:12,077 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:22:09.268" endtime="20221216 10:22:41.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:22:41.985" level="INFO">2022-12-16 10:22:11,851 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:22:12,077 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-16 10:22:12,077 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-16 10:22:12,356 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-12-16 10:22:12,512 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-16 10:22:13,521 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-16 10:22:13,536 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-16 10:22:13,784 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-16 10:22:14,521 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-16 10:22:15,522 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-16 10:22:15,904 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-16 10:22:16,293 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-16 10:22:16,522 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-16 10:22:17,523 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-16 10:22:18,524 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2022-12-16 10:22:19,526 [Thread-3] INFO freon.ProgressBar: Progress: 7.00 % (7 out of 100)
2022-12-16 10:22:20,528 [Thread-3] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2022-12-16 10:22:21,544 [Thread-3] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2022-12-16 10:22:22,545 [Thread-3] INFO freon.ProgressBar: Progress: 21.00 % (21 out of 100)
2022-12-16 10:22:23,549 [Thread-3] INFO freon.ProgressBar: Progress: 27.00 % (27 out of 100)
2022-12-16 10:22:24,550 [Thread-3] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2022-12-16 10:22:25,551 [Thread-3] INFO freon.ProgressBar: Progress: 40.00 % (40 out of 100)
2022-12-16 10:22:26,552 [Thread-3] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2022-12-16 10:22:27,553 [Thread-3] INFO freon.ProgressBar: Progress: 54.00 % (54 out of 100)
2022-12-16 10:22:28,554 [Thread-3] INFO freon.ProgressBar: Progress: 61.00 % (61 out of 100)
2022-12-16 10:22:29,554 [Thread-3] INFO freon.ProgressBar: Progress: 63.00 % (63 out of 100)
2022-12-16 10:22:30,555 [Thread-3] INFO freon.ProgressBar: Progress: 63.00 % (63 out of 100)
2022-12-16 10:22:31,556 [Thread-3] INFO freon.ProgressBar: Progress: 65.00 % (65 out of 100)
2022-12-16 10:22:32,556 [Thread-3] INFO freon.ProgressBar: Progress: 66.00 % (66 out of 100)
2022-12-16 10:22:33,557 [Thread-3] INFO freon.ProgressBar: Progress: 66.00 % (66 out of 100)
2022-12-16 10:22:34,561 [Thread-3] INFO freon.ProgressBar: Progress: 69.00 % (69 out of 100)
2022-12-16 10:22:35,561 [Thread-3] INFO freon.ProgressBar: Progress: 77.00 % (77 out of 100)
2022-12-16 10:22:36,563 [Thread-3] INFO freon.ProgressBar: Progress: 85.00 % (85 out of 100)
2022-12-16 10:22:37,563 [Thread-3] INFO freon.ProgressBar: Progress: 88.00 % (88 out of 100)
2022-12-16 10:22:38,564 [Thread-3] INFO freon.ProgressBar: Progress: 88.00 % (88 out of 100)
2022-12-16 10:22:39,564 [Thread-3] INFO freon.ProgressBar: Progress: 90.00 % (90 out of 100)
2022-12-16 10:22:40,565 [Thread-3] INFO freon.ProgressBar: Progress: 98.00 % (98 out of 100)
2022-12-16 10:22:41,565 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-12-16 10:22:41,618 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=93.487884, max=3866.423421, mean=265.4378863834688, stddev=554.3951737926652, median=140.642787, p75=179.599003, p95=609.257824, p98=2620.662256, p99=2624.45107, p999=3866.423421, mean_rate=3.6143859092697483, m1=1.7396627109276164, m5=1.0181531499297714, m15=0.8745942390624198, rate_unit=events/second, duration_unit=milliseconds
2022-12-16 10:22:41,619 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 29
2022-12-16 10:22:41,619 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-16 10:22:41,619 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221216 10:22:41.985" endtime="20221216 10:22:41.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:22:41.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:22:41.986" endtime="20221216 10:22:41.986"/>
</kw>
<status status="PASS" starttime="20221216 10:22:09.267" endtime="20221216 10:22:41.987"/>
</kw>
<msg timestamp="20221216 10:22:41.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:22:09.267" endtime="20221216 10:22:41.989"/>
</kw>
<msg timestamp="20221216 10:22:41.989" level="INFO">${result} = 2022-12-16 10:22:11,851 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:22:12,077 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:22:09.266" endtime="20221216 10:22:41.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:22:41.990" endtime="20221216 10:22:41.990"/>
</kw>
<status status="PASS" starttime="20221216 10:22:09.264" endtime="20221216 10:22:41.991"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221216 10:22:41.991" level="INFO">${random} = 01030</msg>
<status status="PASS" starttime="20221216 10:22:41.991" endtime="20221216 10:22:41.991"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221216 10:22:41.993" level="INFO">${volume_name} = 01030-volume-for-prepare</msg>
<status status="PASS" starttime="20221216 10:22:41.992" endtime="20221216 10:22:41.993"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221216 10:22:41.996" level="INFO">${bucket_name} = 01030-bucket-for-prepare</msg>
<status status="PASS" starttime="20221216 10:22:41.994" endtime="20221216 10:22:41.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:22:42.000" level="INFO">Running command 'ozone sh volume create /01030-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:22:45.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:22:45.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221216 10:22:41.997" endtime="20221216 10:22:45.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:22:45.808" level="INFO"/>
<status status="PASS" starttime="20221216 10:22:45.807" endtime="20221216 10:22:45.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:22:45.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:22:45.808" endtime="20221216 10:22:45.809"/>
</kw>
<status status="PASS" starttime="20221216 10:22:41.997" endtime="20221216 10:22:45.810"/>
</kw>
<msg timestamp="20221216 10:22:45.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:22:41.996" endtime="20221216 10:22:45.810"/>
</kw>
<status status="PASS" starttime="20221216 10:22:41.996" endtime="20221216 10:22:45.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:22:45.815" level="INFO">Running command 'ozone sh bucket create /01030-volume-for-prepare/01030-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:22:49.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:22:49.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221216 10:22:45.813" endtime="20221216 10:22:49.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:22:49.333" level="INFO"/>
<status status="PASS" starttime="20221216 10:22:49.332" endtime="20221216 10:22:49.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:22:49.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:22:49.333" endtime="20221216 10:22:49.334"/>
</kw>
<status status="PASS" starttime="20221216 10:22:45.812" endtime="20221216 10:22:49.334"/>
</kw>
<msg timestamp="20221216 10:22:49.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:22:45.812" endtime="20221216 10:22:49.335"/>
</kw>
<status status="PASS" starttime="20221216 10:22:45.811" endtime="20221216 10:22:49.335"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:22:49.340" level="INFO">Running command 'ozone sh key put /01030-volume-for-prepare/01030-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:22:55.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:22:55.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221216 10:22:49.337" endtime="20221216 10:22:55.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:22:55.677" level="INFO"/>
<status status="PASS" starttime="20221216 10:22:55.676" endtime="20221216 10:22:55.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:22:55.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:22:55.677" endtime="20221216 10:22:55.677"/>
</kw>
<status status="PASS" starttime="20221216 10:22:49.337" endtime="20221216 10:22:55.678"/>
</kw>
<msg timestamp="20221216 10:22:55.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:22:49.336" endtime="20221216 10:22:55.679"/>
</kw>
<status status="PASS" starttime="20221216 10:22:49.336" endtime="20221216 10:22:55.679"/>
</kw>
<status status="PASS" starttime="20221216 10:22:09.263" endtime="20221216 10:22:55.679"/>
</kw>
<test id="s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:22:55.687" endtime="20221216 10:22:55.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:22:55.692" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:27:55.681" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20221216 10:22:55.689" endtime="20221216 10:27:55.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221216 10:27:55.682" endtime="20221216 10:27:55.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221216 10:27:55.682" endtime="20221216 10:27:55.682"/>
</kw>
<status status="FAIL" starttime="20221216 10:22:55.688" endtime="20221216 10:27:55.683"/>
</kw>
<msg timestamp="20221216 10:27:55.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20221216 10:22:55.688" endtime="20221216 10:27:55.683"/>
</kw>
<status status="FAIL" starttime="20221216 10:22:55.687" endtime="20221216 10:27:55.684"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20221216 10:27:55.684" endtime="20221216 10:27:55.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20221216 10:22:55.680" endtime="20221216 10:27:55.685">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:27:55.688" endtime="20221216 10:27:55.688"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:27:55.693" level="INFO">Running command 'ozone sh key info /01030-volume-for-prepare/01030-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:27:59.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:27:59.359" level="INFO">${output} = {
  "volumeName" : "01030-volume-for-prepare",
  "bucketName" : "01030-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-12-16T10:22:52.885Z",
  "modificati...</msg>
<status status="PASS" starttime="20221216 10:27:55.690" endtime="20221216 10:27:59.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:27:59.361" level="INFO">{
  "volumeName" : "01030-volume-for-prepare",
  "bucketName" : "01030-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-12-16T10:22:52.885Z",
  "modificationTime" : "2022-12-16T10:22:55.292Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 109611004723200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221216 10:27:59.360" endtime="20221216 10:27:59.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:27:59.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:27:59.361" endtime="20221216 10:27:59.362"/>
</kw>
<status status="PASS" starttime="20221216 10:27:55.689" endtime="20221216 10:27:59.362"/>
</kw>
<msg timestamp="20221216 10:27:59.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:27:55.689" endtime="20221216 10:27:59.363"/>
</kw>
<msg timestamp="20221216 10:27:59.363" level="INFO">${result} = {
  "volumeName" : "01030-volume-for-prepare",
  "bucketName" : "01030-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-12-16T10:22:52.885Z",
  "modificati...</msg>
<status status="PASS" starttime="20221216 10:27:55.688" endtime="20221216 10:27:59.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:27:59.364" endtime="20221216 10:27:59.364"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:27:55.687" endtime="20221216 10:27:59.365"/>
</test>
<test id="s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:27:59.367" endtime="20221216 10:27:59.368"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:27:59.372" level="INFO">Running command 'ozone sh key put /01030-volume-for-prepare/01030-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:28:02.554" level="INFO">${rc} = 255</msg>
<msg timestamp="20221216 10:28:02.554" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221216 10:27:59.369" endtime="20221216 10:28:02.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:28:02.555" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221216 10:28:02.554" endtime="20221216 10:28:02.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:28:02.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:28:02.556" endtime="20221216 10:28:02.556"/>
</kw>
<msg timestamp="20221216 10:28:02.557" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221216 10:27:59.368" endtime="20221216 10:28:02.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:28:02.557" endtime="20221216 10:28:02.557"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:28:02.561" level="INFO">Running command 'ozone sh key info /01030-volume-for-prepare/01030-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:28:05.495" level="INFO">${rc} = 255</msg>
<msg timestamp="20221216 10:28:05.495" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221216 10:28:02.558" endtime="20221216 10:28:05.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:28:05.497" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221216 10:28:05.496" endtime="20221216 10:28:05.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:28:05.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:28:05.497" endtime="20221216 10:28:05.498"/>
</kw>
<status status="PASS" starttime="20221216 10:28:02.557" endtime="20221216 10:28:05.498"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:27:59.366" endtime="20221216 10:28:05.499"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="FAIL" starttime="20221216 10:22:09.169" endtime="20221216 10:28:05.501"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
