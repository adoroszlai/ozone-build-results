<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221216 10:36:46.586" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:31:31.198" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:31:36.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:31:36.541" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221216 10:31:31.193" endtime="20221216 10:31:36.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:31:36.543" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221216 10:31:36.542" endtime="20221216 10:31:36.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:31:36.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:31:36.543" endtime="20221216 10:31:36.552"/>
</kw>
<status status="PASS" starttime="20221216 10:31:31.192" endtime="20221216 10:31:36.552"/>
</kw>
<msg timestamp="20221216 10:31:36.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:31:31.192" endtime="20221216 10:31:36.554"/>
</kw>
<msg timestamp="20221216 10:31:36.563" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221216 10:31:31.191" endtime="20221216 10:31:36.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:31:36.563" endtime="20221216 10:31:36.564"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:31:31.190" endtime="20221216 10:31:36.564"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:31:36.577" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:31:41.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:31:41.404" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20221216 10:31:36.572" endtime="20221216 10:31:41.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:31:41.405" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221216 10:31:41.405" endtime="20221216 10:31:41.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:31:41.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:31:41.406" endtime="20221216 10:31:41.407"/>
</kw>
<status status="PASS" starttime="20221216 10:31:36.570" endtime="20221216 10:31:41.407"/>
</kw>
<msg timestamp="20221216 10:31:41.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:31:36.569" endtime="20221216 10:31:41.408"/>
</kw>
<msg timestamp="20221216 10:31:41.408" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20221216 10:31:36.568" endtime="20221216 10:31:41.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:31:41.408" endtime="20221216 10:31:41.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:31:41.410" endtime="20221216 10:31:41.410"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:31:36.567" endtime="20221216 10:31:41.411"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:31:41.423" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:31:46.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:31:46.330" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221216 10:31:41.417" endtime="20221216 10:31:46.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:31:46.331" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221216 10:31:46.330" endtime="20221216 10:31:46.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:31:46.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:31:46.331" endtime="20221216 10:31:46.332"/>
</kw>
<status status="PASS" starttime="20221216 10:31:41.416" endtime="20221216 10:31:46.333"/>
</kw>
<msg timestamp="20221216 10:31:46.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:31:41.415" endtime="20221216 10:31:46.333"/>
</kw>
<msg timestamp="20221216 10:31:46.334" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221216 10:31:41.414" endtime="20221216 10:31:46.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:31:46.334" endtime="20221216 10:31:46.334"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:31:41.413" endtime="20221216 10:31:46.335"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:31:46.341" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:31:50.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:31:50.823" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221216 10:31:46.338" endtime="20221216 10:31:50.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:31:50.824" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221216 10:31:50.824" endtime="20221216 10:31:50.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:31:50.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:31:50.825" endtime="20221216 10:31:50.826"/>
</kw>
<status status="PASS" starttime="20221216 10:31:46.337" endtime="20221216 10:31:50.826"/>
</kw>
<msg timestamp="20221216 10:31:50.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:31:46.337" endtime="20221216 10:31:50.827"/>
</kw>
<msg timestamp="20221216 10:31:50.827" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" starttime="20221216 10:31:46.337" endtime="20221216 10:31:50.827"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:31:50.828" endtime="20221216 10:31:50.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:31:46.336" endtime="20221216 10:31:50.829"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221216 10:31:31.107" endtime="20221216 10:31:50.830"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:31:57.532" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:11.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:11.364" level="INFO">${output} = 2022-12-16 10:32:00,307 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:32:00,476 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:31:57.528" endtime="20221216 10:32:11.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:11.366" level="INFO">2022-12-16 10:32:00,307 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:32:00,476 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-16 10:32:00,476 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-16 10:32:00,724 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-12-16 10:32:00,830 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-16 10:32:01,834 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-16 10:32:02,736 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-16 10:32:02,797 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-16 10:32:02,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-16 10:32:03,778 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-16 10:32:03,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-16 10:32:04,234 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-16 10:32:04,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-16 10:32:05,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-16 10:32:06,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-16 10:32:07,837 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-16 10:32:08,837 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-16 10:32:09,838 [Thread-5] INFO freon.ProgressBar: Progress: 40.00 % (4 out of 10)
2022-12-16 10:32:10,839 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-12-16 10:32:10,999 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=100.512337, max=6057.738904, mean=754.8681296815212, stddev=1750.3315218517866, median=153.403467, p75=320.046592, p95=6057.738904, p98=6057.738904, p99=6057.738904, p999=6057.738904, mean_rate=1.2250647924793734, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-16 10:32:11,000 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2022-12-16 10:32:11,001 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-16 10:32:11,001 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221216 10:32:11.365" endtime="20221216 10:32:11.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:11.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:11.366" endtime="20221216 10:32:11.367"/>
</kw>
<status status="PASS" starttime="20221216 10:31:57.527" endtime="20221216 10:32:11.367"/>
</kw>
<msg timestamp="20221216 10:32:11.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:31:57.526" endtime="20221216 10:32:11.369"/>
</kw>
<msg timestamp="20221216 10:32:11.370" level="INFO">${result} = 2022-12-16 10:32:00,307 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:32:00,476 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:31:57.525" endtime="20221216 10:32:11.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:32:11.370" endtime="20221216 10:32:11.370"/>
</kw>
<status status="PASS" starttime="20221216 10:31:57.523" endtime="20221216 10:32:11.371"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:32:11.372" endtime="20221216 10:32:11.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:32:11.377" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:11.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:11.734" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:11.375" endtime="20221216 10:32:11.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:11.736" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:11.735" endtime="20221216 10:32:11.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:11.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:11.736" endtime="20221216 10:32:11.737"/>
</kw>
<status status="PASS" starttime="20221216 10:32:11.374" endtime="20221216 10:32:11.738"/>
</kw>
<msg timestamp="20221216 10:32:11.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:32:11.374" endtime="20221216 10:32:11.741"/>
</kw>
<msg timestamp="20221216 10:32:11.741" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:11.373" endtime="20221216 10:32:11.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:32:11.741" endtime="20221216 10:32:11.742"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:32:11.747" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:11.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:11.788" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:11.744" endtime="20221216 10:32:11.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:11.790" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:11.789" endtime="20221216 10:32:11.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:11.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:11.790" endtime="20221216 10:32:11.791"/>
</kw>
<status status="PASS" starttime="20221216 10:32:11.743" endtime="20221216 10:32:11.791"/>
</kw>
<msg timestamp="20221216 10:32:11.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:32:11.743" endtime="20221216 10:32:11.792"/>
</kw>
<msg timestamp="20221216 10:32:11.792" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:11.742" endtime="20221216 10:32:11.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221216 10:32:11.793" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221216 10:32:11.792" endtime="20221216 10:32:11.793"/>
</kw>
<status status="FAIL" starttime="20221216 10:32:11.371" endtime="20221216 10:32:11.794"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:32:21.796" endtime="20221216 10:32:21.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:32:21.802" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:21.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:21.822" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:21.798" endtime="20221216 10:32:21.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:21.823" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:21.822" endtime="20221216 10:32:21.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:21.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:21.824" endtime="20221216 10:32:21.825"/>
</kw>
<status status="PASS" starttime="20221216 10:32:21.797" endtime="20221216 10:32:21.825"/>
</kw>
<msg timestamp="20221216 10:32:21.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:32:21.797" endtime="20221216 10:32:21.826"/>
</kw>
<msg timestamp="20221216 10:32:21.826" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:21.796" endtime="20221216 10:32:21.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:32:21.827" endtime="20221216 10:32:21.827"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:32:21.831" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:21.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:21.852" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:21.829" endtime="20221216 10:32:21.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:21.853" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:21.852" endtime="20221216 10:32:21.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:21.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:21.853" endtime="20221216 10:32:21.854"/>
</kw>
<status status="PASS" starttime="20221216 10:32:21.828" endtime="20221216 10:32:21.855"/>
</kw>
<msg timestamp="20221216 10:32:21.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:32:21.828" endtime="20221216 10:32:21.855"/>
</kw>
<msg timestamp="20221216 10:32:21.856" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:21.827" endtime="20221216 10:32:21.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221216 10:32:21.857" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221216 10:32:21.856" endtime="20221216 10:32:21.857"/>
</kw>
<status status="FAIL" starttime="20221216 10:32:21.795" endtime="20221216 10:32:21.858"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:32:31.860" endtime="20221216 10:32:31.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:32:31.866" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:31.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:31.891" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:31.863" endtime="20221216 10:32:31.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:31.893" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:31.892" endtime="20221216 10:32:31.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:31.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:31.893" endtime="20221216 10:32:31.894"/>
</kw>
<status status="PASS" starttime="20221216 10:32:31.862" endtime="20221216 10:32:31.894"/>
</kw>
<msg timestamp="20221216 10:32:31.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:32:31.862" endtime="20221216 10:32:31.895"/>
</kw>
<msg timestamp="20221216 10:32:31.895" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:31.861" endtime="20221216 10:32:31.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:32:31.896" endtime="20221216 10:32:31.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:32:31.900" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:31.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:31.917" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:31.898" endtime="20221216 10:32:31.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:31.919" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:31.918" endtime="20221216 10:32:31.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:31.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:31.919" endtime="20221216 10:32:31.920"/>
</kw>
<status status="PASS" starttime="20221216 10:32:31.898" endtime="20221216 10:32:31.920"/>
</kw>
<msg timestamp="20221216 10:32:31.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:32:31.897" endtime="20221216 10:32:31.921"/>
</kw>
<msg timestamp="20221216 10:32:31.922" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:31.896" endtime="20221216 10:32:31.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221216 10:32:31.923" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221216 10:32:31.922" endtime="20221216 10:32:31.923"/>
</kw>
<status status="FAIL" starttime="20221216 10:32:31.859" endtime="20221216 10:32:31.925"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:32:41.926" endtime="20221216 10:32:41.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:32:41.932" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:41.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:41.957" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:41.929" endtime="20221216 10:32:41.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:41.958" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:41.957" endtime="20221216 10:32:41.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:41.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:41.959" endtime="20221216 10:32:41.960"/>
</kw>
<status status="PASS" starttime="20221216 10:32:41.928" endtime="20221216 10:32:41.960"/>
</kw>
<msg timestamp="20221216 10:32:41.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:32:41.928" endtime="20221216 10:32:41.961"/>
</kw>
<msg timestamp="20221216 10:32:41.962" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:41.927" endtime="20221216 10:32:41.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:32:41.962" endtime="20221216 10:32:41.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:32:41.967" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:41.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:41.987" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:41.965" endtime="20221216 10:32:41.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:41.989" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:41.988" endtime="20221216 10:32:41.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:41.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:41.989" endtime="20221216 10:32:41.991"/>
</kw>
<status status="PASS" starttime="20221216 10:32:41.964" endtime="20221216 10:32:41.991"/>
</kw>
<msg timestamp="20221216 10:32:41.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:32:41.964" endtime="20221216 10:32:41.992"/>
</kw>
<msg timestamp="20221216 10:32:41.993" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:41.963" endtime="20221216 10:32:41.993"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221216 10:32:41.994" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221216 10:32:41.993" endtime="20221216 10:32:41.995"/>
</kw>
<status status="FAIL" starttime="20221216 10:32:41.925" endtime="20221216 10:32:41.996"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:32:51.998" endtime="20221216 10:32:51.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:32:52.003" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:52.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:52.025" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:52.000" endtime="20221216 10:32:52.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:52.027" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:52.025" endtime="20221216 10:32:52.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:52.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:52.027" endtime="20221216 10:32:52.028"/>
</kw>
<status status="PASS" starttime="20221216 10:32:51.999" endtime="20221216 10:32:52.029"/>
</kw>
<msg timestamp="20221216 10:32:52.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:32:51.999" endtime="20221216 10:32:52.029"/>
</kw>
<msg timestamp="20221216 10:32:52.030" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221216 10:32:51.998" endtime="20221216 10:32:52.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:32:52.030" endtime="20221216 10:32:52.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:32:52.037" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:32:52.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:32:52.059" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:52.033" endtime="20221216 10:32:52.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:32:52.061" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:52.060" endtime="20221216 10:32:52.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:32:52.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:32:52.062" endtime="20221216 10:32:52.064"/>
</kw>
<status status="PASS" starttime="20221216 10:32:52.032" endtime="20221216 10:32:52.066"/>
</kw>
<msg timestamp="20221216 10:32:52.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:32:52.032" endtime="20221216 10:32:52.067"/>
</kw>
<msg timestamp="20221216 10:32:52.067" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221216 10:32:52.031" endtime="20221216 10:32:52.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221216 10:32:52.068" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221216 10:32:52.067" endtime="20221216 10:32:52.069"/>
</kw>
<status status="FAIL" starttime="20221216 10:32:51.997" endtime="20221216 10:32:52.070"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:02.072" endtime="20221216 10:33:02.073"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.079" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.105" level="INFO">${output} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":3},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20221216 10:33:02.075" endtime="20221216 10:33:02.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.107" level="INFO">{"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":3},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20221216 10:33:02.105" endtime="20221216 10:33:02.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.107" endtime="20221216 10:33:02.109"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.074" endtime="20221216 10:33:02.109"/>
</kw>
<msg timestamp="20221216 10:33:02.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.074" endtime="20221216 10:33:02.110"/>
</kw>
<msg timestamp="20221216 10:33:02.111" level="INFO">${result} = {"data":{"totalCount":4,"containers":[{"ContainerID":1,"NumberOfKeys":3},{"ContainerID":2,"NumberOfKeys":3},{"ContainerID":3,"NumberOfKeys":3},{"ContainerID":4,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20221216 10:33:02.073" endtime="20221216 10:33:02.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.111" endtime="20221216 10:33:02.112"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.118" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.138" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221216 10:33:02.115" endtime="20221216 10:33:02.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.139" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221216 10:33:02.138" endtime="20221216 10:33:02.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.139" endtime="20221216 10:33:02.141"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.114" endtime="20221216 10:33:02.142"/>
</kw>
<msg timestamp="20221216 10:33:02.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.113" endtime="20221216 10:33:02.143"/>
</kw>
<msg timestamp="20221216 10:33:02.144" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221216 10:33:02.112" endtime="20221216 10:33:02.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.144" endtime="20221216 10:33:02.145"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.070" endtime="20221216 10:33:02.145"/>
</kw>
<status status="PASS" starttime="20221216 10:32:11.371" endtime="20221216 10:33:02.145"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:31:57.522" endtime="20221216 10:33:02.146"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.153" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.209" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"0965a341-4ec6-4180-a28b-17ae3dc92d3c","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671186...</msg>
<status status="PASS" starttime="20221216 10:33:02.150" endtime="20221216 10:33:02.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.210" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"0965a341-4ec6-4180-a28b-17ae3dc92d3c","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671186759602,"storageReport":{"capacity":89297309696,"used":18436,"remaining":28101005312},"pipelines":[{"pipelineID":"a651a12b-b3f7-4bdd-93f5-b46ba422edfb","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"7af6fae0-e9c0-4192-bfc1-bb18daa6c845","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"2fc2fab2-0b13-4f1b-b5b3-511415db77fb","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1671186542309,"revision":"0650ad9b08f5d73a8bbb42659d57e64ff32c6c1b","buildDate":"2022-12-16T10:01Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"fa6941fd-0ebe-4e67-8b8f-88b153eb9f1a","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671186759613,"storageReport":{"capacity":89297309696,"used":22532,"remaining":28101005312},"pipelines":[{"pipelineID":"aea50cda-b3d1-4102-bdde-dc151be6cea5","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"a651a12b-b3f7-4bdd-93f5-b46ba422edfb","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"7af6fae0-e9c0-4192-bfc1-bb18daa6c845","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1671186542242,"revision":"0650ad9b08f5d73a8bbb42659d57e64ff32c6c1b","buildDate":"2022-12-16T10:01Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"f67638d7-f193-4154-b78b-91388bcaeaed","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671186759236,"storageReport":{"capacity":89297309696,"used":10246,"remaining":28101005312},"pipelines":[{"pipelineID":"1c518224-3996-4336-bd56-223a9668c111","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"18eea297-cd7a-4146-95b7-a801b528cdef","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"13ef1bb4-041d-493e-83f8-c22e922a5d0a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1671186544170,"revision":"0650ad9b08f5d73a8bbb42659d57e64ff32c6c1b","buildDate":"2022-12-16T10:01Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"e9b9baf8-9afa-46d0-8a51-5475b8b84b54","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671186759649,"storageReport":{"capacity":89297309696,"used":18436,"remaining":28101005312},"pipelines":[{"pipelineID":"a651a12b-b3f7-4bdd-93f5-b46ba422edfb","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"d0a4b1b7-b704-40e0-9795-23b7d81b90b7","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"7af6fae0-e9c0-4192-bfc1-bb18daa6c845","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1671186544159,"revision":"0650ad9b08f5d73a8bbb42659d57e64ff32c6c1b","buildDate":"2022-12-16T10:01Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"a09a3b35-32c8-4707-a027-d439428b867d","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671186759320,"storageReport":{"capacity":89297309696,"used":10246,"remaining":28101005312},"pipelines":[{"pipelineID":"bca17182-b8a8-4af0-bb88-4440de9e2b2c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"18eea297-cd7a-4146-95b7-a801b528cdef","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"13ef1bb4-041d-493e-83f8-c22e922a5d0a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1671186542134,"revision":"0650ad9b08f5d73a8bbb42659d57e64ff32c6c1b","buildDate":"2022-12-16T10:01Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"dbd8c16e-8b13-44c2-a4c7-b452d62f2016","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671186759305,"storageReport":{"capacity":89297309696,"used":10246,"remaining":28101005312},"pipelines":[{"pipelineID":"18eea297-cd7a-4146-95b7-a801b528cdef","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"0d8dfb34-6687-441e-b4ae-8b2b0f46d1b7","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"13ef1bb4-041d-493e-83f8-c22e922a5d0a","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1671186543753,"revision":"0650ad9b08f5d73a8bbb42659d57e64ff32c6c1b","buildDate":"2022-12-16T10:01Z","layoutVersion":4,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20221216 10:33:02.209" endtime="20221216 10:33:02.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.211" endtime="20221216 10:33:02.212"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.150" endtime="20221216 10:33:02.213"/>
</kw>
<msg timestamp="20221216 10:33:02.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.149" endtime="20221216 10:33:02.214"/>
</kw>
<msg timestamp="20221216 10:33:02.214" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"0965a341-4ec6-4180-a28b-17ae3dc92d3c","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671186...</msg>
<status status="PASS" starttime="20221216 10:33:02.148" endtime="20221216 10:33:02.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.215" endtime="20221216 10:33:02.215"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.215" endtime="20221216 10:33:02.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.216" endtime="20221216 10:33:02.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.217" endtime="20221216 10:33:02.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.224" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.262" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"1c518224-3996-4336-bd56-223a9668c111","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5...</msg>
<status status="PASS" starttime="20221216 10:33:02.220" endtime="20221216 10:33:02.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.264" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"1c518224-3996-4336-bd56-223a9668c111","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":178049,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"bca17182-b8a8-4af0-bb88-4440de9e2b2c","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177756,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"aea50cda-b3d1-4102-bdde-dc151be6cea5","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":178297,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"18eea297-cd7a-4146-95b7-a801b528cdef","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177834,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"0d8dfb34-6687-441e-b4ae-8b2b0f46d1b7","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177732,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"a651a12b-b3f7-4bdd-93f5-b46ba422edfb","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177955,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"d0a4b1b7-b704-40e0-9795-23b7d81b90b7","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":177841,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"7af6fae0-e9c0-4192-bfc1-bb18daa6c845","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":178427,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"13ef1bb4-041d-493e-83f8-c22e922a5d0a","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":178128,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"2fc2fab2-0b13-4f1b-b5b3-511415db77fb","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":181379,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20221216 10:33:02.263" endtime="20221216 10:33:02.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.264" endtime="20221216 10:33:02.265"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.220" endtime="20221216 10:33:02.265"/>
</kw>
<msg timestamp="20221216 10:33:02.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.219" endtime="20221216 10:33:02.267"/>
</kw>
<msg timestamp="20221216 10:33:02.267" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"1c518224-3996-4336-bd56-223a9668c111","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5...</msg>
<status status="PASS" starttime="20221216 10:33:02.218" endtime="20221216 10:33:02.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.268" endtime="20221216 10:33:02.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.269" endtime="20221216 10:33:02.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.270" endtime="20221216 10:33:02.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.271" endtime="20221216 10:33:02.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.272" endtime="20221216 10:33:02.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.273" endtime="20221216 10:33:02.274"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.279" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.434" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":168606031872},"containers":4,"missingContainers":0,"openContainers":4,"volumes...</msg>
<status status="PASS" starttime="20221216 10:33:02.276" endtime="20221216 10:33:02.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.435" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":168606031872},"containers":4,"missingContainers":0,"openContainers":4,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221216 10:33:02.435" endtime="20221216 10:33:02.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.436" endtime="20221216 10:33:02.436"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.275" endtime="20221216 10:33:02.437"/>
</kw>
<msg timestamp="20221216 10:33:02.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.275" endtime="20221216 10:33:02.442"/>
</kw>
<msg timestamp="20221216 10:33:02.442" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":90142,"remaining":168606031872},"containers":4,"missingContainers":0,"openContainers":4,"volumes...</msg>
<status status="PASS" starttime="20221216 10:33:02.274" endtime="20221216 10:33:02.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.443" endtime="20221216 10:33:02.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.452" endtime="20221216 10:33:02.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.452" endtime="20221216 10:33:02.453"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.470" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.511" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"fa6941fd-0ebe-4e67-8b8f-88b153eb9f1a","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1671186669772,"lastSeenTime":1671186669772,"last...</msg>
<status status="PASS" starttime="20221216 10:33:02.460" endtime="20221216 10:33:02.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.513" level="INFO">[{"containerId":1,"datanodeUuid":"fa6941fd-0ebe-4e67-8b8f-88b153eb9f1a","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1671186669772,"lastSeenTime":1671186669772,"lastBcsId":0},{"containerId":1,"datanodeUuid":"0965a341-4ec6-4180-a28b-17ae3dc92d3c","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1671186670762,"lastSeenTime":1671186670762,"lastBcsId":0},{"containerId":1,"datanodeUuid":"e9b9baf8-9afa-46d0-8a51-5475b8b84b54","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1671186669998,"lastSeenTime":1671186669998,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221216 10:33:02.512" endtime="20221216 10:33:02.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.513" endtime="20221216 10:33:02.514"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.459" endtime="20221216 10:33:02.514"/>
</kw>
<msg timestamp="20221216 10:33:02.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.454" endtime="20221216 10:33:02.515"/>
</kw>
<msg timestamp="20221216 10:33:02.515" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"fa6941fd-0ebe-4e67-8b8f-88b153eb9f1a","datanodeHost":"ozone-topology_datanode_4_1.ozone-topology_net","firstSeenTime":1671186669772,"lastSeenTime":1671186669772,"last...</msg>
<status status="PASS" starttime="20221216 10:33:02.453" endtime="20221216 10:33:02.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.516" endtime="20221216 10:33:02.516"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:02.147" endtime="20221216 10:33:02.517"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:02.520" endtime="20221216 10:33:02.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.526" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.553" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221216 10:33:02.523" endtime="20221216 10:33:02.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.554" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0c211d12.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.d339ecb4.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.ee728dce.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.553" endtime="20221216 10:33:02.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.555" endtime="20221216 10:33:02.555"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.522" endtime="20221216 10:33:02.556"/>
</kw>
<msg timestamp="20221216 10:33:02.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.522" endtime="20221216 10:33:02.557"/>
</kw>
<msg timestamp="20221216 10:33:02.558" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221216 10:33:02.521" endtime="20221216 10:33:02.558"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.558" endtime="20221216 10:33:02.559"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:02.518" endtime="20221216 10:33:02.559"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.568" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.579" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:02.564" endtime="20221216 10:33:02.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.580" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:02.579" endtime="20221216 10:33:02.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.580" endtime="20221216 10:33:02.581"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.563" endtime="20221216 10:33:02.581"/>
</kw>
<msg timestamp="20221216 10:33:02.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.563" endtime="20221216 10:33:02.582"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.562" endtime="20221216 10:33:02.583"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.591" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.608" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.588" endtime="20221216 10:33:02.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.609" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:02.608" endtime="20221216 10:33:02.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.609" endtime="20221216 10:33:02.610"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.584" endtime="20221216 10:33:02.611"/>
</kw>
<msg timestamp="20221216 10:33:02.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.584" endtime="20221216 10:33:02.611"/>
</kw>
<msg timestamp="20221216 10:33:02.612" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.583" endtime="20221216 10:33:02.612"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:02.612" endtime="20221216 10:33:02.613"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:02.612" endtime="20221216 10:33:02.613"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.613" endtime="20221216 10:33:02.613"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.613" endtime="20221216 10:33:02.614"/>
</branch>
<status status="PASS" starttime="20221216 10:33:02.612" endtime="20221216 10:33:02.614"/>
</if>
<status status="PASS" starttime="20221216 10:33:02.583" endtime="20221216 10:33:02.614"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:02.615" endtime="20221216 10:33:02.615"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.614" endtime="20221216 10:33:02.615"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.620" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.633" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.618" endtime="20221216 10:33:02.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.635" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:02.634" endtime="20221216 10:33:02.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.635" endtime="20221216 10:33:02.636"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.617" endtime="20221216 10:33:02.636"/>
</kw>
<msg timestamp="20221216 10:33:02.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.617" endtime="20221216 10:33:02.637"/>
</kw>
<msg timestamp="20221216 10:33:02.637" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.616" endtime="20221216 10:33:02.638"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:02.638" endtime="20221216 10:33:02.638"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:02.638" endtime="20221216 10:33:02.638"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.639" endtime="20221216 10:33:02.639"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.638" endtime="20221216 10:33:02.639"/>
</branch>
<status status="PASS" starttime="20221216 10:33:02.638" endtime="20221216 10:33:02.639"/>
</if>
<status status="PASS" starttime="20221216 10:33:02.615" endtime="20221216 10:33:02.639"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:02.561" endtime="20221216 10:33:02.640"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.646" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.650" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:02.644" endtime="20221216 10:33:02.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.652" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:02.651" endtime="20221216 10:33:02.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.652" endtime="20221216 10:33:02.653"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.643" endtime="20221216 10:33:02.653"/>
</kw>
<msg timestamp="20221216 10:33:02.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.643" endtime="20221216 10:33:02.654"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.642" endtime="20221216 10:33:02.654"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.659" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.684" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.657" endtime="20221216 10:33:02.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.686" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:02.685" endtime="20221216 10:33:02.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.686" endtime="20221216 10:33:02.687"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.656" endtime="20221216 10:33:02.687"/>
</kw>
<msg timestamp="20221216 10:33:02.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.656" endtime="20221216 10:33:02.688"/>
</kw>
<msg timestamp="20221216 10:33:02.689" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.655" endtime="20221216 10:33:02.689"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:02.689" endtime="20221216 10:33:02.690"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:02.689" endtime="20221216 10:33:02.690"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.690" endtime="20221216 10:33:02.690"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.690" endtime="20221216 10:33:02.690"/>
</branch>
<status status="PASS" starttime="20221216 10:33:02.689" endtime="20221216 10:33:02.691"/>
</if>
<status status="PASS" starttime="20221216 10:33:02.654" endtime="20221216 10:33:02.691"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:02.691" endtime="20221216 10:33:02.692"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.691" endtime="20221216 10:33:02.692"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.697" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.731" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.695" endtime="20221216 10:33:02.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.732" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:02.731" endtime="20221216 10:33:02.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.733" endtime="20221216 10:33:02.734"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.694" endtime="20221216 10:33:02.735"/>
</kw>
<msg timestamp="20221216 10:33:02.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.694" endtime="20221216 10:33:02.735"/>
</kw>
<msg timestamp="20221216 10:33:02.735" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.693" endtime="20221216 10:33:02.736"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:02.736" endtime="20221216 10:33:02.736"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:02.736" endtime="20221216 10:33:02.737"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.737" endtime="20221216 10:33:02.737"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.737" endtime="20221216 10:33:02.737"/>
</branch>
<status status="PASS" starttime="20221216 10:33:02.736" endtime="20221216 10:33:02.737"/>
</if>
<status status="PASS" starttime="20221216 10:33:02.692" endtime="20221216 10:33:02.738"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:02.738" endtime="20221216 10:33:02.739"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.738" endtime="20221216 10:33:02.739"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.745" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.766" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.742" endtime="20221216 10:33:02.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.768" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:02.767" endtime="20221216 10:33:02.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.768" endtime="20221216 10:33:02.769"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.741" endtime="20221216 10:33:02.770"/>
</kw>
<msg timestamp="20221216 10:33:02.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.741" endtime="20221216 10:33:02.770"/>
</kw>
<msg timestamp="20221216 10:33:02.771" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.740" endtime="20221216 10:33:02.771"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:02.771" endtime="20221216 10:33:02.772"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:02.771" endtime="20221216 10:33:02.772"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.772" endtime="20221216 10:33:02.772"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.772" endtime="20221216 10:33:02.773"/>
</branch>
<status status="PASS" starttime="20221216 10:33:02.771" endtime="20221216 10:33:02.773"/>
</if>
<status status="PASS" starttime="20221216 10:33:02.739" endtime="20221216 10:33:02.773"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:02.774" endtime="20221216 10:33:02.774"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.773" endtime="20221216 10:33:02.774"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.783" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.809" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.778" endtime="20221216 10:33:02.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.811" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:02.810" endtime="20221216 10:33:02.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.812" endtime="20221216 10:33:02.813"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.776" endtime="20221216 10:33:02.814"/>
</kw>
<msg timestamp="20221216 10:33:02.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.776" endtime="20221216 10:33:02.815"/>
</kw>
<msg timestamp="20221216 10:33:02.816" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.775" endtime="20221216 10:33:02.816"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:02.817" endtime="20221216 10:33:02.817"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:02.816" endtime="20221216 10:33:02.817"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.817" endtime="20221216 10:33:02.818"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.817" endtime="20221216 10:33:02.818"/>
</branch>
<status status="PASS" starttime="20221216 10:33:02.816" endtime="20221216 10:33:02.818"/>
</if>
<status status="PASS" starttime="20221216 10:33:02.775" endtime="20221216 10:33:02.818"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:02.641" endtime="20221216 10:33:02.818"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.826" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.831" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:02.824" endtime="20221216 10:33:02.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.832" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:02.832" endtime="20221216 10:33:02.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.833" endtime="20221216 10:33:02.834"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.823" endtime="20221216 10:33:02.834"/>
</kw>
<msg timestamp="20221216 10:33:02.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.822" endtime="20221216 10:33:02.835"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.822" endtime="20221216 10:33:02.835"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.841" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.888" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.838" endtime="20221216 10:33:02.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.889" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:02.888" endtime="20221216 10:33:02.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.890" endtime="20221216 10:33:02.891"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.837" endtime="20221216 10:33:02.891"/>
</kw>
<msg timestamp="20221216 10:33:02.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.837" endtime="20221216 10:33:02.892"/>
</kw>
<msg timestamp="20221216 10:33:02.893" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.836" endtime="20221216 10:33:02.893"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:02.894" endtime="20221216 10:33:02.894"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:02.893" endtime="20221216 10:33:02.894"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.903" endtime="20221216 10:33:02.904"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.894" endtime="20221216 10:33:02.904"/>
</branch>
<status status="PASS" starttime="20221216 10:33:02.893" endtime="20221216 10:33:02.904"/>
</if>
<status status="PASS" starttime="20221216 10:33:02.836" endtime="20221216 10:33:02.904"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:02.905" endtime="20221216 10:33:02.910"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.904" endtime="20221216 10:33:02.911"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.918" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.941" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.915" endtime="20221216 10:33:02.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.943" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:02.941" endtime="20221216 10:33:02.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.943" endtime="20221216 10:33:02.945"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.913" endtime="20221216 10:33:02.945"/>
</kw>
<msg timestamp="20221216 10:33:02.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.913" endtime="20221216 10:33:02.946"/>
</kw>
<msg timestamp="20221216 10:33:02.947" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.912" endtime="20221216 10:33:02.947"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:02.947" endtime="20221216 10:33:02.948"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:02.947" endtime="20221216 10:33:02.948"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.948" endtime="20221216 10:33:02.949"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.948" endtime="20221216 10:33:02.949"/>
</branch>
<status status="PASS" starttime="20221216 10:33:02.947" endtime="20221216 10:33:02.949"/>
</if>
<status status="PASS" starttime="20221216 10:33:02.911" endtime="20221216 10:33:02.949"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:02.950" endtime="20221216 10:33:02.951"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.949" endtime="20221216 10:33:02.951"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.957" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:02.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:02.978" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.954" endtime="20221216 10:33:02.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:02.981" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:02.979" endtime="20221216 10:33:02.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:02.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:02.981" endtime="20221216 10:33:02.983"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.953" endtime="20221216 10:33:02.983"/>
</kw>
<msg timestamp="20221216 10:33:02.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.953" endtime="20221216 10:33:02.985"/>
</kw>
<msg timestamp="20221216 10:33:02.985" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.952" endtime="20221216 10:33:02.985"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:02.986" endtime="20221216 10:33:02.986"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:02.986" endtime="20221216 10:33:02.986"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:02.986" endtime="20221216 10:33:02.987"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.986" endtime="20221216 10:33:02.987"/>
</branch>
<status status="PASS" starttime="20221216 10:33:02.985" endtime="20221216 10:33:02.987"/>
</if>
<status status="PASS" starttime="20221216 10:33:02.951" endtime="20221216 10:33:02.988"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:02.989" endtime="20221216 10:33:02.989"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.988" endtime="20221216 10:33:02.989"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:02.995" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:03.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:03.014" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.992" endtime="20221216 10:33:03.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:03.016" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:03.015" endtime="20221216 10:33:03.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:03.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:03.016" endtime="20221216 10:33:03.017"/>
</kw>
<status status="PASS" starttime="20221216 10:33:02.991" endtime="20221216 10:33:03.018"/>
</kw>
<msg timestamp="20221216 10:33:03.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:02.991" endtime="20221216 10:33:03.019"/>
</kw>
<msg timestamp="20221216 10:33:03.019" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:02.990" endtime="20221216 10:33:03.019"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:03.020" endtime="20221216 10:33:03.020"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:03.020" endtime="20221216 10:33:03.020"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:03.020" endtime="20221216 10:33:03.021"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.020" endtime="20221216 10:33:03.021"/>
</branch>
<status status="PASS" starttime="20221216 10:33:03.019" endtime="20221216 10:33:03.021"/>
</if>
<status status="PASS" starttime="20221216 10:33:02.989" endtime="20221216 10:33:03.021"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:02.821" endtime="20221216 10:33:03.022"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:03.029" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:03.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:03.033" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:03.026" endtime="20221216 10:33:03.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:03.035" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:03.034" endtime="20221216 10:33:03.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:03.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:03.035" endtime="20221216 10:33:03.036"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.025" endtime="20221216 10:33:03.037"/>
</kw>
<msg timestamp="20221216 10:33:03.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:03.025" endtime="20221216 10:33:03.038"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.024" endtime="20221216 10:33:03.040"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:03.049" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:03.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:03.094" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:03.046" endtime="20221216 10:33:03.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:03.096" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:03.095" endtime="20221216 10:33:03.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:03.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:03.097" endtime="20221216 10:33:03.102"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.045" endtime="20221216 10:33:03.104"/>
</kw>
<msg timestamp="20221216 10:33:03.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:03.045" endtime="20221216 10:33:03.105"/>
</kw>
<msg timestamp="20221216 10:33:03.106" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:03.044" endtime="20221216 10:33:03.106"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:03.106" endtime="20221216 10:33:03.107"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:03.106" endtime="20221216 10:33:03.107"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:03.107" endtime="20221216 10:33:03.117"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.107" endtime="20221216 10:33:03.117"/>
</branch>
<status status="PASS" starttime="20221216 10:33:03.106" endtime="20221216 10:33:03.117"/>
</if>
<status status="PASS" starttime="20221216 10:33:03.042" endtime="20221216 10:33:03.118"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:03.118" endtime="20221216 10:33:03.119"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.118" endtime="20221216 10:33:03.119"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:03.125" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:03.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:03.151" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:03.122" endtime="20221216 10:33:03.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:03.153" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:03.152" endtime="20221216 10:33:03.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:03.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:03.153" endtime="20221216 10:33:03.153"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.121" endtime="20221216 10:33:03.154"/>
</kw>
<msg timestamp="20221216 10:33:03.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:03.121" endtime="20221216 10:33:03.155"/>
</kw>
<msg timestamp="20221216 10:33:03.155" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:03.120" endtime="20221216 10:33:03.155"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:03.156" endtime="20221216 10:33:03.156"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:03.156" endtime="20221216 10:33:03.156"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:03.156" endtime="20221216 10:33:03.158"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.156" endtime="20221216 10:33:03.158"/>
</branch>
<status status="PASS" starttime="20221216 10:33:03.155" endtime="20221216 10:33:03.158"/>
</if>
<status status="PASS" starttime="20221216 10:33:03.119" endtime="20221216 10:33:03.159"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:03.023" endtime="20221216 10:33:03.159"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221216 10:31:57.463" endtime="20221216 10:33:03.161"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:03.183" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:03.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:03.188" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:03.181" endtime="20221216 10:33:03.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:03.190" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:03.189" endtime="20221216 10:33:03.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:03.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:03.190" endtime="20221216 10:33:03.191"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.180" endtime="20221216 10:33:03.191"/>
</kw>
<msg timestamp="20221216 10:33:03.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:03.180" endtime="20221216 10:33:03.192"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.179" endtime="20221216 10:33:03.192"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:03.193" endtime="20221216 10:33:03.194"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.192" endtime="20221216 10:33:03.194"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221216 10:33:03.195" level="INFO">${random} = ohwzw</msg>
<status status="PASS" starttime="20221216 10:33:03.195" endtime="20221216 10:33:03.195"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221216 10:33:03.196" level="INFO">${VOLUME} = vol-ohwzw</msg>
<status status="PASS" starttime="20221216 10:33:03.196" endtime="20221216 10:33:03.196"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:03.201" level="INFO">Running command 'ozone sh volume create /vol-ohwzw 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:08.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:08.247" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:03.199" endtime="20221216 10:33:08.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:08.249" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:08.247" endtime="20221216 10:33:08.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:08.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:08.249" endtime="20221216 10:33:08.250"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.198" endtime="20221216 10:33:08.250"/>
</kw>
<msg timestamp="20221216 10:33:08.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:03.197" endtime="20221216 10:33:08.252"/>
</kw>
<msg timestamp="20221216 10:33:08.252" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:03.196" endtime="20221216 10:33:08.252"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:08.252" endtime="20221216 10:33:08.253"/>
</kw>
<status status="PASS" starttime="20221216 10:33:03.194" endtime="20221216 10:33:08.253"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:03.178" endtime="20221216 10:33:08.253"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221216 10:33:08.263" level="INFO">${random} = czsvg</msg>
<status status="PASS" starttime="20221216 10:33:08.261" endtime="20221216 10:33:08.263"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221216 10:33:08.264" level="INFO">${BUCKET} = buc-czsvg</msg>
<status status="PASS" starttime="20221216 10:33:08.263" endtime="20221216 10:33:08.264"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:08.270" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-ohwzw/buc-czsvg 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:14.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:14.110" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:08.266" endtime="20221216 10:33:14.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:14.112" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:14.111" endtime="20221216 10:33:14.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:14.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:14.112" endtime="20221216 10:33:14.113"/>
</kw>
<status status="PASS" starttime="20221216 10:33:08.265" endtime="20221216 10:33:14.113"/>
</kw>
<msg timestamp="20221216 10:33:14.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:08.265" endtime="20221216 10:33:14.114"/>
</kw>
<msg timestamp="20221216 10:33:14.114" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:08.264" endtime="20221216 10:33:14.115"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:14.115" endtime="20221216 10:33:14.115"/>
</kw>
<status status="PASS" starttime="20221216 10:33:08.260" endtime="20221216 10:33:14.115"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:08.259" endtime="20221216 10:33:14.116"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:14.125" level="INFO">Running command 'ozone sh key put /vol-ohwzw/buc-czsvg/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:22.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:22.433" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:14.123" endtime="20221216 10:33:22.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:22.434" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:22.433" endtime="20221216 10:33:22.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:22.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:22.434" endtime="20221216 10:33:22.435"/>
</kw>
<status status="PASS" starttime="20221216 10:33:14.122" endtime="20221216 10:33:22.436"/>
</kw>
<msg timestamp="20221216 10:33:22.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:14.120" endtime="20221216 10:33:22.436"/>
</kw>
<msg timestamp="20221216 10:33:22.437" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:14.119" endtime="20221216 10:33:22.437"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:22.437" endtime="20221216 10:33:22.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:22.442" level="INFO">Running command 'ozone sh key put /vol-ohwzw/buc-czsvg/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.489" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:22.440" endtime="20221216 10:33:31.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.491" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:31.490" endtime="20221216 10:33:31.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.491" endtime="20221216 10:33:31.493"/>
</kw>
<status status="PASS" starttime="20221216 10:33:22.439" endtime="20221216 10:33:31.493"/>
</kw>
<msg timestamp="20221216 10:33:31.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:22.439" endtime="20221216 10:33:31.494"/>
</kw>
<msg timestamp="20221216 10:33:31.495" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:33:22.438" endtime="20221216 10:33:31.495"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.495" endtime="20221216 10:33:31.496"/>
</kw>
<status status="PASS" starttime="20221216 10:33:14.119" endtime="20221216 10:33:31.496"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:14.118" endtime="20221216 10:33:31.497"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.505" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.510" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:31.502" endtime="20221216 10:33:31.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.511" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:31.511" endtime="20221216 10:33:31.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.512" endtime="20221216 10:33:31.512"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.501" endtime="20221216 10:33:31.513"/>
</kw>
<msg timestamp="20221216 10:33:31.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.501" endtime="20221216 10:33:31.514"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.500" endtime="20221216 10:33:31.514"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.519" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.557" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.517" endtime="20221216 10:33:31.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.560" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.558" endtime="20221216 10:33:31.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.561" endtime="20221216 10:33:31.561"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.516" endtime="20221216 10:33:31.562"/>
</kw>
<msg timestamp="20221216 10:33:31.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.516" endtime="20221216 10:33:31.563"/>
</kw>
<msg timestamp="20221216 10:33:31.563" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.515" endtime="20221216 10:33:31.563"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.564" endtime="20221216 10:33:31.564"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.563" endtime="20221216 10:33:31.564"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.564" endtime="20221216 10:33:31.564"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.564" endtime="20221216 10:33:31.565"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.563" endtime="20221216 10:33:31.565"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.514" endtime="20221216 10:33:31.565"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:31.566" endtime="20221216 10:33:31.566"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.565" endtime="20221216 10:33:31.566"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.572" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.590" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.569" endtime="20221216 10:33:31.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.592" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.591" endtime="20221216 10:33:31.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.592" endtime="20221216 10:33:31.594"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.568" endtime="20221216 10:33:31.594"/>
</kw>
<msg timestamp="20221216 10:33:31.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.568" endtime="20221216 10:33:31.595"/>
</kw>
<msg timestamp="20221216 10:33:31.596" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.567" endtime="20221216 10:33:31.596"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.596" endtime="20221216 10:33:31.596"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.596" endtime="20221216 10:33:31.596"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.597" endtime="20221216 10:33:31.597"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.597" endtime="20221216 10:33:31.597"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.596" endtime="20221216 10:33:31.597"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.566" endtime="20221216 10:33:31.598"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:31.598" endtime="20221216 10:33:31.599"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.598" endtime="20221216 10:33:31.599"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.605" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.644" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.602" endtime="20221216 10:33:31.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.646" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.645" endtime="20221216 10:33:31.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.647" endtime="20221216 10:33:31.648"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.601" endtime="20221216 10:33:31.648"/>
</kw>
<msg timestamp="20221216 10:33:31.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.601" endtime="20221216 10:33:31.649"/>
</kw>
<msg timestamp="20221216 10:33:31.650" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.600" endtime="20221216 10:33:31.650"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.651" endtime="20221216 10:33:31.651"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.651" endtime="20221216 10:33:31.651"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.651" endtime="20221216 10:33:31.652"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.651" endtime="20221216 10:33:31.652"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.650" endtime="20221216 10:33:31.652"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.599" endtime="20221216 10:33:31.653"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:31.653" endtime="20221216 10:33:31.654"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.653" endtime="20221216 10:33:31.654"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.661" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.681" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.658" endtime="20221216 10:33:31.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.683" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.682" endtime="20221216 10:33:31.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.684" endtime="20221216 10:33:31.685"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.657" endtime="20221216 10:33:31.685"/>
</kw>
<msg timestamp="20221216 10:33:31.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.656" endtime="20221216 10:33:31.687"/>
</kw>
<msg timestamp="20221216 10:33:31.687" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.655" endtime="20221216 10:33:31.687"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.688" endtime="20221216 10:33:31.688"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.688" endtime="20221216 10:33:31.688"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.688" endtime="20221216 10:33:31.689"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.688" endtime="20221216 10:33:31.689"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.687" endtime="20221216 10:33:31.689"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.654" endtime="20221216 10:33:31.689"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.500" endtime="20221216 10:33:31.689"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:31.498" endtime="20221216 10:33:31.689"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.697" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.702" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:31.694" endtime="20221216 10:33:31.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.703" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:31.702" endtime="20221216 10:33:31.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.704" endtime="20221216 10:33:31.704"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.693" endtime="20221216 10:33:31.705"/>
</kw>
<msg timestamp="20221216 10:33:31.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.693" endtime="20221216 10:33:31.706"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.693" endtime="20221216 10:33:31.706"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.711" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.741" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.709" endtime="20221216 10:33:31.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.742" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.741" endtime="20221216 10:33:31.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.743" endtime="20221216 10:33:31.744"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.708" endtime="20221216 10:33:31.744"/>
</kw>
<msg timestamp="20221216 10:33:31.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.708" endtime="20221216 10:33:31.745"/>
</kw>
<msg timestamp="20221216 10:33:31.745" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.707" endtime="20221216 10:33:31.745"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.746" endtime="20221216 10:33:31.746"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.746" endtime="20221216 10:33:31.746"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.746" endtime="20221216 10:33:31.747"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.746" endtime="20221216 10:33:31.747"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.745" endtime="20221216 10:33:31.747"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.706" endtime="20221216 10:33:31.747"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:31.748" endtime="20221216 10:33:31.749"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.748" endtime="20221216 10:33:31.749"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.755" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.775" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.752" endtime="20221216 10:33:31.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.777" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.776" endtime="20221216 10:33:31.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.777" endtime="20221216 10:33:31.779"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.751" endtime="20221216 10:33:31.780"/>
</kw>
<msg timestamp="20221216 10:33:31.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.751" endtime="20221216 10:33:31.781"/>
</kw>
<msg timestamp="20221216 10:33:31.781" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.750" endtime="20221216 10:33:31.782"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.782" endtime="20221216 10:33:31.782"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.782" endtime="20221216 10:33:31.782"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.783" endtime="20221216 10:33:31.783"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.782" endtime="20221216 10:33:31.783"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.782" endtime="20221216 10:33:31.784"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.749" endtime="20221216 10:33:31.784"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:31.785" endtime="20221216 10:33:31.785"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.784" endtime="20221216 10:33:31.785"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.791" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.815" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.788" endtime="20221216 10:33:31.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.816" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.815" endtime="20221216 10:33:31.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.817" endtime="20221216 10:33:31.818"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.788" endtime="20221216 10:33:31.818"/>
</kw>
<msg timestamp="20221216 10:33:31.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.787" endtime="20221216 10:33:31.819"/>
</kw>
<msg timestamp="20221216 10:33:31.820" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.786" endtime="20221216 10:33:31.820"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.821" endtime="20221216 10:33:31.821"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.820" endtime="20221216 10:33:31.821"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.821" endtime="20221216 10:33:31.822"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.821" endtime="20221216 10:33:31.822"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.820" endtime="20221216 10:33:31.822"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.785" endtime="20221216 10:33:31.822"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:31.823" endtime="20221216 10:33:31.824"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.823" endtime="20221216 10:33:31.824"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.830" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.849" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.827" endtime="20221216 10:33:31.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.852" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.850" endtime="20221216 10:33:31.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.852" endtime="20221216 10:33:31.853"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.826" endtime="20221216 10:33:31.854"/>
</kw>
<msg timestamp="20221216 10:33:31.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.826" endtime="20221216 10:33:31.855"/>
</kw>
<msg timestamp="20221216 10:33:31.855" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.825" endtime="20221216 10:33:31.855"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.856" endtime="20221216 10:33:31.856"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.856" endtime="20221216 10:33:31.856"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.856" endtime="20221216 10:33:31.857"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.856" endtime="20221216 10:33:31.857"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.855" endtime="20221216 10:33:31.857"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.824" endtime="20221216 10:33:31.857"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.692" endtime="20221216 10:33:31.858"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:31.691" endtime="20221216 10:33:31.858"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.866" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.871" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:31.863" endtime="20221216 10:33:31.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.873" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:31.872" endtime="20221216 10:33:31.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.873" endtime="20221216 10:33:31.880"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.862" endtime="20221216 10:33:31.880"/>
</kw>
<msg timestamp="20221216 10:33:31.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.862" endtime="20221216 10:33:31.881"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.861" endtime="20221216 10:33:31.881"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.887" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.920" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.884" endtime="20221216 10:33:31.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.922" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.921" endtime="20221216 10:33:31.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.922" endtime="20221216 10:33:31.923"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.883" endtime="20221216 10:33:31.924"/>
</kw>
<msg timestamp="20221216 10:33:31.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.883" endtime="20221216 10:33:31.925"/>
</kw>
<msg timestamp="20221216 10:33:31.925" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.882" endtime="20221216 10:33:31.925"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.926" endtime="20221216 10:33:31.926"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.925" endtime="20221216 10:33:31.926"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.926" endtime="20221216 10:33:31.926"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.926" endtime="20221216 10:33:31.927"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.925" endtime="20221216 10:33:31.927"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.881" endtime="20221216 10:33:31.927"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:31.928" endtime="20221216 10:33:31.928"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.927" endtime="20221216 10:33:31.929"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.934" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.955" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.932" endtime="20221216 10:33:31.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.956" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.955" endtime="20221216 10:33:31.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.957" endtime="20221216 10:33:31.958"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.931" endtime="20221216 10:33:31.958"/>
</kw>
<msg timestamp="20221216 10:33:31.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.930" endtime="20221216 10:33:31.959"/>
</kw>
<msg timestamp="20221216 10:33:31.959" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.929" endtime="20221216 10:33:31.959"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.960" endtime="20221216 10:33:31.960"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.960" endtime="20221216 10:33:31.960"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.961" endtime="20221216 10:33:31.961"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.961" endtime="20221216 10:33:31.961"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.960" endtime="20221216 10:33:31.961"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.929" endtime="20221216 10:33:31.962"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:31.963" endtime="20221216 10:33:31.963"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.962" endtime="20221216 10:33:31.963"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:31.969" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:31.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:31.991" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.965" endtime="20221216 10:33:31.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:31.992" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:31.991" endtime="20221216 10:33:31.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:31.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:31.993" endtime="20221216 10:33:31.993"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.965" endtime="20221216 10:33:31.994"/>
</kw>
<msg timestamp="20221216 10:33:31.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:31.964" endtime="20221216 10:33:31.995"/>
</kw>
<msg timestamp="20221216 10:33:31.995" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:31.964" endtime="20221216 10:33:31.995"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:31.996" endtime="20221216 10:33:31.996"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:31.996" endtime="20221216 10:33:31.996"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:31.997" endtime="20221216 10:33:31.997"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.996" endtime="20221216 10:33:31.997"/>
</branch>
<status status="PASS" starttime="20221216 10:33:31.995" endtime="20221216 10:33:31.997"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.963" endtime="20221216 10:33:31.997"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:31.998" endtime="20221216 10:33:31.999"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.998" endtime="20221216 10:33:31.999"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:32.004" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:32.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:32.021" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:32.002" endtime="20221216 10:33:32.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:32.024" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:32.023" endtime="20221216 10:33:32.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:32.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:32.024" endtime="20221216 10:33:32.025"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.001" endtime="20221216 10:33:32.025"/>
</kw>
<msg timestamp="20221216 10:33:32.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:32.001" endtime="20221216 10:33:32.026"/>
</kw>
<msg timestamp="20221216 10:33:32.026" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:32.000" endtime="20221216 10:33:32.027"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:32.027" endtime="20221216 10:33:32.027"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:32.027" endtime="20221216 10:33:32.027"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:32.028" endtime="20221216 10:33:32.028"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.027" endtime="20221216 10:33:32.028"/>
</branch>
<status status="PASS" starttime="20221216 10:33:32.027" endtime="20221216 10:33:32.028"/>
</if>
<status status="PASS" starttime="20221216 10:33:31.999" endtime="20221216 10:33:32.028"/>
</kw>
<status status="PASS" starttime="20221216 10:33:31.861" endtime="20221216 10:33:32.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:31.860" endtime="20221216 10:33:32.029"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:32.036" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:32.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:32.041" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:32.034" endtime="20221216 10:33:32.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:32.042" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221216 10:33:32.041" endtime="20221216 10:33:32.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:32.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:32.043" endtime="20221216 10:33:32.044"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.033" endtime="20221216 10:33:32.044"/>
</kw>
<msg timestamp="20221216 10:33:32.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:32.033" endtime="20221216 10:33:32.045"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.032" endtime="20221216 10:33:32.045"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:32.051" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:32.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:32.084" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:32.048" endtime="20221216 10:33:32.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:32.085" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:32.084" endtime="20221216 10:33:32.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:32.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:32.085" endtime="20221216 10:33:32.086"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.047" endtime="20221216 10:33:32.088"/>
</kw>
<msg timestamp="20221216 10:33:32.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:32.047" endtime="20221216 10:33:32.089"/>
</kw>
<msg timestamp="20221216 10:33:32.089" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:32.046" endtime="20221216 10:33:32.089"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:32.090" endtime="20221216 10:33:32.090"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:32.090" endtime="20221216 10:33:32.090"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:32.090" endtime="20221216 10:33:32.091"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.090" endtime="20221216 10:33:32.091"/>
</branch>
<status status="PASS" starttime="20221216 10:33:32.089" endtime="20221216 10:33:32.091"/>
</if>
<status status="PASS" starttime="20221216 10:33:32.045" endtime="20221216 10:33:32.091"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:32.092" endtime="20221216 10:33:32.093"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.092" endtime="20221216 10:33:32.093"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:32.099" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:32.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:32.118" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:32.096" endtime="20221216 10:33:32.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:32.120" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:32.119" endtime="20221216 10:33:32.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:32.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:32.120" endtime="20221216 10:33:32.121"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.095" endtime="20221216 10:33:32.121"/>
</kw>
<msg timestamp="20221216 10:33:32.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:32.095" endtime="20221216 10:33:32.122"/>
</kw>
<msg timestamp="20221216 10:33:32.124" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:32.094" endtime="20221216 10:33:32.124"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:32.125" endtime="20221216 10:33:32.125"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:32.124" endtime="20221216 10:33:32.125"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:32.125" endtime="20221216 10:33:32.125"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.125" endtime="20221216 10:33:32.125"/>
</branch>
<status status="PASS" starttime="20221216 10:33:32.124" endtime="20221216 10:33:32.126"/>
</if>
<status status="PASS" starttime="20221216 10:33:32.093" endtime="20221216 10:33:32.126"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:32.126" endtime="20221216 10:33:32.127"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.126" endtime="20221216 10:33:32.127"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:32.132" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:32.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:32.155" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:32.129" endtime="20221216 10:33:32.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:32.157" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:32.156" endtime="20221216 10:33:32.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:32.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:32.157" endtime="20221216 10:33:32.158"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.129" endtime="20221216 10:33:32.159"/>
</kw>
<msg timestamp="20221216 10:33:32.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:32.129" endtime="20221216 10:33:32.160"/>
</kw>
<msg timestamp="20221216 10:33:32.161" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:32.128" endtime="20221216 10:33:32.161"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:32.162" endtime="20221216 10:33:32.162"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:32.162" endtime="20221216 10:33:32.162"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:32.163" endtime="20221216 10:33:32.163"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.162" endtime="20221216 10:33:32.164"/>
</branch>
<status status="PASS" starttime="20221216 10:33:32.161" endtime="20221216 10:33:32.164"/>
</if>
<status status="PASS" starttime="20221216 10:33:32.127" endtime="20221216 10:33:32.164"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:33:32.165" endtime="20221216 10:33:32.165"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.164" endtime="20221216 10:33:32.166"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:32.172" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:32.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:32.191" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221216 10:33:32.170" endtime="20221216 10:33:32.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:32.192" level="INFO">200</msg>
<status status="PASS" starttime="20221216 10:33:32.191" endtime="20221216 10:33:32.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:32.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:32.192" endtime="20221216 10:33:32.193"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.169" endtime="20221216 10:33:32.194"/>
</kw>
<msg timestamp="20221216 10:33:32.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:32.168" endtime="20221216 10:33:32.195"/>
</kw>
<msg timestamp="20221216 10:33:32.195" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221216 10:33:32.167" endtime="20221216 10:33:32.195"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:32.196" endtime="20221216 10:33:32.196"/>
</kw>
<status status="NOT RUN" starttime="20221216 10:33:32.195" endtime="20221216 10:33:32.196"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:32.196" endtime="20221216 10:33:32.197"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.196" endtime="20221216 10:33:32.197"/>
</branch>
<status status="PASS" starttime="20221216 10:33:32.195" endtime="20221216 10:33:32.197"/>
</if>
<status status="PASS" starttime="20221216 10:33:32.167" endtime="20221216 10:33:32.197"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.031" endtime="20221216 10:33:32.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:32.030" endtime="20221216 10:33:32.197"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:32.206" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:32.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:32.224" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:33:32.203" endtime="20221216 10:33:32.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:32.225" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:33:32.224" endtime="20221216 10:33:32.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:32.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:32.225" endtime="20221216 10:33:32.226"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.203" endtime="20221216 10:33:32.226"/>
</kw>
<msg timestamp="20221216 10:33:32.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:32.202" endtime="20221216 10:33:32.227"/>
</kw>
<msg timestamp="20221216 10:33:32.228" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:33:32.202" endtime="20221216 10:33:32.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:32.228" endtime="20221216 10:33:32.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:33:32.229" endtime="20221216 10:33:32.229"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.201" endtime="20221216 10:33:32.229"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.200" endtime="20221216 10:33:32.229"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.200" endtime="20221216 10:33:32.230"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:32.199" endtime="20221216 10:33:32.230"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:32.239" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ohwzw 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:32.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:32.257" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221216 10:33:32.236" endtime="20221216 10:33:32.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:32.261" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221216 10:33:32.258" endtime="20221216 10:33:32.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:32.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:32.262" endtime="20221216 10:33:32.262"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.235" endtime="20221216 10:33:32.263"/>
</kw>
<msg timestamp="20221216 10:33:32.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:32.235" endtime="20221216 10:33:32.264"/>
</kw>
<msg timestamp="20221216 10:33:32.264" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221216 10:33:32.234" endtime="20221216 10:33:32.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221216 10:33:32.266" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221216 10:33:32.265" endtime="20221216 10:33:32.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:32.267" endtime="20221216 10:33:32.267"/>
</kw>
<status status="FAIL" starttime="20221216 10:33:32.234" endtime="20221216 10:33:32.268"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:42.275" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ohwzw 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:42.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:42.295" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221216 10:33:42.272" endtime="20221216 10:33:42.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:42.297" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221216 10:33:42.296" endtime="20221216 10:33:42.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:42.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:42.297" endtime="20221216 10:33:42.298"/>
</kw>
<status status="PASS" starttime="20221216 10:33:42.271" endtime="20221216 10:33:42.300"/>
</kw>
<msg timestamp="20221216 10:33:42.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:42.271" endtime="20221216 10:33:42.301"/>
</kw>
<msg timestamp="20221216 10:33:42.301" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221216 10:33:42.270" endtime="20221216 10:33:42.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221216 10:33:42.303" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221216 10:33:42.301" endtime="20221216 10:33:42.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:42.303" endtime="20221216 10:33:42.303"/>
</kw>
<status status="FAIL" starttime="20221216 10:33:42.269" endtime="20221216 10:33:42.304"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:33:52.311" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ohwzw 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:33:52.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:33:52.335" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221216 10:33:52.308" endtime="20221216 10:33:52.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:33:52.336" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221216 10:33:52.335" endtime="20221216 10:33:52.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:33:52.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:33:52.337" endtime="20221216 10:33:52.338"/>
</kw>
<status status="PASS" starttime="20221216 10:33:52.307" endtime="20221216 10:33:52.338"/>
</kw>
<msg timestamp="20221216 10:33:52.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:33:52.307" endtime="20221216 10:33:52.339"/>
</kw>
<msg timestamp="20221216 10:33:52.339" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221216 10:33:52.306" endtime="20221216 10:33:52.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221216 10:33:52.341" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221216 10:33:52.340" endtime="20221216 10:33:52.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221216 10:33:52.342" endtime="20221216 10:33:52.342"/>
</kw>
<status status="FAIL" starttime="20221216 10:33:52.305" endtime="20221216 10:33:52.343"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:02.351" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ohwzw 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:02.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:02.386" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.347" endtime="20221216 10:34:02.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:02.387" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.386" endtime="20221216 10:34:02.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:02.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:02.388" endtime="20221216 10:34:02.388"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.347" endtime="20221216 10:34:02.389"/>
</kw>
<msg timestamp="20221216 10:34:02.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:02.346" endtime="20221216 10:34:02.390"/>
</kw>
<msg timestamp="20221216 10:34:02.390" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.345" endtime="20221216 10:34:02.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.392" endtime="20221216 10:34:02.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.392" endtime="20221216 10:34:02.393"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.343" endtime="20221216 10:34:02.393"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.233" endtime="20221216 10:34:02.393"/>
</kw>
<status status="PASS" starttime="20221216 10:33:32.232" endtime="20221216 10:34:02.394"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:33:32.231" endtime="20221216 10:34:02.394"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:02.405" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ohwzw/buc-czsvg 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:02.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:02.424" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.402" endtime="20221216 10:34:02.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:02.426" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.425" endtime="20221216 10:34:02.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:02.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:02.426" endtime="20221216 10:34:02.427"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.401" endtime="20221216 10:34:02.428"/>
</kw>
<msg timestamp="20221216 10:34:02.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:02.401" endtime="20221216 10:34:02.430"/>
</kw>
<msg timestamp="20221216 10:34:02.430" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.400" endtime="20221216 10:34:02.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.430" endtime="20221216 10:34:02.431"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.431" endtime="20221216 10:34:02.431"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.399" endtime="20221216 10:34:02.432"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.399" endtime="20221216 10:34:02.432"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.398" endtime="20221216 10:34:02.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:34:02.396" endtime="20221216 10:34:02.432"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:02.443" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ohwzw/buc-czsvg/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:02.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:02.464" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.440" endtime="20221216 10:34:02.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:02.466" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.464" endtime="20221216 10:34:02.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:02.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:02.466" endtime="20221216 10:34:02.467"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.439" endtime="20221216 10:34:02.467"/>
</kw>
<msg timestamp="20221216 10:34:02.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:02.439" endtime="20221216 10:34:02.468"/>
</kw>
<msg timestamp="20221216 10:34:02.469" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.438" endtime="20221216 10:34:02.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.469" endtime="20221216 10:34:02.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.470" endtime="20221216 10:34:02.471"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.437" endtime="20221216 10:34:02.471"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.437" endtime="20221216 10:34:02.471"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.435" endtime="20221216 10:34:02.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:34:02.434" endtime="20221216 10:34:02.472"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:34:02.474" endtime="20221216 10:34:02.475"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:02.483" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ohwzw/buc-czsvg/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:02.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:02.505" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.479" endtime="20221216 10:34:02.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:02.507" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.506" endtime="20221216 10:34:02.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:02.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:02.507" endtime="20221216 10:34:02.508"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.479" endtime="20221216 10:34:02.508"/>
</kw>
<msg timestamp="20221216 10:34:02.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:02.478" endtime="20221216 10:34:02.509"/>
</kw>
<msg timestamp="20221216 10:34:02.510" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.478" endtime="20221216 10:34:02.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.510" endtime="20221216 10:34:02.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.511" endtime="20221216 10:34:02.511"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.477" endtime="20221216 10:34:02.512"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.477" endtime="20221216 10:34:02.512"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.476" endtime="20221216 10:34:02.512"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.475" endtime="20221216 10:34:02.512"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:34:02.473" endtime="20221216 10:34:02.512"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:02.523" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-ohwzw/buc-czsvg&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:02.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:02.543" level="INFO">${output} = {"status":"OK","path":"/vol-ohwzw/buc-czsvg","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ohwzw/buc-czsvg/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221216 10:34:02.520" endtime="20221216 10:34:02.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:02.544" level="INFO">{"status":"OK","path":"/vol-ohwzw/buc-czsvg","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ohwzw/buc-czsvg/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20221216 10:34:02.544" endtime="20221216 10:34:02.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:02.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:02.545" endtime="20221216 10:34:02.545"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.519" endtime="20221216 10:34:02.546"/>
</kw>
<msg timestamp="20221216 10:34:02.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:02.518" endtime="20221216 10:34:02.547"/>
</kw>
<msg timestamp="20221216 10:34:02.547" level="INFO">${result} = {"status":"OK","path":"/vol-ohwzw/buc-czsvg","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ohwzw/buc-czsvg/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221216 10:34:02.518" endtime="20221216 10:34:02.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.548" endtime="20221216 10:34:02.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.548" endtime="20221216 10:34:02.549"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.517" endtime="20221216 10:34:02.549"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.516" endtime="20221216 10:34:02.550"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.515" endtime="20221216 10:34:02.550"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:34:02.514" endtime="20221216 10:34:02.550"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:02.560" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ohwzw 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:02.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:02.577" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.557" endtime="20221216 10:34:02.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:02.579" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.578" endtime="20221216 10:34:02.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:02.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:02.580" endtime="20221216 10:34:02.581"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.556" endtime="20221216 10:34:02.581"/>
</kw>
<msg timestamp="20221216 10:34:02.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:02.556" endtime="20221216 10:34:02.582"/>
</kw>
<msg timestamp="20221216 10:34:02.583" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.555" endtime="20221216 10:34:02.583"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.583" endtime="20221216 10:34:02.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.585" endtime="20221216 10:34:02.585"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.555" endtime="20221216 10:34:02.586"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.554" endtime="20221216 10:34:02.586"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.553" endtime="20221216 10:34:02.586"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:34:02.552" endtime="20221216 10:34:02.587"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:02.603" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ohwzw/buc-czsvg 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:02.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:02.627" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.600" endtime="20221216 10:34:02.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:02.628" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.627" endtime="20221216 10:34:02.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:02.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:02.629" endtime="20221216 10:34:02.630"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.594" endtime="20221216 10:34:02.631"/>
</kw>
<msg timestamp="20221216 10:34:02.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:02.594" endtime="20221216 10:34:02.632"/>
</kw>
<msg timestamp="20221216 10:34:02.632" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.593" endtime="20221216 10:34:02.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.633" endtime="20221216 10:34:02.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.633" endtime="20221216 10:34:02.634"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.592" endtime="20221216 10:34:02.634"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.591" endtime="20221216 10:34:02.634"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.589" endtime="20221216 10:34:02.635"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:34:02.588" endtime="20221216 10:34:02.635"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:02.646" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:02.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:02.680" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.643" endtime="20221216 10:34:02.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:02.682" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.681" endtime="20221216 10:34:02.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:02.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:02.682" endtime="20221216 10:34:02.683"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.642" endtime="20221216 10:34:02.683"/>
</kw>
<msg timestamp="20221216 10:34:02.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:02.642" endtime="20221216 10:34:02.684"/>
</kw>
<msg timestamp="20221216 10:34:02.685" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221216 10:34:02.641" endtime="20221216 10:34:02.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.685" endtime="20221216 10:34:02.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:02.686" endtime="20221216 10:34:02.686"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.640" endtime="20221216 10:34:02.687"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.639" endtime="20221216 10:34:02.687"/>
</kw>
<status status="PASS" starttime="20221216 10:34:02.638" endtime="20221216 10:34:02.687"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:34:02.637" endtime="20221216 10:34:02.693"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20221216 10:33:03.165" endtime="20221216 10:34:02.697"/>
</suite>
<status status="PASS" starttime="20221216 10:31:57.426" endtime="20221216 10:34:02.701"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:09.124" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:14.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:14.383" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:09.120" endtime="20221216 10:34:14.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:14.386" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:14.384" endtime="20221216 10:34:14.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:14.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:14.386" endtime="20221216 10:34:14.387"/>
</kw>
<status status="PASS" starttime="20221216 10:34:09.119" endtime="20221216 10:34:14.387"/>
</kw>
<msg timestamp="20221216 10:34:14.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:09.118" endtime="20221216 10:34:14.389"/>
</kw>
<msg timestamp="20221216 10:34:14.389" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:09.117" endtime="20221216 10:34:14.389"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:14.389" endtime="20221216 10:34:14.390"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:14.396" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:19.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:19.535" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:14.392" endtime="20221216 10:34:19.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:19.537" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:19.535" endtime="20221216 10:34:19.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:19.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:19.537" endtime="20221216 10:34:19.538"/>
</kw>
<status status="PASS" starttime="20221216 10:34:14.391" endtime="20221216 10:34:19.538"/>
</kw>
<msg timestamp="20221216 10:34:19.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:14.391" endtime="20221216 10:34:19.539"/>
</kw>
<msg timestamp="20221216 10:34:19.539" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:14.390" endtime="20221216 10:34:19.539"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:19.539" endtime="20221216 10:34:19.540"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:19.544" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:27.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:27.761" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:19.541" endtime="20221216 10:34:27.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:27.764" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:27.762" endtime="20221216 10:34:27.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:27.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:27.764" endtime="20221216 10:34:27.765"/>
</kw>
<status status="PASS" starttime="20221216 10:34:19.541" endtime="20221216 10:34:27.766"/>
</kw>
<msg timestamp="20221216 10:34:27.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:19.540" endtime="20221216 10:34:27.767"/>
</kw>
<msg timestamp="20221216 10:34:27.767" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:19.540" endtime="20221216 10:34:27.767"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:27.768" endtime="20221216 10:34:27.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:34:09.116" endtime="20221216 10:34:27.769"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221216 10:34:09.046" endtime="20221216 10:34:27.772"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221216 10:34:39.328" level="INFO">${random} = 22604</msg>
<status status="PASS" starttime="20221216 10:34:39.327" endtime="20221216 10:34:39.328"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:34:39.337" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-22604 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:34:47.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:34:47.534" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:39.330" endtime="20221216 10:34:47.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:34:47.536" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:47.535" endtime="20221216 10:34:47.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:34:47.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:34:47.536" endtime="20221216 10:34:47.537"/>
</kw>
<status status="PASS" starttime="20221216 10:34:39.330" endtime="20221216 10:34:47.537"/>
</kw>
<msg timestamp="20221216 10:34:47.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:34:39.329" endtime="20221216 10:34:47.539"/>
</kw>
<msg timestamp="20221216 10:34:47.539" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:34:39.328" endtime="20221216 10:34:47.539"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:34:47.540" endtime="20221216 10:34:47.540"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:34:39.326" endtime="20221216 10:34:47.540"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221216 10:34:39.244" endtime="20221216 10:34:47.542"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221216 10:35:46.962" level="INFO">${random} = 94550</msg>
<status status="PASS" starttime="20221216 10:35:46.962" endtime="20221216 10:35:46.963"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:35:46.969" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-94550 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:36:28.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:36:28.601" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:35:46.964" endtime="20221216 10:36:28.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:36:28.603" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:36:28.602" endtime="20221216 10:36:28.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:36:28.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:36:28.603" endtime="20221216 10:36:28.605"/>
</kw>
<status status="PASS" starttime="20221216 10:35:46.964" endtime="20221216 10:36:28.606"/>
</kw>
<msg timestamp="20221216 10:36:28.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:35:46.963" endtime="20221216 10:36:28.610"/>
</kw>
<msg timestamp="20221216 10:36:28.610" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221216 10:35:46.963" endtime="20221216 10:36:28.611"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:36:28.612" endtime="20221216 10:36:28.612"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:35:46.960" endtime="20221216 10:36:28.615"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221216 10:35:46.893" endtime="20221216 10:36:28.617"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:30:59.927" endtime="20221216 10:30:59.928"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:30:59.935" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:31:00.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:31:00.138" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 16 Dec 2022 10:31:00 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 16 Dec 2022 10:01:24 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221216 10:30:59.930" endtime="20221216 10:31:00.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:31:00.140" level="INFO">HTTP/1.1 200 OK
Date: Fri, 16 Dec 2022 10:31:00 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 16 Dec 2022 10:01:24 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221216 10:31:00.139" endtime="20221216 10:31:00.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:31:00.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:31:00.140" endtime="20221216 10:31:00.141"/>
</kw>
<status status="PASS" starttime="20221216 10:30:59.929" endtime="20221216 10:31:00.141"/>
</kw>
<msg timestamp="20221216 10:31:00.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:30:59.929" endtime="20221216 10:31:00.143"/>
</kw>
<msg timestamp="20221216 10:31:00.143" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 16 Dec 2022 10:31:00 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 16 Dec 2022 10:01:24 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221216 10:30:59.928" endtime="20221216 10:31:00.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:31:00.144" endtime="20221216 10:31:00.145"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:30:59.925" endtime="20221216 10:31:00.146"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221216 10:31:00.151" endtime="20221216 10:31:00.154"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221216 10:31:00.155" level="INFO">${random} = F57ZKzzYaC</msg>
<status status="PASS" starttime="20221216 10:31:00.154" endtime="20221216 10:31:00.155"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:31:00.165" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p F57ZKzzYaC  2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:31:12.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:31:12.631" level="INFO">${output} = 2022-12-16 10:31:03,234 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:31:03,466 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:31:00.161" endtime="20221216 10:31:12.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:31:12.633" level="INFO">2022-12-16 10:31:03,234 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:31:03,466 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-16 10:31:03,466 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-16 10:31:03,713 [main] INFO freon.BaseFreonGenerator: Executing test with prefix F57ZKzzYaC and number-of-tests 1
2022-12-16 10:31:03,831 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:04,838 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:05,788 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-16 10:31:05,839 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:05,996 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-16 10:31:06,840 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:07,530 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-16 10:31:07,840 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:07,944 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-16 10:31:08,841 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:09,848 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:10,848 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:11,849 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-16 10:31:12,219 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5068.328119, max=5068.328119, mean=5068.328119, stddev=0.0, median=5068.328119, p75=5068.328119, p95=5068.328119, p98=5068.328119, p99=5068.328119, p999=5068.328119, mean_rate=0.1630424605126148, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-16 10:31:12,219 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2022-12-16 10:31:12,220 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-16 10:31:12,220 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221216 10:31:12.632" endtime="20221216 10:31:12.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:31:12.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:31:12.633" endtime="20221216 10:31:12.634"/>
</kw>
<status status="PASS" starttime="20221216 10:31:00.160" endtime="20221216 10:31:12.635"/>
</kw>
<msg timestamp="20221216 10:31:12.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:31:00.159" endtime="20221216 10:31:12.635"/>
</kw>
<msg timestamp="20221216 10:31:12.636" level="INFO">${result} = 2022-12-16 10:31:03,234 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:31:03,466 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:31:00.158" endtime="20221216 10:31:12.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:31:12.636" endtime="20221216 10:31:12.637"/>
</kw>
<status status="PASS" starttime="20221216 10:31:00.155" endtime="20221216 10:31:12.637"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221216 10:31:12.643" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p F57ZKzzYaC  2&gt;&amp;1'.</msg>
<msg timestamp="20221216 10:31:24.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20221216 10:31:24.100" level="INFO">${output} = 2022-12-16 10:31:16,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:31:16,757 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:31:12.641" endtime="20221216 10:31:24.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221216 10:31:24.105" level="INFO">2022-12-16 10:31:16,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:31:16,757 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-16 10:31:16,757 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-16 10:31:17,044 [main] INFO freon.BaseFreonGenerator: Executing test with prefix F57ZKzzYaC and number-of-tests 1
2022-12-16 10:31:17,162 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:18,164 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:19,168 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:20,170 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:20,723 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-16 10:31:21,171 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:22,172 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-16 10:31:23,172 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-16 10:31:23,734 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=185.467015, max=185.467015, mean=185.467015, stddev=0.0, median=185.467015, p75=185.467015, p95=185.467015, p98=185.467015, p99=185.467015, p999=185.467015, mean_rate=0.871496041120732, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-16 10:31:23,735 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2022-12-16 10:31:23,736 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-16 10:31:23,736 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221216 10:31:24.103" endtime="20221216 10:31:24.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221216 10:31:24.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221216 10:31:24.105" endtime="20221216 10:31:24.106"/>
</kw>
<status status="PASS" starttime="20221216 10:31:12.640" endtime="20221216 10:31:24.106"/>
</kw>
<msg timestamp="20221216 10:31:24.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221216 10:31:12.640" endtime="20221216 10:31:24.107"/>
</kw>
<msg timestamp="20221216 10:31:24.108" level="INFO">${result} = 2022-12-16 10:31:16,508 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-16 10:31:16,757 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221216 10:31:12.639" endtime="20221216 10:31:24.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221216 10:31:24.108" endtime="20221216 10:31:24.109"/>
</kw>
<status status="PASS" starttime="20221216 10:31:12.637" endtime="20221216 10:31:24.109"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221216 10:31:00.149" endtime="20221216 10:31:24.110"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221216 10:30:59.815" endtime="20221216 10:31:24.113"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="238044"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
