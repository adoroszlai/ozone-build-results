<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221202 11:31:29.231" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:26:19.793" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:26:24.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:26:24.748" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221202 11:26:19.789" endtime="20221202 11:26:24.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:26:24.750" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221202 11:26:24.749" endtime="20221202 11:26:24.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:26:24.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:26:24.750" endtime="20221202 11:26:24.751"/>
</kw>
<status status="PASS" starttime="20221202 11:26:19.788" endtime="20221202 11:26:24.752"/>
</kw>
<msg timestamp="20221202 11:26:24.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:26:19.787" endtime="20221202 11:26:24.753"/>
</kw>
<msg timestamp="20221202 11:26:24.754" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221202 11:26:19.787" endtime="20221202 11:26:24.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:26:24.754" endtime="20221202 11:26:24.755"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:26:19.785" endtime="20221202 11:26:24.755"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:26:24.762" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:26:30.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:26:30.051" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20221202 11:26:24.759" endtime="20221202 11:26:30.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:26:30.053" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221202 11:26:30.052" endtime="20221202 11:26:30.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:26:30.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:26:30.056" endtime="20221202 11:26:30.060"/>
</kw>
<status status="PASS" starttime="20221202 11:26:24.758" endtime="20221202 11:26:30.061"/>
</kw>
<msg timestamp="20221202 11:26:30.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:26:24.758" endtime="20221202 11:26:30.061"/>
</kw>
<msg timestamp="20221202 11:26:30.062" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20221202 11:26:24.757" endtime="20221202 11:26:30.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:26:30.062" endtime="20221202 11:26:30.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:26:30.064" endtime="20221202 11:26:30.069"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:26:24.756" endtime="20221202 11:26:30.070"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:26:30.077" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:26:35.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:26:35.141" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221202 11:26:30.075" endtime="20221202 11:26:35.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:26:35.143" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221202 11:26:35.142" endtime="20221202 11:26:35.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:26:35.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:26:35.144" endtime="20221202 11:26:35.144"/>
</kw>
<status status="PASS" starttime="20221202 11:26:30.073" endtime="20221202 11:26:35.145"/>
</kw>
<msg timestamp="20221202 11:26:35.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:26:30.073" endtime="20221202 11:26:35.145"/>
</kw>
<msg timestamp="20221202 11:26:35.146" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221202 11:26:30.072" endtime="20221202 11:26:35.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:26:35.146" endtime="20221202 11:26:35.146"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:26:30.071" endtime="20221202 11:26:35.147"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:26:35.154" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:26:40.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:26:40.369" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221202 11:26:35.151" endtime="20221202 11:26:40.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:26:40.370" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20221202 11:26:40.369" endtime="20221202 11:26:40.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:26:40.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:26:40.371" endtime="20221202 11:26:40.374"/>
</kw>
<status status="PASS" starttime="20221202 11:26:35.150" endtime="20221202 11:26:40.374"/>
</kw>
<msg timestamp="20221202 11:26:40.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:26:35.150" endtime="20221202 11:26:40.375"/>
</kw>
<msg timestamp="20221202 11:26:40.376" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topolog...</msg>
<status status="PASS" starttime="20221202 11:26:35.149" endtime="20221202 11:26:40.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:26:40.376" endtime="20221202 11:26:40.377"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:26:35.148" endtime="20221202 11:26:40.377"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221202 11:26:19.717" endtime="20221202 11:26:40.380"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:26:47.351" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:01.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:01.370" level="INFO">${output} = 2022-12-02 11:26:50,298 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:26:50,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221202 11:26:47.346" endtime="20221202 11:27:01.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:01.371" level="INFO">2022-12-02 11:26:50,298 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:26:50,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-02 11:26:50,479 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-02 11:26:50,735 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-12-02 11:26:50,854 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-02 11:26:51,855 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-02 11:26:52,556 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-02 11:26:52,620 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-02 11:26:52,857 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-02 11:26:53,648 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-02 11:26:53,859 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-02 11:26:54,069 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-02 11:26:54,862 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-02 11:26:55,863 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-02 11:26:56,864 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-02 11:26:57,865 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2022-12-02 11:26:58,866 [Thread-5] INFO freon.ProgressBar: Progress: 10.00 % (1 out of 10)
2022-12-02 11:26:59,869 [Thread-5] INFO freon.ProgressBar: Progress: 60.00 % (6 out of 10)
2022-12-02 11:27:00,870 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-12-02 11:27:00,999 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=109.134829, max=5059.632509, mean=752.0562034433475, stddev=1458.7539410411687, median=125.595734, p75=238.058725, p95=5059.632509, p98=5059.632509, p99=5059.632509, p999=5059.632509, mean_rate=1.1984142262262927, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-02 11:27:01,000 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2022-12-02 11:27:01,001 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-02 11:27:01,001 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221202 11:27:01.370" endtime="20221202 11:27:01.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:01.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:01.372" endtime="20221202 11:27:01.373"/>
</kw>
<status status="PASS" starttime="20221202 11:26:47.344" endtime="20221202 11:27:01.373"/>
</kw>
<msg timestamp="20221202 11:27:01.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:26:47.344" endtime="20221202 11:27:01.375"/>
</kw>
<msg timestamp="20221202 11:27:01.375" level="INFO">${result} = 2022-12-02 11:26:50,298 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:26:50,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221202 11:26:47.342" endtime="20221202 11:27:01.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:01.375" endtime="20221202 11:27:01.376"/>
</kw>
<status status="PASS" starttime="20221202 11:26:47.340" endtime="20221202 11:27:01.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:01.378" endtime="20221202 11:27:01.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:01.390" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:01.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:01.683" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:01.388" endtime="20221202 11:27:01.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:01.684" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:01.683" endtime="20221202 11:27:01.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:01.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:01.685" endtime="20221202 11:27:01.685"/>
</kw>
<status status="PASS" starttime="20221202 11:27:01.379" endtime="20221202 11:27:01.686"/>
</kw>
<msg timestamp="20221202 11:27:01.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:01.379" endtime="20221202 11:27:01.689"/>
</kw>
<msg timestamp="20221202 11:27:01.689" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:01.378" endtime="20221202 11:27:01.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:01.689" endtime="20221202 11:27:01.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:01.706" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:01.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:01.768" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:01.700" endtime="20221202 11:27:01.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:01.770" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:01.769" endtime="20221202 11:27:01.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:01.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:01.771" endtime="20221202 11:27:01.771"/>
</kw>
<status status="PASS" starttime="20221202 11:27:01.695" endtime="20221202 11:27:01.772"/>
</kw>
<msg timestamp="20221202 11:27:01.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:01.695" endtime="20221202 11:27:01.772"/>
</kw>
<msg timestamp="20221202 11:27:01.773" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:01.693" endtime="20221202 11:27:01.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221202 11:27:01.774" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221202 11:27:01.773" endtime="20221202 11:27:01.774"/>
</kw>
<status status="FAIL" starttime="20221202 11:27:01.377" endtime="20221202 11:27:01.775"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:11.777" endtime="20221202 11:27:11.777"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:11.785" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:11.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:11.821" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:11.779" endtime="20221202 11:27:11.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:11.823" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:11.822" endtime="20221202 11:27:11.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:11.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:11.823" endtime="20221202 11:27:11.824"/>
</kw>
<status status="PASS" starttime="20221202 11:27:11.779" endtime="20221202 11:27:11.824"/>
</kw>
<msg timestamp="20221202 11:27:11.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:11.778" endtime="20221202 11:27:11.825"/>
</kw>
<msg timestamp="20221202 11:27:11.825" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:11.778" endtime="20221202 11:27:11.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:11.826" endtime="20221202 11:27:11.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:11.832" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:11.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:11.854" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:11.829" endtime="20221202 11:27:11.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:11.858" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:11.854" endtime="20221202 11:27:11.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:11.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:11.860" endtime="20221202 11:27:11.860"/>
</kw>
<status status="PASS" starttime="20221202 11:27:11.828" endtime="20221202 11:27:11.861"/>
</kw>
<msg timestamp="20221202 11:27:11.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:11.827" endtime="20221202 11:27:11.861"/>
</kw>
<msg timestamp="20221202 11:27:11.862" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:11.826" endtime="20221202 11:27:11.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221202 11:27:11.863" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221202 11:27:11.862" endtime="20221202 11:27:11.864"/>
</kw>
<status status="FAIL" starttime="20221202 11:27:11.776" endtime="20221202 11:27:11.865"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:21.866" endtime="20221202 11:27:21.867"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:21.871" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:21.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:21.890" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:21.869" endtime="20221202 11:27:21.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:21.891" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:21.891" endtime="20221202 11:27:21.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:21.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:21.892" endtime="20221202 11:27:21.893"/>
</kw>
<status status="PASS" starttime="20221202 11:27:21.868" endtime="20221202 11:27:21.893"/>
</kw>
<msg timestamp="20221202 11:27:21.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:21.868" endtime="20221202 11:27:21.894"/>
</kw>
<msg timestamp="20221202 11:27:21.894" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:21.867" endtime="20221202 11:27:21.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:21.895" endtime="20221202 11:27:21.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:21.900" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:21.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:21.919" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:21.898" endtime="20221202 11:27:21.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:21.920" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:21.919" endtime="20221202 11:27:21.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:21.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:21.921" endtime="20221202 11:27:21.922"/>
</kw>
<status status="PASS" starttime="20221202 11:27:21.897" endtime="20221202 11:27:21.922"/>
</kw>
<msg timestamp="20221202 11:27:21.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:21.897" endtime="20221202 11:27:21.923"/>
</kw>
<msg timestamp="20221202 11:27:21.924" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:21.896" endtime="20221202 11:27:21.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221202 11:27:21.926" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221202 11:27:21.924" endtime="20221202 11:27:21.926"/>
</kw>
<status status="FAIL" starttime="20221202 11:27:21.865" endtime="20221202 11:27:21.927"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:31.929" endtime="20221202 11:27:31.930"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:31.935" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:31.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:31.955" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:31.932" endtime="20221202 11:27:31.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:31.957" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:31.956" endtime="20221202 11:27:31.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:31.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:31.957" endtime="20221202 11:27:31.958"/>
</kw>
<status status="PASS" starttime="20221202 11:27:31.931" endtime="20221202 11:27:31.958"/>
</kw>
<msg timestamp="20221202 11:27:31.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:31.931" endtime="20221202 11:27:31.959"/>
</kw>
<msg timestamp="20221202 11:27:31.960" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221202 11:27:31.930" endtime="20221202 11:27:31.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:31.960" endtime="20221202 11:27:31.960"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:31.966" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:31.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:31.989" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:31.963" endtime="20221202 11:27:31.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:31.993" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:31.989" endtime="20221202 11:27:31.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:31.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:31.993" endtime="20221202 11:27:31.994"/>
</kw>
<status status="PASS" starttime="20221202 11:27:31.962" endtime="20221202 11:27:31.994"/>
</kw>
<msg timestamp="20221202 11:27:31.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:31.962" endtime="20221202 11:27:31.995"/>
</kw>
<msg timestamp="20221202 11:27:31.995" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221202 11:27:31.961" endtime="20221202 11:27:31.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221202 11:27:32.000" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221202 11:27:31.996" endtime="20221202 11:27:32.000"/>
</kw>
<status status="FAIL" starttime="20221202 11:27:31.928" endtime="20221202 11:27:32.001"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:42.003" endtime="20221202 11:27:42.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.008" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.031" level="INFO">${output} = {"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":3},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":4}]}}</msg>
<status status="PASS" starttime="20221202 11:27:42.005" endtime="20221202 11:27:42.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.033" level="INFO">{"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":3},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":4}]}}</msg>
<status status="PASS" starttime="20221202 11:27:42.031" endtime="20221202 11:27:42.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.033" endtime="20221202 11:27:42.034"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.004" endtime="20221202 11:27:42.034"/>
</kw>
<msg timestamp="20221202 11:27:42.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.004" endtime="20221202 11:27:42.035"/>
</kw>
<msg timestamp="20221202 11:27:42.036" level="INFO">${result} = {"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":3},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":4}]}}</msg>
<status status="PASS" starttime="20221202 11:27:42.003" endtime="20221202 11:27:42.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.036" endtime="20221202 11:27:42.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.041" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.062" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221202 11:27:42.038" endtime="20221202 11:27:42.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.065" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221202 11:27:42.063" endtime="20221202 11:27:42.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.065" endtime="20221202 11:27:42.066"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.038" endtime="20221202 11:27:42.067"/>
</kw>
<msg timestamp="20221202 11:27:42.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.037" endtime="20221202 11:27:42.068"/>
</kw>
<msg timestamp="20221202 11:27:42.068" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221202 11:27:42.037" endtime="20221202 11:27:42.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.068" endtime="20221202 11:27:42.069"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.002" endtime="20221202 11:27:42.069"/>
</kw>
<status status="PASS" starttime="20221202 11:27:01.376" endtime="20221202 11:27:42.069"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:26:47.338" endtime="20221202 11:27:42.069"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.078" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.132" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"fea639a5-fc76-492c-8e0d-83b0c6039007","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669980...</msg>
<status status="PASS" starttime="20221202 11:27:42.075" endtime="20221202 11:27:42.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.134" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"fea639a5-fc76-492c-8e0d-83b0c6039007","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669980445087,"storageReport":{"capacity":89297309696,"used":20486,"remaining":28887101440},"pipelines":[{"pipelineID":"61705d18-3574-45e9-ad12-d7c2f28debcf","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"56d94f56-5c68-4987-a3a4-46fb977a919c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"f37dcc5b-cdfc-478f-b590-263f378e21db","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669980230237,"revision":"50a9d46d809af8d6848520211bcdff14c3b7c646","buildDate":"2022-12-02T11:00Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"36599635-c7d6-4314-8810-3dc41a7d8fb3","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669980445050,"storageReport":{"capacity":89297309696,"used":20486,"remaining":28887101440},"pipelines":[{"pipelineID":"bfb0b4ca-cc9c-4ba6-8aa3-9543cd738fe3","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"61705d18-3574-45e9-ad12-d7c2f28debcf","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"f37dcc5b-cdfc-478f-b590-263f378e21db","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669980229465,"revision":"50a9d46d809af8d6848520211bcdff14c3b7c646","buildDate":"2022-12-02T11:00Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"be83b4af-d3d2-4011-aa8a-678a6a7b8a82","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669980445069,"storageReport":{"capacity":89297309696,"used":20486,"remaining":28887101440},"pipelines":[{"pipelineID":"32fdce5a-c479-4f7a-bf4b-dc9081a5779f","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"61705d18-3574-45e9-ad12-d7c2f28debcf","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"f37dcc5b-cdfc-478f-b590-263f378e21db","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1669980230148,"revision":"50a9d46d809af8d6848520211bcdff14c3b7c646","buildDate":"2022-12-02T11:00Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"8ee18877-f70f-4d0d-9cb2-043c66939f21","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669980448415,"storageReport":{"capacity":89297309696,"used":8196,"remaining":28887101440},"pipelines":[{"pipelineID":"a515fb27-5b2d-4b21-8b3b-3c530be99f1b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"85d4fb0e-5b37-4b7d-abf5-3c77a0c96982","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"6bf9aff2-8e48-4735-a4e3-cfbb263d4478","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669980230836,"revision":"50a9d46d809af8d6848520211bcdff14c3b7c646","buildDate":"2022-12-02T11:00Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"483252e7-b16a-4f26-894a-f09d431dbb0e","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669980448741,"storageReport":{"capacity":89297309696,"used":8196,"remaining":28887101440},"pipelines":[{"pipelineID":"a515fb27-5b2d-4b21-8b3b-3c530be99f1b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"85d4fb0e-5b37-4b7d-abf5-3c77a0c96982","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"894a0585-e0c6-439e-bcd4-bed21b13028c","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1669980228260,"revision":"50a9d46d809af8d6848520211bcdff14c3b7c646","buildDate":"2022-12-02T11:00Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"d1829f34-46fa-4e30-93bc-075a03644651","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669980448770,"storageReport":{"capacity":89297309696,"used":8196,"remaining":28887101440},"pipelines":[{"pipelineID":"a515fb27-5b2d-4b21-8b3b-3c530be99f1b","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"85d4fb0e-5b37-4b7d-abf5-3c77a0c96982","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"1cbd5333-ced5-4ac9-b420-3d673d26e57d","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1669980229679,"revision":"50a9d46d809af8d6848520211bcdff14c3b7c646","buildDate":"2022-12-02T11:00Z","layoutVersion":4,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20221202 11:27:42.133" endtime="20221202 11:27:42.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.134" endtime="20221202 11:27:42.135"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.074" endtime="20221202 11:27:42.136"/>
</kw>
<msg timestamp="20221202 11:27:42.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.074" endtime="20221202 11:27:42.137"/>
</kw>
<msg timestamp="20221202 11:27:42.137" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"fea639a5-fc76-492c-8e0d-83b0c6039007","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1669980...</msg>
<status status="PASS" starttime="20221202 11:27:42.073" endtime="20221202 11:27:42.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.137" endtime="20221202 11:27:42.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.138" endtime="20221202 11:27:42.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.139" endtime="20221202 11:27:42.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.139" endtime="20221202 11:27:42.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.145" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.186" level="INFO">${output} = {"totalCount":10,"pipelines":[{"pipelineId":"bfb0b4ca-cc9c-4ba6-8aa3-9543cd738fe3","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5...</msg>
<status status="PASS" starttime="20221202 11:27:42.142" endtime="20221202 11:27:42.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.188" level="INFO">{"totalCount":10,"pipelines":[{"pipelineId":"bfb0b4ca-cc9c-4ba6-8aa3-9543cd738fe3","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":172423,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"a515fb27-5b2d-4b21-8b3b-3c530be99f1b","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":172333,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"32fdce5a-c479-4f7a-bf4b-dc9081a5779f","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":172276,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"61705d18-3574-45e9-ad12-d7c2f28debcf","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":172182,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"56d94f56-5c68-4987-a3a4-46fb977a919c","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":175561,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"85d4fb0e-5b37-4b7d-abf5-3c77a0c96982","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":172003,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":0},{"pipelineId":"6bf9aff2-8e48-4735-a4e3-cfbb263d4478","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":172026,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"894a0585-e0c6-439e-bcd4-bed21b13028c","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":171926,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"1cbd5333-ced5-4ac9-b420-3d673d26e57d","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":171908,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f37dcc5b-cdfc-478f-b590-263f378e21db","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":172521,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1}]}</msg>
<status status="PASS" starttime="20221202 11:27:42.187" endtime="20221202 11:27:42.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.188" endtime="20221202 11:27:42.189"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.141" endtime="20221202 11:27:42.189"/>
</kw>
<msg timestamp="20221202 11:27:42.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.141" endtime="20221202 11:27:42.190"/>
</kw>
<msg timestamp="20221202 11:27:42.194" level="INFO">${result} = {"totalCount":10,"pipelines":[{"pipelineId":"bfb0b4ca-cc9c-4ba6-8aa3-9543cd738fe3","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5...</msg>
<status status="PASS" starttime="20221202 11:27:42.140" endtime="20221202 11:27:42.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.194" endtime="20221202 11:27:42.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.195" endtime="20221202 11:27:42.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.196" endtime="20221202 11:27:42.196"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.197" endtime="20221202 11:27:42.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.197" endtime="20221202 11:27:42.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.200" endtime="20221202 11:27:42.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.209" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.307" level="INFO">${output} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86046,"remaining":173322608640},"containers":3,"missingContainers":0,"openContainers":3,"volumes...</msg>
<status status="PASS" starttime="20221202 11:27:42.203" endtime="20221202 11:27:42.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.309" level="INFO">{"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86046,"remaining":173322608640},"containers":3,"missingContainers":0,"openContainers":3,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221202 11:27:42.308" endtime="20221202 11:27:42.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.309" endtime="20221202 11:27:42.310"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.202" endtime="20221202 11:27:42.310"/>
</kw>
<msg timestamp="20221202 11:27:42.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.201" endtime="20221202 11:27:42.312"/>
</kw>
<msg timestamp="20221202 11:27:42.312" level="INFO">${result} = {"pipelines":10,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":86046,"remaining":173322608640},"containers":3,"missingContainers":0,"openContainers":3,"volumes...</msg>
<status status="PASS" starttime="20221202 11:27:42.201" endtime="20221202 11:27:42.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.313" endtime="20221202 11:27:42.313"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.314" endtime="20221202 11:27:42.314"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.315" endtime="20221202 11:27:42.315"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.321" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.348" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"fea639a5-fc76-492c-8e0d-83b0c6039007","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1669980357130,"lastSeenTime":1669980357130,"last...</msg>
<status status="PASS" starttime="20221202 11:27:42.318" endtime="20221202 11:27:42.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.349" level="INFO">[{"containerId":1,"datanodeUuid":"fea639a5-fc76-492c-8e0d-83b0c6039007","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1669980357130,"lastSeenTime":1669980357130,"lastBcsId":0},{"containerId":1,"datanodeUuid":"36599635-c7d6-4314-8810-3dc41a7d8fb3","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1669980357029,"lastSeenTime":1669980357029,"lastBcsId":0},{"containerId":1,"datanodeUuid":"be83b4af-d3d2-4011-aa8a-678a6a7b8a82","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1669980357138,"lastSeenTime":1669980357138,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221202 11:27:42.348" endtime="20221202 11:27:42.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.350" endtime="20221202 11:27:42.351"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.317" endtime="20221202 11:27:42.351"/>
</kw>
<msg timestamp="20221202 11:27:42.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.317" endtime="20221202 11:27:42.352"/>
</kw>
<msg timestamp="20221202 11:27:42.352" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"fea639a5-fc76-492c-8e0d-83b0c6039007","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1669980357130,"lastSeenTime":1669980357130,"last...</msg>
<status status="PASS" starttime="20221202 11:27:42.316" endtime="20221202 11:27:42.352"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.353" endtime="20221202 11:27:42.353"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:27:42.071" endtime="20221202 11:27:42.354"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:42.357" endtime="20221202 11:27:42.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.363" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.393" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221202 11:27:42.360" endtime="20221202 11:27:42.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.394" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0c211d12.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.f3fa3186.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.313d5e09.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.393" endtime="20221202 11:27:42.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.394" endtime="20221202 11:27:42.395"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.359" endtime="20221202 11:27:42.396"/>
</kw>
<msg timestamp="20221202 11:27:42.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.359" endtime="20221202 11:27:42.397"/>
</kw>
<msg timestamp="20221202 11:27:42.397" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221202 11:27:42.358" endtime="20221202 11:27:42.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.398" endtime="20221202 11:27:42.398"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:27:42.356" endtime="20221202 11:27:42.399"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.407" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.420" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:27:42.404" endtime="20221202 11:27:42.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.422" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:27:42.421" endtime="20221202 11:27:42.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.423" endtime="20221202 11:27:42.424"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.403" endtime="20221202 11:27:42.424"/>
</kw>
<msg timestamp="20221202 11:27:42.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.402" endtime="20221202 11:27:42.425"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.401" endtime="20221202 11:27:42.426"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.432" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.449" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.429" endtime="20221202 11:27:42.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.450" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:42.449" endtime="20221202 11:27:42.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.451" endtime="20221202 11:27:42.452"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.428" endtime="20221202 11:27:42.453"/>
</kw>
<msg timestamp="20221202 11:27:42.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.428" endtime="20221202 11:27:42.454"/>
</kw>
<msg timestamp="20221202 11:27:42.454" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.427" endtime="20221202 11:27:42.454"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:42.456" endtime="20221202 11:27:42.456"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:42.455" endtime="20221202 11:27:42.456"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.456" endtime="20221202 11:27:42.457"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.456" endtime="20221202 11:27:42.457"/>
</branch>
<status status="PASS" starttime="20221202 11:27:42.454" endtime="20221202 11:27:42.457"/>
</if>
<status status="PASS" starttime="20221202 11:27:42.426" endtime="20221202 11:27:42.457"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:42.458" endtime="20221202 11:27:42.458"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.457" endtime="20221202 11:27:42.459"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.465" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.482" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.462" endtime="20221202 11:27:42.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.483" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:42.482" endtime="20221202 11:27:42.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.484" endtime="20221202 11:27:42.484"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.461" endtime="20221202 11:27:42.485"/>
</kw>
<msg timestamp="20221202 11:27:42.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.461" endtime="20221202 11:27:42.486"/>
</kw>
<msg timestamp="20221202 11:27:42.486" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.460" endtime="20221202 11:27:42.486"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:42.487" endtime="20221202 11:27:42.487"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:42.487" endtime="20221202 11:27:42.487"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.487" endtime="20221202 11:27:42.488"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.487" endtime="20221202 11:27:42.488"/>
</branch>
<status status="PASS" starttime="20221202 11:27:42.487" endtime="20221202 11:27:42.488"/>
</if>
<status status="PASS" starttime="20221202 11:27:42.459" endtime="20221202 11:27:42.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:27:42.400" endtime="20221202 11:27:42.489"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.496" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.500" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:27:42.493" endtime="20221202 11:27:42.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.501" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:27:42.501" endtime="20221202 11:27:42.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.502" endtime="20221202 11:27:42.502"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.492" endtime="20221202 11:27:42.502"/>
</kw>
<msg timestamp="20221202 11:27:42.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.491" endtime="20221202 11:27:42.503"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.491" endtime="20221202 11:27:42.503"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.508" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.527" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.506" endtime="20221202 11:27:42.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.531" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:42.529" endtime="20221202 11:27:42.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.531" endtime="20221202 11:27:42.532"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.505" endtime="20221202 11:27:42.533"/>
</kw>
<msg timestamp="20221202 11:27:42.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.505" endtime="20221202 11:27:42.534"/>
</kw>
<msg timestamp="20221202 11:27:42.534" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.504" endtime="20221202 11:27:42.534"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:42.535" endtime="20221202 11:27:42.535"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:42.535" endtime="20221202 11:27:42.535"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.535" endtime="20221202 11:27:42.536"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.535" endtime="20221202 11:27:42.536"/>
</branch>
<status status="PASS" starttime="20221202 11:27:42.534" endtime="20221202 11:27:42.536"/>
</if>
<status status="PASS" starttime="20221202 11:27:42.504" endtime="20221202 11:27:42.536"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:42.537" endtime="20221202 11:27:42.537"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.536" endtime="20221202 11:27:42.538"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.543" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.571" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.540" endtime="20221202 11:27:42.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.579" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:42.578" endtime="20221202 11:27:42.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.579" endtime="20221202 11:27:42.584"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.540" endtime="20221202 11:27:42.585"/>
</kw>
<msg timestamp="20221202 11:27:42.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.539" endtime="20221202 11:27:42.586"/>
</kw>
<msg timestamp="20221202 11:27:42.586" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.538" endtime="20221202 11:27:42.586"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:42.587" endtime="20221202 11:27:42.587"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:42.587" endtime="20221202 11:27:42.587"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.588" endtime="20221202 11:27:42.588"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.587" endtime="20221202 11:27:42.589"/>
</branch>
<status status="PASS" starttime="20221202 11:27:42.586" endtime="20221202 11:27:42.589"/>
</if>
<status status="PASS" starttime="20221202 11:27:42.538" endtime="20221202 11:27:42.589"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:42.590" endtime="20221202 11:27:42.591"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.589" endtime="20221202 11:27:42.591"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.597" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.619" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.594" endtime="20221202 11:27:42.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.621" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:42.620" endtime="20221202 11:27:42.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.621" endtime="20221202 11:27:42.623"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.593" endtime="20221202 11:27:42.623"/>
</kw>
<msg timestamp="20221202 11:27:42.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.593" endtime="20221202 11:27:42.624"/>
</kw>
<msg timestamp="20221202 11:27:42.624" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.592" endtime="20221202 11:27:42.624"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:42.626" endtime="20221202 11:27:42.626"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:42.626" endtime="20221202 11:27:42.627"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.627" endtime="20221202 11:27:42.627"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.627" endtime="20221202 11:27:42.628"/>
</branch>
<status status="PASS" starttime="20221202 11:27:42.625" endtime="20221202 11:27:42.628"/>
</if>
<status status="PASS" starttime="20221202 11:27:42.591" endtime="20221202 11:27:42.628"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:42.629" endtime="20221202 11:27:42.629"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.628" endtime="20221202 11:27:42.630"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.636" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.660" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.633" endtime="20221202 11:27:42.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.663" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:42.662" endtime="20221202 11:27:42.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.663" endtime="20221202 11:27:42.664"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.632" endtime="20221202 11:27:42.664"/>
</kw>
<msg timestamp="20221202 11:27:42.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.631" endtime="20221202 11:27:42.665"/>
</kw>
<msg timestamp="20221202 11:27:42.666" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.631" endtime="20221202 11:27:42.666"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:42.666" endtime="20221202 11:27:42.667"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:42.666" endtime="20221202 11:27:42.667"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.667" endtime="20221202 11:27:42.667"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.667" endtime="20221202 11:27:42.667"/>
</branch>
<status status="PASS" starttime="20221202 11:27:42.666" endtime="20221202 11:27:42.667"/>
</if>
<status status="PASS" starttime="20221202 11:27:42.630" endtime="20221202 11:27:42.668"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:27:42.490" endtime="20221202 11:27:42.668"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.677" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.681" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:27:42.674" endtime="20221202 11:27:42.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.683" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:27:42.682" endtime="20221202 11:27:42.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.684" endtime="20221202 11:27:42.685"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.673" endtime="20221202 11:27:42.686"/>
</kw>
<msg timestamp="20221202 11:27:42.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.672" endtime="20221202 11:27:42.686"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.671" endtime="20221202 11:27:42.686"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.693" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.792" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.690" endtime="20221202 11:27:42.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.794" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:42.792" endtime="20221202 11:27:42.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.807" endtime="20221202 11:27:42.808"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.689" endtime="20221202 11:27:42.808"/>
</kw>
<msg timestamp="20221202 11:27:42.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.689" endtime="20221202 11:27:42.809"/>
</kw>
<msg timestamp="20221202 11:27:42.810" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.688" endtime="20221202 11:27:42.810"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:42.811" endtime="20221202 11:27:42.811"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:42.811" endtime="20221202 11:27:42.811"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.812" endtime="20221202 11:27:42.814"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.811" endtime="20221202 11:27:42.815"/>
</branch>
<status status="PASS" starttime="20221202 11:27:42.811" endtime="20221202 11:27:42.815"/>
</if>
<status status="PASS" starttime="20221202 11:27:42.687" endtime="20221202 11:27:42.815"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:42.816" endtime="20221202 11:27:42.817"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.815" endtime="20221202 11:27:42.817"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.826" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.860" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.820" endtime="20221202 11:27:42.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.863" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:42.860" endtime="20221202 11:27:42.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.864" endtime="20221202 11:27:42.867"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.819" endtime="20221202 11:27:42.867"/>
</kw>
<msg timestamp="20221202 11:27:42.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.819" endtime="20221202 11:27:42.868"/>
</kw>
<msg timestamp="20221202 11:27:42.868" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.818" endtime="20221202 11:27:42.868"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:42.869" endtime="20221202 11:27:42.869"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:42.869" endtime="20221202 11:27:42.869"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.870" endtime="20221202 11:27:42.874"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.870" endtime="20221202 11:27:42.874"/>
</branch>
<status status="PASS" starttime="20221202 11:27:42.869" endtime="20221202 11:27:42.874"/>
</if>
<status status="PASS" starttime="20221202 11:27:42.817" endtime="20221202 11:27:42.874"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:42.875" endtime="20221202 11:27:42.880"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.874" endtime="20221202 11:27:42.880"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.892" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:42.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:42.942" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.888" endtime="20221202 11:27:42.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:42.947" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:42.946" endtime="20221202 11:27:42.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:42.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:42.947" endtime="20221202 11:27:42.955"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.888" endtime="20221202 11:27:42.957"/>
</kw>
<msg timestamp="20221202 11:27:42.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.882" endtime="20221202 11:27:42.959"/>
</kw>
<msg timestamp="20221202 11:27:42.959" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.881" endtime="20221202 11:27:42.959"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:42.960" endtime="20221202 11:27:42.960"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:42.960" endtime="20221202 11:27:42.960"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:42.960" endtime="20221202 11:27:42.964"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.960" endtime="20221202 11:27:42.964"/>
</branch>
<status status="PASS" starttime="20221202 11:27:42.959" endtime="20221202 11:27:42.964"/>
</if>
<status status="PASS" starttime="20221202 11:27:42.880" endtime="20221202 11:27:42.965"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:42.966" endtime="20221202 11:27:42.968"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.965" endtime="20221202 11:27:42.968"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:42.989" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:43.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:43.013" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.981" endtime="20221202 11:27:43.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:43.015" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:43.014" endtime="20221202 11:27:43.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:43.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:43.016" endtime="20221202 11:27:43.017"/>
</kw>
<status status="PASS" starttime="20221202 11:27:42.980" endtime="20221202 11:27:43.017"/>
</kw>
<msg timestamp="20221202 11:27:43.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:42.974" endtime="20221202 11:27:43.018"/>
</kw>
<msg timestamp="20221202 11:27:43.019" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:42.971" endtime="20221202 11:27:43.019"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:43.020" endtime="20221202 11:27:43.020"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:43.020" endtime="20221202 11:27:43.020"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:43.020" endtime="20221202 11:27:43.021"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.020" endtime="20221202 11:27:43.021"/>
</branch>
<status status="PASS" starttime="20221202 11:27:43.019" endtime="20221202 11:27:43.021"/>
</if>
<status status="PASS" starttime="20221202 11:27:42.968" endtime="20221202 11:27:43.021"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:27:42.670" endtime="20221202 11:27:43.022"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:43.030" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:43.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:43.035" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:27:43.026" endtime="20221202 11:27:43.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:43.036" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:27:43.036" endtime="20221202 11:27:43.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:43.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:43.037" endtime="20221202 11:27:43.038"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.025" endtime="20221202 11:27:43.038"/>
</kw>
<msg timestamp="20221202 11:27:43.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:43.024" endtime="20221202 11:27:43.039"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.024" endtime="20221202 11:27:43.039"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:43.044" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:43.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:43.081" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:43.042" endtime="20221202 11:27:43.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:43.082" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:43.081" endtime="20221202 11:27:43.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:43.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:43.083" endtime="20221202 11:27:43.084"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.041" endtime="20221202 11:27:43.084"/>
</kw>
<msg timestamp="20221202 11:27:43.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:43.041" endtime="20221202 11:27:43.085"/>
</kw>
<msg timestamp="20221202 11:27:43.086" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:43.040" endtime="20221202 11:27:43.086"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:43.086" endtime="20221202 11:27:43.086"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:43.086" endtime="20221202 11:27:43.087"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:43.087" endtime="20221202 11:27:43.088"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.087" endtime="20221202 11:27:43.088"/>
</branch>
<status status="PASS" starttime="20221202 11:27:43.086" endtime="20221202 11:27:43.088"/>
</if>
<status status="PASS" starttime="20221202 11:27:43.039" endtime="20221202 11:27:43.088"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:43.090" endtime="20221202 11:27:43.091"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.089" endtime="20221202 11:27:43.091"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:43.098" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:43.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:43.123" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:27:43.094" endtime="20221202 11:27:43.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:43.124" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:27:43.123" endtime="20221202 11:27:43.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:43.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:43.125" endtime="20221202 11:27:43.128"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.093" endtime="20221202 11:27:43.128"/>
</kw>
<msg timestamp="20221202 11:27:43.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:43.093" endtime="20221202 11:27:43.129"/>
</kw>
<msg timestamp="20221202 11:27:43.130" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:27:43.092" endtime="20221202 11:27:43.130"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:27:43.131" endtime="20221202 11:27:43.131"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:27:43.130" endtime="20221202 11:27:43.131"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:43.131" endtime="20221202 11:27:43.131"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.131" endtime="20221202 11:27:43.131"/>
</branch>
<status status="PASS" starttime="20221202 11:27:43.130" endtime="20221202 11:27:43.131"/>
</if>
<status status="PASS" starttime="20221202 11:27:43.091" endtime="20221202 11:27:43.132"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:27:43.023" endtime="20221202 11:27:43.132"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221202 11:26:47.275" endtime="20221202 11:27:43.134"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:43.154" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:43.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:43.159" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:27:43.151" endtime="20221202 11:27:43.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:43.160" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:27:43.159" endtime="20221202 11:27:43.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:43.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:43.160" endtime="20221202 11:27:43.161"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.150" endtime="20221202 11:27:43.162"/>
</kw>
<msg timestamp="20221202 11:27:43.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:43.149" endtime="20221202 11:27:43.163"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.149" endtime="20221202 11:27:43.163"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:27:43.164" endtime="20221202 11:27:43.164"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.163" endtime="20221202 11:27:43.164"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221202 11:27:43.166" level="INFO">${random} = senys</msg>
<status status="PASS" starttime="20221202 11:27:43.165" endtime="20221202 11:27:43.166"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221202 11:27:43.167" level="INFO">${VOLUME} = vol-senys</msg>
<status status="PASS" starttime="20221202 11:27:43.166" endtime="20221202 11:27:43.167"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:43.172" level="INFO">Running command 'ozone sh volume create /vol-senys 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:48.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:48.109" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:27:43.170" endtime="20221202 11:27:48.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:48.110" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:27:48.109" endtime="20221202 11:27:48.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:48.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:48.111" endtime="20221202 11:27:48.112"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.169" endtime="20221202 11:27:48.112"/>
</kw>
<msg timestamp="20221202 11:27:48.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:43.168" endtime="20221202 11:27:48.113"/>
</kw>
<msg timestamp="20221202 11:27:48.113" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:27:43.167" endtime="20221202 11:27:48.113"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:48.113" endtime="20221202 11:27:48.114"/>
</kw>
<status status="PASS" starttime="20221202 11:27:43.165" endtime="20221202 11:27:48.114"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:27:43.148" endtime="20221202 11:27:48.114"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221202 11:27:48.119" level="INFO">${random} = xhuom</msg>
<status status="PASS" starttime="20221202 11:27:48.118" endtime="20221202 11:27:48.119"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221202 11:27:48.119" level="INFO">${BUCKET} = buc-xhuom</msg>
<status status="PASS" starttime="20221202 11:27:48.119" endtime="20221202 11:27:48.120"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:48.125" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-senys/buc-xhuom 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:27:53.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:27:53.827" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:27:48.122" endtime="20221202 11:27:53.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:27:53.829" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:27:53.828" endtime="20221202 11:27:53.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:27:53.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:27:53.829" endtime="20221202 11:27:53.830"/>
</kw>
<status status="PASS" starttime="20221202 11:27:48.121" endtime="20221202 11:27:53.830"/>
</kw>
<msg timestamp="20221202 11:27:53.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:48.121" endtime="20221202 11:27:53.831"/>
</kw>
<msg timestamp="20221202 11:27:53.832" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:27:48.120" endtime="20221202 11:27:53.832"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:27:53.832" endtime="20221202 11:27:53.832"/>
</kw>
<status status="PASS" starttime="20221202 11:27:48.117" endtime="20221202 11:27:53.833"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:27:48.116" endtime="20221202 11:27:53.833"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:27:53.841" level="INFO">Running command 'ozone sh key put /vol-senys/buc-xhuom/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:03.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:03.626" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:27:53.838" endtime="20221202 11:28:03.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:03.628" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:03.627" endtime="20221202 11:28:03.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:03.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:03.628" endtime="20221202 11:28:03.629"/>
</kw>
<status status="PASS" starttime="20221202 11:27:53.838" endtime="20221202 11:28:03.630"/>
</kw>
<msg timestamp="20221202 11:28:03.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:27:53.837" endtime="20221202 11:28:03.631"/>
</kw>
<msg timestamp="20221202 11:28:03.631" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:27:53.837" endtime="20221202 11:28:03.631"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:03.632" endtime="20221202 11:28:03.632"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:03.638" level="INFO">Running command 'ozone sh key put /vol-senys/buc-xhuom/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:11.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:11.846" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:03.635" endtime="20221202 11:28:11.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:11.848" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:11.847" endtime="20221202 11:28:11.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:11.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:11.848" endtime="20221202 11:28:11.849"/>
</kw>
<status status="PASS" starttime="20221202 11:28:03.634" endtime="20221202 11:28:11.850"/>
</kw>
<msg timestamp="20221202 11:28:11.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:03.634" endtime="20221202 11:28:11.851"/>
</kw>
<msg timestamp="20221202 11:28:11.851" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:03.632" endtime="20221202 11:28:11.851"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:11.852" endtime="20221202 11:28:11.852"/>
</kw>
<status status="PASS" starttime="20221202 11:27:53.836" endtime="20221202 11:28:11.853"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:27:53.835" endtime="20221202 11:28:11.853"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:11.863" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:11.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:11.868" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:28:11.859" endtime="20221202 11:28:11.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:11.870" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:28:11.868" endtime="20221202 11:28:11.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:11.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:11.870" endtime="20221202 11:28:11.871"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.858" endtime="20221202 11:28:11.871"/>
</kw>
<msg timestamp="20221202 11:28:11.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:11.858" endtime="20221202 11:28:11.872"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.857" endtime="20221202 11:28:11.873"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:11.878" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:11.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:11.914" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:11.875" endtime="20221202 11:28:11.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:11.916" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:11.915" endtime="20221202 11:28:11.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:11.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:11.916" endtime="20221202 11:28:11.917"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.874" endtime="20221202 11:28:11.917"/>
</kw>
<msg timestamp="20221202 11:28:11.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:11.874" endtime="20221202 11:28:11.918"/>
</kw>
<msg timestamp="20221202 11:28:11.919" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:11.873" endtime="20221202 11:28:11.919"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:11.920" endtime="20221202 11:28:11.920"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:11.920" endtime="20221202 11:28:11.920"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:11.920" endtime="20221202 11:28:11.921"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.920" endtime="20221202 11:28:11.921"/>
</branch>
<status status="PASS" starttime="20221202 11:28:11.919" endtime="20221202 11:28:11.921"/>
</if>
<status status="PASS" starttime="20221202 11:28:11.873" endtime="20221202 11:28:11.921"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:11.922" endtime="20221202 11:28:11.922"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.921" endtime="20221202 11:28:11.922"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:11.928" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:11.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:11.947" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:11.925" endtime="20221202 11:28:11.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:11.949" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:11.948" endtime="20221202 11:28:11.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:11.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:11.950" endtime="20221202 11:28:11.951"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.924" endtime="20221202 11:28:11.951"/>
</kw>
<msg timestamp="20221202 11:28:11.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:11.924" endtime="20221202 11:28:11.952"/>
</kw>
<msg timestamp="20221202 11:28:11.952" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:11.923" endtime="20221202 11:28:11.952"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:11.953" endtime="20221202 11:28:11.953"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:11.953" endtime="20221202 11:28:11.953"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:11.954" endtime="20221202 11:28:11.954"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.954" endtime="20221202 11:28:11.954"/>
</branch>
<status status="PASS" starttime="20221202 11:28:11.953" endtime="20221202 11:28:11.954"/>
</if>
<status status="PASS" starttime="20221202 11:28:11.923" endtime="20221202 11:28:11.955"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:11.956" endtime="20221202 11:28:11.957"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.955" endtime="20221202 11:28:11.957"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:11.963" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:11.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:11.980" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:11.960" endtime="20221202 11:28:11.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:11.982" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:11.981" endtime="20221202 11:28:11.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:11.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:11.983" endtime="20221202 11:28:11.984"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.960" endtime="20221202 11:28:11.984"/>
</kw>
<msg timestamp="20221202 11:28:11.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:11.959" endtime="20221202 11:28:11.985"/>
</kw>
<msg timestamp="20221202 11:28:11.985" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:11.958" endtime="20221202 11:28:11.985"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:11.986" endtime="20221202 11:28:11.986"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:11.986" endtime="20221202 11:28:11.986"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:11.987" endtime="20221202 11:28:11.988"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.987" endtime="20221202 11:28:11.988"/>
</branch>
<status status="PASS" starttime="20221202 11:28:11.985" endtime="20221202 11:28:11.988"/>
</if>
<status status="PASS" starttime="20221202 11:28:11.957" endtime="20221202 11:28:11.988"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:11.989" endtime="20221202 11:28:11.989"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.988" endtime="20221202 11:28:11.989"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:11.994" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.011" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:11.992" endtime="20221202 11:28:12.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.013" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.012" endtime="20221202 11:28:12.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.013" endtime="20221202 11:28:12.014"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.991" endtime="20221202 11:28:12.014"/>
</kw>
<msg timestamp="20221202 11:28:12.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:11.991" endtime="20221202 11:28:12.015"/>
</kw>
<msg timestamp="20221202 11:28:12.015" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:11.990" endtime="20221202 11:28:12.016"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.017" endtime="20221202 11:28:12.017"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.016" endtime="20221202 11:28:12.017"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.017" endtime="20221202 11:28:12.018"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.017" endtime="20221202 11:28:12.018"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.016" endtime="20221202 11:28:12.018"/>
</if>
<status status="PASS" starttime="20221202 11:28:11.989" endtime="20221202 11:28:12.019"/>
</kw>
<status status="PASS" starttime="20221202 11:28:11.856" endtime="20221202 11:28:12.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:11.855" endtime="20221202 11:28:12.020"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.030" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.036" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:28:12.026" endtime="20221202 11:28:12.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.039" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:28:12.037" endtime="20221202 11:28:12.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.040" endtime="20221202 11:28:12.041"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.025" endtime="20221202 11:28:12.041"/>
</kw>
<msg timestamp="20221202 11:28:12.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.024" endtime="20221202 11:28:12.042"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.023" endtime="20221202 11:28:12.043"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.052" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.091" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.049" endtime="20221202 11:28:12.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.094" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.092" endtime="20221202 11:28:12.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.094" endtime="20221202 11:28:12.095"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.047" endtime="20221202 11:28:12.095"/>
</kw>
<msg timestamp="20221202 11:28:12.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.046" endtime="20221202 11:28:12.096"/>
</kw>
<msg timestamp="20221202 11:28:12.096" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.045" endtime="20221202 11:28:12.096"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.097" endtime="20221202 11:28:12.097"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.097" endtime="20221202 11:28:12.097"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.097" endtime="20221202 11:28:12.099"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.097" endtime="20221202 11:28:12.099"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.096" endtime="20221202 11:28:12.099"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.043" endtime="20221202 11:28:12.099"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:12.100" endtime="20221202 11:28:12.101"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.099" endtime="20221202 11:28:12.101"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.108" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.131" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.104" endtime="20221202 11:28:12.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.133" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.132" endtime="20221202 11:28:12.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.133" endtime="20221202 11:28:12.134"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.103" endtime="20221202 11:28:12.135"/>
</kw>
<msg timestamp="20221202 11:28:12.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.103" endtime="20221202 11:28:12.135"/>
</kw>
<msg timestamp="20221202 11:28:12.136" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.102" endtime="20221202 11:28:12.136"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.136" endtime="20221202 11:28:12.136"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.136" endtime="20221202 11:28:12.137"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.137" endtime="20221202 11:28:12.137"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.137" endtime="20221202 11:28:12.137"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.136" endtime="20221202 11:28:12.137"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.101" endtime="20221202 11:28:12.138"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:12.138" endtime="20221202 11:28:12.139"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.138" endtime="20221202 11:28:12.139"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.150" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.178" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.146" endtime="20221202 11:28:12.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.180" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.179" endtime="20221202 11:28:12.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.181" endtime="20221202 11:28:12.182"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.141" endtime="20221202 11:28:12.182"/>
</kw>
<msg timestamp="20221202 11:28:12.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.141" endtime="20221202 11:28:12.183"/>
</kw>
<msg timestamp="20221202 11:28:12.183" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.140" endtime="20221202 11:28:12.183"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.184" endtime="20221202 11:28:12.184"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.184" endtime="20221202 11:28:12.184"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.184" endtime="20221202 11:28:12.185"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.184" endtime="20221202 11:28:12.185"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.183" endtime="20221202 11:28:12.185"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.139" endtime="20221202 11:28:12.185"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:12.187" endtime="20221202 11:28:12.187"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.186" endtime="20221202 11:28:12.188"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.195" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.220" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.191" endtime="20221202 11:28:12.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.222" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.221" endtime="20221202 11:28:12.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.223" endtime="20221202 11:28:12.224"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.189" endtime="20221202 11:28:12.224"/>
</kw>
<msg timestamp="20221202 11:28:12.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.189" endtime="20221202 11:28:12.225"/>
</kw>
<msg timestamp="20221202 11:28:12.226" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.188" endtime="20221202 11:28:12.226"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.227" endtime="20221202 11:28:12.227"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.226" endtime="20221202 11:28:12.227"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.227" endtime="20221202 11:28:12.228"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.227" endtime="20221202 11:28:12.228"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.226" endtime="20221202 11:28:12.228"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.188" endtime="20221202 11:28:12.228"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.022" endtime="20221202 11:28:12.229"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:12.021" endtime="20221202 11:28:12.229"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.238" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.242" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:28:12.234" endtime="20221202 11:28:12.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.243" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:28:12.242" endtime="20221202 11:28:12.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.244" endtime="20221202 11:28:12.244"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.233" endtime="20221202 11:28:12.245"/>
</kw>
<msg timestamp="20221202 11:28:12.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.233" endtime="20221202 11:28:12.245"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.233" endtime="20221202 11:28:12.246"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.254" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.276" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.250" endtime="20221202 11:28:12.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.277" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.277" endtime="20221202 11:28:12.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.278" endtime="20221202 11:28:12.280"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.249" endtime="20221202 11:28:12.281"/>
</kw>
<msg timestamp="20221202 11:28:12.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.248" endtime="20221202 11:28:12.282"/>
</kw>
<msg timestamp="20221202 11:28:12.283" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.247" endtime="20221202 11:28:12.283"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.283" endtime="20221202 11:28:12.283"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.283" endtime="20221202 11:28:12.284"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.284" endtime="20221202 11:28:12.284"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.284" endtime="20221202 11:28:12.284"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.283" endtime="20221202 11:28:12.284"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.246" endtime="20221202 11:28:12.285"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:12.285" endtime="20221202 11:28:12.286"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.285" endtime="20221202 11:28:12.286"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.292" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.309" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.288" endtime="20221202 11:28:12.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.310" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.309" endtime="20221202 11:28:12.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.311" endtime="20221202 11:28:12.312"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.288" endtime="20221202 11:28:12.313"/>
</kw>
<msg timestamp="20221202 11:28:12.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.287" endtime="20221202 11:28:12.313"/>
</kw>
<msg timestamp="20221202 11:28:12.314" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.287" endtime="20221202 11:28:12.314"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.315" endtime="20221202 11:28:12.315"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.314" endtime="20221202 11:28:12.315"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.315" endtime="20221202 11:28:12.316"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.315" endtime="20221202 11:28:12.316"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.314" endtime="20221202 11:28:12.316"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.286" endtime="20221202 11:28:12.316"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:12.317" endtime="20221202 11:28:12.317"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.316" endtime="20221202 11:28:12.317"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.324" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.342" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.320" endtime="20221202 11:28:12.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.344" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.343" endtime="20221202 11:28:12.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.344" endtime="20221202 11:28:12.345"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.319" endtime="20221202 11:28:12.345"/>
</kw>
<msg timestamp="20221202 11:28:12.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.319" endtime="20221202 11:28:12.346"/>
</kw>
<msg timestamp="20221202 11:28:12.346" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.318" endtime="20221202 11:28:12.346"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.347" endtime="20221202 11:28:12.347"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.347" endtime="20221202 11:28:12.347"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.348" endtime="20221202 11:28:12.348"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.348" endtime="20221202 11:28:12.348"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.347" endtime="20221202 11:28:12.348"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.317" endtime="20221202 11:28:12.349"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:12.350" endtime="20221202 11:28:12.350"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.349" endtime="20221202 11:28:12.350"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.356" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.376" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.354" endtime="20221202 11:28:12.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.378" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.377" endtime="20221202 11:28:12.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.378" endtime="20221202 11:28:12.379"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.353" endtime="20221202 11:28:12.380"/>
</kw>
<msg timestamp="20221202 11:28:12.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.353" endtime="20221202 11:28:12.381"/>
</kw>
<msg timestamp="20221202 11:28:12.381" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.351" endtime="20221202 11:28:12.381"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.383" endtime="20221202 11:28:12.383"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.382" endtime="20221202 11:28:12.383"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.383" endtime="20221202 11:28:12.384"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.383" endtime="20221202 11:28:12.384"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.382" endtime="20221202 11:28:12.384"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.351" endtime="20221202 11:28:12.384"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.232" endtime="20221202 11:28:12.384"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:12.230" endtime="20221202 11:28:12.385"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.394" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.399" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:28:12.390" endtime="20221202 11:28:12.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.401" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221202 11:28:12.400" endtime="20221202 11:28:12.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.401" endtime="20221202 11:28:12.403"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.389" endtime="20221202 11:28:12.404"/>
</kw>
<msg timestamp="20221202 11:28:12.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.389" endtime="20221202 11:28:12.404"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.388" endtime="20221202 11:28:12.405"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.411" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.438" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.408" endtime="20221202 11:28:12.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.440" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.439" endtime="20221202 11:28:12.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.441" endtime="20221202 11:28:12.442"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.407" endtime="20221202 11:28:12.442"/>
</kw>
<msg timestamp="20221202 11:28:12.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.407" endtime="20221202 11:28:12.443"/>
</kw>
<msg timestamp="20221202 11:28:12.443" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.406" endtime="20221202 11:28:12.444"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.444" endtime="20221202 11:28:12.444"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.444" endtime="20221202 11:28:12.444"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.444" endtime="20221202 11:28:12.445"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.444" endtime="20221202 11:28:12.445"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.444" endtime="20221202 11:28:12.445"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.405" endtime="20221202 11:28:12.445"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:12.446" endtime="20221202 11:28:12.447"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.445" endtime="20221202 11:28:12.447"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.452" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.469" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.449" endtime="20221202 11:28:12.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.471" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.470" endtime="20221202 11:28:12.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.471" endtime="20221202 11:28:12.472"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.448" endtime="20221202 11:28:12.473"/>
</kw>
<msg timestamp="20221202 11:28:12.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.448" endtime="20221202 11:28:12.474"/>
</kw>
<msg timestamp="20221202 11:28:12.474" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.448" endtime="20221202 11:28:12.474"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.475" endtime="20221202 11:28:12.475"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.475" endtime="20221202 11:28:12.475"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.475" endtime="20221202 11:28:12.476"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.475" endtime="20221202 11:28:12.476"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.475" endtime="20221202 11:28:12.476"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.447" endtime="20221202 11:28:12.476"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:12.477" endtime="20221202 11:28:12.477"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.476" endtime="20221202 11:28:12.478"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.483" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.502" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.480" endtime="20221202 11:28:12.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.504" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.503" endtime="20221202 11:28:12.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.504" endtime="20221202 11:28:12.505"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.479" endtime="20221202 11:28:12.505"/>
</kw>
<msg timestamp="20221202 11:28:12.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.479" endtime="20221202 11:28:12.506"/>
</kw>
<msg timestamp="20221202 11:28:12.506" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.478" endtime="20221202 11:28:12.506"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.507" endtime="20221202 11:28:12.507"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.507" endtime="20221202 11:28:12.507"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.507" endtime="20221202 11:28:12.508"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.507" endtime="20221202 11:28:12.508"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.506" endtime="20221202 11:28:12.508"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.478" endtime="20221202 11:28:12.508"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:12.509" endtime="20221202 11:28:12.509"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.508" endtime="20221202 11:28:12.509"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.514" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.533" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.512" endtime="20221202 11:28:12.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.535" level="INFO">200</msg>
<status status="PASS" starttime="20221202 11:28:12.534" endtime="20221202 11:28:12.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.536" endtime="20221202 11:28:12.537"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.511" endtime="20221202 11:28:12.537"/>
</kw>
<msg timestamp="20221202 11:28:12.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.511" endtime="20221202 11:28:12.538"/>
</kw>
<msg timestamp="20221202 11:28:12.539" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221202 11:28:12.510" endtime="20221202 11:28:12.539"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.539" endtime="20221202 11:28:12.539"/>
</kw>
<status status="NOT RUN" starttime="20221202 11:28:12.539" endtime="20221202 11:28:12.539"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.540" endtime="20221202 11:28:12.540"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.539" endtime="20221202 11:28:12.540"/>
</branch>
<status status="PASS" starttime="20221202 11:28:12.539" endtime="20221202 11:28:12.540"/>
</if>
<status status="PASS" starttime="20221202 11:28:12.509" endtime="20221202 11:28:12.541"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.387" endtime="20221202 11:28:12.541"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:12.386" endtime="20221202 11:28:12.541"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.551" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.567" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:12.548" endtime="20221202 11:28:12.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.569" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:12.568" endtime="20221202 11:28:12.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.569" endtime="20221202 11:28:12.570"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.547" endtime="20221202 11:28:12.570"/>
</kw>
<msg timestamp="20221202 11:28:12.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.547" endtime="20221202 11:28:12.571"/>
</kw>
<msg timestamp="20221202 11:28:12.572" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:12.546" endtime="20221202 11:28:12.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.572" endtime="20221202 11:28:12.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:12.573" endtime="20221202 11:28:12.573"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.545" endtime="20221202 11:28:12.573"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.545" endtime="20221202 11:28:12.574"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.543" endtime="20221202 11:28:12.574"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:12.542" endtime="20221202 11:28:12.574"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:12.584" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-senys 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:12.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:12.603" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221202 11:28:12.582" endtime="20221202 11:28:12.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:12.605" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221202 11:28:12.604" endtime="20221202 11:28:12.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:12.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:12.605" endtime="20221202 11:28:12.606"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.581" endtime="20221202 11:28:12.606"/>
</kw>
<msg timestamp="20221202 11:28:12.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:12.581" endtime="20221202 11:28:12.607"/>
</kw>
<msg timestamp="20221202 11:28:12.608" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221202 11:28:12.580" endtime="20221202 11:28:12.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221202 11:28:12.609" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221202 11:28:12.608" endtime="20221202 11:28:12.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:12.610" endtime="20221202 11:28:12.610"/>
</kw>
<status status="FAIL" starttime="20221202 11:28:12.578" endtime="20221202 11:28:12.611"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:22.618" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-senys 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:22.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:22.636" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221202 11:28:22.615" endtime="20221202 11:28:22.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:22.637" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221202 11:28:22.637" endtime="20221202 11:28:22.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:22.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:22.638" endtime="20221202 11:28:22.639"/>
</kw>
<status status="PASS" starttime="20221202 11:28:22.614" endtime="20221202 11:28:22.639"/>
</kw>
<msg timestamp="20221202 11:28:22.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:22.613" endtime="20221202 11:28:22.640"/>
</kw>
<msg timestamp="20221202 11:28:22.641" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221202 11:28:22.613" endtime="20221202 11:28:22.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221202 11:28:22.642" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221202 11:28:22.641" endtime="20221202 11:28:22.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:22.643" endtime="20221202 11:28:22.643"/>
</kw>
<status status="FAIL" starttime="20221202 11:28:22.611" endtime="20221202 11:28:22.644"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:32.652" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-senys 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:32.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:32.672" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221202 11:28:32.649" endtime="20221202 11:28:32.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:32.673" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221202 11:28:32.672" endtime="20221202 11:28:32.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:32.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:32.673" endtime="20221202 11:28:32.674"/>
</kw>
<status status="PASS" starttime="20221202 11:28:32.647" endtime="20221202 11:28:32.675"/>
</kw>
<msg timestamp="20221202 11:28:32.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:32.647" endtime="20221202 11:28:32.676"/>
</kw>
<msg timestamp="20221202 11:28:32.676" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221202 11:28:32.646" endtime="20221202 11:28:32.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221202 11:28:32.677" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221202 11:28:32.676" endtime="20221202 11:28:32.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221202 11:28:32.678" endtime="20221202 11:28:32.678"/>
</kw>
<status status="FAIL" starttime="20221202 11:28:32.645" endtime="20221202 11:28:32.679"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:42.686" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-senys 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:42.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:42.713" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.683" endtime="20221202 11:28:42.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:42.714" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.713" endtime="20221202 11:28:42.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:42.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:42.714" endtime="20221202 11:28:42.715"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.682" endtime="20221202 11:28:42.716"/>
</kw>
<msg timestamp="20221202 11:28:42.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:42.682" endtime="20221202 11:28:42.717"/>
</kw>
<msg timestamp="20221202 11:28:42.717" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.681" endtime="20221202 11:28:42.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.718" endtime="20221202 11:28:42.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.718" endtime="20221202 11:28:42.719"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.680" endtime="20221202 11:28:42.720"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.578" endtime="20221202 11:28:42.720"/>
</kw>
<status status="PASS" starttime="20221202 11:28:12.577" endtime="20221202 11:28:42.720"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:12.576" endtime="20221202 11:28:42.720"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:42.730" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-senys/buc-xhuom 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:42.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:42.753" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.728" endtime="20221202 11:28:42.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:42.754" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.754" endtime="20221202 11:28:42.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:42.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:42.755" endtime="20221202 11:28:42.757"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.727" endtime="20221202 11:28:42.758"/>
</kw>
<msg timestamp="20221202 11:28:42.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:42.726" endtime="20221202 11:28:42.759"/>
</kw>
<msg timestamp="20221202 11:28:42.759" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.726" endtime="20221202 11:28:42.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.759" endtime="20221202 11:28:42.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.760" endtime="20221202 11:28:42.761"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.725" endtime="20221202 11:28:42.761"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.724" endtime="20221202 11:28:42.761"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.723" endtime="20221202 11:28:42.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:42.722" endtime="20221202 11:28:42.762"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:42.773" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-senys/buc-xhuom/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:42.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:42.792" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.770" endtime="20221202 11:28:42.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:42.794" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.793" endtime="20221202 11:28:42.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:42.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:42.794" endtime="20221202 11:28:42.795"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.769" endtime="20221202 11:28:42.796"/>
</kw>
<msg timestamp="20221202 11:28:42.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:42.769" endtime="20221202 11:28:42.797"/>
</kw>
<msg timestamp="20221202 11:28:42.797" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.768" endtime="20221202 11:28:42.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.797" endtime="20221202 11:28:42.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.798" endtime="20221202 11:28:42.799"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.767" endtime="20221202 11:28:42.799"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.766" endtime="20221202 11:28:42.799"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.765" endtime="20221202 11:28:42.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:42.764" endtime="20221202 11:28:42.800"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:28:42.803" endtime="20221202 11:28:42.803"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:42.811" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-senys/buc-xhuom/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:42.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:42.829" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.808" endtime="20221202 11:28:42.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:42.830" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.829" endtime="20221202 11:28:42.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:42.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:42.830" endtime="20221202 11:28:42.831"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.808" endtime="20221202 11:28:42.832"/>
</kw>
<msg timestamp="20221202 11:28:42.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:42.807" endtime="20221202 11:28:42.833"/>
</kw>
<msg timestamp="20221202 11:28:42.834" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.806" endtime="20221202 11:28:42.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.834" endtime="20221202 11:28:42.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.835" endtime="20221202 11:28:42.835"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.805" endtime="20221202 11:28:42.836"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.805" endtime="20221202 11:28:42.836"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.804" endtime="20221202 11:28:42.836"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.804" endtime="20221202 11:28:42.837"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:42.802" endtime="20221202 11:28:42.837"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:42.847" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-senys/buc-xhuom&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:42.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:42.865" level="INFO">${output} = {"status":"OK","path":"/vol-senys/buc-xhuom","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-senys/buc-xhuom/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221202 11:28:42.844" endtime="20221202 11:28:42.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:42.867" level="INFO">{"status":"OK","path":"/vol-senys/buc-xhuom","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-senys/buc-xhuom/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20221202 11:28:42.865" endtime="20221202 11:28:42.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:42.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:42.867" endtime="20221202 11:28:42.868"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.844" endtime="20221202 11:28:42.869"/>
</kw>
<msg timestamp="20221202 11:28:42.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:42.843" endtime="20221202 11:28:42.869"/>
</kw>
<msg timestamp="20221202 11:28:42.870" level="INFO">${result} = {"status":"OK","path":"/vol-senys/buc-xhuom","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-senys/buc-xhuom/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221202 11:28:42.843" endtime="20221202 11:28:42.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.870" endtime="20221202 11:28:42.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.871" endtime="20221202 11:28:42.871"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.842" endtime="20221202 11:28:42.872"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.841" endtime="20221202 11:28:42.872"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.840" endtime="20221202 11:28:42.872"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:42.839" endtime="20221202 11:28:42.872"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:42.883" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-senys 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:42.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:42.902" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.879" endtime="20221202 11:28:42.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:42.904" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.903" endtime="20221202 11:28:42.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:42.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:42.904" endtime="20221202 11:28:42.905"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.878" endtime="20221202 11:28:42.906"/>
</kw>
<msg timestamp="20221202 11:28:42.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:42.878" endtime="20221202 11:28:42.911"/>
</kw>
<msg timestamp="20221202 11:28:42.911" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.877" endtime="20221202 11:28:42.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.912" endtime="20221202 11:28:42.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.912" endtime="20221202 11:28:42.913"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.876" endtime="20221202 11:28:42.913"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.876" endtime="20221202 11:28:42.913"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.874" endtime="20221202 11:28:42.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:42.873" endtime="20221202 11:28:42.914"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:42.923" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-senys/buc-xhuom 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:42.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:42.939" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.920" endtime="20221202 11:28:42.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:42.941" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.939" endtime="20221202 11:28:42.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:42.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:42.941" endtime="20221202 11:28:42.942"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.919" endtime="20221202 11:28:42.942"/>
</kw>
<msg timestamp="20221202 11:28:42.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:42.919" endtime="20221202 11:28:42.943"/>
</kw>
<msg timestamp="20221202 11:28:42.948" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.918" endtime="20221202 11:28:42.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.948" endtime="20221202 11:28:42.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.950" endtime="20221202 11:28:42.950"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.917" endtime="20221202 11:28:42.954"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.917" endtime="20221202 11:28:42.955"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.916" endtime="20221202 11:28:42.955"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:42.915" endtime="20221202 11:28:42.955"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:42.968" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:42.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:42.985" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.964" endtime="20221202 11:28:42.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:42.986" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.985" endtime="20221202 11:28:42.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:42.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:42.986" endtime="20221202 11:28:42.988"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.963" endtime="20221202 11:28:42.989"/>
</kw>
<msg timestamp="20221202 11:28:42.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:42.963" endtime="20221202 11:28:42.990"/>
</kw>
<msg timestamp="20221202 11:28:42.990" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221202 11:28:42.962" endtime="20221202 11:28:42.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.991" endtime="20221202 11:28:42.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:42.992" endtime="20221202 11:28:42.992"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.961" endtime="20221202 11:28:42.992"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.961" endtime="20221202 11:28:42.992"/>
</kw>
<status status="PASS" starttime="20221202 11:28:42.959" endtime="20221202 11:28:42.993"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:42.958" endtime="20221202 11:28:42.993"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20221202 11:27:43.136" endtime="20221202 11:28:42.995"/>
</suite>
<status status="PASS" starttime="20221202 11:26:47.239" endtime="20221202 11:28:42.999"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:49.529" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:54.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:54.767" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:49.525" endtime="20221202 11:28:54.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:54.769" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:54.768" endtime="20221202 11:28:54.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:54.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:54.769" endtime="20221202 11:28:54.770"/>
</kw>
<status status="PASS" starttime="20221202 11:28:49.524" endtime="20221202 11:28:54.770"/>
</kw>
<msg timestamp="20221202 11:28:54.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:49.524" endtime="20221202 11:28:54.772"/>
</kw>
<msg timestamp="20221202 11:28:54.772" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:49.523" endtime="20221202 11:28:54.772"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:54.772" endtime="20221202 11:28:54.773"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:54.778" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:28:59.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:28:59.790" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:54.775" endtime="20221202 11:28:59.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:28:59.791" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:59.791" endtime="20221202 11:28:59.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:28:59.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:28:59.792" endtime="20221202 11:28:59.792"/>
</kw>
<status status="PASS" starttime="20221202 11:28:54.774" endtime="20221202 11:28:59.793"/>
</kw>
<msg timestamp="20221202 11:28:59.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:54.774" endtime="20221202 11:28:59.794"/>
</kw>
<msg timestamp="20221202 11:28:59.794" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:54.773" endtime="20221202 11:28:59.794"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:28:59.794" endtime="20221202 11:28:59.795"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:28:59.801" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:29:08.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:29:08.477" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:59.798" endtime="20221202 11:29:08.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:29:08.478" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:29:08.477" endtime="20221202 11:29:08.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:29:08.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:29:08.479" endtime="20221202 11:29:08.479"/>
</kw>
<status status="PASS" starttime="20221202 11:28:59.797" endtime="20221202 11:29:08.480"/>
</kw>
<msg timestamp="20221202 11:29:08.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:28:59.796" endtime="20221202 11:29:08.480"/>
</kw>
<msg timestamp="20221202 11:29:08.481" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:28:59.795" endtime="20221202 11:29:08.481"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:29:08.481" endtime="20221202 11:29:08.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:28:49.522" endtime="20221202 11:29:08.482"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221202 11:28:49.455" endtime="20221202 11:29:08.484"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221202 11:29:20.241" level="INFO">${random} = 54186</msg>
<status status="PASS" starttime="20221202 11:29:20.240" endtime="20221202 11:29:20.241"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:29:20.247" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-54186 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:30:00.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:30:00.084" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:29:20.243" endtime="20221202 11:30:00.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:30:00.086" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:30:00.085" endtime="20221202 11:30:00.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:30:00.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:30:00.087" endtime="20221202 11:30:00.087"/>
</kw>
<status status="PASS" starttime="20221202 11:29:20.242" endtime="20221202 11:30:00.088"/>
</kw>
<msg timestamp="20221202 11:30:00.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:29:20.242" endtime="20221202 11:30:00.089"/>
</kw>
<msg timestamp="20221202 11:30:00.090" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:29:20.241" endtime="20221202 11:30:00.090"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:30:00.090" endtime="20221202 11:30:00.090"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:29:20.239" endtime="20221202 11:30:00.091"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221202 11:29:20.173" endtime="20221202 11:30:00.093"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221202 11:31:02.613" level="INFO">${random} = 47004</msg>
<status status="PASS" starttime="20221202 11:31:02.612" endtime="20221202 11:31:02.613"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:31:02.619" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-47004 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:31:11.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:31:11.420" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:31:02.614" endtime="20221202 11:31:11.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:31:11.421" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:31:11.421" endtime="20221202 11:31:11.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:31:11.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:31:11.422" endtime="20221202 11:31:11.423"/>
</kw>
<status status="PASS" starttime="20221202 11:31:02.614" endtime="20221202 11:31:11.423"/>
</kw>
<msg timestamp="20221202 11:31:11.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:31:02.613" endtime="20221202 11:31:11.425"/>
</kw>
<msg timestamp="20221202 11:31:11.425" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221202 11:31:02.613" endtime="20221202 11:31:11.425"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:31:11.425" endtime="20221202 11:31:11.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:31:02.611" endtime="20221202 11:31:11.426"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221202 11:31:02.546" endtime="20221202 11:31:11.428"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:25:46.698" endtime="20221202 11:25:46.699"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:25:46.709" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:25:46.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:25:46.833" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 02 Dec 2022 11:25:46 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 02 Dec 2022 11:00:34 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221202 11:25:46.703" endtime="20221202 11:25:46.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:25:46.834" level="INFO">HTTP/1.1 200 OK
Date: Fri, 02 Dec 2022 11:25:46 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 02 Dec 2022 11:00:34 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221202 11:25:46.833" endtime="20221202 11:25:46.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:25:46.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:25:46.835" endtime="20221202 11:25:46.836"/>
</kw>
<status status="PASS" starttime="20221202 11:25:46.700" endtime="20221202 11:25:46.836"/>
</kw>
<msg timestamp="20221202 11:25:46.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:25:46.700" endtime="20221202 11:25:46.838"/>
</kw>
<msg timestamp="20221202 11:25:46.838" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 02 Dec 2022 11:25:46 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Fri, 02 Dec 2022 11:00:34 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221202 11:25:46.699" endtime="20221202 11:25:46.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:25:46.838" endtime="20221202 11:25:46.839"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:25:46.697" endtime="20221202 11:25:46.839"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:25:46.845" endtime="20221202 11:25:46.848"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221202 11:25:46.849" level="INFO">${random} = zxSniAOBzJ</msg>
<status status="PASS" starttime="20221202 11:25:46.848" endtime="20221202 11:25:46.849"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:25:46.859" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p zxSniAOBzJ  2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:26:01.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:26:01.658" level="INFO">${output} = 2022-12-02 11:25:50,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:25:50,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221202 11:25:46.855" endtime="20221202 11:26:01.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:26:01.660" level="INFO">2022-12-02 11:25:50,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:25:50,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-02 11:25:50,641 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-02 11:25:50,956 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zxSniAOBzJ and number-of-tests 1
2022-12-02 11:25:51,071 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:25:52,078 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:25:52,529 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-02 11:25:52,764 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-02 11:25:53,079 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:25:54,079 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:25:54,449 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-02 11:25:54,871 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-02 11:25:55,080 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:25:56,080 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:25:57,081 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:25:58,081 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:25:59,082 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:26:00,082 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:26:01,083 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-02 11:26:01,244 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=7239.48618, max=7239.48618, mean=7239.48618, stddev=0.0, median=7239.48618, p75=7239.48618, p95=7239.48618, p98=7239.48618, p99=7239.48618, p999=7239.48618, mean_rate=0.11905355330032939, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-02 11:26:01,246 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2022-12-02 11:26:01,246 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-02 11:26:01,246 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221202 11:26:01.658" endtime="20221202 11:26:01.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:26:01.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:26:01.660" endtime="20221202 11:26:01.666"/>
</kw>
<status status="PASS" starttime="20221202 11:25:46.853" endtime="20221202 11:26:01.666"/>
</kw>
<msg timestamp="20221202 11:26:01.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:25:46.853" endtime="20221202 11:26:01.667"/>
</kw>
<msg timestamp="20221202 11:26:01.667" level="INFO">${result} = 2022-12-02 11:25:50,514 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:25:50,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221202 11:25:46.852" endtime="20221202 11:26:01.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:26:01.668" endtime="20221202 11:26:01.668"/>
</kw>
<status status="PASS" starttime="20221202 11:25:46.849" endtime="20221202 11:26:01.669"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:26:01.677" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p zxSniAOBzJ  2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:26:12.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:26:12.779" level="INFO">${output} = 2022-12-02 11:26:05,728 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:26:05,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221202 11:26:01.673" endtime="20221202 11:26:12.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:26:12.781" level="INFO">2022-12-02 11:26:05,728 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:26:05,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-02 11:26:05,978 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-02 11:26:06,252 [main] INFO freon.BaseFreonGenerator: Executing test with prefix zxSniAOBzJ and number-of-tests 1
2022-12-02 11:26:06,372 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:26:07,377 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:26:08,378 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:26:09,379 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:26:09,524 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-02 11:26:10,389 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-02 11:26:11,390 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-02 11:26:12,394 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=64.095198, max=64.095198, mean=64.095198, stddev=0.0, median=64.095198, p75=64.095198, p95=64.095198, p98=64.095198, p99=64.095198, p999=64.095198, mean_rate=0.9069571801916206, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-02 11:26:12,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-12-02 11:26:12,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-02 11:26:12,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221202 11:26:12.780" endtime="20221202 11:26:12.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:26:12.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:26:12.781" endtime="20221202 11:26:12.782"/>
</kw>
<status status="PASS" starttime="20221202 11:26:01.672" endtime="20221202 11:26:12.782"/>
</kw>
<msg timestamp="20221202 11:26:12.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:26:01.672" endtime="20221202 11:26:12.783"/>
</kw>
<msg timestamp="20221202 11:26:12.784" level="INFO">${result} = 2022-12-02 11:26:05,728 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:26:05,978 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221202 11:26:01.671" endtime="20221202 11:26:12.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:26:12.784" endtime="20221202 11:26:12.785"/>
</kw>
<status status="PASS" starttime="20221202 11:26:01.669" endtime="20221202 11:26:12.785"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:25:46.843" endtime="20221202 11:26:12.785"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221202 11:25:46.607" endtime="20221202 11:26:12.788"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="230435"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
