<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221202 11:23:26.689" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-om-prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:17:02.570" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:17:31.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:17:31.760" level="INFO">${output} = 2022-12-02 11:17:04,631 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:17:04,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221202 11:17:02.564" endtime="20221202 11:17:31.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:17:31.761" level="INFO">2022-12-02 11:17:04,631 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:17:04,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-02 11:17:04,771 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-02 11:17:05,003 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2022-12-02 11:17:05,094 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-02 11:17:05,929 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-02 11:17:06,102 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-02 11:17:06,155 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-02 11:17:07,103 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-02 11:17:07,640 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-02 11:17:07,993 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-02 11:17:08,104 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-02 11:17:09,104 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-12-02 11:17:10,105 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2022-12-02 11:17:11,106 [Thread-3] INFO freon.ProgressBar: Progress: 5.00 % (5 out of 100)
2022-12-02 11:17:12,106 [Thread-3] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2022-12-02 11:17:13,107 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2022-12-02 11:17:14,109 [Thread-3] INFO freon.ProgressBar: Progress: 21.00 % (21 out of 100)
2022-12-02 11:17:15,110 [Thread-3] INFO freon.ProgressBar: Progress: 28.00 % (28 out of 100)
2022-12-02 11:17:16,110 [Thread-3] INFO freon.ProgressBar: Progress: 36.00 % (36 out of 100)
2022-12-02 11:17:17,111 [Thread-3] INFO freon.ProgressBar: Progress: 36.00 % (36 out of 100)
2022-12-02 11:17:18,112 [Thread-3] INFO freon.ProgressBar: Progress: 36.00 % (36 out of 100)
2022-12-02 11:17:19,112 [Thread-3] INFO freon.ProgressBar: Progress: 39.00 % (39 out of 100)
2022-12-02 11:17:20,113 [Thread-3] INFO freon.ProgressBar: Progress: 47.00 % (47 out of 100)
2022-12-02 11:17:21,114 [Thread-3] INFO freon.ProgressBar: Progress: 55.00 % (55 out of 100)
2022-12-02 11:17:22,114 [Thread-3] INFO freon.ProgressBar: Progress: 64.00 % (64 out of 100)
2022-12-02 11:17:23,115 [Thread-3] INFO freon.ProgressBar: Progress: 64.00 % (64 out of 100)
2022-12-02 11:17:24,116 [Thread-3] INFO freon.ProgressBar: Progress: 64.00 % (64 out of 100)
2022-12-02 11:17:25,119 [Thread-3] INFO freon.ProgressBar: Progress: 69.00 % (69 out of 100)
2022-12-02 11:17:26,132 [Thread-3] INFO freon.ProgressBar: Progress: 79.00 % (79 out of 100)
2022-12-02 11:17:27,133 [Thread-3] INFO freon.ProgressBar: Progress: 88.00 % (88 out of 100)
2022-12-02 11:17:28,134 [Thread-3] INFO freon.ProgressBar: Progress: 97.00 % (97 out of 100)
2022-12-02 11:17:29,135 [Thread-3] INFO freon.ProgressBar: Progress: 97.00 % (97 out of 100)
2022-12-02 11:17:30,135 [Thread-3] INFO freon.ProgressBar: Progress: 97.00 % (97 out of 100)
2022-12-02 11:17:31,136 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-12-02 11:17:31,394 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=77.112987, max=3746.128129, mean=241.97639942499757, stddev=544.3877014517883, median=122.753833, p75=144.893533, p95=301.408885, p98=2591.448699, p99=2594.511509, p999=3746.128129, mean_rate=3.9862262665758, m1=2.1759250775956884, m5=1.424975868049688, m15=1.276834582038198, rate_unit=events/second, duration_unit=milliseconds
2022-12-02 11:17:31,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 26
2022-12-02 11:17:31,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-02 11:17:31,395 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20221202 11:17:31.761" endtime="20221202 11:17:31.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:17:31.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:17:31.762" endtime="20221202 11:17:31.762"/>
</kw>
<status status="PASS" starttime="20221202 11:17:02.564" endtime="20221202 11:17:31.763"/>
</kw>
<msg timestamp="20221202 11:17:31.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:17:02.563" endtime="20221202 11:17:31.764"/>
</kw>
<msg timestamp="20221202 11:17:31.765" level="INFO">${result} = 2022-12-02 11:17:04,631 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-02 11:17:04,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221202 11:17:02.562" endtime="20221202 11:17:31.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:17:31.765" endtime="20221202 11:17:31.766"/>
</kw>
<status status="PASS" starttime="20221202 11:17:02.561" endtime="20221202 11:17:31.766"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221202 11:17:31.767" level="INFO">${random} = 37066</msg>
<status status="PASS" starttime="20221202 11:17:31.766" endtime="20221202 11:17:31.767"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221202 11:17:31.769" level="INFO">${volume_name} = 37066-volume-for-prepare</msg>
<status status="PASS" starttime="20221202 11:17:31.767" endtime="20221202 11:17:31.769"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221202 11:17:31.771" level="INFO">${bucket_name} = 37066-bucket-for-prepare</msg>
<status status="PASS" starttime="20221202 11:17:31.769" endtime="20221202 11:17:31.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:17:31.775" level="INFO">Running command 'ozone sh volume create /37066-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:17:35.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:17:35.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221202 11:17:31.772" endtime="20221202 11:17:35.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:17:35.194" level="INFO"/>
<status status="PASS" starttime="20221202 11:17:35.193" endtime="20221202 11:17:35.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:17:35.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:17:35.194" endtime="20221202 11:17:35.195"/>
</kw>
<status status="PASS" starttime="20221202 11:17:31.772" endtime="20221202 11:17:35.195"/>
</kw>
<msg timestamp="20221202 11:17:35.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:17:31.771" endtime="20221202 11:17:35.196"/>
</kw>
<status status="PASS" starttime="20221202 11:17:31.771" endtime="20221202 11:17:35.196"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:17:35.201" level="INFO">Running command 'ozone sh bucket create /37066-volume-for-prepare/37066-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:17:38.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:17:38.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221202 11:17:35.198" endtime="20221202 11:17:38.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:17:38.568" level="INFO"/>
<status status="PASS" starttime="20221202 11:17:38.568" endtime="20221202 11:17:38.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:17:38.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:17:38.569" endtime="20221202 11:17:38.569"/>
</kw>
<status status="PASS" starttime="20221202 11:17:35.197" endtime="20221202 11:17:38.569"/>
</kw>
<msg timestamp="20221202 11:17:38.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:17:35.197" endtime="20221202 11:17:38.570"/>
</kw>
<status status="PASS" starttime="20221202 11:17:35.196" endtime="20221202 11:17:38.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:17:38.575" level="INFO">Running command 'ozone sh key put /37066-volume-for-prepare/37066-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:17:45.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:17:45.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221202 11:17:38.572" endtime="20221202 11:17:45.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:17:45.072" level="INFO"/>
<status status="PASS" starttime="20221202 11:17:45.071" endtime="20221202 11:17:45.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:17:45.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:17:45.072" endtime="20221202 11:17:45.073"/>
</kw>
<status status="PASS" starttime="20221202 11:17:38.571" endtime="20221202 11:17:45.073"/>
</kw>
<msg timestamp="20221202 11:17:45.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:17:38.571" endtime="20221202 11:17:45.074"/>
</kw>
<status status="PASS" starttime="20221202 11:17:38.570" endtime="20221202 11:17:45.074"/>
</kw>
<status status="PASS" starttime="20221202 11:17:02.556" endtime="20221202 11:17:45.074"/>
</kw>
<test id="s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:17:45.079" endtime="20221202 11:17:45.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:17:45.085" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:22:45.076" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20221202 11:17:45.082" endtime="20221202 11:22:45.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221202 11:22:45.076" endtime="20221202 11:22:45.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221202 11:22:45.077" endtime="20221202 11:22:45.077"/>
</kw>
<status status="FAIL" starttime="20221202 11:17:45.081" endtime="20221202 11:22:45.077"/>
</kw>
<msg timestamp="20221202 11:22:45.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20221202 11:17:45.081" endtime="20221202 11:22:45.078"/>
</kw>
<status status="FAIL" starttime="20221202 11:17:45.080" endtime="20221202 11:22:45.078"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20221202 11:22:45.078" endtime="20221202 11:22:45.078"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20221202 11:17:45.075" endtime="20221202 11:22:45.080">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:22:45.082" endtime="20221202 11:22:45.083"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:22:45.088" level="INFO">Running command 'ozone sh key info /37066-volume-for-prepare/37066-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:22:49.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20221202 11:22:49.168" level="INFO">${output} = {
  "volumeName" : "37066-volume-for-prepare",
  "bucketName" : "37066-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-12-02T11:17:42.258Z",
  "modificati...</msg>
<status status="PASS" starttime="20221202 11:22:45.085" endtime="20221202 11:22:49.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:22:49.170" level="INFO">{
  "volumeName" : "37066-volume-for-prepare",
  "bucketName" : "37066-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-12-02T11:17:42.258Z",
  "modificationTime" : "2022-12-02T11:17:44.672Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 109611004723200101,
    "length" : 17539,
    "offset" : 0,
    "keyOffset" : 0
  } ]
}</msg>
<status status="PASS" starttime="20221202 11:22:49.169" endtime="20221202 11:22:49.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:22:49.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:22:49.170" endtime="20221202 11:22:49.171"/>
</kw>
<status status="PASS" starttime="20221202 11:22:45.084" endtime="20221202 11:22:49.171"/>
</kw>
<msg timestamp="20221202 11:22:49.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221202 11:22:45.084" endtime="20221202 11:22:49.172"/>
</kw>
<msg timestamp="20221202 11:22:49.172" level="INFO">${result} = {
  "volumeName" : "37066-volume-for-prepare",
  "bucketName" : "37066-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17539,
  "creationTime" : "2022-12-02T11:17:42.258Z",
  "modificati...</msg>
<status status="PASS" starttime="20221202 11:22:45.083" endtime="20221202 11:22:49.172"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:22:49.172" endtime="20221202 11:22:49.173"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:22:45.081" endtime="20221202 11:22:49.173"/>
</test>
<test id="s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221202 11:22:49.175" endtime="20221202 11:22:49.176"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:22:49.179" level="INFO">Running command 'ozone sh key put /37066-volume-for-prepare/37066-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:22:52.461" level="INFO">${rc} = 255</msg>
<msg timestamp="20221202 11:22:52.461" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221202 11:22:49.177" endtime="20221202 11:22:52.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:22:52.462" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221202 11:22:52.461" endtime="20221202 11:22:52.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:22:52.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:22:52.463" endtime="20221202 11:22:52.463"/>
</kw>
<msg timestamp="20221202 11:22:52.464" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20221202 11:22:49.176" endtime="20221202 11:22:52.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221202 11:22:52.464" endtime="20221202 11:22:52.465"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221202 11:22:52.468" level="INFO">Running command 'ozone sh key info /37066-volume-for-prepare/37066-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20221202 11:22:55.783" level="INFO">${rc} = 255</msg>
<msg timestamp="20221202 11:22:55.783" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221202 11:22:52.466" endtime="20221202 11:22:55.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221202 11:22:55.785" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20221202 11:22:55.784" endtime="20221202 11:22:55.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221202 11:22:55.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221202 11:22:55.785" endtime="20221202 11:22:55.786"/>
</kw>
<status status="PASS" starttime="20221202 11:22:52.465" endtime="20221202 11:22:55.786"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221202 11:22:49.174" endtime="20221202 11:22:55.786"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="FAIL" starttime="20221202 11:17:02.477" endtime="20221202 11:22:55.788"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
