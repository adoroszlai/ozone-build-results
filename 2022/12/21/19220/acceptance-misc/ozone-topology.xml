<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221221 06:52:18.221" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:47:47.624" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:47:51.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:47:51.590" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221221 06:47:47.621" endtime="20221221 06:47:51.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:47:51.592" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221221 06:47:51.591" endtime="20221221 06:47:51.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:47:51.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:47:51.592" endtime="20221221 06:47:51.592"/>
</kw>
<status status="PASS" starttime="20221221 06:47:47.620" endtime="20221221 06:47:51.593"/>
</kw>
<msg timestamp="20221221 06:47:51.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:47:47.620" endtime="20221221 06:47:51.594"/>
</kw>
<msg timestamp="20221221 06:47:51.595" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221221 06:47:47.619" endtime="20221221 06:47:51.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:47:51.595" endtime="20221221 06:47:51.595"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:47:47.618" endtime="20221221 06:47:51.595"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:47:51.601" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:47:55.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:47:55.450" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20221221 06:47:51.598" endtime="20221221 06:47:55.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:47:55.451" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20221221 06:47:55.450" endtime="20221221 06:47:55.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:47:55.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:47:55.451" endtime="20221221 06:47:55.452"/>
</kw>
<status status="PASS" starttime="20221221 06:47:51.598" endtime="20221221 06:47:55.452"/>
</kw>
<msg timestamp="20221221 06:47:55.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:47:51.598" endtime="20221221 06:47:55.453"/>
</kw>
<msg timestamp="20221221 06:47:55.453" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" starttime="20221221 06:47:51.597" endtime="20221221 06:47:55.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:47:55.453" endtime="20221221 06:47:55.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:47:55.454" endtime="20221221 06:47:55.454"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:47:51.596" endtime="20221221 06:47:55.455"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:47:55.461" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:47:59.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:47:59.506" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221221 06:47:55.458" endtime="20221221 06:47:59.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:47:59.508" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221221 06:47:59.507" endtime="20221221 06:47:59.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:47:59.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:47:59.508" endtime="20221221 06:47:59.508"/>
</kw>
<status status="PASS" starttime="20221221 06:47:55.458" endtime="20221221 06:47:59.509"/>
</kw>
<msg timestamp="20221221 06:47:59.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:47:55.458" endtime="20221221 06:47:59.509"/>
</kw>
<msg timestamp="20221221 06:47:59.510" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221221 06:47:55.457" endtime="20221221 06:47:59.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:47:59.510" endtime="20221221 06:47:59.510"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:47:55.456" endtime="20221221 06:47:59.510"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:47:59.516" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:03.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:03.089" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221221 06:47:59.513" endtime="20221221 06:48:03.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:03.090" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20221221 06:48:03.090" endtime="20221221 06:48:03.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:03.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:03.091" endtime="20221221 06:48:03.091"/>
</kw>
<status status="PASS" starttime="20221221 06:47:59.513" endtime="20221221 06:48:03.091"/>
</kw>
<msg timestamp="20221221 06:48:03.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:47:59.512" endtime="20221221 06:48:03.092"/>
</kw>
<msg timestamp="20221221 06:48:03.092" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topolog...</msg>
<status status="PASS" starttime="20221221 06:47:59.512" endtime="20221221 06:48:03.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:03.092" endtime="20221221 06:48:03.093"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:47:59.511" endtime="20221221 06:48:03.093"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221221 06:47:47.572" endtime="20221221 06:48:03.094"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:08.627" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:18.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:18.662" level="INFO">${output} = 2022-12-21 06:48:11,093 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-21 06:48:11,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221221 06:48:08.623" endtime="20221221 06:48:18.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:18.664" level="INFO">2022-12-21 06:48:11,093 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-21 06:48:11,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-21 06:48:11,207 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-21 06:48:11,398 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2022-12-21 06:48:11,588 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-21 06:48:12,593 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-21 06:48:13,062 [main] INFO rpc.RpcClient: Creating Volume: recon, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-21 06:48:13,128 [main] INFO rpc.RpcClient: Creating Bucket: recon/api, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-21 06:48:13,593 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-21 06:48:13,870 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-21 06:48:14,247 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-21 06:48:14,594 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-21 06:48:15,595 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2022-12-21 06:48:16,595 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (3 out of 10)
2022-12-21 06:48:17,596 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2022-12-21 06:48:18,291 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=94.192766, max=3062.652748, mean=426.9220779207504, stddev=876.3836534665935, median=121.709228, p75=144.019065, p95=3062.652748, p98=3062.652748, p99=3062.652748, p999=3062.652748, mean_rate=1.9499546285629499, m1=2.0, m5=2.0, m15=2.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-21 06:48:18,292 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2022-12-21 06:48:18,292 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-21 06:48:18,292 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20221221 06:48:18.663" endtime="20221221 06:48:18.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:18.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:18.664" endtime="20221221 06:48:18.665"/>
</kw>
<status status="PASS" starttime="20221221 06:48:08.623" endtime="20221221 06:48:18.665"/>
</kw>
<msg timestamp="20221221 06:48:18.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:08.622" endtime="20221221 06:48:18.666"/>
</kw>
<msg timestamp="20221221 06:48:18.666" level="INFO">${result} = 2022-12-21 06:48:11,093 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-21 06:48:11,206 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221221 06:48:08.622" endtime="20221221 06:48:18.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:18.667" endtime="20221221 06:48:18.667"/>
</kw>
<status status="PASS" starttime="20221221 06:48:08.621" endtime="20221221 06:48:18.667"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:18.668" endtime="20221221 06:48:18.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:18.673" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:18.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:18.927" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221221 06:48:18.670" endtime="20221221 06:48:18.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:18.929" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221221 06:48:18.928" endtime="20221221 06:48:18.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:18.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:18.929" endtime="20221221 06:48:18.929"/>
</kw>
<status status="PASS" starttime="20221221 06:48:18.670" endtime="20221221 06:48:18.930"/>
</kw>
<msg timestamp="20221221 06:48:18.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:18.670" endtime="20221221 06:48:18.930"/>
</kw>
<msg timestamp="20221221 06:48:18.931" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221221 06:48:18.669" endtime="20221221 06:48:18.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:18.931" endtime="20221221 06:48:18.936"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:18.948" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:18.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:18.979" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221221 06:48:18.943" endtime="20221221 06:48:18.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:18.980" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221221 06:48:18.980" endtime="20221221 06:48:18.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:18.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:18.981" endtime="20221221 06:48:18.981"/>
</kw>
<status status="PASS" starttime="20221221 06:48:18.943" endtime="20221221 06:48:18.982"/>
</kw>
<msg timestamp="20221221 06:48:18.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:18.941" endtime="20221221 06:48:18.982"/>
</kw>
<msg timestamp="20221221 06:48:18.982" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221221 06:48:18.941" endtime="20221221 06:48:18.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221221 06:48:18.989" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221221 06:48:18.982" endtime="20221221 06:48:18.990"/>
</kw>
<status status="FAIL" starttime="20221221 06:48:18.668" endtime="20221221 06:48:18.991"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:28.992" endtime="20221221 06:48:28.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:28.998" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:29.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:29.016" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221221 06:48:28.994" endtime="20221221 06:48:29.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:29.017" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221221 06:48:29.016" endtime="20221221 06:48:29.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:29.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:29.017" endtime="20221221 06:48:29.018"/>
</kw>
<status status="PASS" starttime="20221221 06:48:28.993" endtime="20221221 06:48:29.018"/>
</kw>
<msg timestamp="20221221 06:48:29.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:28.993" endtime="20221221 06:48:29.019"/>
</kw>
<msg timestamp="20221221 06:48:29.019" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221221 06:48:28.992" endtime="20221221 06:48:29.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:29.019" endtime="20221221 06:48:29.020"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:29.024" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:29.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:29.042" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221221 06:48:29.021" endtime="20221221 06:48:29.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:29.044" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221221 06:48:29.043" endtime="20221221 06:48:29.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:29.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:29.044" endtime="20221221 06:48:29.045"/>
</kw>
<status status="PASS" starttime="20221221 06:48:29.021" endtime="20221221 06:48:29.045"/>
</kw>
<msg timestamp="20221221 06:48:29.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:29.021" endtime="20221221 06:48:29.046"/>
</kw>
<msg timestamp="20221221 06:48:29.046" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221221 06:48:29.020" endtime="20221221 06:48:29.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221221 06:48:29.047" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221221 06:48:29.046" endtime="20221221 06:48:29.047"/>
</kw>
<status status="FAIL" starttime="20221221 06:48:28.991" endtime="20221221 06:48:29.048"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:39.049" endtime="20221221 06:48:39.049"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:39.054" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:39.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:39.075" level="INFO">${output} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221221 06:48:39.051" endtime="20221221 06:48:39.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:39.077" level="INFO">{"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221221 06:48:39.076" endtime="20221221 06:48:39.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:39.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:39.077" endtime="20221221 06:48:39.078"/>
</kw>
<status status="PASS" starttime="20221221 06:48:39.050" endtime="20221221 06:48:39.078"/>
</kw>
<msg timestamp="20221221 06:48:39.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:39.050" endtime="20221221 06:48:39.078"/>
</kw>
<msg timestamp="20221221 06:48:39.079" level="INFO">${result} = {"data":{"totalCount":1,"containers":[{"ContainerID":1,"NumberOfKeys":1}]}}</msg>
<status status="PASS" starttime="20221221 06:48:39.049" endtime="20221221 06:48:39.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:39.079" endtime="20221221 06:48:39.079"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:39.083" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:39.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:39.110" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221221 06:48:39.081" endtime="20221221 06:48:39.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:39.111" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221221 06:48:39.110" endtime="20221221 06:48:39.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:39.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:39.111" endtime="20221221 06:48:39.112"/>
</kw>
<status status="PASS" starttime="20221221 06:48:39.080" endtime="20221221 06:48:39.112"/>
</kw>
<msg timestamp="20221221 06:48:39.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:39.080" endtime="20221221 06:48:39.112"/>
</kw>
<msg timestamp="20221221 06:48:39.113" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20221221 06:48:39.079" endtime="20221221 06:48:39.113"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221221 06:48:39.114" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20221221 06:48:39.113" endtime="20221221 06:48:39.117"/>
</kw>
<status status="FAIL" starttime="20221221 06:48:39.048" endtime="20221221 06:48:39.118"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.119" endtime="20221221 06:48:49.120"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.124" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.142" level="INFO">${output} = {"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":5},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20221221 06:48:49.121" endtime="20221221 06:48:49.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.145" level="INFO">{"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":5},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20221221 06:48:49.144" endtime="20221221 06:48:49.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.145" endtime="20221221 06:48:49.150"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.121" endtime="20221221 06:48:49.150"/>
</kw>
<msg timestamp="20221221 06:48:49.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.120" endtime="20221221 06:48:49.151"/>
</kw>
<msg timestamp="20221221 06:48:49.151" level="INFO">${result} = {"data":{"totalCount":3,"containers":[{"ContainerID":1,"NumberOfKeys":5},{"ContainerID":2,"NumberOfKeys":4},{"ContainerID":3,"NumberOfKeys":2}]}}</msg>
<status status="PASS" starttime="20221221 06:48:49.120" endtime="20221221 06:48:49.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.151" endtime="20221221 06:48:49.151"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.155" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.170" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221221 06:48:49.153" endtime="20221221 06:48:49.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.172" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221221 06:48:49.171" endtime="20221221 06:48:49.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.172" endtime="20221221 06:48:49.173"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.152" endtime="20221221 06:48:49.173"/>
</kw>
<msg timestamp="20221221 06:48:49.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.152" endtime="20221221 06:48:49.174"/>
</kw>
<msg timestamp="20221221 06:48:49.174" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20221221 06:48:49.152" endtime="20221221 06:48:49.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.174" endtime="20221221 06:48:49.175"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.119" endtime="20221221 06:48:49.175"/>
</kw>
<status status="PASS" starttime="20221221 06:48:18.667" endtime="20221221 06:48:49.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:48:08.620" endtime="20221221 06:48:49.175"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.181" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.242" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"082f0dd2-ca04-4169-a019-293eb1f9a1af","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671605...</msg>
<status status="PASS" starttime="20221221 06:48:49.179" endtime="20221221 06:48:49.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.244" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"082f0dd2-ca04-4169-a019-293eb1f9a1af","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671605313423,"storageReport":{"capacity":89297309696,"used":8192,"remaining":27853971456},"pipelines":[{"pipelineID":"bf8640d8-7af6-487f-a782-a903bc6a24c6","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":0,"openContainers":0,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1671605164914,"revision":"add8f8bb164859d3ca752fd2bdb1e0c11a27548f","buildDate":"2022-12-21T06:23Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"3b93ae1b-ad1d-4cf3-bc1e-ff58f4021200","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671605326933,"storageReport":{"capacity":89297309696,"used":24582,"remaining":27853971456},"pipelines":[{"pipelineID":"b35d04ff-6b17-45ee-9ae2-4c7ebd118523","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"4bfff764-a74c-4e77-bfe4-883e5bbb330a","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"dd4ae414-1a25-4dc7-88fe-d59d5d74f2b5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1671605164789,"revision":"add8f8bb164859d3ca752fd2bdb1e0c11a27548f","buildDate":"2022-12-21T06:23Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"dc486e77-de9d-4302-bc50-dded209edfa0","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671605326933,"storageReport":{"capacity":89297309696,"used":24582,"remaining":27853971456},"pipelines":[{"pipelineID":"b35d04ff-6b17-45ee-9ae2-4c7ebd118523","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"b07d94fd-a6a1-416c-86ac-64da899a399b","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"dd4ae414-1a25-4dc7-88fe-d59d5d74f2b5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1671605163445,"revision":"add8f8bb164859d3ca752fd2bdb1e0c11a27548f","buildDate":"2022-12-21T06:23Z","layoutVersion":4,"networkLocation":"/rack1"},{"uuid":"314d46b9-3a50-47ec-9fba-1032abbd3a5a","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671605326914,"storageReport":{"capacity":89297309696,"used":10246,"remaining":27853971456},"pipelines":[{"pipelineID":"f623440b-df4f-491c-9ce0-25ad6afc477e","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"b35d04ff-6b17-45ee-9ae2-4c7ebd118523","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"dc94b6fb-ef3b-4144-8763-e75ee98aa7dc","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.3.0-SNAPSHOT","setupTime":1671605165090,"revision":"add8f8bb164859d3ca752fd2bdb1e0c11a27548f","buildDate":"2022-12-21T06:23Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"4882ddf3-3b61-46b2-96d8-d3aaea10edac","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671605325521,"storageReport":{"capacity":89297309696,"used":26632,"remaining":27853971456},"pipelines":[{"pipelineID":"da84855c-9d65-4742-9931-113e3f44c8b7","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"dc94b6fb-ef3b-4144-8763-e75ee98aa7dc","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"dd4ae414-1a25-4dc7-88fe-d59d5d74f2b5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":2,"openContainers":3,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1671605164230,"revision":"add8f8bb164859d3ca752fd2bdb1e0c11a27548f","buildDate":"2022-12-21T06:23Z","layoutVersion":4,"networkLocation":"/rack2"},{"uuid":"fc2be285-f9b2-48d6-868b-5264331b8201","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671605325844,"storageReport":{"capacity":89297309696,"used":8196,"remaining":27853971456},"pipelines":[{"pipelineID":"cf9728d7-9af7-49fb-999f-fd1bb40bb997","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"dc94b6fb-ef3b-4144-8763-e75ee98aa7dc","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"1.3.0-SNAPSHOT","setupTime":1671605163583,"revision":"add8f8bb164859d3ca752fd2bdb1e0c11a27548f","buildDate":"2022-12-21T06:23Z","layoutVersion":4,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20221221 06:48:49.243" endtime="20221221 06:48:49.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.244" endtime="20221221 06:48:49.245"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.178" endtime="20221221 06:48:49.245"/>
</kw>
<msg timestamp="20221221 06:48:49.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.178" endtime="20221221 06:48:49.246"/>
</kw>
<msg timestamp="20221221 06:48:49.246" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"082f0dd2-ca04-4169-a019-293eb1f9a1af","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1671605...</msg>
<status status="PASS" starttime="20221221 06:48:49.178" endtime="20221221 06:48:49.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.247" endtime="20221221 06:48:49.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.247" endtime="20221221 06:48:49.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.248" endtime="20221221 06:48:49.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.248" endtime="20221221 06:48:49.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.254" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.280" level="INFO">${output} = {"totalCount":9,"pipelines":[{"pipelineId":"da84855c-9d65-4742-9931-113e3f44c8b7","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_...</msg>
<status status="PASS" starttime="20221221 06:48:49.250" endtime="20221221 06:48:49.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.281" level="INFO">{"totalCount":9,"pipelines":[{"pipelineId":"da84855c-9d65-4742-9931-113e3f44c8b7","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net"],"lastLeaderElection":0,"duration":116273,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"cf9728d7-9af7-49fb-999f-fd1bb40bb997","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":["ozone-topology_datanode_1_1.ozone-topology_net"],"lastLeaderElection":0,"duration":116690,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f623440b-df4f-491c-9ce0-25ad6afc477e","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":116405,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"b35d04ff-6b17-45ee-9ae2-4c7ebd118523","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":116334,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"b07d94fd-a6a1-416c-86ac-64da899a399b","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":116470,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"bf8640d8-7af6-487f-a782-a903bc6a24c6","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":["ozone-topology_datanode_4_1.ozone-topology_net"],"lastLeaderElection":0,"duration":115913,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"4bfff764-a74c-4e77-bfe4-883e5bbb330a","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net"],"lastLeaderElection":0,"duration":117388,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"dc94b6fb-ef3b-4144-8763-e75ee98aa7dc","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_1_1.ozone-topology_net","ozone-topology_datanode_6_1.ozone-topology_net"],"lastLeaderElection":0,"duration":116248,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"dd4ae414-1a25-4dc7-88fe-d59d5d74f2b5","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":["ozone-topology_datanode_3_1.ozone-topology_net","ozone-topology_datanode_5_1.ozone-topology_net","ozone-topology_datanode_2_1.ozone-topology_net"],"lastLeaderElection":0,"duration":116220,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1}]}</msg>
<status status="PASS" starttime="20221221 06:48:49.280" endtime="20221221 06:48:49.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.282" endtime="20221221 06:48:49.282"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.250" endtime="20221221 06:48:49.282"/>
</kw>
<msg timestamp="20221221 06:48:49.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.249" endtime="20221221 06:48:49.283"/>
</kw>
<msg timestamp="20221221 06:48:49.283" level="INFO">${result} = {"totalCount":9,"pipelines":[{"pipelineId":"da84855c-9d65-4742-9931-113e3f44c8b7","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":["ozone-topology_datanode_5_...</msg>
<status status="PASS" starttime="20221221 06:48:49.249" endtime="20221221 06:48:49.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.284" endtime="20221221 06:48:49.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.284" endtime="20221221 06:48:49.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.285" endtime="20221221 06:48:49.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.285" endtime="20221221 06:48:49.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.286" endtime="20221221 06:48:49.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.286" endtime="20221221 06:48:49.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.292" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.370" level="INFO">${output} = {"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":102430,"remaining":167123828736},"containers":3,"missingContainers":0,"openContainers":3,"volumes...</msg>
<status status="PASS" starttime="20221221 06:48:49.289" endtime="20221221 06:48:49.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.371" level="INFO">{"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":102430,"remaining":167123828736},"containers":3,"missingContainers":0,"openContainers":3,"volumes":3,"buckets":2,"keys":11}</msg>
<status status="PASS" starttime="20221221 06:48:49.370" endtime="20221221 06:48:49.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.371" endtime="20221221 06:48:49.372"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.289" endtime="20221221 06:48:49.373"/>
</kw>
<msg timestamp="20221221 06:48:49.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.288" endtime="20221221 06:48:49.374"/>
</kw>
<msg timestamp="20221221 06:48:49.374" level="INFO">${result} = {"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":102430,"remaining":167123828736},"containers":3,"missingContainers":0,"openContainers":3,"volumes...</msg>
<status status="PASS" starttime="20221221 06:48:49.288" endtime="20221221 06:48:49.374"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.375" endtime="20221221 06:48:49.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.375" endtime="20221221 06:48:49.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.376" endtime="20221221 06:48:49.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.381" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.406" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"3b93ae1b-ad1d-4cf3-bc1e-ff58f4021200","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1671605249841,"lastSeenTime":1671605249841,"last...</msg>
<status status="PASS" starttime="20221221 06:48:49.378" endtime="20221221 06:48:49.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.407" level="INFO">[{"containerId":1,"datanodeUuid":"3b93ae1b-ad1d-4cf3-bc1e-ff58f4021200","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1671605249841,"lastSeenTime":1671605249841,"lastBcsId":0},{"containerId":1,"datanodeUuid":"dc486e77-de9d-4302-bc50-dded209edfa0","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1671605249789,"lastSeenTime":1671605249789,"lastBcsId":0},{"containerId":1,"datanodeUuid":"4882ddf3-3b61-46b2-96d8-d3aaea10edac","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1671605250706,"lastSeenTime":1671605250706,"lastBcsId":0}]</msg>
<status status="PASS" starttime="20221221 06:48:49.406" endtime="20221221 06:48:49.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.407" endtime="20221221 06:48:49.408"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.377" endtime="20221221 06:48:49.408"/>
</kw>
<msg timestamp="20221221 06:48:49.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.377" endtime="20221221 06:48:49.408"/>
</kw>
<msg timestamp="20221221 06:48:49.409" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"3b93ae1b-ad1d-4cf3-bc1e-ff58f4021200","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1671605249841,"lastSeenTime":1671605249841,"last...</msg>
<status status="PASS" starttime="20221221 06:48:49.376" endtime="20221221 06:48:49.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.409" endtime="20221221 06:48:49.410"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:48:49.177" endtime="20221221 06:48:49.410"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="88">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.413" endtime="20221221 06:48:49.413"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.418" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.437" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221221 06:48:49.415" endtime="20221221 06:48:49.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.438" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.7465223f.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.0c211d12.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.d339ecb4.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.ee728dce.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.437" endtime="20221221 06:48:49.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.438" endtime="20221221 06:48:49.440"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.414" endtime="20221221 06:48:49.440"/>
</kw>
<msg timestamp="20221221 06:48:49.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.414" endtime="20221221 06:48:49.441"/>
</kw>
<msg timestamp="20221221 06:48:49.441" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20221221 06:48:49.413" endtime="20221221 06:48:49.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.441" endtime="20221221 06:48:49.442"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:48:49.412" endtime="20221221 06:48:49.442"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="93">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.447" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.453" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:48:49.445" endtime="20221221 06:48:49.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.454" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:48:49.454" endtime="20221221 06:48:49.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.455" endtime="20221221 06:48:49.455"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.444" endtime="20221221 06:48:49.455"/>
</kw>
<msg timestamp="20221221 06:48:49.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.444" endtime="20221221 06:48:49.456"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.443" endtime="20221221 06:48:49.456"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.461" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.475" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.459" endtime="20221221 06:48:49.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.476" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.476" endtime="20221221 06:48:49.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.477" endtime="20221221 06:48:49.477"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.458" endtime="20221221 06:48:49.478"/>
</kw>
<msg timestamp="20221221 06:48:49.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.457" endtime="20221221 06:48:49.478"/>
</kw>
<msg timestamp="20221221 06:48:49.478" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.457" endtime="20221221 06:48:49.478"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.479" endtime="20221221 06:48:49.479"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.479" endtime="20221221 06:48:49.479"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.479" endtime="20221221 06:48:49.480"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.479" endtime="20221221 06:48:49.480"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.479" endtime="20221221 06:48:49.480"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.456" endtime="20221221 06:48:49.480"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.481" endtime="20221221 06:48:49.481"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.480" endtime="20221221 06:48:49.481"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.485" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.500" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.483" endtime="20221221 06:48:49.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.501" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.500" endtime="20221221 06:48:49.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.501" endtime="20221221 06:48:49.502"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.482" endtime="20221221 06:48:49.502"/>
</kw>
<msg timestamp="20221221 06:48:49.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.482" endtime="20221221 06:48:49.503"/>
</kw>
<msg timestamp="20221221 06:48:49.503" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.482" endtime="20221221 06:48:49.503"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.504" endtime="20221221 06:48:49.504"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.504" endtime="20221221 06:48:49.504"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.504" endtime="20221221 06:48:49.504"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.504" endtime="20221221 06:48:49.504"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.503" endtime="20221221 06:48:49.504"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.481" endtime="20221221 06:48:49.505"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:48:49.443" endtime="20221221 06:48:49.505"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="101">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.510" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.514" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:48:49.508" endtime="20221221 06:48:49.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.515" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:48:49.515" endtime="20221221 06:48:49.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.515" endtime="20221221 06:48:49.516"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.507" endtime="20221221 06:48:49.516"/>
</kw>
<msg timestamp="20221221 06:48:49.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.507" endtime="20221221 06:48:49.517"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.506" endtime="20221221 06:48:49.517"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.521" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.537" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.519" endtime="20221221 06:48:49.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.538" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.537" endtime="20221221 06:48:49.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.538" endtime="20221221 06:48:49.539"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.519" endtime="20221221 06:48:49.539"/>
</kw>
<msg timestamp="20221221 06:48:49.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.518" endtime="20221221 06:48:49.540"/>
</kw>
<msg timestamp="20221221 06:48:49.540" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.518" endtime="20221221 06:48:49.540"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.540" endtime="20221221 06:48:49.540"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.540" endtime="20221221 06:48:49.540"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.541" endtime="20221221 06:48:49.541"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.541" endtime="20221221 06:48:49.541"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.540" endtime="20221221 06:48:49.541"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.517" endtime="20221221 06:48:49.541"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.542" endtime="20221221 06:48:49.546"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.541" endtime="20221221 06:48:49.546"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.554" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.570" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.551" endtime="20221221 06:48:49.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.572" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.571" endtime="20221221 06:48:49.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.572" endtime="20221221 06:48:49.573"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.551" endtime="20221221 06:48:49.573"/>
</kw>
<msg timestamp="20221221 06:48:49.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.550" endtime="20221221 06:48:49.574"/>
</kw>
<msg timestamp="20221221 06:48:49.574" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.550" endtime="20221221 06:48:49.574"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.575" endtime="20221221 06:48:49.575"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.574" endtime="20221221 06:48:49.575"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.575" endtime="20221221 06:48:49.575"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.575" endtime="20221221 06:48:49.575"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.574" endtime="20221221 06:48:49.575"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.546" endtime="20221221 06:48:49.576"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.576" endtime="20221221 06:48:49.577"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.576" endtime="20221221 06:48:49.577"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.581" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.599" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.579" endtime="20221221 06:48:49.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.601" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.600" endtime="20221221 06:48:49.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.601" endtime="20221221 06:48:49.602"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.578" endtime="20221221 06:48:49.602"/>
</kw>
<msg timestamp="20221221 06:48:49.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.578" endtime="20221221 06:48:49.602"/>
</kw>
<msg timestamp="20221221 06:48:49.603" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.577" endtime="20221221 06:48:49.603"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.603" endtime="20221221 06:48:49.603"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.603" endtime="20221221 06:48:49.603"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.603" endtime="20221221 06:48:49.604"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.603" endtime="20221221 06:48:49.604"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.603" endtime="20221221 06:48:49.604"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.577" endtime="20221221 06:48:49.604"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.605" endtime="20221221 06:48:49.605"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.604" endtime="20221221 06:48:49.605"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.610" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.626" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.607" endtime="20221221 06:48:49.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.628" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.627" endtime="20221221 06:48:49.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.628" endtime="20221221 06:48:49.628"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.607" endtime="20221221 06:48:49.629"/>
</kw>
<msg timestamp="20221221 06:48:49.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.606" endtime="20221221 06:48:49.629"/>
</kw>
<msg timestamp="20221221 06:48:49.629" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.606" endtime="20221221 06:48:49.630"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.630" endtime="20221221 06:48:49.630"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.630" endtime="20221221 06:48:49.630"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.630" endtime="20221221 06:48:49.631"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.630" endtime="20221221 06:48:49.631"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.630" endtime="20221221 06:48:49.631"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.605" endtime="20221221 06:48:49.631"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:48:49.506" endtime="20221221 06:48:49.631"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="114">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.638" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.642" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:48:49.635" endtime="20221221 06:48:49.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.644" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:48:49.643" endtime="20221221 06:48:49.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.644" endtime="20221221 06:48:49.645"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.635" endtime="20221221 06:48:49.646"/>
</kw>
<msg timestamp="20221221 06:48:49.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.635" endtime="20221221 06:48:49.646"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.634" endtime="20221221 06:48:49.647"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.653" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.715" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.650" endtime="20221221 06:48:49.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.717" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.716" endtime="20221221 06:48:49.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.717" endtime="20221221 06:48:49.720"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.649" endtime="20221221 06:48:49.720"/>
</kw>
<msg timestamp="20221221 06:48:49.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.648" endtime="20221221 06:48:49.721"/>
</kw>
<msg timestamp="20221221 06:48:49.721" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.647" endtime="20221221 06:48:49.721"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.722" endtime="20221221 06:48:49.722"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.722" endtime="20221221 06:48:49.722"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.722" endtime="20221221 06:48:49.723"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.722" endtime="20221221 06:48:49.723"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.721" endtime="20221221 06:48:49.723"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.647" endtime="20221221 06:48:49.723"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.723" endtime="20221221 06:48:49.724"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.723" endtime="20221221 06:48:49.724"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.729" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.747" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.726" endtime="20221221 06:48:49.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.748" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.747" endtime="20221221 06:48:49.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.748" endtime="20221221 06:48:49.749"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.726" endtime="20221221 06:48:49.749"/>
</kw>
<msg timestamp="20221221 06:48:49.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.725" endtime="20221221 06:48:49.750"/>
</kw>
<msg timestamp="20221221 06:48:49.750" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.725" endtime="20221221 06:48:49.750"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.750" endtime="20221221 06:48:49.750"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.750" endtime="20221221 06:48:49.751"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.751" endtime="20221221 06:48:49.751"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.751" endtime="20221221 06:48:49.751"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.750" endtime="20221221 06:48:49.751"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.724" endtime="20221221 06:48:49.752"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.752" endtime="20221221 06:48:49.752"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.752" endtime="20221221 06:48:49.753"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.757" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.772" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.754" endtime="20221221 06:48:49.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.773" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.773" endtime="20221221 06:48:49.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.773" endtime="20221221 06:48:49.774"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.754" endtime="20221221 06:48:49.774"/>
</kw>
<msg timestamp="20221221 06:48:49.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.754" endtime="20221221 06:48:49.775"/>
</kw>
<msg timestamp="20221221 06:48:49.775" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.753" endtime="20221221 06:48:49.775"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.775" endtime="20221221 06:48:49.775"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.775" endtime="20221221 06:48:49.775"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.776" endtime="20221221 06:48:49.776"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.776" endtime="20221221 06:48:49.776"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.775" endtime="20221221 06:48:49.776"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.753" endtime="20221221 06:48:49.776"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.777" endtime="20221221 06:48:49.777"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.776" endtime="20221221 06:48:49.777"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.783" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.798" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.780" endtime="20221221 06:48:49.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.799" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.798" endtime="20221221 06:48:49.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.799" endtime="20221221 06:48:49.800"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.780" endtime="20221221 06:48:49.800"/>
</kw>
<msg timestamp="20221221 06:48:49.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.780" endtime="20221221 06:48:49.800"/>
</kw>
<msg timestamp="20221221 06:48:49.801" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.779" endtime="20221221 06:48:49.801"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.801" endtime="20221221 06:48:49.801"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.801" endtime="20221221 06:48:49.801"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.801" endtime="20221221 06:48:49.802"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.801" endtime="20221221 06:48:49.802"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.801" endtime="20221221 06:48:49.802"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.777" endtime="20221221 06:48:49.802"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:48:49.633" endtime="20221221 06:48:49.803"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="127">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.807" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.811" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:48:49.806" endtime="20221221 06:48:49.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.812" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:48:49.811" endtime="20221221 06:48:49.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.812" endtime="20221221 06:48:49.813"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.805" endtime="20221221 06:48:49.813"/>
</kw>
<msg timestamp="20221221 06:48:49.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.805" endtime="20221221 06:48:49.814"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.804" endtime="20221221 06:48:49.814"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.818" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.836" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.816" endtime="20221221 06:48:49.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.838" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.836" endtime="20221221 06:48:49.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.839" endtime="20221221 06:48:49.839"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.815" endtime="20221221 06:48:49.840"/>
</kw>
<msg timestamp="20221221 06:48:49.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.815" endtime="20221221 06:48:49.840"/>
</kw>
<msg timestamp="20221221 06:48:49.840" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.815" endtime="20221221 06:48:49.840"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.841" endtime="20221221 06:48:49.841"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.841" endtime="20221221 06:48:49.841"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.841" endtime="20221221 06:48:49.842"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.841" endtime="20221221 06:48:49.842"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.840" endtime="20221221 06:48:49.842"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.814" endtime="20221221 06:48:49.842"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.843" endtime="20221221 06:48:49.843"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.842" endtime="20221221 06:48:49.843"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.847" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.874" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.845" endtime="20221221 06:48:49.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.875" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:48:49.874" endtime="20221221 06:48:49.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.875" endtime="20221221 06:48:49.876"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.844" endtime="20221221 06:48:49.876"/>
</kw>
<msg timestamp="20221221 06:48:49.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.844" endtime="20221221 06:48:49.877"/>
</kw>
<msg timestamp="20221221 06:48:49.877" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:48:49.844" endtime="20221221 06:48:49.877"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:48:49.882" endtime="20221221 06:48:49.882"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:48:49.882" endtime="20221221 06:48:49.882"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:49.882" endtime="20221221 06:48:49.883"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.882" endtime="20221221 06:48:49.883"/>
</branch>
<status status="PASS" starttime="20221221 06:48:49.881" endtime="20221221 06:48:49.883"/>
</if>
<status status="PASS" starttime="20221221 06:48:49.843" endtime="20221221 06:48:49.883"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:48:49.803" endtime="20221221 06:48:49.883"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20221221 06:48:08.587" endtime="20221221 06:48:49.886"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.904" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:49.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:49.909" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:48:49.901" endtime="20221221 06:48:49.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:49.910" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:48:49.910" endtime="20221221 06:48:49.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:49.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:49.910" endtime="20221221 06:48:49.911"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.901" endtime="20221221 06:48:49.911"/>
</kw>
<msg timestamp="20221221 06:48:49.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.900" endtime="20221221 06:48:49.912"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.900" endtime="20221221 06:48:49.912"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:48:49.913" endtime="20221221 06:48:49.913"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.912" endtime="20221221 06:48:49.914"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221221 06:48:49.915" level="INFO">${random} = zfgjk</msg>
<status status="PASS" starttime="20221221 06:48:49.914" endtime="20221221 06:48:49.915"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221221 06:48:49.916" level="INFO">${VOLUME} = vol-zfgjk</msg>
<status status="PASS" starttime="20221221 06:48:49.915" endtime="20221221 06:48:49.916"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:49.920" level="INFO">Running command 'ozone sh volume create /vol-zfgjk 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:54.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:54.021" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:48:49.917" endtime="20221221 06:48:54.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:54.023" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:48:54.022" endtime="20221221 06:48:54.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:54.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:54.023" endtime="20221221 06:48:54.024"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.917" endtime="20221221 06:48:54.024"/>
</kw>
<msg timestamp="20221221 06:48:54.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:49.916" endtime="20221221 06:48:54.025"/>
</kw>
<msg timestamp="20221221 06:48:54.025" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:48:49.916" endtime="20221221 06:48:54.025"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:54.025" endtime="20221221 06:48:54.025"/>
</kw>
<status status="PASS" starttime="20221221 06:48:49.914" endtime="20221221 06:48:54.025"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:48:49.899" endtime="20221221 06:48:54.026"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221221 06:48:54.028" level="INFO">${random} = tqzel</msg>
<status status="PASS" starttime="20221221 06:48:54.028" endtime="20221221 06:48:54.028"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221221 06:48:54.029" level="INFO">${BUCKET} = buc-tqzel</msg>
<status status="PASS" starttime="20221221 06:48:54.029" endtime="20221221 06:48:54.029"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:54.033" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-zfgjk/buc-tqzel 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:48:57.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:48:57.835" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:48:54.030" endtime="20221221 06:48:57.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:48:57.837" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:48:57.836" endtime="20221221 06:48:57.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:48:57.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:48:57.837" endtime="20221221 06:48:57.838"/>
</kw>
<status status="PASS" starttime="20221221 06:48:54.030" endtime="20221221 06:48:57.838"/>
</kw>
<msg timestamp="20221221 06:48:57.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:54.030" endtime="20221221 06:48:57.838"/>
</kw>
<msg timestamp="20221221 06:48:57.839" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:48:54.029" endtime="20221221 06:48:57.839"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:48:57.839" endtime="20221221 06:48:57.839"/>
</kw>
<status status="PASS" starttime="20221221 06:48:54.028" endtime="20221221 06:48:57.839"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:48:54.027" endtime="20221221 06:48:57.840"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:48:57.846" level="INFO">Running command 'ozone sh key put /vol-zfgjk/buc-tqzel/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:03.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:03.708" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:48:57.843" endtime="20221221 06:49:03.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:03.709" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:49:03.708" endtime="20221221 06:49:03.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:03.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:03.709" endtime="20221221 06:49:03.710"/>
</kw>
<status status="PASS" starttime="20221221 06:48:57.843" endtime="20221221 06:49:03.710"/>
</kw>
<msg timestamp="20221221 06:49:03.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:48:57.843" endtime="20221221 06:49:03.711"/>
</kw>
<msg timestamp="20221221 06:49:03.711" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:48:57.842" endtime="20221221 06:49:03.711"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:03.711" endtime="20221221 06:49:03.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:03.716" level="INFO">Running command 'ozone sh key put /vol-zfgjk/buc-tqzel/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:09.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:09.982" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:49:03.713" endtime="20221221 06:49:09.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:09.984" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:49:09.983" endtime="20221221 06:49:09.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:09.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:09.984" endtime="20221221 06:49:09.984"/>
</kw>
<status status="PASS" starttime="20221221 06:49:03.713" endtime="20221221 06:49:09.985"/>
</kw>
<msg timestamp="20221221 06:49:09.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:03.712" endtime="20221221 06:49:09.985"/>
</kw>
<msg timestamp="20221221 06:49:09.986" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:49:03.712" endtime="20221221 06:49:09.986"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:09.986" endtime="20221221 06:49:09.986"/>
</kw>
<status status="PASS" starttime="20221221 06:48:57.842" endtime="20221221 06:49:09.986"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:48:57.841" endtime="20221221 06:49:09.987"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:09.993" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:09.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:09.997" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:49:09.990" endtime="20221221 06:49:09.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:09.998" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:49:09.997" endtime="20221221 06:49:09.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:09.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:09.998" endtime="20221221 06:49:09.999"/>
</kw>
<status status="PASS" starttime="20221221 06:49:09.990" endtime="20221221 06:49:09.999"/>
</kw>
<msg timestamp="20221221 06:49:09.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:09.989" endtime="20221221 06:49:10.000"/>
</kw>
<status status="PASS" starttime="20221221 06:49:09.989" endtime="20221221 06:49:10.000"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.004" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.045" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.002" endtime="20221221 06:49:10.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.046" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.045" endtime="20221221 06:49:10.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.047" endtime="20221221 06:49:10.047"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.001" endtime="20221221 06:49:10.048"/>
</kw>
<msg timestamp="20221221 06:49:10.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.001" endtime="20221221 06:49:10.048"/>
</kw>
<msg timestamp="20221221 06:49:10.049" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.001" endtime="20221221 06:49:10.049"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.049" endtime="20221221 06:49:10.049"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.049" endtime="20221221 06:49:10.049"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.050" endtime="20221221 06:49:10.050"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.049" endtime="20221221 06:49:10.050"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.049" endtime="20221221 06:49:10.050"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.000" endtime="20221221 06:49:10.050"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.051" endtime="20221221 06:49:10.051"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.050" endtime="20221221 06:49:10.051"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.057" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.075" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.053" endtime="20221221 06:49:10.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.076" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.076" endtime="20221221 06:49:10.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.076" endtime="20221221 06:49:10.077"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.053" endtime="20221221 06:49:10.077"/>
</kw>
<msg timestamp="20221221 06:49:10.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.053" endtime="20221221 06:49:10.078"/>
</kw>
<msg timestamp="20221221 06:49:10.078" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.052" endtime="20221221 06:49:10.078"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.079" endtime="20221221 06:49:10.079"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.079" endtime="20221221 06:49:10.079"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.079" endtime="20221221 06:49:10.080"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.079" endtime="20221221 06:49:10.080"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.079" endtime="20221221 06:49:10.080"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.052" endtime="20221221 06:49:10.080"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.080" endtime="20221221 06:49:10.081"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.080" endtime="20221221 06:49:10.081"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.085" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.104" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.083" endtime="20221221 06:49:10.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.105" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.104" endtime="20221221 06:49:10.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.105" endtime="20221221 06:49:10.106"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.082" endtime="20221221 06:49:10.106"/>
</kw>
<msg timestamp="20221221 06:49:10.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.082" endtime="20221221 06:49:10.107"/>
</kw>
<msg timestamp="20221221 06:49:10.107" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.082" endtime="20221221 06:49:10.107"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.108" endtime="20221221 06:49:10.108"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.108" endtime="20221221 06:49:10.108"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.108" endtime="20221221 06:49:10.108"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.108" endtime="20221221 06:49:10.108"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.107" endtime="20221221 06:49:10.108"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.081" endtime="20221221 06:49:10.109"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.109" endtime="20221221 06:49:10.110"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.109" endtime="20221221 06:49:10.110"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.114" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.132" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.112" endtime="20221221 06:49:10.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.133" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.132" endtime="20221221 06:49:10.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.133" endtime="20221221 06:49:10.134"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.111" endtime="20221221 06:49:10.134"/>
</kw>
<msg timestamp="20221221 06:49:10.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.111" endtime="20221221 06:49:10.134"/>
</kw>
<msg timestamp="20221221 06:49:10.135" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.110" endtime="20221221 06:49:10.135"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.135" endtime="20221221 06:49:10.135"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.135" endtime="20221221 06:49:10.135"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.136" endtime="20221221 06:49:10.136"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.136" endtime="20221221 06:49:10.136"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.135" endtime="20221221 06:49:10.136"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.110" endtime="20221221 06:49:10.136"/>
</kw>
<status status="PASS" starttime="20221221 06:49:09.988" endtime="20221221 06:49:10.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:09.988" endtime="20221221 06:49:10.137"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.143" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.147" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:49:10.141" endtime="20221221 06:49:10.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.148" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:49:10.147" endtime="20221221 06:49:10.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.148" endtime="20221221 06:49:10.149"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.140" endtime="20221221 06:49:10.149"/>
</kw>
<msg timestamp="20221221 06:49:10.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.140" endtime="20221221 06:49:10.150"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.139" endtime="20221221 06:49:10.150"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.154" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.175" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.152" endtime="20221221 06:49:10.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.176" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.175" endtime="20221221 06:49:10.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.177" endtime="20221221 06:49:10.178"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.151" endtime="20221221 06:49:10.178"/>
</kw>
<msg timestamp="20221221 06:49:10.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.151" endtime="20221221 06:49:10.179"/>
</kw>
<msg timestamp="20221221 06:49:10.179" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.150" endtime="20221221 06:49:10.179"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.179" endtime="20221221 06:49:10.180"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.179" endtime="20221221 06:49:10.180"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.180" endtime="20221221 06:49:10.180"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.180" endtime="20221221 06:49:10.180"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.179" endtime="20221221 06:49:10.180"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.150" endtime="20221221 06:49:10.180"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.181" endtime="20221221 06:49:10.181"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.180" endtime="20221221 06:49:10.181"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.186" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.202" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.183" endtime="20221221 06:49:10.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.203" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.202" endtime="20221221 06:49:10.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.203" endtime="20221221 06:49:10.204"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.183" endtime="20221221 06:49:10.204"/>
</kw>
<msg timestamp="20221221 06:49:10.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.182" endtime="20221221 06:49:10.205"/>
</kw>
<msg timestamp="20221221 06:49:10.205" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.182" endtime="20221221 06:49:10.205"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.206" endtime="20221221 06:49:10.206"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.206" endtime="20221221 06:49:10.206"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.206" endtime="20221221 06:49:10.207"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.206" endtime="20221221 06:49:10.207"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.205" endtime="20221221 06:49:10.207"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.182" endtime="20221221 06:49:10.207"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.208" endtime="20221221 06:49:10.208"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.207" endtime="20221221 06:49:10.208"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.213" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.230" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.210" endtime="20221221 06:49:10.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.231" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.230" endtime="20221221 06:49:10.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.231" endtime="20221221 06:49:10.232"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.210" endtime="20221221 06:49:10.232"/>
</kw>
<msg timestamp="20221221 06:49:10.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.209" endtime="20221221 06:49:10.233"/>
</kw>
<msg timestamp="20221221 06:49:10.233" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.209" endtime="20221221 06:49:10.233"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.234" endtime="20221221 06:49:10.234"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.234" endtime="20221221 06:49:10.234"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.234" endtime="20221221 06:49:10.234"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.234" endtime="20221221 06:49:10.234"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.233" endtime="20221221 06:49:10.234"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.208" endtime="20221221 06:49:10.235"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.235" endtime="20221221 06:49:10.236"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.235" endtime="20221221 06:49:10.236"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.240" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.256" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.238" endtime="20221221 06:49:10.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.257" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.256" endtime="20221221 06:49:10.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.257" endtime="20221221 06:49:10.258"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.237" endtime="20221221 06:49:10.258"/>
</kw>
<msg timestamp="20221221 06:49:10.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.237" endtime="20221221 06:49:10.259"/>
</kw>
<msg timestamp="20221221 06:49:10.260" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.236" endtime="20221221 06:49:10.260"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.260" endtime="20221221 06:49:10.260"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.260" endtime="20221221 06:49:10.260"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.260" endtime="20221221 06:49:10.261"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.260" endtime="20221221 06:49:10.261"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.260" endtime="20221221 06:49:10.261"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.236" endtime="20221221 06:49:10.261"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.139" endtime="20221221 06:49:10.261"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:10.138" endtime="20221221 06:49:10.262"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.269" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.273" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:49:10.266" endtime="20221221 06:49:10.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.275" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:49:10.274" endtime="20221221 06:49:10.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.275" endtime="20221221 06:49:10.276"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.266" endtime="20221221 06:49:10.276"/>
</kw>
<msg timestamp="20221221 06:49:10.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.266" endtime="20221221 06:49:10.277"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.265" endtime="20221221 06:49:10.277"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.282" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.305" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.279" endtime="20221221 06:49:10.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.306" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.306" endtime="20221221 06:49:10.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.307" endtime="20221221 06:49:10.307"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.279" endtime="20221221 06:49:10.308"/>
</kw>
<msg timestamp="20221221 06:49:10.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.278" endtime="20221221 06:49:10.308"/>
</kw>
<msg timestamp="20221221 06:49:10.308" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.278" endtime="20221221 06:49:10.308"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.309" endtime="20221221 06:49:10.309"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.309" endtime="20221221 06:49:10.309"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.309" endtime="20221221 06:49:10.310"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.309" endtime="20221221 06:49:10.310"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.309" endtime="20221221 06:49:10.310"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.277" endtime="20221221 06:49:10.310"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.311" endtime="20221221 06:49:10.311"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.310" endtime="20221221 06:49:10.311"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.316" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.332" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.313" endtime="20221221 06:49:10.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.333" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.333" endtime="20221221 06:49:10.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.334" endtime="20221221 06:49:10.334"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.312" endtime="20221221 06:49:10.334"/>
</kw>
<msg timestamp="20221221 06:49:10.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.312" endtime="20221221 06:49:10.335"/>
</kw>
<msg timestamp="20221221 06:49:10.335" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.312" endtime="20221221 06:49:10.335"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.336" endtime="20221221 06:49:10.336"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.336" endtime="20221221 06:49:10.336"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.336" endtime="20221221 06:49:10.336"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.336" endtime="20221221 06:49:10.336"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.335" endtime="20221221 06:49:10.336"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.311" endtime="20221221 06:49:10.337"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.337" endtime="20221221 06:49:10.338"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.337" endtime="20221221 06:49:10.338"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.342" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.357" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.340" endtime="20221221 06:49:10.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.359" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.358" endtime="20221221 06:49:10.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.359" endtime="20221221 06:49:10.359"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.339" endtime="20221221 06:49:10.360"/>
</kw>
<msg timestamp="20221221 06:49:10.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.339" endtime="20221221 06:49:10.360"/>
</kw>
<msg timestamp="20221221 06:49:10.361" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.338" endtime="20221221 06:49:10.361"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.361" endtime="20221221 06:49:10.361"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.361" endtime="20221221 06:49:10.361"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.361" endtime="20221221 06:49:10.362"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.361" endtime="20221221 06:49:10.362"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.361" endtime="20221221 06:49:10.362"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.338" endtime="20221221 06:49:10.362"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.363" endtime="20221221 06:49:10.363"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.362" endtime="20221221 06:49:10.363"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.368" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.383" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.365" endtime="20221221 06:49:10.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.385" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.384" endtime="20221221 06:49:10.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.385" endtime="20221221 06:49:10.385"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.365" endtime="20221221 06:49:10.386"/>
</kw>
<msg timestamp="20221221 06:49:10.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.364" endtime="20221221 06:49:10.386"/>
</kw>
<msg timestamp="20221221 06:49:10.387" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.364" endtime="20221221 06:49:10.387"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.387" endtime="20221221 06:49:10.387"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.387" endtime="20221221 06:49:10.387"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.387" endtime="20221221 06:49:10.388"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.387" endtime="20221221 06:49:10.388"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.387" endtime="20221221 06:49:10.388"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.363" endtime="20221221 06:49:10.388"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.264" endtime="20221221 06:49:10.388"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:10.263" endtime="20221221 06:49:10.388"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.394" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.398" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:49:10.392" endtime="20221221 06:49:10.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.399" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221221 06:49:10.398" endtime="20221221 06:49:10.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.399" endtime="20221221 06:49:10.399"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.391" endtime="20221221 06:49:10.400"/>
</kw>
<msg timestamp="20221221 06:49:10.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.391" endtime="20221221 06:49:10.400"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.391" endtime="20221221 06:49:10.400"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.404" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.427" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.402" endtime="20221221 06:49:10.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.428" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.428" endtime="20221221 06:49:10.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.428" endtime="20221221 06:49:10.432"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.402" endtime="20221221 06:49:10.432"/>
</kw>
<msg timestamp="20221221 06:49:10.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.402" endtime="20221221 06:49:10.433"/>
</kw>
<msg timestamp="20221221 06:49:10.433" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.401" endtime="20221221 06:49:10.433"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.433" endtime="20221221 06:49:10.434"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.433" endtime="20221221 06:49:10.434"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.434" endtime="20221221 06:49:10.437"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.434" endtime="20221221 06:49:10.437"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.433" endtime="20221221 06:49:10.437"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.401" endtime="20221221 06:49:10.438"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.438" endtime="20221221 06:49:10.438"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.438" endtime="20221221 06:49:10.439"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.448" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.464" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.440" endtime="20221221 06:49:10.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.466" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.465" endtime="20221221 06:49:10.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.466" endtime="20221221 06:49:10.467"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.440" endtime="20221221 06:49:10.467"/>
</kw>
<msg timestamp="20221221 06:49:10.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.440" endtime="20221221 06:49:10.468"/>
</kw>
<msg timestamp="20221221 06:49:10.468" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.439" endtime="20221221 06:49:10.468"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.468" endtime="20221221 06:49:10.468"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.468" endtime="20221221 06:49:10.468"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.469" endtime="20221221 06:49:10.469"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.468" endtime="20221221 06:49:10.469"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.468" endtime="20221221 06:49:10.469"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.439" endtime="20221221 06:49:10.469"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.470" endtime="20221221 06:49:10.470"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.469" endtime="20221221 06:49:10.470"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.474" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.489" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.472" endtime="20221221 06:49:10.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.490" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.490" endtime="20221221 06:49:10.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.491" endtime="20221221 06:49:10.491"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.471" endtime="20221221 06:49:10.491"/>
</kw>
<msg timestamp="20221221 06:49:10.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.471" endtime="20221221 06:49:10.492"/>
</kw>
<msg timestamp="20221221 06:49:10.492" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.471" endtime="20221221 06:49:10.492"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.493" endtime="20221221 06:49:10.493"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.492" endtime="20221221 06:49:10.493"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.493" endtime="20221221 06:49:10.493"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.493" endtime="20221221 06:49:10.493"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.492" endtime="20221221 06:49:10.493"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.470" endtime="20221221 06:49:10.494"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:10.495" endtime="20221221 06:49:10.495"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.494" endtime="20221221 06:49:10.495"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.500" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.516" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.497" endtime="20221221 06:49:10.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.518" level="INFO">200</msg>
<status status="PASS" starttime="20221221 06:49:10.517" endtime="20221221 06:49:10.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.518" endtime="20221221 06:49:10.519"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.497" endtime="20221221 06:49:10.520"/>
</kw>
<msg timestamp="20221221 06:49:10.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.497" endtime="20221221 06:49:10.520"/>
</kw>
<msg timestamp="20221221 06:49:10.521" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221221 06:49:10.496" endtime="20221221 06:49:10.521"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.521" endtime="20221221 06:49:10.521"/>
</kw>
<status status="NOT RUN" starttime="20221221 06:49:10.521" endtime="20221221 06:49:10.521"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.522" endtime="20221221 06:49:10.522"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.522" endtime="20221221 06:49:10.522"/>
</branch>
<status status="PASS" starttime="20221221 06:49:10.521" endtime="20221221 06:49:10.522"/>
</if>
<status status="PASS" starttime="20221221 06:49:10.496" endtime="20221221 06:49:10.522"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.390" endtime="20221221 06:49:10.522"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:10.389" endtime="20221221 06:49:10.523"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.532" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.549" level="INFO">${output} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:10.529" endtime="20221221 06:49:10.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.551" level="INFO">{"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:10.550" endtime="20221221 06:49:10.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.551" endtime="20221221 06:49:10.552"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.528" endtime="20221221 06:49:10.552"/>
</kw>
<msg timestamp="20221221 06:49:10.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.528" endtime="20221221 06:49:10.553"/>
</kw>
<msg timestamp="20221221 06:49:10.554" level="INFO">${result} = {"type":"ROOT","numVolume":3,"numBucket":2,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:10.527" endtime="20221221 06:49:10.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.554" endtime="20221221 06:49:10.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:10.554" endtime="20221221 06:49:10.555"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.527" endtime="20221221 06:49:10.555"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.526" endtime="20221221 06:49:10.555"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.525" endtime="20221221 06:49:10.555"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:10.524" endtime="20221221 06:49:10.556"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:10.565" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-zfgjk 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:10.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:10.581" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:10.562" endtime="20221221 06:49:10.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:10.582" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:10.581" endtime="20221221 06:49:10.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:10.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:10.583" endtime="20221221 06:49:10.583"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.562" endtime="20221221 06:49:10.584"/>
</kw>
<msg timestamp="20221221 06:49:10.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:10.562" endtime="20221221 06:49:10.584"/>
</kw>
<msg timestamp="20221221 06:49:10.585" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:10.561" endtime="20221221 06:49:10.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221221 06:49:10.586" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221221 06:49:10.585" endtime="20221221 06:49:10.586"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:10.586" endtime="20221221 06:49:10.587"/>
</kw>
<status status="FAIL" starttime="20221221 06:49:10.560" endtime="20221221 06:49:10.587"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:20.593" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-zfgjk 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:20.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:20.615" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:20.591" endtime="20221221 06:49:20.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:20.617" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:20.616" endtime="20221221 06:49:20.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:20.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:20.617" endtime="20221221 06:49:20.618"/>
</kw>
<status status="PASS" starttime="20221221 06:49:20.590" endtime="20221221 06:49:20.618"/>
</kw>
<msg timestamp="20221221 06:49:20.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:20.590" endtime="20221221 06:49:20.619"/>
</kw>
<msg timestamp="20221221 06:49:20.619" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:20.589" endtime="20221221 06:49:20.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221221 06:49:20.620" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221221 06:49:20.619" endtime="20221221 06:49:20.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:20.620" endtime="20221221 06:49:20.620"/>
</kw>
<status status="FAIL" starttime="20221221 06:49:20.588" endtime="20221221 06:49:20.621"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:30.635" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-zfgjk 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:30.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:30.652" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:30.633" endtime="20221221 06:49:30.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:30.654" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:30.653" endtime="20221221 06:49:30.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:30.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:30.654" endtime="20221221 06:49:30.655"/>
</kw>
<status status="PASS" starttime="20221221 06:49:30.632" endtime="20221221 06:49:30.655"/>
</kw>
<msg timestamp="20221221 06:49:30.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:30.629" endtime="20221221 06:49:30.656"/>
</kw>
<msg timestamp="20221221 06:49:30.656" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:30.627" endtime="20221221 06:49:30.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221221 06:49:30.657" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221221 06:49:30.656" endtime="20221221 06:49:30.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:30.658" endtime="20221221 06:49:30.658"/>
</kw>
<status status="FAIL" starttime="20221221 06:49:30.622" endtime="20221221 06:49:30.659"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:40.664" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-zfgjk 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:40.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:40.682" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:40.661" endtime="20221221 06:49:40.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:40.683" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:40.682" endtime="20221221 06:49:40.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:40.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:40.683" endtime="20221221 06:49:40.684"/>
</kw>
<status status="PASS" starttime="20221221 06:49:40.661" endtime="20221221 06:49:40.684"/>
</kw>
<msg timestamp="20221221 06:49:40.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:40.661" endtime="20221221 06:49:40.684"/>
</kw>
<msg timestamp="20221221 06:49:40.685" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221221 06:49:40.660" endtime="20221221 06:49:40.685"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221221 06:49:40.686" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221221 06:49:40.685" endtime="20221221 06:49:40.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221221 06:49:40.686" endtime="20221221 06:49:40.686"/>
</kw>
<status status="FAIL" starttime="20221221 06:49:40.659" endtime="20221221 06:49:40.688"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:50.693" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-zfgjk 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:50.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:50.713" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.691" endtime="20221221 06:49:50.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:50.714" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.713" endtime="20221221 06:49:50.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:50.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:50.715" endtime="20221221 06:49:50.715"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.690" endtime="20221221 06:49:50.715"/>
</kw>
<msg timestamp="20221221 06:49:50.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:50.690" endtime="20221221 06:49:50.716"/>
</kw>
<msg timestamp="20221221 06:49:50.716" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.689" endtime="20221221 06:49:50.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.717" endtime="20221221 06:49:50.717"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.717" endtime="20221221 06:49:50.718"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.688" endtime="20221221 06:49:50.718"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.560" endtime="20221221 06:49:50.718"/>
</kw>
<status status="PASS" starttime="20221221 06:49:10.559" endtime="20221221 06:49:50.718"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:10.557" endtime="20221221 06:49:50.718"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:50.726" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-zfgjk/buc-tqzel 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:50.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:50.744" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.723" endtime="20221221 06:49:50.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:50.745" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.744" endtime="20221221 06:49:50.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:50.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:50.746" endtime="20221221 06:49:50.746"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.723" endtime="20221221 06:49:50.747"/>
</kw>
<msg timestamp="20221221 06:49:50.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:50.722" endtime="20221221 06:49:50.747"/>
</kw>
<msg timestamp="20221221 06:49:50.747" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.722" endtime="20221221 06:49:50.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.748" endtime="20221221 06:49:50.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.748" endtime="20221221 06:49:50.749"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.721" endtime="20221221 06:49:50.749"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.721" endtime="20221221 06:49:50.749"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.720" endtime="20221221 06:49:50.749"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:50.719" endtime="20221221 06:49:50.749"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:50.758" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-zfgjk/buc-tqzel/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:50.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:50.775" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.755" endtime="20221221 06:49:50.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:50.776" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.775" endtime="20221221 06:49:50.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:50.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:50.776" endtime="20221221 06:49:50.777"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.755" endtime="20221221 06:49:50.777"/>
</kw>
<msg timestamp="20221221 06:49:50.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:50.754" endtime="20221221 06:49:50.778"/>
</kw>
<msg timestamp="20221221 06:49:50.778" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.754" endtime="20221221 06:49:50.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.779" endtime="20221221 06:49:50.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.779" endtime="20221221 06:49:50.780"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.753" endtime="20221221 06:49:50.780"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.753" endtime="20221221 06:49:50.780"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.752" endtime="20221221 06:49:50.780"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:50.751" endtime="20221221 06:49:50.780"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:49:50.782" endtime="20221221 06:49:50.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:50.789" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-zfgjk/buc-tqzel/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:50.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:50.805" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.786" endtime="20221221 06:49:50.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:50.807" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.806" endtime="20221221 06:49:50.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:50.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:50.807" endtime="20221221 06:49:50.808"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.786" endtime="20221221 06:49:50.808"/>
</kw>
<msg timestamp="20221221 06:49:50.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:50.785" endtime="20221221 06:49:50.809"/>
</kw>
<msg timestamp="20221221 06:49:50.809" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.785" endtime="20221221 06:49:50.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.809" endtime="20221221 06:49:50.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.810" endtime="20221221 06:49:50.810"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.784" endtime="20221221 06:49:50.810"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.784" endtime="20221221 06:49:50.810"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.783" endtime="20221221 06:49:50.810"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.783" endtime="20221221 06:49:50.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:50.781" endtime="20221221 06:49:50.811"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:50.818" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-zfgjk/buc-tqzel&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:50.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:50.833" level="INFO">${output} = {"status":"OK","path":"/vol-zfgjk/buc-tqzel","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-zfgjk/buc-tqzel/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221221 06:49:50.816" endtime="20221221 06:49:50.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:50.834" level="INFO">{"status":"OK","path":"/vol-zfgjk/buc-tqzel","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-zfgjk/buc-tqzel/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20221221 06:49:50.834" endtime="20221221 06:49:50.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:50.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:50.834" endtime="20221221 06:49:50.836"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.815" endtime="20221221 06:49:50.836"/>
</kw>
<msg timestamp="20221221 06:49:50.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:50.815" endtime="20221221 06:49:50.836"/>
</kw>
<msg timestamp="20221221 06:49:50.837" level="INFO">${result} = {"status":"OK","path":"/vol-zfgjk/buc-tqzel","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-zfgjk/buc-tqzel/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221221 06:49:50.814" endtime="20221221 06:49:50.837"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.837" endtime="20221221 06:49:50.837"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.837" endtime="20221221 06:49:50.838"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.814" endtime="20221221 06:49:50.838"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.813" endtime="20221221 06:49:50.838"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.813" endtime="20221221 06:49:50.838"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:50.812" endtime="20221221 06:49:50.838"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:50.846" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-zfgjk 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:50.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:50.861" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.843" endtime="20221221 06:49:50.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:50.862" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.861" endtime="20221221 06:49:50.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:50.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:50.862" endtime="20221221 06:49:50.863"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.843" endtime="20221221 06:49:50.863"/>
</kw>
<msg timestamp="20221221 06:49:50.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:50.843" endtime="20221221 06:49:50.864"/>
</kw>
<msg timestamp="20221221 06:49:50.864" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.842" endtime="20221221 06:49:50.864"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.864" endtime="20221221 06:49:50.865"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.865" endtime="20221221 06:49:50.865"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.842" endtime="20221221 06:49:50.865"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.841" endtime="20221221 06:49:50.865"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.840" endtime="20221221 06:49:50.866"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:50.839" endtime="20221221 06:49:50.866"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:50.873" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-zfgjk/buc-tqzel 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:50.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:50.891" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.871" endtime="20221221 06:49:50.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:50.892" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.891" endtime="20221221 06:49:50.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:50.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:50.893" endtime="20221221 06:49:50.893"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.870" endtime="20221221 06:49:50.894"/>
</kw>
<msg timestamp="20221221 06:49:50.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:50.870" endtime="20221221 06:49:50.894"/>
</kw>
<msg timestamp="20221221 06:49:50.895" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.869" endtime="20221221 06:49:50.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.895" endtime="20221221 06:49:50.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.896" endtime="20221221 06:49:50.896"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.869" endtime="20221221 06:49:50.896"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.868" endtime="20221221 06:49:50.896"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.868" endtime="20221221 06:49:50.896"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:50.867" endtime="20221221 06:49:50.897"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:50.905" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:50.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:50.920" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.903" endtime="20221221 06:49:50.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:50.922" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.921" endtime="20221221 06:49:50.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:50.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:50.922" endtime="20221221 06:49:50.923"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.902" endtime="20221221 06:49:50.923"/>
</kw>
<msg timestamp="20221221 06:49:50.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:50.902" endtime="20221221 06:49:50.924"/>
</kw>
<msg timestamp="20221221 06:49:50.924" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221221 06:49:50.901" endtime="20221221 06:49:50.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.924" endtime="20221221 06:49:50.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:50.925" endtime="20221221 06:49:50.925"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.901" endtime="20221221 06:49:50.925"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.900" endtime="20221221 06:49:50.926"/>
</kw>
<status status="PASS" starttime="20221221 06:49:50.899" endtime="20221221 06:49:50.926"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:50.899" endtime="20221221 06:49:50.926"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20221221 06:48:49.889" endtime="20221221 06:49:50.927"/>
</suite>
<status status="PASS" starttime="20221221 06:48:08.564" endtime="20221221 06:49:50.930"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:56.161" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:49:59.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:49:59.653" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:49:56.157" endtime="20221221 06:49:59.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:49:59.654" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:49:59.653" endtime="20221221 06:49:59.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:49:59.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:49:59.655" endtime="20221221 06:49:59.655"/>
</kw>
<status status="PASS" starttime="20221221 06:49:56.156" endtime="20221221 06:49:59.655"/>
</kw>
<msg timestamp="20221221 06:49:59.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:56.156" endtime="20221221 06:49:59.657"/>
</kw>
<msg timestamp="20221221 06:49:59.657" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:49:56.156" endtime="20221221 06:49:59.657"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:49:59.657" endtime="20221221 06:49:59.658"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:49:59.661" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:50:03.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:50:03.140" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:49:59.659" endtime="20221221 06:50:03.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:50:03.141" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:50:03.140" endtime="20221221 06:50:03.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:50:03.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:50:03.141" endtime="20221221 06:50:03.142"/>
</kw>
<status status="PASS" starttime="20221221 06:49:59.658" endtime="20221221 06:50:03.142"/>
</kw>
<msg timestamp="20221221 06:50:03.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:49:59.658" endtime="20221221 06:50:03.143"/>
</kw>
<msg timestamp="20221221 06:50:03.143" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:49:59.658" endtime="20221221 06:50:03.143"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:50:03.144" endtime="20221221 06:50:03.144"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:50:03.148" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:50:09.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:50:09.319" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:50:03.145" endtime="20221221 06:50:09.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:50:09.321" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:50:09.320" endtime="20221221 06:50:09.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:50:09.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:50:09.321" endtime="20221221 06:50:09.322"/>
</kw>
<status status="PASS" starttime="20221221 06:50:03.145" endtime="20221221 06:50:09.322"/>
</kw>
<msg timestamp="20221221 06:50:09.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:50:03.145" endtime="20221221 06:50:09.322"/>
</kw>
<msg timestamp="20221221 06:50:09.323" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:50:03.144" endtime="20221221 06:50:09.323"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:50:09.323" endtime="20221221 06:50:09.323"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:49:56.155" endtime="20221221 06:50:09.323"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221221 06:49:56.111" endtime="20221221 06:50:09.325"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221221 06:50:18.471" level="INFO">${random} = 47753</msg>
<status status="PASS" starttime="20221221 06:50:18.471" endtime="20221221 06:50:18.471"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:50:18.477" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-47753 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:51:12.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:51:12.114" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:50:18.473" endtime="20221221 06:51:12.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:51:12.116" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:51:12.115" endtime="20221221 06:51:12.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:51:12.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:51:12.116" endtime="20221221 06:51:12.117"/>
</kw>
<status status="PASS" starttime="20221221 06:50:18.472" endtime="20221221 06:51:12.117"/>
</kw>
<msg timestamp="20221221 06:51:12.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:50:18.472" endtime="20221221 06:51:12.118"/>
</kw>
<msg timestamp="20221221 06:51:12.119" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:50:18.472" endtime="20221221 06:51:12.119"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:51:12.119" endtime="20221221 06:51:12.119"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:50:18.470" endtime="20221221 06:51:12.119"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221221 06:50:18.426" endtime="20221221 06:51:12.120"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221221 06:51:54.525" level="INFO">${random} = 77178</msg>
<status status="PASS" starttime="20221221 06:51:54.522" endtime="20221221 06:51:54.525"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:51:54.531" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-77178 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:52:01.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:52:01.988" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:51:54.526" endtime="20221221 06:52:01.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:52:01.990" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:52:01.989" endtime="20221221 06:52:01.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:52:01.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:52:01.990" endtime="20221221 06:52:01.990"/>
</kw>
<status status="PASS" starttime="20221221 06:51:54.526" endtime="20221221 06:52:01.991"/>
</kw>
<msg timestamp="20221221 06:52:01.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:51:54.526" endtime="20221221 06:52:01.992"/>
</kw>
<msg timestamp="20221221 06:52:01.992" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20221221 06:51:54.525" endtime="20221221 06:52:01.992"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:52:01.993" endtime="20221221 06:52:01.993"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:51:54.521" endtime="20221221 06:52:01.993"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221221 06:51:54.456" endtime="20221221 06:52:01.994"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:47:17.485" endtime="20221221 06:47:17.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:47:17.494" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:47:17.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:47:17.700" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 21 Dec 2022 06:47:17 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 21 Dec 2022 06:24:00 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221221 06:47:17.488" endtime="20221221 06:47:17.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:47:17.703" level="INFO">HTTP/1.1 200 OK
Date: Wed, 21 Dec 2022 06:47:17 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 21 Dec 2022 06:24:00 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20221221 06:47:17.701" endtime="20221221 06:47:17.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:47:17.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:47:17.703" endtime="20221221 06:47:17.704"/>
</kw>
<status status="PASS" starttime="20221221 06:47:17.488" endtime="20221221 06:47:17.705"/>
</kw>
<msg timestamp="20221221 06:47:17.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:47:17.487" endtime="20221221 06:47:17.707"/>
</kw>
<msg timestamp="20221221 06:47:17.708" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 21 Dec 2022 06:47:17 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 21 Dec 2022 06:24:00 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20221221 06:47:17.487" endtime="20221221 06:47:17.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:47:17.708" endtime="20221221 06:47:17.709"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:47:17.484" endtime="20221221 06:47:17.711"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221221 06:47:17.717" endtime="20221221 06:47:17.718"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221221 06:47:17.720" level="INFO">${random} = WptCWNpwhl</msg>
<status status="PASS" starttime="20221221 06:47:17.719" endtime="20221221 06:47:17.720"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:47:17.736" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p WptCWNpwhl  2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:47:32.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:47:32.666" level="INFO">${output} = 2022-12-21 06:47:21,997 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-21 06:47:22,226 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221221 06:47:17.727" endtime="20221221 06:47:32.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:47:32.668" level="INFO">2022-12-21 06:47:21,997 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-21 06:47:22,226 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-21 06:47:22,226 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-21 06:47:22,432 [main] INFO freon.BaseFreonGenerator: Executing test with prefix WptCWNpwhl and number-of-tests 1
2022-12-21 06:47:22,553 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:23,554 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:24,555 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:25,555 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:25,598 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-12-21 06:47:25,952 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false 
2022-12-21 06:47:26,556 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:27,517 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-21 06:47:27,556 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:28,049 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-12-21 06:47:28,557 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:29,557 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:30,557 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:31,559 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-21 06:47:32,222 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=5022.079409, max=5022.079409, mean=5022.079409, stddev=0.0, median=5022.079409, p75=5022.079409, p95=5022.079409, p98=5022.079409, p99=5022.079409, p999=5022.079409, mean_rate=0.16277641453615782, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-21 06:47:32,222 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2022-12-21 06:47:32,223 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-21 06:47:32,223 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221221 06:47:32.667" endtime="20221221 06:47:32.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:47:32.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:47:32.668" endtime="20221221 06:47:32.669"/>
</kw>
<status status="PASS" starttime="20221221 06:47:17.725" endtime="20221221 06:47:32.669"/>
</kw>
<msg timestamp="20221221 06:47:32.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:47:17.725" endtime="20221221 06:47:32.670"/>
</kw>
<msg timestamp="20221221 06:47:32.670" level="INFO">${result} = 2022-12-21 06:47:21,997 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-21 06:47:22,226 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221221 06:47:17.723" endtime="20221221 06:47:32.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:47:32.670" endtime="20221221 06:47:32.671"/>
</kw>
<status status="PASS" starttime="20221221 06:47:17.720" endtime="20221221 06:47:32.671"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221221 06:47:32.684" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p WptCWNpwhl  2&gt;&amp;1'.</msg>
<msg timestamp="20221221 06:47:41.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20221221 06:47:41.323" level="INFO">${output} = 2022-12-21 06:47:35,694 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-21 06:47:35,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221221 06:47:32.681" endtime="20221221 06:47:41.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221221 06:47:41.324" level="INFO">2022-12-21 06:47:35,694 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-21 06:47:35,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-12-21 06:47:35,901 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-12-21 06:47:36,103 [main] INFO freon.BaseFreonGenerator: Executing test with prefix WptCWNpwhl and number-of-tests 1
2022-12-21 06:47:36,180 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:37,183 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:38,183 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:38,614 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-12-21 06:47:39,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-12-21 06:47:40,205 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-12-21 06:47:40,964 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=79.644516, max=79.644516, mean=79.644516, stddev=0.0, median=79.644516, p75=79.644516, p95=79.644516, p98=79.644516, p99=79.644516, p999=79.644516, mean_rate=0.9068082805702325, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-12-21 06:47:40,964 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-12-21 06:47:40,966 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-12-21 06:47:40,966 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20221221 06:47:41.323" endtime="20221221 06:47:41.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221221 06:47:41.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221221 06:47:41.324" endtime="20221221 06:47:41.325"/>
</kw>
<status status="PASS" starttime="20221221 06:47:32.680" endtime="20221221 06:47:41.326"/>
</kw>
<msg timestamp="20221221 06:47:41.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221221 06:47:32.680" endtime="20221221 06:47:41.326"/>
</kw>
<msg timestamp="20221221 06:47:41.327" level="INFO">${result} = 2022-12-21 06:47:35,694 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-12-21 06:47:35,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20221221 06:47:32.679" endtime="20221221 06:47:41.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221221 06:47:41.327" endtime="20221221 06:47:41.327"/>
</kw>
<status status="PASS" starttime="20221221 06:47:32.671" endtime="20221221 06:47:41.327"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221221 06:47:17.716" endtime="20221221 06:47:41.328"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20221221 06:47:17.385" endtime="20221221 06:47:41.330"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="216279"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
