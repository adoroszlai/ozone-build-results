<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.1 (Python 3.8.10 on linux)" generated="20221210 12:25:23.643" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:23:47.104" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:23:47.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:23:47.110" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221210 12:23:47.099" endtime="20221210 12:23:47.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:23:47.111" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221210 12:23:47.110" endtime="20221210 12:23:47.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:23:47.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:23:47.111" endtime="20221210 12:23:47.112"/>
</kw>
<status status="PASS" starttime="20221210 12:23:47.099" endtime="20221210 12:23:47.112"/>
</kw>
<msg timestamp="20221210 12:23:47.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:23:47.098" endtime="20221210 12:23:47.114"/>
</kw>
<status status="PASS" starttime="20221210 12:23:47.097" endtime="20221210 12:23:47.114"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:23:47.115" endtime="20221210 12:23:47.115"/>
</kw>
<status status="PASS" starttime="20221210 12:23:47.114" endtime="20221210 12:23:47.115"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221210 12:23:47.116" level="INFO">${random} = fcbbq</msg>
<status status="PASS" starttime="20221210 12:23:47.116" endtime="20221210 12:23:47.116"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221210 12:23:47.117" level="INFO">${VOLUME} = vol-fcbbq</msg>
<status status="PASS" starttime="20221210 12:23:47.116" endtime="20221210 12:23:47.117"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:23:47.121" level="INFO">Running command 'ozone sh volume create /vol-fcbbq 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:23:52.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:23:52.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221210 12:23:47.118" endtime="20221210 12:23:52.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:23:52.449" level="INFO"/>
<status status="PASS" starttime="20221210 12:23:52.449" endtime="20221210 12:23:52.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:23:52.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:23:52.450" endtime="20221210 12:23:52.450"/>
</kw>
<status status="PASS" starttime="20221210 12:23:47.118" endtime="20221210 12:23:52.451"/>
</kw>
<msg timestamp="20221210 12:23:52.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:23:47.118" endtime="20221210 12:23:52.451"/>
</kw>
<msg timestamp="20221210 12:23:52.452" level="INFO">${result} = </msg>
<status status="PASS" starttime="20221210 12:23:47.117" endtime="20221210 12:23:52.452"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:23:52.452" endtime="20221210 12:23:52.452"/>
</kw>
<status status="PASS" starttime="20221210 12:23:47.115" endtime="20221210 12:23:52.452"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:23:47.096" endtime="20221210 12:23:52.453"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20221210 12:23:52.456" level="INFO">${random} = chwnp</msg>
<status status="PASS" starttime="20221210 12:23:52.456" endtime="20221210 12:23:52.456"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20221210 12:23:52.457" level="INFO">${BUCKET} = buc-chwnp</msg>
<status status="PASS" starttime="20221210 12:23:52.457" endtime="20221210 12:23:52.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:23:52.462" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-fcbbq/buc-chwnp 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:23:56.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:23:56.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221210 12:23:52.459" endtime="20221210 12:23:56.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:23:56.721" level="INFO"/>
<status status="PASS" starttime="20221210 12:23:56.720" endtime="20221210 12:23:56.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:23:56.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:23:56.721" endtime="20221210 12:23:56.722"/>
</kw>
<status status="PASS" starttime="20221210 12:23:52.458" endtime="20221210 12:23:56.723"/>
</kw>
<msg timestamp="20221210 12:23:56.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:23:52.458" endtime="20221210 12:23:56.723"/>
</kw>
<msg timestamp="20221210 12:23:56.724" level="INFO">${result} = </msg>
<status status="PASS" starttime="20221210 12:23:52.457" endtime="20221210 12:23:56.724"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:23:56.724" endtime="20221210 12:23:56.724"/>
</kw>
<status status="PASS" starttime="20221210 12:23:52.455" endtime="20221210 12:23:56.724"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:23:52.454" endtime="20221210 12:23:56.725"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:23:56.732" level="INFO">Running command 'ozone sh key put /vol-fcbbq/buc-chwnp/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:07.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:07.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221210 12:23:56.729" endtime="20221210 12:24:07.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:07.819" level="INFO"/>
<status status="PASS" starttime="20221210 12:24:07.818" endtime="20221210 12:24:07.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:07.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:07.820" endtime="20221210 12:24:07.820"/>
</kw>
<status status="PASS" starttime="20221210 12:23:56.729" endtime="20221210 12:24:07.821"/>
</kw>
<msg timestamp="20221210 12:24:07.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:23:56.728" endtime="20221210 12:24:07.824"/>
</kw>
<msg timestamp="20221210 12:24:07.825" level="INFO">${result} = </msg>
<status status="PASS" starttime="20221210 12:23:56.728" endtime="20221210 12:24:07.825"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:07.826" endtime="20221210 12:24:07.827"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:07.834" level="INFO">Running command 'ozone sh key put /vol-fcbbq/buc-chwnp/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20221210 12:24:07.831" endtime="20221210 12:24:15.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.260" level="INFO"/>
<status status="PASS" starttime="20221210 12:24:15.258" endtime="20221210 12:24:15.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.261" endtime="20221210 12:24:15.261"/>
</kw>
<status status="PASS" starttime="20221210 12:24:07.829" endtime="20221210 12:24:15.261"/>
</kw>
<msg timestamp="20221210 12:24:15.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:07.829" endtime="20221210 12:24:15.262"/>
</kw>
<msg timestamp="20221210 12:24:15.263" level="INFO">${result} = </msg>
<status status="PASS" starttime="20221210 12:24:07.827" endtime="20221210 12:24:15.263"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.263" endtime="20221210 12:24:15.264"/>
</kw>
<status status="PASS" starttime="20221210 12:23:56.727" endtime="20221210 12:24:15.264"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:23:56.726" endtime="20221210 12:24:15.265"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.273" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.277" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221210 12:24:15.269" endtime="20221210 12:24:15.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.278" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221210 12:24:15.278" endtime="20221210 12:24:15.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.279" endtime="20221210 12:24:15.281"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.269" endtime="20221210 12:24:15.282"/>
</kw>
<msg timestamp="20221210 12:24:15.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.269" endtime="20221210 12:24:15.283"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.268" endtime="20221210 12:24:15.283"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.289" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.558" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.286" endtime="20221210 12:24:15.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.560" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.559" endtime="20221210 12:24:15.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.561" endtime="20221210 12:24:15.563"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.285" endtime="20221210 12:24:15.564"/>
</kw>
<msg timestamp="20221210 12:24:15.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.285" endtime="20221210 12:24:15.565"/>
</kw>
<msg timestamp="20221210 12:24:15.565" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.284" endtime="20221210 12:24:15.565"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.566" endtime="20221210 12:24:15.566"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.566" endtime="20221210 12:24:15.566"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.566" endtime="20221210 12:24:15.567"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.566" endtime="20221210 12:24:15.567"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.565" endtime="20221210 12:24:15.567"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.283" endtime="20221210 12:24:15.567"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:15.568" endtime="20221210 12:24:15.568"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.567" endtime="20221210 12:24:15.568"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.575" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.599" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.570" endtime="20221210 12:24:15.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.601" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.600" endtime="20221210 12:24:15.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.601" endtime="20221210 12:24:15.602"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.570" endtime="20221210 12:24:15.603"/>
</kw>
<msg timestamp="20221210 12:24:15.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.570" endtime="20221210 12:24:15.604"/>
</kw>
<msg timestamp="20221210 12:24:15.604" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.569" endtime="20221210 12:24:15.604"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.604" endtime="20221210 12:24:15.604"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.604" endtime="20221210 12:24:15.604"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.605" endtime="20221210 12:24:15.605"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.605" endtime="20221210 12:24:15.605"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.604" endtime="20221210 12:24:15.605"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.568" endtime="20221210 12:24:15.606"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:15.606" endtime="20221210 12:24:15.608"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.606" endtime="20221210 12:24:15.608"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.613" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.630" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.611" endtime="20221210 12:24:15.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.631" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.630" endtime="20221210 12:24:15.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.631" endtime="20221210 12:24:15.632"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.610" endtime="20221210 12:24:15.632"/>
</kw>
<msg timestamp="20221210 12:24:15.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.610" endtime="20221210 12:24:15.633"/>
</kw>
<msg timestamp="20221210 12:24:15.634" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.609" endtime="20221210 12:24:15.634"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.635" endtime="20221210 12:24:15.635"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.635" endtime="20221210 12:24:15.635"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.636" endtime="20221210 12:24:15.636"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.636" endtime="20221210 12:24:15.637"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.634" endtime="20221210 12:24:15.637"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.608" endtime="20221210 12:24:15.637"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:15.638" endtime="20221210 12:24:15.638"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.637" endtime="20221210 12:24:15.639"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.646" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.666" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.642" endtime="20221210 12:24:15.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.667" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.667" endtime="20221210 12:24:15.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.668" endtime="20221210 12:24:15.669"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.642" endtime="20221210 12:24:15.669"/>
</kw>
<msg timestamp="20221210 12:24:15.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.641" endtime="20221210 12:24:15.670"/>
</kw>
<msg timestamp="20221210 12:24:15.670" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.640" endtime="20221210 12:24:15.670"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.671" endtime="20221210 12:24:15.671"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.670" endtime="20221210 12:24:15.671"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.671" endtime="20221210 12:24:15.671"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.671" endtime="20221210 12:24:15.671"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.670" endtime="20221210 12:24:15.671"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.639" endtime="20221210 12:24:15.672"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.267" endtime="20221210 12:24:15.672"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:24:15.266" endtime="20221210 12:24:15.672"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.680" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.684" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221210 12:24:15.676" endtime="20221210 12:24:15.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.686" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221210 12:24:15.685" endtime="20221210 12:24:15.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.686" endtime="20221210 12:24:15.687"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.676" endtime="20221210 12:24:15.687"/>
</kw>
<msg timestamp="20221210 12:24:15.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.676" endtime="20221210 12:24:15.688"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.675" endtime="20221210 12:24:15.688"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.692" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.723" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.690" endtime="20221210 12:24:15.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.724" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.724" endtime="20221210 12:24:15.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.725" endtime="20221210 12:24:15.725"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.689" endtime="20221210 12:24:15.726"/>
</kw>
<msg timestamp="20221210 12:24:15.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.689" endtime="20221210 12:24:15.726"/>
</kw>
<msg timestamp="20221210 12:24:15.726" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.689" endtime="20221210 12:24:15.727"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.727" endtime="20221210 12:24:15.727"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.727" endtime="20221210 12:24:15.727"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.727" endtime="20221210 12:24:15.728"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.727" endtime="20221210 12:24:15.728"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.727" endtime="20221210 12:24:15.728"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.688" endtime="20221210 12:24:15.728"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:15.729" endtime="20221210 12:24:15.729"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.728" endtime="20221210 12:24:15.729"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.734" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.751" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.731" endtime="20221210 12:24:15.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.753" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.752" endtime="20221210 12:24:15.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.753" endtime="20221210 12:24:15.754"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.731" endtime="20221210 12:24:15.754"/>
</kw>
<msg timestamp="20221210 12:24:15.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.730" endtime="20221210 12:24:15.755"/>
</kw>
<msg timestamp="20221210 12:24:15.756" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.730" endtime="20221210 12:24:15.756"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.756" endtime="20221210 12:24:15.756"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.756" endtime="20221210 12:24:15.756"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.756" endtime="20221210 12:24:15.757"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.756" endtime="20221210 12:24:15.757"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.756" endtime="20221210 12:24:15.757"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.729" endtime="20221210 12:24:15.757"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:15.758" endtime="20221210 12:24:15.758"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.757" endtime="20221210 12:24:15.758"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.763" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.786" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.761" endtime="20221210 12:24:15.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.787" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.786" endtime="20221210 12:24:15.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.788" endtime="20221210 12:24:15.788"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.760" endtime="20221210 12:24:15.789"/>
</kw>
<msg timestamp="20221210 12:24:15.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.760" endtime="20221210 12:24:15.789"/>
</kw>
<msg timestamp="20221210 12:24:15.790" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.759" endtime="20221210 12:24:15.790"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.790" endtime="20221210 12:24:15.790"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.790" endtime="20221210 12:24:15.791"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.791" endtime="20221210 12:24:15.791"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.791" endtime="20221210 12:24:15.791"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.790" endtime="20221210 12:24:15.791"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.759" endtime="20221210 12:24:15.792"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:15.792" endtime="20221210 12:24:15.792"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.792" endtime="20221210 12:24:15.793"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.798" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.817" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.795" endtime="20221210 12:24:15.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.818" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.817" endtime="20221210 12:24:15.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.818" endtime="20221210 12:24:15.819"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.794" endtime="20221210 12:24:15.819"/>
</kw>
<msg timestamp="20221210 12:24:15.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.794" endtime="20221210 12:24:15.820"/>
</kw>
<msg timestamp="20221210 12:24:15.820" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.793" endtime="20221210 12:24:15.820"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.821" endtime="20221210 12:24:15.821"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.821" endtime="20221210 12:24:15.821"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.821" endtime="20221210 12:24:15.822"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.821" endtime="20221210 12:24:15.822"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.821" endtime="20221210 12:24:15.822"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.793" endtime="20221210 12:24:15.823"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.674" endtime="20221210 12:24:15.823"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:24:15.674" endtime="20221210 12:24:15.823"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.831" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.836" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221210 12:24:15.828" endtime="20221210 12:24:15.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.837" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221210 12:24:15.837" endtime="20221210 12:24:15.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.838" endtime="20221210 12:24:15.838"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.828" endtime="20221210 12:24:15.839"/>
</kw>
<msg timestamp="20221210 12:24:15.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.827" endtime="20221210 12:24:15.839"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.827" endtime="20221210 12:24:15.840"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.845" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.871" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.842" endtime="20221210 12:24:15.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.872" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.871" endtime="20221210 12:24:15.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.873" endtime="20221210 12:24:15.873"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.841" endtime="20221210 12:24:15.874"/>
</kw>
<msg timestamp="20221210 12:24:15.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.841" endtime="20221210 12:24:15.875"/>
</kw>
<msg timestamp="20221210 12:24:15.875" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.840" endtime="20221210 12:24:15.875"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.876" endtime="20221210 12:24:15.876"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.875" endtime="20221210 12:24:15.876"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.876" endtime="20221210 12:24:15.876"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.876" endtime="20221210 12:24:15.876"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.875" endtime="20221210 12:24:15.876"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.840" endtime="20221210 12:24:15.877"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:15.878" endtime="20221210 12:24:15.878"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.877" endtime="20221210 12:24:15.878"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.883" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.905" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.880" endtime="20221210 12:24:15.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.907" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.906" endtime="20221210 12:24:15.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.907" endtime="20221210 12:24:15.908"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.880" endtime="20221210 12:24:15.909"/>
</kw>
<msg timestamp="20221210 12:24:15.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.879" endtime="20221210 12:24:15.909"/>
</kw>
<msg timestamp="20221210 12:24:15.910" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.879" endtime="20221210 12:24:15.910"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.910" endtime="20221210 12:24:15.910"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.910" endtime="20221210 12:24:15.910"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.911" endtime="20221210 12:24:15.911"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.911" endtime="20221210 12:24:15.911"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.910" endtime="20221210 12:24:15.911"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.878" endtime="20221210 12:24:15.911"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:15.912" endtime="20221210 12:24:15.913"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.912" endtime="20221210 12:24:15.913"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.918" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.934" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.915" endtime="20221210 12:24:15.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.936" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.935" endtime="20221210 12:24:15.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.936" endtime="20221210 12:24:15.937"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.914" endtime="20221210 12:24:15.937"/>
</kw>
<msg timestamp="20221210 12:24:15.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.914" endtime="20221210 12:24:15.938"/>
</kw>
<msg timestamp="20221210 12:24:15.939" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.913" endtime="20221210 12:24:15.939"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.939" endtime="20221210 12:24:15.940"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.939" endtime="20221210 12:24:15.940"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.940" endtime="20221210 12:24:15.940"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.940" endtime="20221210 12:24:15.940"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.939" endtime="20221210 12:24:15.940"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.913" endtime="20221210 12:24:15.941"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:15.941" endtime="20221210 12:24:15.942"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.941" endtime="20221210 12:24:15.942"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.948" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.966" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.945" endtime="20221210 12:24:15.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.967" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:15.966" endtime="20221210 12:24:15.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.967" endtime="20221210 12:24:15.968"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.944" endtime="20221210 12:24:15.969"/>
</kw>
<msg timestamp="20221210 12:24:15.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.943" endtime="20221210 12:24:15.969"/>
</kw>
<msg timestamp="20221210 12:24:15.970" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.943" endtime="20221210 12:24:15.970"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:15.970" endtime="20221210 12:24:15.970"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:15.970" endtime="20221210 12:24:15.970"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:15.970" endtime="20221210 12:24:15.971"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.970" endtime="20221210 12:24:15.971"/>
</branch>
<status status="PASS" starttime="20221210 12:24:15.970" endtime="20221210 12:24:15.971"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.942" endtime="20221210 12:24:15.971"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.826" endtime="20221210 12:24:15.972"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:24:15.825" endtime="20221210 12:24:15.972"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.979" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:15.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:15.983" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221210 12:24:15.976" endtime="20221210 12:24:15.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:15.984" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20221210 12:24:15.983" endtime="20221210 12:24:15.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:15.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:15.984" endtime="20221210 12:24:15.985"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.976" endtime="20221210 12:24:15.985"/>
</kw>
<msg timestamp="20221210 12:24:15.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.975" endtime="20221210 12:24:15.986"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.975" endtime="20221210 12:24:15.987"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:15.992" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:16.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:16.020" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.989" endtime="20221210 12:24:16.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:16.022" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:16.021" endtime="20221210 12:24:16.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:16.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:16.022" endtime="20221210 12:24:16.023"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.989" endtime="20221210 12:24:16.023"/>
</kw>
<msg timestamp="20221210 12:24:16.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:15.988" endtime="20221210 12:24:16.024"/>
</kw>
<msg timestamp="20221210 12:24:16.025" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:15.988" endtime="20221210 12:24:16.025"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:16.025" endtime="20221210 12:24:16.025"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:16.025" endtime="20221210 12:24:16.025"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:16.026" endtime="20221210 12:24:16.026"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.026" endtime="20221210 12:24:16.026"/>
</branch>
<status status="PASS" starttime="20221210 12:24:16.025" endtime="20221210 12:24:16.026"/>
</if>
<status status="PASS" starttime="20221210 12:24:15.987" endtime="20221210 12:24:16.026"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:16.027" endtime="20221210 12:24:16.028"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.027" endtime="20221210 12:24:16.028"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:16.033" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:16.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:16.051" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:16.030" endtime="20221210 12:24:16.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:16.052" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:16.051" endtime="20221210 12:24:16.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:16.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:16.052" endtime="20221210 12:24:16.053"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.029" endtime="20221210 12:24:16.053"/>
</kw>
<msg timestamp="20221210 12:24:16.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:16.029" endtime="20221210 12:24:16.054"/>
</kw>
<msg timestamp="20221210 12:24:16.055" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:16.029" endtime="20221210 12:24:16.055"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:16.055" endtime="20221210 12:24:16.055"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:16.055" endtime="20221210 12:24:16.055"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:16.056" endtime="20221210 12:24:16.056"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.055" endtime="20221210 12:24:16.056"/>
</branch>
<status status="PASS" starttime="20221210 12:24:16.055" endtime="20221210 12:24:16.056"/>
</if>
<status status="PASS" starttime="20221210 12:24:16.028" endtime="20221210 12:24:16.056"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:16.057" endtime="20221210 12:24:16.058"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.057" endtime="20221210 12:24:16.058"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:16.063" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:16.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:16.081" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:16.060" endtime="20221210 12:24:16.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:16.082" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:16.081" endtime="20221210 12:24:16.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:16.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:16.082" endtime="20221210 12:24:16.083"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.060" endtime="20221210 12:24:16.084"/>
</kw>
<msg timestamp="20221210 12:24:16.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:16.059" endtime="20221210 12:24:16.085"/>
</kw>
<msg timestamp="20221210 12:24:16.085" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:16.059" endtime="20221210 12:24:16.085"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:16.086" endtime="20221210 12:24:16.086"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:16.086" endtime="20221210 12:24:16.086"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:16.086" endtime="20221210 12:24:16.087"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.086" endtime="20221210 12:24:16.087"/>
</branch>
<status status="PASS" starttime="20221210 12:24:16.085" endtime="20221210 12:24:16.087"/>
</if>
<status status="PASS" starttime="20221210 12:24:16.058" endtime="20221210 12:24:16.087"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:24:16.088" endtime="20221210 12:24:16.089"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.088" endtime="20221210 12:24:16.089"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:16.094" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:16.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:16.114" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20221210 12:24:16.091" endtime="20221210 12:24:16.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:16.116" level="INFO">200</msg>
<status status="PASS" starttime="20221210 12:24:16.115" endtime="20221210 12:24:16.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:16.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:16.116" endtime="20221210 12:24:16.119"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.091" endtime="20221210 12:24:16.120"/>
</kw>
<msg timestamp="20221210 12:24:16.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:16.090" endtime="20221210 12:24:16.120"/>
</kw>
<msg timestamp="20221210 12:24:16.121" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20221210 12:24:16.090" endtime="20221210 12:24:16.121"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:16.121" endtime="20221210 12:24:16.121"/>
</kw>
<status status="NOT RUN" starttime="20221210 12:24:16.121" endtime="20221210 12:24:16.122"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:16.122" endtime="20221210 12:24:16.122"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.122" endtime="20221210 12:24:16.122"/>
</branch>
<status status="PASS" starttime="20221210 12:24:16.121" endtime="20221210 12:24:16.122"/>
</if>
<status status="PASS" starttime="20221210 12:24:16.089" endtime="20221210 12:24:16.123"/>
</kw>
<status status="PASS" starttime="20221210 12:24:15.974" endtime="20221210 12:24:16.123"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:24:15.973" endtime="20221210 12:24:16.123"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:16.140" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:16.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:16.166" level="INFO">${output} = {"type":"ROOT","numVolume":2,"numBucket":1,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:24:16.137" endtime="20221210 12:24:16.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:16.167" level="INFO">{"type":"ROOT","numVolume":2,"numBucket":1,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:24:16.166" endtime="20221210 12:24:16.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:16.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:16.167" endtime="20221210 12:24:16.168"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.136" endtime="20221210 12:24:16.168"/>
</kw>
<msg timestamp="20221210 12:24:16.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:16.136" endtime="20221210 12:24:16.169"/>
</kw>
<msg timestamp="20221210 12:24:16.170" level="INFO">${result} = {"type":"ROOT","numVolume":2,"numBucket":1,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:24:16.128" endtime="20221210 12:24:16.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:16.170" endtime="20221210 12:24:16.170"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:16.171" endtime="20221210 12:24:16.171"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.127" endtime="20221210 12:24:16.171"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.127" endtime="20221210 12:24:16.171"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.126" endtime="20221210 12:24:16.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:24:16.125" endtime="20221210 12:24:16.172"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:16.181" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fcbbq 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:16.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:16.200" level="INFO">${output} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:24:16.178" endtime="20221210 12:24:16.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:16.202" level="INFO">{"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:24:16.201" endtime="20221210 12:24:16.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:16.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:16.203" endtime="20221210 12:24:16.203"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.177" endtime="20221210 12:24:16.204"/>
</kw>
<msg timestamp="20221210 12:24:16.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:16.177" endtime="20221210 12:24:16.205"/>
</kw>
<msg timestamp="20221210 12:24:16.205" level="INFO">${result} = {"type":"VOLUME","numVolume":-1,"numBucket":1,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:24:16.176" endtime="20221210 12:24:16.205"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:16.205" endtime="20221210 12:24:16.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:16.206" endtime="20221210 12:24:16.207"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.175" endtime="20221210 12:24:16.207"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.175" endtime="20221210 12:24:16.207"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.174" endtime="20221210 12:24:16.207"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:24:16.173" endtime="20221210 12:24:16.207"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:16.216" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fcbbq/buc-chwnp 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:16.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:16.242" level="INFO">${output} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:24:16.214" endtime="20221210 12:24:16.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:16.243" level="INFO">{"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:24:16.242" endtime="20221210 12:24:16.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:16.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:16.243" endtime="20221210 12:24:16.244"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.213" endtime="20221210 12:24:16.244"/>
</kw>
<msg timestamp="20221210 12:24:16.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:16.213" endtime="20221210 12:24:16.245"/>
</kw>
<msg timestamp="20221210 12:24:16.246" level="INFO">${result} = {"type":"BUCKET","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:24:16.212" endtime="20221210 12:24:16.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:16.246" endtime="20221210 12:24:16.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:24:16.247" endtime="20221210 12:24:16.247"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.211" endtime="20221210 12:24:16.247"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.211" endtime="20221210 12:24:16.247"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.210" endtime="20221210 12:24:16.248"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:24:16.209" endtime="20221210 12:24:16.248"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:16.258" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fcbbq/buc-chwnp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:16.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:16.280" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:16.255" endtime="20221210 12:24:16.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:16.281" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:16.280" endtime="20221210 12:24:16.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:16.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:16.281" endtime="20221210 12:24:16.282"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.254" endtime="20221210 12:24:16.283"/>
</kw>
<msg timestamp="20221210 12:24:16.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:16.254" endtime="20221210 12:24:16.284"/>
</kw>
<msg timestamp="20221210 12:24:16.284" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:16.253" endtime="20221210 12:24:16.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221210 12:24:16.285" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221210 12:24:16.284" endtime="20221210 12:24:16.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:16.286" endtime="20221210 12:24:16.286"/>
</kw>
<status status="FAIL" starttime="20221210 12:24:16.252" endtime="20221210 12:24:16.287"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:26.294" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fcbbq/buc-chwnp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:26.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:26.312" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:26.291" endtime="20221210 12:24:26.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:26.313" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:26.312" endtime="20221210 12:24:26.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:26.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:26.313" endtime="20221210 12:24:26.314"/>
</kw>
<status status="PASS" starttime="20221210 12:24:26.290" endtime="20221210 12:24:26.314"/>
</kw>
<msg timestamp="20221210 12:24:26.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:26.289" endtime="20221210 12:24:26.315"/>
</kw>
<msg timestamp="20221210 12:24:26.316" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:26.289" endtime="20221210 12:24:26.316"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221210 12:24:26.317" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221210 12:24:26.316" endtime="20221210 12:24:26.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:26.317" endtime="20221210 12:24:26.317"/>
</kw>
<status status="FAIL" starttime="20221210 12:24:26.288" endtime="20221210 12:24:26.318"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:36.324" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fcbbq/buc-chwnp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:36.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:36.342" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:36.321" endtime="20221210 12:24:36.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:36.344" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:36.343" endtime="20221210 12:24:36.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:36.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:36.344" endtime="20221210 12:24:36.345"/>
</kw>
<status status="PASS" starttime="20221210 12:24:36.321" endtime="20221210 12:24:36.345"/>
</kw>
<msg timestamp="20221210 12:24:36.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:36.320" endtime="20221210 12:24:36.346"/>
</kw>
<msg timestamp="20221210 12:24:36.347" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:36.320" endtime="20221210 12:24:36.347"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221210 12:24:36.348" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221210 12:24:36.347" endtime="20221210 12:24:36.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:36.349" endtime="20221210 12:24:36.349"/>
</kw>
<status status="FAIL" starttime="20221210 12:24:36.319" endtime="20221210 12:24:36.350"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:46.355" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fcbbq/buc-chwnp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:46.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:46.371" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:46.353" endtime="20221210 12:24:46.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:46.373" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:46.372" endtime="20221210 12:24:46.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:46.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:46.373" endtime="20221210 12:24:46.374"/>
</kw>
<status status="PASS" starttime="20221210 12:24:46.352" endtime="20221210 12:24:46.374"/>
</kw>
<msg timestamp="20221210 12:24:46.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:46.352" endtime="20221210 12:24:46.375"/>
</kw>
<msg timestamp="20221210 12:24:46.375" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:46.351" endtime="20221210 12:24:46.375"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221210 12:24:46.376" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221210 12:24:46.375" endtime="20221210 12:24:46.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:46.377" endtime="20221210 12:24:46.377"/>
</kw>
<status status="FAIL" starttime="20221210 12:24:46.350" endtime="20221210 12:24:46.378"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:24:56.384" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fcbbq/buc-chwnp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:24:56.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:24:56.401" level="INFO">${output} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:56.381" endtime="20221210 12:24:56.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:24:56.403" level="INFO">{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:56.402" endtime="20221210 12:24:56.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:24:56.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:24:56.403" endtime="20221210 12:24:56.405"/>
</kw>
<status status="PASS" starttime="20221210 12:24:56.380" endtime="20221210 12:24:56.405"/>
</kw>
<msg timestamp="20221210 12:24:56.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:24:56.380" endtime="20221210 12:24:56.406"/>
</kw>
<msg timestamp="20221210 12:24:56.406" level="INFO">${result} = {"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20221210 12:24:56.379" endtime="20221210 12:24:56.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20221210 12:24:56.408" level="FAIL">'{"type":"UNKNOWN","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20221210 12:24:56.406" endtime="20221210 12:24:56.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221210 12:24:56.408" endtime="20221210 12:24:56.408"/>
</kw>
<status status="FAIL" starttime="20221210 12:24:56.378" endtime="20221210 12:24:56.409"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:25:06.415" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fcbbq/buc-chwnp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:25:06.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:25:06.433" level="INFO">${output} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.412" endtime="20221210 12:25:06.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:25:06.435" level="INFO">{"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.434" endtime="20221210 12:25:06.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:25:06.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:25:06.435" endtime="20221210 12:25:06.436"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.412" endtime="20221210 12:25:06.436"/>
</kw>
<msg timestamp="20221210 12:25:06.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:25:06.411" endtime="20221210 12:25:06.437"/>
</kw>
<msg timestamp="20221210 12:25:06.438" level="INFO">${result} = {"type":"KEY","numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.411" endtime="20221210 12:25:06.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.438" endtime="20221210 12:25:06.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.438" endtime="20221210 12:25:06.439"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.410" endtime="20221210 12:25:06.439"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.252" endtime="20221210 12:25:06.439"/>
</kw>
<status status="PASS" starttime="20221210 12:24:16.251" endtime="20221210 12:25:06.439"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:24:16.250" endtime="20221210 12:25:06.440"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:25:06.449" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-fcbbq/buc-chwnp/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:25:06.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:25:06.466" level="INFO">${output} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.447" endtime="20221210 12:25:06.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:25:06.467" level="INFO">{"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.466" endtime="20221210 12:25:06.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:25:06.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:25:06.467" endtime="20221210 12:25:06.468"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.446" endtime="20221210 12:25:06.468"/>
</kw>
<msg timestamp="20221210 12:25:06.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:25:06.446" endtime="20221210 12:25:06.469"/>
</kw>
<msg timestamp="20221210 12:25:06.469" level="INFO">${result} = {"type":"DIRECTORY","numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.445" endtime="20221210 12:25:06.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.469" endtime="20221210 12:25:06.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.470" endtime="20221210 12:25:06.470"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.444" endtime="20221210 12:25:06.470"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.444" endtime="20221210 12:25:06.470"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.443" endtime="20221210 12:25:06.470"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.442" endtime="20221210 12:25:06.470"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20221210 12:25:06.471" endtime="20221210 12:25:06.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:25:06.441" endtime="20221210 12:25:06.471"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:25:06.479" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-fcbbq/buc-chwnp&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:25:06.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:25:06.494" level="INFO">${output} = {"status":"OK","path":"/vol-fcbbq/buc-chwnp","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-fcbbq/buc-chwnp/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221210 12:25:06.476" endtime="20221210 12:25:06.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:25:06.496" level="INFO">{"status":"OK","path":"/vol-fcbbq/buc-chwnp","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-fcbbq/buc-chwnp/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":3879}</msg>
<status status="PASS" starttime="20221210 12:25:06.495" endtime="20221210 12:25:06.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:25:06.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:25:06.496" endtime="20221210 12:25:06.497"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.476" endtime="20221210 12:25:06.497"/>
</kw>
<msg timestamp="20221210 12:25:06.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:25:06.476" endtime="20221210 12:25:06.498"/>
</kw>
<msg timestamp="20221210 12:25:06.498" level="INFO">${result} = {"status":"OK","path":"/vol-fcbbq/buc-chwnp","size":9917,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-fcbbq/buc-chwnp/dir1","size":6038,"sizeWithReplica":-1,"isKey":fals...</msg>
<status status="PASS" starttime="20221210 12:25:06.475" endtime="20221210 12:25:06.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.499" endtime="20221210 12:25:06.499"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.499" endtime="20221210 12:25:06.500"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.475" endtime="20221210 12:25:06.500"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.474" endtime="20221210 12:25:06.500"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.473" endtime="20221210 12:25:06.500"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:25:06.472" endtime="20221210 12:25:06.500"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:25:06.509" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-fcbbq 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:25:06.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:25:06.526" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.506" endtime="20221210 12:25:06.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:25:06.528" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.527" endtime="20221210 12:25:06.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:25:06.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:25:06.528" endtime="20221210 12:25:06.528"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.505" endtime="20221210 12:25:06.529"/>
</kw>
<msg timestamp="20221210 12:25:06.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:25:06.505" endtime="20221210 12:25:06.530"/>
</kw>
<msg timestamp="20221210 12:25:06.530" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.504" endtime="20221210 12:25:06.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.530" endtime="20221210 12:25:06.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.531" endtime="20221210 12:25:06.531"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.504" endtime="20221210 12:25:06.531"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.503" endtime="20221210 12:25:06.531"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.503" endtime="20221210 12:25:06.532"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:25:06.502" endtime="20221210 12:25:06.532"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:25:06.540" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-fcbbq/buc-chwnp 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:25:06.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:25:06.557" level="INFO">${output} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.538" endtime="20221210 12:25:06.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:25:06.558" level="INFO">{"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.557" endtime="20221210 12:25:06.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:25:06.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:25:06.558" endtime="20221210 12:25:06.559"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.537" endtime="20221210 12:25:06.559"/>
</kw>
<msg timestamp="20221210 12:25:06.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:25:06.537" endtime="20221210 12:25:06.560"/>
</kw>
<msg timestamp="20221210 12:25:06.560" level="INFO">${result} = {"allowed":-1,"used":9917,"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.536" endtime="20221210 12:25:06.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.561" endtime="20221210 12:25:06.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.561" endtime="20221210 12:25:06.562"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.536" endtime="20221210 12:25:06.562"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.535" endtime="20221210 12:25:06.562"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.534" endtime="20221210 12:25:06.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:25:06.533" endtime="20221210 12:25:06.562"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20221210 12:25:06.572" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20221210 12:25:06.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20221210 12:25:06.594" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.570" endtime="20221210 12:25:06.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20221210 12:25:06.596" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.595" endtime="20221210 12:25:06.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221210 12:25:06.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221210 12:25:06.596" endtime="20221210 12:25:06.598"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.568" endtime="20221210 12:25:06.598"/>
</kw>
<msg timestamp="20221210 12:25:06.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20221210 12:25:06.567" endtime="20221210 12:25:06.599"/>
</kw>
<msg timestamp="20221210 12:25:06.599" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20221210 12:25:06.567" endtime="20221210 12:25:06.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.599" endtime="20221210 12:25:06.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221210 12:25:06.600" endtime="20221210 12:25:06.600"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.566" endtime="20221210 12:25:06.601"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.566" endtime="20221210 12:25:06.601"/>
</kw>
<status status="PASS" starttime="20221210 12:25:06.565" endtime="20221210 12:25:06.601"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20221210 12:25:06.564" endtime="20221210 12:25:06.601"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20221210 12:23:47.032" endtime="20221210 12:25:06.603"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
