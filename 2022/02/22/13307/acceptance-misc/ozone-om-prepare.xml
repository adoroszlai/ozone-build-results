<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220222 06:28:19.398" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:23:41.889" level="INFO">${random} = 58226</msg>
<status status="PASS" starttime="20220222 06:23:41.889" endtime="20220222 06:23:41.890"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220222 06:23:41.891" level="INFO">${volume_name} = 58226-volume-for-cancel</msg>
<status status="PASS" starttime="20220222 06:23:41.890" endtime="20220222 06:23:41.891"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220222 06:23:41.893" level="INFO">${bucket_name} = 58226-bucket-for-cancel</msg>
<status status="PASS" starttime="20220222 06:23:41.892" endtime="20220222 06:23:41.893"/>
</kw>
<status status="PASS" starttime="20220222 06:23:41.889" endtime="20220222 06:23:41.893"/>
</kw>
<test id="s1-s1-t1" name="Cancel Ozone Manager Prepare">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:23:41.894" endtime="20220222 06:23:41.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:41.899" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:44.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:44.715" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20220222 06:23:41.896" endtime="20220222 06:23:44.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:44.716" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20220222 06:23:44.715" endtime="20220222 06:23:44.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:44.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:44.716" endtime="20220222 06:23:44.717"/>
</kw>
<status status="PASS" starttime="20220222 06:23:41.895" endtime="20220222 06:23:44.717"/>
</kw>
<msg timestamp="20220222 06:23:44.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:23:41.895" endtime="20220222 06:23:44.719"/>
</kw>
<msg timestamp="20220222 06:23:44.719" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20220222 06:23:41.895" endtime="20220222 06:23:44.719"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:23:44.720" endtime="20220222 06:23:44.721"/>
</kw>
<status status="PASS" starttime="20220222 06:23:44.720" endtime="20220222 06:23:44.721"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:23:41.893" endtime="20220222 06:23:44.721"/>
</test>
<test id="s1-s1-t2" name="Test write operations">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:23:44.728" endtime="20220222 06:23:44.729"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:44.733" level="INFO">Running command 'ozone sh volume create /58226-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:47.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:47.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:23:44.731" endtime="20220222 06:23:47.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:47.502" level="INFO"/>
<status status="PASS" starttime="20220222 06:23:47.501" endtime="20220222 06:23:47.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:47.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:47.502" endtime="20220222 06:23:47.503"/>
</kw>
<status status="PASS" starttime="20220222 06:23:44.730" endtime="20220222 06:23:47.504"/>
</kw>
<msg timestamp="20220222 06:23:47.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:23:44.730" endtime="20220222 06:23:47.504"/>
</kw>
<status status="PASS" starttime="20220222 06:23:44.729" endtime="20220222 06:23:47.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:47.510" level="INFO">Running command 'ozone sh bucket create /58226-volume-for-cancel/58226-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:50.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:50.041" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:23:47.507" endtime="20220222 06:23:50.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:50.043" level="INFO"/>
<status status="PASS" starttime="20220222 06:23:50.042" endtime="20220222 06:23:50.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:50.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:50.043" endtime="20220222 06:23:50.043"/>
</kw>
<status status="PASS" starttime="20220222 06:23:47.506" endtime="20220222 06:23:50.044"/>
</kw>
<msg timestamp="20220222 06:23:50.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:23:47.506" endtime="20220222 06:23:50.044"/>
</kw>
<status status="PASS" starttime="20220222 06:23:47.505" endtime="20220222 06:23:50.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:50.049" level="INFO">Running command 'ozone sh key put /58226-volume-for-cancel/58226-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:54.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:54.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:23:50.046" endtime="20220222 06:23:54.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:54.809" level="INFO"/>
<status status="PASS" starttime="20220222 06:23:54.808" endtime="20220222 06:23:54.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:54.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:54.809" endtime="20220222 06:23:54.810"/>
</kw>
<status status="PASS" starttime="20220222 06:23:50.046" endtime="20220222 06:23:54.810"/>
</kw>
<msg timestamp="20220222 06:23:54.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:23:50.045" endtime="20220222 06:23:54.811"/>
</kw>
<msg timestamp="20220222 06:23:54.811" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220222 06:23:50.045" endtime="20220222 06:23:54.811"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:54.815" level="INFO">Running command 'ozone sh key info /58226-volume-for-cancel/58226-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:57.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:57.513" level="INFO">${output} = {
  "volumeName" : "58226-volume-for-cancel",
  "bucketName" : "58226-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17526,
  "creationTime" : "2022-02-22T06:23:52.617Z",
  "modificationT...</msg>
<status status="PASS" starttime="20220222 06:23:54.812" endtime="20220222 06:23:57.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:57.515" level="INFO">{
  "volumeName" : "58226-volume-for-cancel",
  "bucketName" : "58226-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17526,
  "creationTime" : "2022-02-22T06:23:52.617Z",
  "modificationTime" : "2022-02-22T06:23:54.429Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 109611004723200103,
    "length" : 17526,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { },
  "replicationType" : "RATIS",
  "replicationFactor" : 1
}</msg>
<status status="PASS" starttime="20220222 06:23:57.514" endtime="20220222 06:23:57.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:57.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:57.515" endtime="20220222 06:23:57.516"/>
</kw>
<status status="PASS" starttime="20220222 06:23:54.812" endtime="20220222 06:23:57.516"/>
</kw>
<msg timestamp="20220222 06:23:57.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:23:54.812" endtime="20220222 06:23:57.517"/>
</kw>
<msg timestamp="20220222 06:23:57.517" level="INFO">${result} = {
  "volumeName" : "58226-volume-for-cancel",
  "bucketName" : "58226-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17526,
  "creationTime" : "2022-02-22T06:23:52.617Z",
  "modificationT...</msg>
<status status="PASS" starttime="20220222 06:23:54.811" endtime="20220222 06:23:57.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:23:57.517" endtime="20220222 06:23:57.517"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:23:44.722" endtime="20220222 06:23:57.518"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20220222 06:23:41.836" endtime="20220222 06:23:57.520"/>
</suite>
<suite id="s1-s2" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Execute" library="os">
<arg>ozone freon rk --replication-type=RATIS --num-of-volumes 1 --num-of-buckets 1 --num-of-keys 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:02.195" level="INFO">Running command 'ozone freon rk --replication-type=RATIS --num-of-volumes 1 --num-of-buckets 1 --num-of-keys 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:14.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:24:14.878" level="INFO">${output} = 2022-02-22 06:24:03,627 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-22 06:24:03,744 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220222 06:24:02.191" endtime="20220222 06:24:14.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:14.879" level="INFO">2022-02-22 06:24:03,627 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-22 06:24:03,744 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-22 06:24:03,745 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-22 06:24:04,405 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2022-02-22 06:24:04,426 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2022-02-22 06:24:04,427 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2022-02-22 06:24:04,427 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 100.
2022-02-22 06:24:04,427 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2022-02-22 06:24:04,427 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2022-02-22 06:24:04,427 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2022-02-22 06:24:04,427 [main] INFO freon.RandomKeyGenerator: Number of Validate Threads: 1
2022-02-22 06:24:04,427 [main] INFO freon.RandomKeyGenerator: cleanObjects : false
2022-02-22 06:24:04,463 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2022-02-22 06:24:04,467 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-22 06:24:04,522 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-66113, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-02-22 06:24:04,920 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-66113/bucket-0-80833, with hadoop as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2022-02-22 06:24:05,480 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-22 06:24:05,617 [pool-2-thread-9] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-22 06:24:05,879 [pool-2-thread-7] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-22 06:24:06,480 [Thread-3] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2022-02-22 06:24:07,485 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2022-02-22 06:24:08,489 [Thread-3] INFO freon.ProgressBar: Progress: 45.00 % (45 out of 100)
2022-02-22 06:24:09,513 [Thread-3] INFO freon.ProgressBar: Progress: 69.00 % (69 out of 100)
2022-02-22 06:24:10,521 [Thread-3] INFO freon.ProgressBar: Progress: 90.00 % (90 out of 100)
2022-02-22 06:24:11,521 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)

***************************************************
Status: Success
Git Base Revision: a3b9c37a397ad4188041dd80621bdeefc46885f2
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 100
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,042
Average Time spent in bucket creation: 00:00:00,001
Average Time spent in key creation: 00:00:01,750
Average Time spent in key write: 00:00:00,694
Total bytes written: 1024000
Total Execution time: 00:00:10,521
***************************************************</msg>
<status status="PASS" starttime="20220222 06:24:14.879" endtime="20220222 06:24:14.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:14.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:14.880" endtime="20220222 06:24:14.880"/>
</kw>
<status status="PASS" starttime="20220222 06:24:02.190" endtime="20220222 06:24:14.881"/>
</kw>
<msg timestamp="20220222 06:24:14.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:24:02.190" endtime="20220222 06:24:14.882"/>
</kw>
<status status="PASS" starttime="20220222 06:24:02.190" endtime="20220222 06:24:14.882"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:24:14.883" level="INFO">${random} = 63510</msg>
<status status="PASS" starttime="20220222 06:24:14.883" endtime="20220222 06:24:14.883"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220222 06:24:14.885" level="INFO">${volume_name} = 63510-volume-for-prepare</msg>
<status status="PASS" starttime="20220222 06:24:14.883" endtime="20220222 06:24:14.885"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220222 06:24:14.886" level="INFO">${bucket_name} = 63510-bucket-for-prepare</msg>
<status status="PASS" starttime="20220222 06:24:14.885" endtime="20220222 06:24:14.887"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:14.891" level="INFO">Running command 'ozone sh volume create /63510-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:17.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:24:17.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:24:14.888" endtime="20220222 06:24:17.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:17.196" level="INFO"/>
<status status="PASS" starttime="20220222 06:24:17.195" endtime="20220222 06:24:17.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:17.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:17.196" endtime="20220222 06:24:17.197"/>
</kw>
<status status="PASS" starttime="20220222 06:24:14.887" endtime="20220222 06:24:17.197"/>
</kw>
<msg timestamp="20220222 06:24:17.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:24:14.887" endtime="20220222 06:24:17.198"/>
</kw>
<status status="PASS" starttime="20220222 06:24:14.887" endtime="20220222 06:24:17.198"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:17.202" level="INFO">Running command 'ozone sh bucket create /63510-volume-for-prepare/63510-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:19.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:24:19.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:24:17.199" endtime="20220222 06:24:19.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:19.872" level="INFO"/>
<status status="PASS" starttime="20220222 06:24:19.871" endtime="20220222 06:24:19.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:19.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:19.872" endtime="20220222 06:24:19.873"/>
</kw>
<status status="PASS" starttime="20220222 06:24:17.199" endtime="20220222 06:24:19.874"/>
</kw>
<msg timestamp="20220222 06:24:19.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:24:17.199" endtime="20220222 06:24:19.874"/>
</kw>
<status status="PASS" starttime="20220222 06:24:17.198" endtime="20220222 06:24:19.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:19.878" level="INFO">Running command 'ozone sh key put /63510-volume-for-prepare/63510-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:24.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:24:24.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:24:19.876" endtime="20220222 06:24:24.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:24.725" level="INFO"/>
<status status="PASS" starttime="20220222 06:24:24.724" endtime="20220222 06:24:24.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:24.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:24.725" endtime="20220222 06:24:24.726"/>
</kw>
<status status="PASS" starttime="20220222 06:24:19.875" endtime="20220222 06:24:24.726"/>
</kw>
<msg timestamp="20220222 06:24:24.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:24:19.875" endtime="20220222 06:24:24.727"/>
</kw>
<status status="PASS" starttime="20220222 06:24:19.874" endtime="20220222 06:24:24.727"/>
</kw>
<status status="PASS" starttime="20220222 06:24:02.189" endtime="20220222 06:24:24.727"/>
</kw>
<test id="s1-s2-t1" name="Prepare Ozone Manager">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:24:24.728" endtime="20220222 06:24:24.729"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:24.733" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:32.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:24:32.236" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [718].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220222 06:24:24.731" endtime="20220222 06:24:32.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:32.237" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [718].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [718]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [718]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [718]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20220222 06:24:32.236" endtime="20220222 06:24:32.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:32.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:32.237" endtime="20220222 06:24:32.238"/>
</kw>
<status status="PASS" starttime="20220222 06:24:24.730" endtime="20220222 06:24:32.238"/>
</kw>
<msg timestamp="20220222 06:24:32.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:24:24.730" endtime="20220222 06:24:32.239"/>
</kw>
<msg timestamp="20220222 06:24:32.239" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [718].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220222 06:24:24.729" endtime="20220222 06:24:32.239"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:24:32.240" endtime="20220222 06:24:32.241"/>
</kw>
<status status="PASS" starttime="20220222 06:24:32.239" endtime="20220222 06:24:32.241"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:24:24.727" endtime="20220222 06:24:32.241"/>
</test>
<test id="s1-s2-t2" name="Checks if the expected data is present in OM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:24:32.243" endtime="20220222 06:24:32.244"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:32.248" level="INFO">Running command 'ozone sh key info /63510-volume-for-prepare/63510-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:35.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:24:35.016" level="INFO">${output} = {
  "volumeName" : "63510-volume-for-prepare",
  "bucketName" : "63510-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-02-22T06:24:22.416Z",
  "modificati...</msg>
<status status="PASS" starttime="20220222 06:24:32.245" endtime="20220222 06:24:35.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:35.018" level="INFO">{
  "volumeName" : "63510-volume-for-prepare",
  "bucketName" : "63510-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-02-22T06:24:22.416Z",
  "modificationTime" : "2022-02-22T06:24:24.350Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 109611004723200204,
    "length" : 17526,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { },
  "replicationType" : "RATIS",
  "replicationFactor" : 1
}</msg>
<status status="PASS" starttime="20220222 06:24:35.017" endtime="20220222 06:24:35.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:35.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:35.018" endtime="20220222 06:24:35.019"/>
</kw>
<status status="PASS" starttime="20220222 06:24:32.245" endtime="20220222 06:24:35.019"/>
</kw>
<msg timestamp="20220222 06:24:35.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:24:32.244" endtime="20220222 06:24:35.019"/>
</kw>
<msg timestamp="20220222 06:24:35.020" level="INFO">${result} = {
  "volumeName" : "63510-volume-for-prepare",
  "bucketName" : "63510-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-02-22T06:24:22.416Z",
  "modificati...</msg>
<status status="PASS" starttime="20220222 06:24:32.244" endtime="20220222 06:24:35.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:24:35.020" endtime="20220222 06:24:35.020"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:24:32.242" endtime="20220222 06:24:35.021"/>
</test>
<test id="s1-s2-t3" name="Test write operation fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:24:35.023" endtime="20220222 06:24:35.023"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:35.026" level="INFO">Running command 'ozone sh key put /63510-volume-for-prepare/63510-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:37.536" level="INFO">${rc} = 255</msg>
<msg timestamp="20220222 06:24:37.536" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:24:35.024" endtime="20220222 06:24:37.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:37.538" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:24:37.537" endtime="20220222 06:24:37.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:37.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:37.538" endtime="20220222 06:24:37.538"/>
</kw>
<msg timestamp="20220222 06:24:37.539" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:24:35.023" endtime="20220222 06:24:37.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:24:37.539" endtime="20220222 06:24:37.539"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:37.543" level="INFO">Running command 'ozone sh key info /63510-volume-for-prepare/63510-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:39.839" level="INFO">${rc} = 255</msg>
<msg timestamp="20220222 06:24:39.839" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220222 06:24:37.540" endtime="20220222 06:24:39.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:39.841" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220222 06:24:39.840" endtime="20220222 06:24:39.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:39.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:39.841" endtime="20220222 06:24:39.842"/>
</kw>
<status status="PASS" starttime="20220222 06:24:37.540" endtime="20220222 06:24:39.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:24:35.022" endtime="20220222 06:24:39.842"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20220222 06:24:02.132" endtime="20220222 06:24:39.844"/>
</suite>
<suite id="s1-s3" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s3-t1" name="Test create volume fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:24:44.461" endtime="20220222 06:24:44.461"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:24:44.462" level="INFO">${random} = 94345</msg>
<status status="PASS" starttime="20220222 06:24:44.462" endtime="20220222 06:24:44.462"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220222 06:24:44.464" level="INFO">${volume_name} = 94345-volume-for-prepare</msg>
<status status="PASS" starttime="20220222 06:24:44.462" endtime="20220222 06:24:44.464"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:44.468" level="INFO">Running command 'ozone sh volume create /94345-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:46.856" level="INFO">${rc} = 255</msg>
<msg timestamp="20220222 06:24:46.857" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:24:44.464" endtime="20220222 06:24:46.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:46.858" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:24:46.858" endtime="20220222 06:24:46.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:46.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:46.859" endtime="20220222 06:24:46.859"/>
</kw>
<msg timestamp="20220222 06:24:46.860" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:24:44.464" endtime="20220222 06:24:46.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:24:46.860" endtime="20220222 06:24:46.860"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:46.864" level="INFO">Running command 'ozone sh volume info /94345-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:49.317" level="INFO">${rc} = 255</msg>
<msg timestamp="20220222 06:24:49.317" level="INFO">${output} = VOLUME_NOT_FOUND Volume 94345-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220222 06:24:46.861" endtime="20220222 06:24:49.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:49.318" level="INFO">VOLUME_NOT_FOUND Volume 94345-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220222 06:24:49.317" endtime="20220222 06:24:49.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:49.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:49.318" endtime="20220222 06:24:49.319"/>
</kw>
<msg timestamp="20220222 06:24:49.319" level="INFO">${result} = VOLUME_NOT_FOUND Volume 94345-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220222 06:24:46.861" endtime="20220222 06:24:49.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:24:49.320" endtime="20220222 06:24:49.320"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:24:44.460" endtime="20220222 06:24:49.320"/>
</test>
<test id="s1-s3-t2" name="Test list volumes succeeds">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:24:49.322" endtime="20220222 06:24:49.323"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:24:49.326" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:24:52.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:24:52.091" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "vol-0-66113",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06...</msg>
<status status="PASS" starttime="20220222 06:24:49.324" endtime="20220222 06:24:52.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:24:52.093" level="INFO">[ {
  "metadata" : { },
  "name" : "vol-0-66113",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06:24:04.736Z",
  "modificationTime" : "2022-02-22T06:24:04.736Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "63510-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06:24:17.078Z",
  "modificationTime" : "2022-02-22T06:24:17.078Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "vol-0-54696",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06:23:00.768Z",
  "modificationTime" : "2022-02-22T06:23:00.768Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-22T06:22:43.049Z",
  "modificationTime" : "2022-02-22T06:22:43.049Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "58226-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06:23:47.358Z",
  "modificationTime" : "2022-02-22T06:23:47.358Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "52802-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06:23:13.590Z",
  "modificationTime" : "2022-02-22T06:23:13.590Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
} ]</msg>
<status status="PASS" starttime="20220222 06:24:52.092" endtime="20220222 06:24:52.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:24:52.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:24:52.093" endtime="20220222 06:24:52.094"/>
</kw>
<status status="PASS" starttime="20220222 06:24:49.324" endtime="20220222 06:24:52.094"/>
</kw>
<msg timestamp="20220222 06:24:52.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:24:49.323" endtime="20220222 06:24:52.096"/>
</kw>
<msg timestamp="20220222 06:24:52.096" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "vol-0-66113",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06...</msg>
<status status="PASS" starttime="20220222 06:24:49.323" endtime="20220222 06:24:52.096"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:24:49.321" endtime="20220222 06:24:52.096"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20220222 06:24:44.406" endtime="20220222 06:24:52.097"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:26:12.748" endtime="20220222 06:26:12.748"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:26:12.749" level="INFO">${random} = 62775</msg>
<status status="PASS" starttime="20220222 06:26:12.749" endtime="20220222 06:26:12.749"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220222 06:26:12.751" level="INFO">${volume_name} = 62775-volume-for-prepare</msg>
<status status="PASS" starttime="20220222 06:26:12.749" endtime="20220222 06:26:12.751"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:26:12.755" level="INFO">Running command 'ozone sh volume create /62775-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:26:15.309" level="INFO">${rc} = 255</msg>
<msg timestamp="20220222 06:26:15.309" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:26:12.752" endtime="20220222 06:26:15.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:26:15.310" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:26:15.309" endtime="20220222 06:26:15.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:26:15.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:26:15.310" endtime="20220222 06:26:15.311"/>
</kw>
<msg timestamp="20220222 06:26:15.311" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:26:12.751" endtime="20220222 06:26:15.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:26:15.311" endtime="20220222 06:26:15.312"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:26:15.315" level="INFO">Running command 'ozone sh volume info /62775-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:26:17.915" level="INFO">${rc} = 255</msg>
<msg timestamp="20220222 06:26:17.915" level="INFO">${output} = VOLUME_NOT_FOUND Volume 62775-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220222 06:26:15.313" endtime="20220222 06:26:17.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:26:17.918" level="INFO">VOLUME_NOT_FOUND Volume 62775-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220222 06:26:17.916" endtime="20220222 06:26:17.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:26:17.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:26:17.918" endtime="20220222 06:26:17.919"/>
</kw>
<msg timestamp="20220222 06:26:17.919" level="INFO">${result} = VOLUME_NOT_FOUND Volume 62775-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20220222 06:26:15.312" endtime="20220222 06:26:17.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:26:17.920" endtime="20220222 06:26:17.920"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:26:12.747" endtime="20220222 06:26:17.920"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:26:17.922" endtime="20220222 06:26:17.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:26:17.926" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:26:20.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:26:20.820" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "vol-0-66113",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06...</msg>
<status status="PASS" starttime="20220222 06:26:17.924" endtime="20220222 06:26:20.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:26:20.821" level="INFO">[ {
  "metadata" : { },
  "name" : "vol-0-66113",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06:24:04.736Z",
  "modificationTime" : "2022-02-22T06:24:04.736Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "63510-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06:24:17.078Z",
  "modificationTime" : "2022-02-22T06:24:17.078Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "vol-0-54696",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06:23:00.768Z",
  "modificationTime" : "2022-02-22T06:23:00.768Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-22T06:22:46.560Z",
  "modificationTime" : "2022-02-22T06:22:46.560Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "58226-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06:23:47.358Z",
  "modificationTime" : "2022-02-22T06:23:47.358Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
}, {
  "metadata" : { },
  "name" : "52802-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06:23:13.590Z",
  "modificationTime" : "2022-02-22T06:23:13.590Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ]
} ]</msg>
<status status="PASS" starttime="20220222 06:26:20.821" endtime="20220222 06:26:20.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:26:20.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:26:20.822" endtime="20220222 06:26:20.823"/>
</kw>
<status status="PASS" starttime="20220222 06:26:17.923" endtime="20220222 06:26:20.823"/>
</kw>
<msg timestamp="20220222 06:26:20.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:26:17.923" endtime="20220222 06:26:20.824"/>
</kw>
<msg timestamp="20220222 06:26:20.825" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "vol-0-66113",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2022-02-22T06...</msg>
<status status="PASS" starttime="20220222 06:26:17.922" endtime="20220222 06:26:20.825"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:26:17.921" endtime="20220222 06:26:20.825"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20220222 06:26:12.694" endtime="20220222 06:26:20.827"/>
</suite>
<suite id="s1-s5" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s5-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:27:43.311" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:27:46.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:27:46.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:27:43.306" endtime="20220222 06:27:46.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:27:46.057" level="INFO"/>
<status status="PASS" starttime="20220222 06:27:46.056" endtime="20220222 06:27:46.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:27:46.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:27:46.058" endtime="20220222 06:27:46.060"/>
</kw>
<status status="PASS" starttime="20220222 06:27:43.305" endtime="20220222 06:27:46.060"/>
</kw>
<msg timestamp="20220222 06:27:46.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:27:43.305" endtime="20220222 06:27:46.063"/>
</kw>
<msg timestamp="20220222 06:27:46.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:27:43.304" endtime="20220222 06:27:46.063"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:27:46.064" endtime="20220222 06:27:46.064"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:27:46.073" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:27:48.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:27:48.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:27:46.068" endtime="20220222 06:27:48.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:27:48.639" level="INFO"/>
<status status="PASS" starttime="20220222 06:27:48.639" endtime="20220222 06:27:48.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:27:48.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:27:48.640" endtime="20220222 06:27:48.640"/>
</kw>
<status status="PASS" starttime="20220222 06:27:46.067" endtime="20220222 06:27:48.641"/>
</kw>
<msg timestamp="20220222 06:27:48.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:27:46.067" endtime="20220222 06:27:48.641"/>
</kw>
<msg timestamp="20220222 06:27:48.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:27:46.064" endtime="20220222 06:27:48.642"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:27:48.642" endtime="20220222 06:27:48.642"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:27:48.646" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:27:54.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:27:54.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:27:48.644" endtime="20220222 06:27:54.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:27:54.210" level="INFO"/>
<status status="PASS" starttime="20220222 06:27:54.209" endtime="20220222 06:27:54.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:27:54.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:27:54.210" endtime="20220222 06:27:54.210"/>
</kw>
<status status="PASS" starttime="20220222 06:27:48.643" endtime="20220222 06:27:54.211"/>
</kw>
<msg timestamp="20220222 06:27:54.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:27:48.643" endtime="20220222 06:27:54.211"/>
</kw>
<msg timestamp="20220222 06:27:54.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:27:48.643" endtime="20220222 06:27:54.212"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:27:54.212" endtime="20220222 06:27:54.212"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:27:43.303" endtime="20220222 06:27:54.212"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:27:43.248" endtime="20220222 06:27:54.214"/>
</suite>
<suite id="s1-s6" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:27:58.896" level="INFO">${random} = 01132</msg>
<status status="PASS" starttime="20220222 06:27:58.895" endtime="20220222 06:27:58.896"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:27:58.902" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-01132 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:28:03.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:28:03.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:27:58.898" endtime="20220222 06:28:03.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:28:03.578" level="INFO"/>
<status status="PASS" starttime="20220222 06:28:03.577" endtime="20220222 06:28:03.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:28:03.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:28:03.578" endtime="20220222 06:28:03.579"/>
</kw>
<status status="PASS" starttime="20220222 06:27:58.897" endtime="20220222 06:28:03.579"/>
</kw>
<msg timestamp="20220222 06:28:03.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:27:58.897" endtime="20220222 06:28:03.581"/>
</kw>
<msg timestamp="20220222 06:28:03.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:27:58.896" endtime="20220222 06:28:03.581"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:28:03.581" endtime="20220222 06:28:03.582"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:27:58.894" endtime="20220222 06:28:03.582"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:27:58.836" endtime="20220222 06:28:03.583"/>
</suite>
<suite id="s1-s7" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Execute" library="os">
<arg>ozone freon rk --replication-type=RATIS --num-of-volumes 1 --num-of-buckets 1 --num-of-keys 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:22:58.090" level="INFO">Running command 'ozone freon rk --replication-type=RATIS --num-of-volumes 1 --num-of-buckets 1 --num-of-keys 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:10.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:10.935" level="INFO">${output} = 2022-02-22 06:22:59,591 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-22 06:22:59,751 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220222 06:22:58.085" endtime="20220222 06:23:10.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:10.936" level="INFO">2022-02-22 06:22:59,591 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-22 06:22:59,751 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-22 06:22:59,751 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-22 06:23:00,430 [main] INFO freon.RandomKeyGenerator: Number of Threads: 10
2022-02-22 06:23:00,457 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2022-02-22 06:23:00,457 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2022-02-22 06:23:00,457 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 100.
2022-02-22 06:23:00,457 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2022-02-22 06:23:00,457 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2022-02-22 06:23:00,457 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2022-02-22 06:23:00,457 [main] INFO freon.RandomKeyGenerator: Number of Validate Threads: 1
2022-02-22 06:23:00,457 [main] INFO freon.RandomKeyGenerator: cleanObjects : false
2022-02-22 06:23:00,470 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2022-02-22 06:23:00,482 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-22 06:23:00,519 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-54696, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-02-22 06:23:01,263 [pool-2-thread-2] INFO rpc.RpcClient: Creating Bucket: vol-0-54696/bucket-0-35566, with hadoop as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2022-02-22 06:23:01,486 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-22 06:23:02,487 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-22 06:23:02,616 [pool-2-thread-6] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-22 06:23:02,915 [pool-2-thread-5] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-22 06:23:03,487 [Thread-3] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2022-02-22 06:23:04,491 [Thread-3] INFO freon.ProgressBar: Progress: 10.00 % (10 out of 100)
2022-02-22 06:23:05,493 [Thread-3] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2022-02-22 06:23:06,493 [Thread-3] INFO freon.ProgressBar: Progress: 33.00 % (33 out of 100)
2022-02-22 06:23:07,494 [Thread-3] INFO freon.ProgressBar: Progress: 51.00 % (51 out of 100)
2022-02-22 06:23:08,504 [Thread-3] INFO freon.ProgressBar: Progress: 71.00 % (71 out of 100)
2022-02-22 06:23:09,506 [Thread-3] INFO freon.ProgressBar: Progress: 88.00 % (88 out of 100)
2022-02-22 06:23:10,506 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)

***************************************************
Status: Success
Git Base Revision: a3b9c37a397ad4188041dd80621bdeefc46885f2
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 100
Ratis replication factor: ONE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,073
Average Time spent in bucket creation: 00:00:00,007
Average Time spent in key creation: 00:00:02,657
Average Time spent in key write: 00:00:00,890
Total bytes written: 1024000
Total Execution time: 00:00:10,619
***************************************************</msg>
<status status="PASS" starttime="20220222 06:23:10.935" endtime="20220222 06:23:10.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:10.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:10.936" endtime="20220222 06:23:10.937"/>
</kw>
<status status="PASS" starttime="20220222 06:22:58.084" endtime="20220222 06:23:10.937"/>
</kw>
<msg timestamp="20220222 06:23:10.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:22:58.083" endtime="20220222 06:23:10.938"/>
</kw>
<status status="PASS" starttime="20220222 06:22:58.083" endtime="20220222 06:23:10.939"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:23:10.939" level="INFO">${random} = 52802</msg>
<status status="PASS" starttime="20220222 06:23:10.939" endtime="20220222 06:23:10.939"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220222 06:23:10.941" level="INFO">${volume_name} = 52802-volume-for-prepare</msg>
<status status="PASS" starttime="20220222 06:23:10.939" endtime="20220222 06:23:10.941"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220222 06:23:10.943" level="INFO">${bucket_name} = 52802-bucket-for-prepare</msg>
<status status="PASS" starttime="20220222 06:23:10.941" endtime="20220222 06:23:10.943"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:10.947" level="INFO">Running command 'ozone sh volume create /52802-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:13.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:13.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:23:10.944" endtime="20220222 06:23:13.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:13.707" level="INFO"/>
<status status="PASS" starttime="20220222 06:23:13.706" endtime="20220222 06:23:13.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:13.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:13.707" endtime="20220222 06:23:13.708"/>
</kw>
<status status="PASS" starttime="20220222 06:23:10.944" endtime="20220222 06:23:13.708"/>
</kw>
<msg timestamp="20220222 06:23:13.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:23:10.943" endtime="20220222 06:23:13.709"/>
</kw>
<status status="PASS" starttime="20220222 06:23:10.943" endtime="20220222 06:23:13.709"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:13.713" level="INFO">Running command 'ozone sh bucket create /52802-volume-for-prepare/52802-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:16.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:16.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:23:13.711" endtime="20220222 06:23:16.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:16.462" level="INFO"/>
<status status="PASS" starttime="20220222 06:23:16.461" endtime="20220222 06:23:16.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:16.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:16.462" endtime="20220222 06:23:16.463"/>
</kw>
<status status="PASS" starttime="20220222 06:23:13.710" endtime="20220222 06:23:16.463"/>
</kw>
<msg timestamp="20220222 06:23:16.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:23:13.710" endtime="20220222 06:23:16.464"/>
</kw>
<status status="PASS" starttime="20220222 06:23:13.709" endtime="20220222 06:23:16.464"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:16.468" level="INFO">Running command 'ozone sh key put /52802-volume-for-prepare/52802-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:21.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:21.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:23:16.465" endtime="20220222 06:23:21.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:21.026" level="INFO"/>
<status status="PASS" starttime="20220222 06:23:21.025" endtime="20220222 06:23:21.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:21.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:21.026" endtime="20220222 06:23:21.027"/>
</kw>
<status status="PASS" starttime="20220222 06:23:16.465" endtime="20220222 06:23:21.027"/>
</kw>
<msg timestamp="20220222 06:23:21.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:23:16.465" endtime="20220222 06:23:21.028"/>
</kw>
<status status="PASS" starttime="20220222 06:23:16.464" endtime="20220222 06:23:21.028"/>
</kw>
<status status="PASS" starttime="20220222 06:22:58.082" endtime="20220222 06:23:21.028"/>
</kw>
<test id="s1-s7-t1" name="Prepare Ozone Manager">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:23:21.030" endtime="20220222 06:23:21.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:21.034" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:29.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:29.051" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [348].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220222 06:23:21.031" endtime="20220222 06:23:29.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:29.052" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [348].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [348]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [348]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [348]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20220222 06:23:29.052" endtime="20220222 06:23:29.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:29.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:29.053" endtime="20220222 06:23:29.053"/>
</kw>
<status status="PASS" starttime="20220222 06:23:21.031" endtime="20220222 06:23:29.054"/>
</kw>
<msg timestamp="20220222 06:23:29.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:23:21.031" endtime="20220222 06:23:29.054"/>
</kw>
<msg timestamp="20220222 06:23:29.055" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [348].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20220222 06:23:21.030" endtime="20220222 06:23:29.055"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:23:29.055" endtime="20220222 06:23:29.056"/>
</kw>
<status status="PASS" starttime="20220222 06:23:29.055" endtime="20220222 06:23:29.056"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:23:21.028" endtime="20220222 06:23:29.056"/>
</test>
<test id="s1-s7-t2" name="Checks if the expected data is present in OM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:23:29.058" endtime="20220222 06:23:29.059"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:29.063" level="INFO">Running command 'ozone sh key info /52802-volume-for-prepare/52802-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:31.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:23:31.883" level="INFO">${output} = {
  "volumeName" : "52802-volume-for-prepare",
  "bucketName" : "52802-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-02-22T06:23:18.870Z",
  "modificati...</msg>
<status status="PASS" starttime="20220222 06:23:29.060" endtime="20220222 06:23:31.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:31.885" level="INFO">{
  "volumeName" : "52802-volume-for-prepare",
  "bucketName" : "52802-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-02-22T06:23:18.870Z",
  "modificationTime" : "2022-02-22T06:23:20.633Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 109611004723200101,
    "length" : 17526,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "metadata" : { },
  "replicationFactor" : 1,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20220222 06:23:31.884" endtime="20220222 06:23:31.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:31.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:31.885" endtime="20220222 06:23:31.886"/>
</kw>
<status status="PASS" starttime="20220222 06:23:29.060" endtime="20220222 06:23:31.886"/>
</kw>
<msg timestamp="20220222 06:23:31.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:23:29.059" endtime="20220222 06:23:31.887"/>
</kw>
<msg timestamp="20220222 06:23:31.887" level="INFO">${result} = {
  "volumeName" : "52802-volume-for-prepare",
  "bucketName" : "52802-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17526,
  "creationTime" : "2022-02-22T06:23:18.870Z",
  "modificati...</msg>
<status status="PASS" starttime="20220222 06:23:29.059" endtime="20220222 06:23:31.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:23:31.887" endtime="20220222 06:23:31.888"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:23:29.057" endtime="20220222 06:23:31.888"/>
</test>
<test id="s1-s7-t3" name="Test write operation fails">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:23:31.890" endtime="20220222 06:23:31.891"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:31.894" level="INFO">Running command 'ozone sh key put /52802-volume-for-prepare/52802-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:34.521" level="INFO">${rc} = 255</msg>
<msg timestamp="20220222 06:23:34.521" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:23:31.891" endtime="20220222 06:23:34.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:34.522" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:23:34.522" endtime="20220222 06:23:34.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:34.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:34.523" endtime="20220222 06:23:34.523"/>
</kw>
<msg timestamp="20220222 06:23:34.524" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20220222 06:23:31.891" endtime="20220222 06:23:34.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:23:34.524" endtime="20220222 06:23:34.524"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:23:34.527" level="INFO">Running command 'ozone sh key info /52802-volume-for-prepare/52802-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:23:37.158" level="INFO">${rc} = 255</msg>
<msg timestamp="20220222 06:23:37.158" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220222 06:23:34.525" endtime="20220222 06:23:37.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:23:37.159" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20220222 06:23:37.158" endtime="20220222 06:23:37.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:23:37.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:23:37.159" endtime="20220222 06:23:37.160"/>
</kw>
<status status="PASS" starttime="20220222 06:23:34.524" endtime="20220222 06:23:37.160"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:23:31.889" endtime="20220222 06:23:37.161"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20220222 06:22:58.016" endtime="20220222 06:23:37.162"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="124079"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Readdata">ozone-om-prepare.Readdata</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
