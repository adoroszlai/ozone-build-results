<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220222 06:55:12.824" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:46:23.351" level="INFO">${random} = 01151</msg>
<status status="PASS" starttime="20220222 06:46:23.351" endtime="20220222 06:46:23.351"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:46:23.358" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-01151 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:46:27.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:46:27.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:46:23.353" endtime="20220222 06:46:27.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:46:27.623" level="INFO"/>
<status status="PASS" starttime="20220222 06:46:27.622" endtime="20220222 06:46:27.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:46:27.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:46:27.623" endtime="20220222 06:46:27.624"/>
</kw>
<status status="PASS" starttime="20220222 06:46:23.353" endtime="20220222 06:46:27.624"/>
</kw>
<msg timestamp="20220222 06:46:27.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:46:23.352" endtime="20220222 06:46:27.625"/>
</kw>
<msg timestamp="20220222 06:46:27.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:46:23.351" endtime="20220222 06:46:27.625"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:46:27.625" endtime="20220222 06:46:27.626"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:46:23.350" endtime="20220222 06:46:27.626"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:46:23.296" endtime="20220222 06:46:27.628"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:50:22.679" level="INFO">${random} = 22135</msg>
<status status="PASS" starttime="20220222 06:50:22.679" endtime="20220222 06:50:22.679"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:50:22.685" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-22135 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:50:26.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:50:26.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:22.681" endtime="20220222 06:50:26.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:50:26.572" level="INFO"/>
<status status="PASS" starttime="20220222 06:50:26.571" endtime="20220222 06:50:26.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:50:26.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:50:26.572" endtime="20220222 06:50:26.573"/>
</kw>
<status status="PASS" starttime="20220222 06:50:22.680" endtime="20220222 06:50:26.573"/>
</kw>
<msg timestamp="20220222 06:50:26.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:50:22.680" endtime="20220222 06:50:26.573"/>
</kw>
<msg timestamp="20220222 06:50:26.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:22.679" endtime="20220222 06:50:26.574"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:50:26.574" endtime="20220222 06:50:26.574"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:50:22.678" endtime="20220222 06:50:26.574"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:50:22.624" endtime="20220222 06:50:26.576"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:50:30.500" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:50:32.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:50:32.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:30.495" endtime="20220222 06:50:32.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:50:32.894" level="INFO"/>
<status status="PASS" starttime="20220222 06:50:32.891" endtime="20220222 06:50:32.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:50:32.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:50:32.895" endtime="20220222 06:50:32.895"/>
</kw>
<status status="PASS" starttime="20220222 06:50:30.494" endtime="20220222 06:50:32.896"/>
</kw>
<msg timestamp="20220222 06:50:32.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:50:30.493" endtime="20220222 06:50:32.896"/>
</kw>
<msg timestamp="20220222 06:50:32.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:30.492" endtime="20220222 06:50:32.896"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:50:32.896" endtime="20220222 06:50:32.897"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:50:32.914" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:50:35.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:50:35.795" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:32.899" endtime="20220222 06:50:35.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:50:35.797" level="INFO"/>
<status status="PASS" starttime="20220222 06:50:35.795" endtime="20220222 06:50:35.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:50:35.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:50:35.800" endtime="20220222 06:50:35.801"/>
</kw>
<status status="PASS" starttime="20220222 06:50:32.898" endtime="20220222 06:50:35.801"/>
</kw>
<msg timestamp="20220222 06:50:35.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:50:32.898" endtime="20220222 06:50:35.802"/>
</kw>
<msg timestamp="20220222 06:50:35.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:32.897" endtime="20220222 06:50:35.802"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:50:35.802" endtime="20220222 06:50:35.803"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:50:35.809" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:50:40.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:50:40.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:35.804" endtime="20220222 06:50:40.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:50:40.906" level="INFO"/>
<status status="PASS" starttime="20220222 06:50:40.905" endtime="20220222 06:50:40.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:50:40.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:50:40.906" endtime="20220222 06:50:40.907"/>
</kw>
<status status="PASS" starttime="20220222 06:50:35.804" endtime="20220222 06:50:40.908"/>
</kw>
<msg timestamp="20220222 06:50:40.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:50:35.804" endtime="20220222 06:50:40.908"/>
</kw>
<msg timestamp="20220222 06:50:40.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:35.803" endtime="20220222 06:50:40.908"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:50:40.908" endtime="20220222 06:50:40.909"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:50:30.491" endtime="20220222 06:50:40.909"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220222 06:50:30.437" endtime="20220222 06:50:40.911"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:50:44.876" level="INFO">${random} = 86948</msg>
<status status="PASS" starttime="20220222 06:50:44.876" endtime="20220222 06:50:44.876"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:50:44.882" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-86948 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:50:49.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:50:49.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:44.878" endtime="20220222 06:50:49.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:50:49.244" level="INFO"/>
<status status="PASS" starttime="20220222 06:50:49.243" endtime="20220222 06:50:49.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:50:49.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:50:49.244" endtime="20220222 06:50:49.245"/>
</kw>
<status status="PASS" starttime="20220222 06:50:44.878" endtime="20220222 06:50:49.245"/>
</kw>
<msg timestamp="20220222 06:50:49.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:50:44.877" endtime="20220222 06:50:49.245"/>
</kw>
<msg timestamp="20220222 06:50:49.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:44.876" endtime="20220222 06:50:49.245"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:50:49.246" endtime="20220222 06:50:49.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:50:44.875" endtime="20220222 06:50:49.246"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:50:44.817" endtime="20220222 06:50:49.248"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:50:14.124" level="INFO">${random} = 97221</msg>
<status status="PASS" starttime="20220222 06:50:14.123" endtime="20220222 06:50:14.124"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:50:14.130" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-97221 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:50:18.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:50:18.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:14.126" endtime="20220222 06:50:18.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:50:18.754" level="INFO"/>
<status status="PASS" starttime="20220222 06:50:18.753" endtime="20220222 06:50:18.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:50:18.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:50:18.754" endtime="20220222 06:50:18.755"/>
</kw>
<status status="PASS" starttime="20220222 06:50:14.125" endtime="20220222 06:50:18.755"/>
</kw>
<msg timestamp="20220222 06:50:18.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:50:14.125" endtime="20220222 06:50:18.755"/>
</kw>
<msg timestamp="20220222 06:50:18.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:50:14.124" endtime="20220222 06:50:18.756"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:50:18.756" endtime="20220222 06:50:18.756"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:50:14.122" endtime="20220222 06:50:18.757"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:50:14.070" endtime="20220222 06:50:18.758"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:46:07.884" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:46:10.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:46:10.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:46:07.880" endtime="20220222 06:46:10.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:46:10.379" level="INFO"/>
<status status="PASS" starttime="20220222 06:46:10.379" endtime="20220222 06:46:10.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:46:10.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:46:10.380" endtime="20220222 06:46:10.380"/>
</kw>
<status status="PASS" starttime="20220222 06:46:07.880" endtime="20220222 06:46:10.381"/>
</kw>
<msg timestamp="20220222 06:46:10.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:46:07.879" endtime="20220222 06:46:10.381"/>
</kw>
<msg timestamp="20220222 06:46:10.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:46:07.879" endtime="20220222 06:46:10.381"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:46:10.381" endtime="20220222 06:46:10.382"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:46:10.400" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:46:13.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:46:13.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:46:10.383" endtime="20220222 06:46:13.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:46:13.282" level="INFO"/>
<status status="PASS" starttime="20220222 06:46:13.281" endtime="20220222 06:46:13.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:46:13.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:46:13.283" endtime="20220222 06:46:13.283"/>
</kw>
<status status="PASS" starttime="20220222 06:46:10.383" endtime="20220222 06:46:13.284"/>
</kw>
<msg timestamp="20220222 06:46:13.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:46:10.382" endtime="20220222 06:46:13.284"/>
</kw>
<msg timestamp="20220222 06:46:13.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:46:10.382" endtime="20220222 06:46:13.284"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:46:13.284" endtime="20220222 06:46:13.285"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:46:13.289" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:46:19.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:46:19.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:46:13.286" endtime="20220222 06:46:19.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:46:19.277" level="INFO"/>
<status status="PASS" starttime="20220222 06:46:19.275" endtime="20220222 06:46:19.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:46:19.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:46:19.277" endtime="20220222 06:46:19.280"/>
</kw>
<status status="PASS" starttime="20220222 06:46:13.286" endtime="20220222 06:46:19.280"/>
</kw>
<msg timestamp="20220222 06:46:19.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:46:13.285" endtime="20220222 06:46:19.280"/>
</kw>
<msg timestamp="20220222 06:46:19.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:46:13.285" endtime="20220222 06:46:19.281"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:46:19.281" endtime="20220222 06:46:19.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:46:07.878" endtime="20220222 06:46:19.282"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220222 06:46:07.825" endtime="20220222 06:46:19.283"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:53:43.679" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220222 06:53:43.678" endtime="20220222 06:53:43.679"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:53:43.679" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:53:43.679" endtime="20220222 06:53:43.679"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:53:43.680" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:53:43.679" endtime="20220222 06:53:43.680"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:53:43.680" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220222 06:53:43.680" endtime="20220222 06:53:43.681"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:53:43.682" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:53:43.682" level="INFO">${version_file_contents} = #Tue Feb 22 06:52:20 UTC 2022
cTime=1645512311542
clusterID=CID-a7feea51-4f09-416c-ac80-80fd991ca2be
nodeType=SCM
scmUuid=9da0b0fa-20b9-4524-9410-18caf9db0bae
layoutVersion=2
</msg>
<status status="PASS" starttime="20220222 06:53:43.682" endtime="20220222 06:53:43.682"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:53:43.683" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220222 06:53:43.682" endtime="20220222 06:53:43.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:53:43.683" endtime="20220222 06:53:43.684"/>
</kw>
<status status="PASS" starttime="20220222 06:53:43.681" endtime="20220222 06:53:43.684"/>
</kw>
<status status="PASS" starttime="20220222 06:53:43.681" endtime="20220222 06:53:43.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:53:43.677" endtime="20220222 06:53:43.684"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:53:43.624" endtime="20220222 06:53:43.685"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:54:29.727" level="INFO">${random} = 78315</msg>
<status status="PASS" starttime="20220222 06:54:29.727" endtime="20220222 06:54:29.727"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:54:29.733" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-78315 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:54:33.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:54:33.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:29.729" endtime="20220222 06:54:33.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:54:33.907" level="INFO"/>
<status status="PASS" starttime="20220222 06:54:33.906" endtime="20220222 06:54:33.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:54:33.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:54:33.907" endtime="20220222 06:54:33.907"/>
</kw>
<status status="PASS" starttime="20220222 06:54:29.729" endtime="20220222 06:54:33.908"/>
</kw>
<msg timestamp="20220222 06:54:33.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:54:29.728" endtime="20220222 06:54:33.910"/>
</kw>
<msg timestamp="20220222 06:54:33.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:29.728" endtime="20220222 06:54:33.911"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:54:33.911" endtime="20220222 06:54:33.912"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:54:29.726" endtime="20220222 06:54:33.912"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:54:29.674" endtime="20220222 06:54:33.914"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:54:37.893" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:54:40.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:54:40.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:37.890" endtime="20220222 06:54:40.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:54:40.543" level="INFO"/>
<status status="PASS" starttime="20220222 06:54:40.543" endtime="20220222 06:54:40.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:54:40.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:54:40.544" endtime="20220222 06:54:40.544"/>
</kw>
<status status="PASS" starttime="20220222 06:54:37.889" endtime="20220222 06:54:40.545"/>
</kw>
<msg timestamp="20220222 06:54:40.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:54:37.889" endtime="20220222 06:54:40.546"/>
</kw>
<msg timestamp="20220222 06:54:40.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:37.888" endtime="20220222 06:54:40.547"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:54:40.547" endtime="20220222 06:54:40.547"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:54:40.552" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:54:43.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:54:43.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:40.549" endtime="20220222 06:54:43.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:54:43.273" level="INFO"/>
<status status="PASS" starttime="20220222 06:54:43.272" endtime="20220222 06:54:43.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:54:43.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:54:43.273" endtime="20220222 06:54:43.274"/>
</kw>
<status status="PASS" starttime="20220222 06:54:40.549" endtime="20220222 06:54:43.275"/>
</kw>
<msg timestamp="20220222 06:54:43.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:54:40.548" endtime="20220222 06:54:43.275"/>
</kw>
<msg timestamp="20220222 06:54:43.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:40.548" endtime="20220222 06:54:43.276"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:54:43.276" endtime="20220222 06:54:43.277"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:54:43.282" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:54:48.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:54:48.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:43.279" endtime="20220222 06:54:48.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:54:48.581" level="INFO"/>
<status status="PASS" starttime="20220222 06:54:48.580" endtime="20220222 06:54:48.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:54:48.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:54:48.581" endtime="20220222 06:54:48.582"/>
</kw>
<status status="PASS" starttime="20220222 06:54:43.278" endtime="20220222 06:54:48.582"/>
</kw>
<msg timestamp="20220222 06:54:48.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:54:43.278" endtime="20220222 06:54:48.583"/>
</kw>
<msg timestamp="20220222 06:54:48.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:43.277" endtime="20220222 06:54:48.583"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:54:48.583" endtime="20220222 06:54:48.584"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:54:37.887" endtime="20220222 06:54:48.584"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220222 06:54:37.834" endtime="20220222 06:54:48.585"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:54:52.537" level="INFO">${random} = 86232</msg>
<status status="PASS" starttime="20220222 06:54:52.537" endtime="20220222 06:54:52.537"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:54:52.544" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-86232 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:54:57.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:54:57.004" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:52.540" endtime="20220222 06:54:57.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:54:57.006" level="INFO"/>
<status status="PASS" starttime="20220222 06:54:57.005" endtime="20220222 06:54:57.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:54:57.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:54:57.006" endtime="20220222 06:54:57.007"/>
</kw>
<status status="PASS" starttime="20220222 06:54:52.539" endtime="20220222 06:54:57.007"/>
</kw>
<msg timestamp="20220222 06:54:57.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:54:52.539" endtime="20220222 06:54:57.008"/>
</kw>
<msg timestamp="20220222 06:54:57.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:52.537" endtime="20220222 06:54:57.009"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:54:57.009" endtime="20220222 06:54:57.009"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:54:52.536" endtime="20220222 06:54:57.010"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:54:52.477" endtime="20220222 06:54:57.011"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:53:47.807" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220222 06:53:47.807" endtime="20220222 06:53:47.807"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:53:47.808" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:53:47.807" endtime="20220222 06:53:47.808"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:53:47.808" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:53:47.808" endtime="20220222 06:53:47.809"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:53:47.809" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220222 06:53:47.809" endtime="20220222 06:53:47.809"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:53:47.810" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:53:47.811" level="INFO">${version_file_contents} = #Tue Feb 22 06:52:41 UTC 2022
cTime=1645512413812
clusterID=c3c08168-d088-4648-b9e0-645e1660b20e
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220222 06:53:47.810" endtime="20220222 06:53:47.811"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:53:47.811" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220222 06:53:47.811" endtime="20220222 06:53:47.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:53:47.812" endtime="20220222 06:53:47.812"/>
</kw>
<status status="PASS" starttime="20220222 06:53:47.810" endtime="20220222 06:53:47.812"/>
</kw>
<status status="PASS" starttime="20220222 06:53:47.809" endtime="20220222 06:53:47.812"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:53:47.806" endtime="20220222 06:53:47.812"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:53:47.752" endtime="20220222 06:53:47.813"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:53:51.843" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220222 06:53:51.842" endtime="20220222 06:53:51.843"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:53:51.844" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:53:51.843" endtime="20220222 06:53:51.844"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:53:51.844" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:53:51.844" endtime="20220222 06:53:51.844"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:53:51.845" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220222 06:53:51.844" endtime="20220222 06:53:51.845"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:53:51.846" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:53:51.847" level="INFO">${version_file_contents} = #Tue Feb 22 06:52:52 UTC 2022
cTime=1645512413956
clusterID=071589ab-0ba5-423d-b01f-b8a349cb29e5
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220222 06:53:51.846" endtime="20220222 06:53:51.847"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:53:51.848" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220222 06:53:51.847" endtime="20220222 06:53:51.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:53:51.848" endtime="20220222 06:53:51.848"/>
</kw>
<status status="PASS" starttime="20220222 06:53:51.846" endtime="20220222 06:53:51.848"/>
</kw>
<status status="PASS" starttime="20220222 06:53:51.845" endtime="20220222 06:53:51.848"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:53:51.841" endtime="20220222 06:53:51.849"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:53:51.777" endtime="20220222 06:53:51.850"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:53:56.008" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220222 06:53:56.008" endtime="20220222 06:53:56.009"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:53:56.009" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:53:56.009" endtime="20220222 06:53:56.009"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:53:56.010" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:53:56.009" endtime="20220222 06:53:56.010"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:53:56.010" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220222 06:53:56.010" endtime="20220222 06:53:56.010"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:53:56.012" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:53:56.012" level="INFO">${version_file_contents} = #Tue Feb 22 06:52:22 UTC 2022
cTime=1645512412640
clusterID=55452dd7-a220-49ef-98bb-8823551c2843
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220222 06:53:56.011" endtime="20220222 06:53:56.012"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:53:56.013" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220222 06:53:56.012" endtime="20220222 06:53:56.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:53:56.013" endtime="20220222 06:53:56.013"/>
</kw>
<status status="PASS" starttime="20220222 06:53:56.011" endtime="20220222 06:53:56.014"/>
</kw>
<status status="PASS" starttime="20220222 06:53:56.011" endtime="20220222 06:53:56.014"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:53:56.007" endtime="20220222 06:53:56.014"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:53:55.953" endtime="20220222 06:53:56.015"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:54:00.150" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220222 06:54:00.150" endtime="20220222 06:54:00.151"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:54:00.151" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:54:00.151" endtime="20220222 06:54:00.151"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:54:00.152" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:54:00.151" endtime="20220222 06:54:00.152"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:54:00.152" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220222 06:54:00.152" endtime="20220222 06:54:00.152"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:54:00.154" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:54:00.154" level="INFO">${version_file_contents} = #Tue Feb 22 06:45:34 UTC 2022
cTime=1645512307684
clusterID=CID-a7feea51-4f09-416c-ac80-80fd991ca2be
omUuid=e52cf0b8-0607-441a-ae2b-436fefe0bbbb
nodeType=OM
scmUuid=9da0b0fa-20b9-4524-9410-18caf9db0ba...</msg>
<status status="PASS" starttime="20220222 06:54:00.153" endtime="20220222 06:54:00.154"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:54:00.155" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220222 06:54:00.154" endtime="20220222 06:54:00.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:54:00.155" endtime="20220222 06:54:00.155"/>
</kw>
<status status="PASS" starttime="20220222 06:54:00.153" endtime="20220222 06:54:00.155"/>
</kw>
<status status="PASS" starttime="20220222 06:54:00.153" endtime="20220222 06:54:00.156"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:54:00.149" endtime="20220222 06:54:00.156"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:54:00.095" endtime="20220222 06:54:00.156"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:54:04.282" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220222 06:54:04.282" endtime="20220222 06:54:04.283"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:54:04.283" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:54:04.283" endtime="20220222 06:54:04.283"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:54:04.284" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:54:04.283" endtime="20220222 06:54:04.284"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:54:04.285" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220222 06:54:04.284" endtime="20220222 06:54:04.285"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:54:04.286" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:54:04.286" level="INFO">${version_file_contents} = #Tue Feb 22 06:45:34 UTC 2022
cTime=1645512312394
clusterID=CID-a7feea51-4f09-416c-ac80-80fd991ca2be
omUuid=3d9b36aa-ef4b-4426-a30d-678c515c5871
nodeType=OM
scmUuid=9da0b0fa-20b9-4524-9410-18caf9db0ba...</msg>
<status status="PASS" starttime="20220222 06:54:04.286" endtime="20220222 06:54:04.286"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:54:04.287" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220222 06:54:04.287" endtime="20220222 06:54:04.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:54:04.287" endtime="20220222 06:54:04.288"/>
</kw>
<status status="PASS" starttime="20220222 06:54:04.285" endtime="20220222 06:54:04.288"/>
</kw>
<status status="PASS" starttime="20220222 06:54:04.285" endtime="20220222 06:54:04.288"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:54:04.281" endtime="20220222 06:54:04.288"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:54:04.219" endtime="20220222 06:54:04.289"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:54:08.461" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220222 06:54:08.460" endtime="20220222 06:54:08.461"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:54:08.461" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:54:08.461" endtime="20220222 06:54:08.462"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:54:08.462" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:54:08.462" endtime="20220222 06:54:08.462"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:54:08.463" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220222 06:54:08.462" endtime="20220222 06:54:08.463"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:54:08.464" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:54:08.464" level="INFO">${version_file_contents} = #Tue Feb 22 06:45:34 UTC 2022
cTime=1645512309976
clusterID=CID-a7feea51-4f09-416c-ac80-80fd991ca2be
omUuid=043e0bfa-e983-4930-b2e8-bc23b6c5ee80
nodeType=OM
scmUuid=9da0b0fa-20b9-4524-9410-18caf9db0ba...</msg>
<status status="PASS" starttime="20220222 06:54:08.464" endtime="20220222 06:54:08.464"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:54:08.465" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220222 06:54:08.465" endtime="20220222 06:54:08.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:54:08.465" endtime="20220222 06:54:08.466"/>
</kw>
<status status="PASS" starttime="20220222 06:54:08.463" endtime="20220222 06:54:08.466"/>
</kw>
<status status="PASS" starttime="20220222 06:54:08.463" endtime="20220222 06:54:08.466"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:54:08.459" endtime="20220222 06:54:08.466"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:54:08.404" endtime="20220222 06:54:08.467"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:54:12.416" level="INFO">${random} = 21613</msg>
<status status="PASS" starttime="20220222 06:54:12.416" endtime="20220222 06:54:12.416"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:54:12.422" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-21613 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:54:17.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:54:17.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:12.418" endtime="20220222 06:54:17.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:54:17.328" level="INFO"/>
<status status="PASS" starttime="20220222 06:54:17.327" endtime="20220222 06:54:17.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:54:17.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:54:17.328" endtime="20220222 06:54:17.329"/>
</kw>
<status status="PASS" starttime="20220222 06:54:12.418" endtime="20220222 06:54:17.329"/>
</kw>
<msg timestamp="20220222 06:54:17.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:54:12.417" endtime="20220222 06:54:17.330"/>
</kw>
<msg timestamp="20220222 06:54:17.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:12.416" endtime="20220222 06:54:17.331"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:54:17.331" endtime="20220222 06:54:17.331"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:54:12.415" endtime="20220222 06:54:17.332"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:54:12.362" endtime="20220222 06:54:17.333"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:54:21.214" level="INFO">${random} = 29121</msg>
<status status="PASS" starttime="20220222 06:54:21.213" endtime="20220222 06:54:21.214"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:54:21.219" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-29121 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:54:25.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:54:25.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:21.216" endtime="20220222 06:54:25.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:54:25.758" level="INFO"/>
<status status="PASS" starttime="20220222 06:54:25.758" endtime="20220222 06:54:25.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:54:25.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:54:25.759" endtime="20220222 06:54:25.760"/>
</kw>
<status status="PASS" starttime="20220222 06:54:21.215" endtime="20220222 06:54:25.760"/>
</kw>
<msg timestamp="20220222 06:54:25.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:54:21.215" endtime="20220222 06:54:25.762"/>
</kw>
<msg timestamp="20220222 06:54:25.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:54:21.214" endtime="20220222 06:54:25.762"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:54:25.763" endtime="20220222 06:54:25.763"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:54:21.213" endtime="20220222 06:54:25.763"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:54:21.161" endtime="20220222 06:54:25.765"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:52:13.150" endtime="20220222 06:52:13.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:52:13.155" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:53:36.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:53:36.474" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220222 06:52:13.152" endtime="20220222 06:53:36.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:53:36.476" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220222 06:53:36.475" endtime="20220222 06:53:36.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:53:36.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:53:36.476" endtime="20220222 06:53:36.477"/>
</kw>
<status status="PASS" starttime="20220222 06:52:13.151" endtime="20220222 06:53:36.477"/>
</kw>
<msg timestamp="20220222 06:53:36.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:52:13.151" endtime="20220222 06:53:36.478"/>
</kw>
<msg timestamp="20220222 06:53:36.479" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220222 06:52:13.150" endtime="20220222 06:53:36.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:53:36.479" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220222 06:53:36.479" endtime="20220222 06:53:36.479"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:52:13.149" endtime="20220222 06:53:36.480"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220222 06:53:36.481" endtime="20220222 06:53:36.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:53:36.486" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:53:39.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:53:39.671" level="INFO">${output} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220222 06:53:36.483" endtime="20220222 06:53:39.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:53:39.673" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220222 06:53:39.672" endtime="20220222 06:53:39.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:53:39.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:53:39.673" endtime="20220222 06:53:39.674"/>
</kw>
<status status="PASS" starttime="20220222 06:53:36.483" endtime="20220222 06:53:39.676"/>
</kw>
<msg timestamp="20220222 06:53:39.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:53:36.482" endtime="20220222 06:53:39.677"/>
</kw>
<msg timestamp="20220222 06:53:39.677" level="INFO">${result} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220222 06:53:36.482" endtime="20220222 06:53:39.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:53:39.678" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220222 06:53:39.678" endtime="20220222 06:53:39.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:53:36.480" endtime="20220222 06:53:39.678"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20220222 06:52:13.096" endtime="20220222 06:53:39.680"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:47:53.902" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220222 06:47:53.901" endtime="20220222 06:47:53.902"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:47:53.902" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:47:53.902" endtime="20220222 06:47:53.903"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:47:53.903" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:47:53.903" endtime="20220222 06:47:53.903"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:47:53.904" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220222 06:47:53.903" endtime="20220222 06:47:53.904"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:47:53.905" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:47:53.905" level="INFO">${version_file_contents} = #Tue Feb 22 06:46:53 UTC 2022
cTime=1645512413812
clusterID=c3c08168-d088-4648-b9e0-645e1660b20e
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220222 06:47:53.905" endtime="20220222 06:47:53.905"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:47:53.906" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220222 06:47:53.906" endtime="20220222 06:47:53.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:47:53.906" endtime="20220222 06:47:53.907"/>
</kw>
<status status="PASS" starttime="20220222 06:47:53.904" endtime="20220222 06:47:53.907"/>
</kw>
<status status="PASS" starttime="20220222 06:47:53.904" endtime="20220222 06:47:53.907"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:47:53.900" endtime="20220222 06:47:53.907"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:47:53.841" endtime="20220222 06:47:53.908"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:47:58.008" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220222 06:47:58.007" endtime="20220222 06:47:58.008"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:47:58.008" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:47:58.008" endtime="20220222 06:47:58.008"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:47:58.009" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:47:58.008" endtime="20220222 06:47:58.009"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:47:58.009" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220222 06:47:58.009" endtime="20220222 06:47:58.009"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:47:58.011" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:47:58.011" level="INFO">${version_file_contents} = #Tue Feb 22 06:46:53 UTC 2022
cTime=1645512413956
clusterID=071589ab-0ba5-423d-b01f-b8a349cb29e5
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220222 06:47:58.010" endtime="20220222 06:47:58.011"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:47:58.012" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220222 06:47:58.011" endtime="20220222 06:47:58.012"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:47:58.012" endtime="20220222 06:47:58.012"/>
</kw>
<status status="PASS" starttime="20220222 06:47:58.010" endtime="20220222 06:47:58.013"/>
</kw>
<status status="PASS" starttime="20220222 06:47:58.010" endtime="20220222 06:47:58.013"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:47:58.006" endtime="20220222 06:47:58.013"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:47:57.952" endtime="20220222 06:47:58.014"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:48:02.056" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220222 06:48:02.055" endtime="20220222 06:48:02.056"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:48:02.057" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:48:02.056" endtime="20220222 06:48:02.057"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:48:02.057" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:48:02.057" endtime="20220222 06:48:02.057"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:48:02.058" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220222 06:48:02.058" endtime="20220222 06:48:02.058"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:48:02.059" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:48:02.060" level="INFO">${version_file_contents} = #Tue Feb 22 06:46:52 UTC 2022
cTime=1645512412640
clusterID=55452dd7-a220-49ef-98bb-8823551c2843
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220222 06:48:02.059" endtime="20220222 06:48:02.060"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:48:02.060" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220222 06:48:02.060" endtime="20220222 06:48:02.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:48:02.060" endtime="20220222 06:48:02.061"/>
</kw>
<status status="PASS" starttime="20220222 06:48:02.058" endtime="20220222 06:48:02.061"/>
</kw>
<status status="PASS" starttime="20220222 06:48:02.058" endtime="20220222 06:48:02.061"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:48:02.055" endtime="20220222 06:48:02.061"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:48:02.000" endtime="20220222 06:48:02.062"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:48:06.068" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220222 06:48:06.068" endtime="20220222 06:48:06.068"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:48:06.069" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:48:06.069" endtime="20220222 06:48:06.069"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:48:06.070" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:48:06.069" endtime="20220222 06:48:06.070"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:48:06.070" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220222 06:48:06.070" endtime="20220222 06:48:06.070"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:48:06.072" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:48:06.072" level="INFO">${version_file_contents} = #Tue Feb 22 06:45:34 UTC 2022
cTime=1645512307684
clusterID=CID-a7feea51-4f09-416c-ac80-80fd991ca2be
omUuid=e52cf0b8-0607-441a-ae2b-436fefe0bbbb
nodeType=OM
scmUuid=9da0b0fa-20b9-4524-9410-18caf9db0ba...</msg>
<status status="PASS" starttime="20220222 06:48:06.071" endtime="20220222 06:48:06.072"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:48:06.073" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220222 06:48:06.072" endtime="20220222 06:48:06.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:48:06.073" endtime="20220222 06:48:06.073"/>
</kw>
<status status="PASS" starttime="20220222 06:48:06.071" endtime="20220222 06:48:06.073"/>
</kw>
<status status="PASS" starttime="20220222 06:48:06.070" endtime="20220222 06:48:06.073"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:48:06.067" endtime="20220222 06:48:06.074"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:48:06.005" endtime="20220222 06:48:06.075"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:48:10.161" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220222 06:48:10.160" endtime="20220222 06:48:10.161"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:48:10.161" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:48:10.161" endtime="20220222 06:48:10.161"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:48:10.162" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:48:10.161" endtime="20220222 06:48:10.162"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:48:10.162" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220222 06:48:10.162" endtime="20220222 06:48:10.163"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:48:10.164" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:48:10.164" level="INFO">${version_file_contents} = #Tue Feb 22 06:45:34 UTC 2022
cTime=1645512312394
clusterID=CID-a7feea51-4f09-416c-ac80-80fd991ca2be
omUuid=3d9b36aa-ef4b-4426-a30d-678c515c5871
nodeType=OM
scmUuid=9da0b0fa-20b9-4524-9410-18caf9db0ba...</msg>
<status status="PASS" starttime="20220222 06:48:10.163" endtime="20220222 06:48:10.164"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:48:10.165" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220222 06:48:10.164" endtime="20220222 06:48:10.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:48:10.165" endtime="20220222 06:48:10.165"/>
</kw>
<status status="PASS" starttime="20220222 06:48:10.163" endtime="20220222 06:48:10.166"/>
</kw>
<status status="PASS" starttime="20220222 06:48:10.163" endtime="20220222 06:48:10.166"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:48:10.159" endtime="20220222 06:48:10.166"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:48:10.108" endtime="20220222 06:48:10.166"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:48:14.219" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220222 06:48:14.219" endtime="20220222 06:48:14.219"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:48:14.220" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:48:14.220" endtime="20220222 06:48:14.220"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:48:14.220" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:48:14.220" endtime="20220222 06:48:14.221"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:48:14.221" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220222 06:48:14.221" endtime="20220222 06:48:14.221"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:48:14.223" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:48:14.223" level="INFO">${version_file_contents} = #Tue Feb 22 06:45:34 UTC 2022
cTime=1645512309976
clusterID=CID-a7feea51-4f09-416c-ac80-80fd991ca2be
omUuid=043e0bfa-e983-4930-b2e8-bc23b6c5ee80
nodeType=OM
scmUuid=9da0b0fa-20b9-4524-9410-18caf9db0ba...</msg>
<status status="PASS" starttime="20220222 06:48:14.222" endtime="20220222 06:48:14.223"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:48:14.224" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220222 06:48:14.223" endtime="20220222 06:48:14.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:48:14.224" endtime="20220222 06:48:14.224"/>
</kw>
<status status="PASS" starttime="20220222 06:48:14.222" endtime="20220222 06:48:14.224"/>
</kw>
<status status="PASS" starttime="20220222 06:48:14.222" endtime="20220222 06:48:14.224"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:48:14.218" endtime="20220222 06:48:14.225"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:48:14.162" endtime="20220222 06:48:14.225"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:48:18.169" level="INFO">${random} = 07945</msg>
<status status="PASS" starttime="20220222 06:48:18.168" endtime="20220222 06:48:18.169"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:48:18.175" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-07945 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:48:23.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:48:23.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:48:18.171" endtime="20220222 06:48:23.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:48:23.563" level="INFO"/>
<status status="PASS" starttime="20220222 06:48:23.563" endtime="20220222 06:48:23.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:48:23.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:48:23.564" endtime="20220222 06:48:23.564"/>
</kw>
<status status="PASS" starttime="20220222 06:48:18.170" endtime="20220222 06:48:23.565"/>
</kw>
<msg timestamp="20220222 06:48:23.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:48:18.170" endtime="20220222 06:48:23.566"/>
</kw>
<msg timestamp="20220222 06:48:23.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:48:18.169" endtime="20220222 06:48:23.566"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:48:23.567" endtime="20220222 06:48:23.567"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:48:18.167" endtime="20220222 06:48:23.567"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:48:18.114" endtime="20220222 06:48:23.569"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:48:27.511" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:48:30.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:48:30.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:48:27.506" endtime="20220222 06:48:30.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:48:30.333" level="INFO"/>
<status status="PASS" starttime="20220222 06:48:30.332" endtime="20220222 06:48:30.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:48:30.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:48:30.334" endtime="20220222 06:48:30.334"/>
</kw>
<status status="PASS" starttime="20220222 06:48:27.505" endtime="20220222 06:48:30.335"/>
</kw>
<msg timestamp="20220222 06:48:30.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:48:27.505" endtime="20220222 06:48:30.336"/>
</kw>
<msg timestamp="20220222 06:48:30.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:48:27.504" endtime="20220222 06:48:30.336"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:48:30.337" endtime="20220222 06:48:30.337"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:48:30.343" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:48:33.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:48:33.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:48:30.339" endtime="20220222 06:48:33.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:48:33.246" level="INFO"/>
<status status="PASS" starttime="20220222 06:48:33.245" endtime="20220222 06:48:33.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:48:33.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:48:33.246" endtime="20220222 06:48:33.247"/>
</kw>
<status status="PASS" starttime="20220222 06:48:30.338" endtime="20220222 06:48:33.247"/>
</kw>
<msg timestamp="20220222 06:48:33.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:48:30.338" endtime="20220222 06:48:33.248"/>
</kw>
<msg timestamp="20220222 06:48:33.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:48:30.337" endtime="20220222 06:48:33.248"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:48:33.248" endtime="20220222 06:48:33.249"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:48:33.253" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:48:38.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:48:38.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:48:33.250" endtime="20220222 06:48:38.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:48:38.531" level="INFO"/>
<status status="PASS" starttime="20220222 06:48:38.530" endtime="20220222 06:48:38.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:48:38.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:48:38.531" endtime="20220222 06:48:38.533"/>
</kw>
<status status="PASS" starttime="20220222 06:48:33.250" endtime="20220222 06:48:38.533"/>
</kw>
<msg timestamp="20220222 06:48:38.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:48:33.250" endtime="20220222 06:48:38.534"/>
</kw>
<msg timestamp="20220222 06:48:38.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:48:33.249" endtime="20220222 06:48:38.534"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:48:38.534" endtime="20220222 06:48:38.535"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:48:27.503" endtime="20220222 06:48:38.535"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220222 06:48:27.446" endtime="20220222 06:48:38.537"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220222 06:48:42.523" level="INFO">${random} = 98234</msg>
<status status="PASS" starttime="20220222 06:48:42.522" endtime="20220222 06:48:42.523"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220222 06:48:42.529" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-98234 2&gt;&amp;1'.</msg>
<msg timestamp="20220222 06:48:47.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20220222 06:48:47.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:48:42.525" endtime="20220222 06:48:47.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220222 06:48:47.055" level="INFO"/>
<status status="PASS" starttime="20220222 06:48:47.054" endtime="20220222 06:48:47.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220222 06:48:47.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220222 06:48:47.055" endtime="20220222 06:48:47.056"/>
</kw>
<status status="PASS" starttime="20220222 06:48:42.524" endtime="20220222 06:48:47.056"/>
</kw>
<msg timestamp="20220222 06:48:47.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220222 06:48:42.524" endtime="20220222 06:48:47.057"/>
</kw>
<msg timestamp="20220222 06:48:47.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220222 06:48:42.523" endtime="20220222 06:48:47.058"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:48:47.058" endtime="20220222 06:48:47.058"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:48:42.521" endtime="20220222 06:48:47.059"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220222 06:48:42.460" endtime="20220222 06:48:47.060"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:47:49.858" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220222 06:47:49.858" endtime="20220222 06:47:49.859"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220222 06:47:49.859" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220222 06:47:49.859" endtime="20220222 06:47:49.859"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220222 06:47:49.860" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220222 06:47:49.859" endtime="20220222 06:47:49.860"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220222 06:47:49.860" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220222 06:47:49.860" endtime="20220222 06:47:49.860"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220222 06:47:49.862" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220222 06:47:49.862" level="INFO">${version_file_contents} = #Tue Feb 22 06:45:11 UTC 2022
cTime=1645512311542
clusterID=CID-a7feea51-4f09-416c-ac80-80fd991ca2be
nodeType=SCM
scmUuid=9da0b0fa-20b9-4524-9410-18caf9db0bae
layoutVersion=0
</msg>
<status status="PASS" starttime="20220222 06:47:49.861" endtime="20220222 06:47:49.862"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220222 06:47:49.863" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220222 06:47:49.862" endtime="20220222 06:47:49.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220222 06:47:49.863" endtime="20220222 06:47:49.863"/>
</kw>
<status status="PASS" starttime="20220222 06:47:49.861" endtime="20220222 06:47:49.864"/>
</kw>
<status status="PASS" starttime="20220222 06:47:49.861" endtime="20220222 06:47:49.864"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220222 06:47:49.857" endtime="20220222 06:47:49.864"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220222 06:47:49.799" endtime="20220222 06:47:49.865"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="177064"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
