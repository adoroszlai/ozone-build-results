<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220201 13:24:33.917" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:22:34.324" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:22:45.329" level="INFO">${rc} = 255</msg>
<msg timestamp="20220201 13:22:45.329" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:22:34.317" endtime="20220201 13:22:45.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:22:45.331" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:22:45.330" endtime="20220201 13:22:45.331"/>
</kw>
<msg timestamp="20220201 13:22:45.331" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:22:34.310" endtime="20220201 13:22:45.331"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:22:45.345" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:22:54.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:22:54.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:22:45.336" endtime="20220201 13:22:54.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:22:54.974" level="INFO"/>
<status status="PASS" starttime="20220201 13:22:54.973" endtime="20220201 13:22:54.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:22:54.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:22:54.974" endtime="20220201 13:22:54.975"/>
</kw>
<status status="PASS" starttime="20220201 13:22:45.334" endtime="20220201 13:22:54.976"/>
</kw>
<msg timestamp="20220201 13:22:54.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:22:45.334" endtime="20220201 13:22:54.978"/>
</kw>
<msg timestamp="20220201 13:22:54.978" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220201 13:22:45.333" endtime="20220201 13:22:54.978"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:22:54.978" endtime="20220201 13:22:54.979"/>
</kw>
<status status="PASS" starttime="20220201 13:22:45.332" endtime="20220201 13:22:54.979"/>
</kw>
<status status="PASS" starttime="20220201 13:22:45.332" endtime="20220201 13:22:54.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:22:54.985" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:23:03.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:23:03.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:22:54.983" endtime="20220201 13:23:03.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:23:03.764" level="INFO"/>
<status status="PASS" starttime="20220201 13:23:03.763" endtime="20220201 13:23:03.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:23:03.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:23:03.766" endtime="20220201 13:23:03.767"/>
</kw>
<status status="PASS" starttime="20220201 13:22:54.982" endtime="20220201 13:23:03.767"/>
</kw>
<msg timestamp="20220201 13:23:03.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:22:54.982" endtime="20220201 13:23:03.768"/>
</kw>
<status status="PASS" starttime="20220201 13:22:54.981" endtime="20220201 13:23:03.768"/>
</kw>
<status status="PASS" starttime="20220201 13:22:54.980" endtime="20220201 13:23:03.769"/>
</kw>
<status status="PASS" starttime="20220201 13:22:54.980" endtime="20220201 13:23:03.769"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220201 13:23:03.769" endtime="20220201 13:23:03.770"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:23:03.797" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:23:13.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:23:13.558" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:23...</msg>
<status status="PASS" starttime="20220201 13:23:03.787" endtime="20220201 13:23:13.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:23:13.559" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:23:03.557Z",
  "modificationTime" : "2022-02-01T13:23:03.557Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20220201 13:23:13.558" endtime="20220201 13:23:13.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:23:13.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:23:13.560" endtime="20220201 13:23:13.560"/>
</kw>
<status status="PASS" starttime="20220201 13:23:03.786" endtime="20220201 13:23:13.561"/>
</kw>
<msg timestamp="20220201 13:23:13.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:23:03.786" endtime="20220201 13:23:13.561"/>
</kw>
<msg timestamp="20220201 13:23:13.562" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:23...</msg>
<status status="PASS" starttime="20220201 13:23:03.770" endtime="20220201 13:23:13.562"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:23:13.562" endtime="20220201 13:23:13.562"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:23:13.569" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:23:13.569" endtime="20220201 13:23:13.569"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:23:13.570" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:23:13.569" endtime="20220201 13:23:13.570"/>
</kw>
<status status="PASS" starttime="20220201 13:23:13.568" endtime="20220201 13:23:13.571"/>
</kw>
<msg timestamp="20220201 13:23:13.571" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:23:13.566" endtime="20220201 13:23:13.571"/>
</kw>
<status status="PASS" starttime="20220201 13:23:13.565" endtime="20220201 13:23:13.571"/>
</kw>
<msg timestamp="20220201 13:23:13.571" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 13:23:13.564" endtime="20220201 13:23:13.572"/>
</kw>
<msg timestamp="20220201 13:23:13.572" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 13:23:13.563" endtime="20220201 13:23:13.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:23:13.578" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:23:22.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:23:22.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:23:13.574" endtime="20220201 13:23:22.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:23:22.880" level="INFO"/>
<status status="PASS" starttime="20220201 13:23:22.879" endtime="20220201 13:23:22.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:23:22.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:23:22.880" endtime="20220201 13:23:22.881"/>
</kw>
<status status="PASS" starttime="20220201 13:23:13.573" endtime="20220201 13:23:22.881"/>
</kw>
<msg timestamp="20220201 13:23:22.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:23:13.573" endtime="20220201 13:23:22.882"/>
</kw>
<status status="PASS" starttime="20220201 13:23:13.572" endtime="20220201 13:23:22.882"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:23:22.895" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:23:40.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:23:40.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:23:22.886" endtime="20220201 13:23:40.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:23:40.574" level="INFO"/>
<status status="PASS" starttime="20220201 13:23:40.573" endtime="20220201 13:23:40.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:23:40.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:23:40.574" endtime="20220201 13:23:40.575"/>
</kw>
<status status="PASS" starttime="20220201 13:23:22.884" endtime="20220201 13:23:40.576"/>
</kw>
<msg timestamp="20220201 13:23:40.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:23:22.883" endtime="20220201 13:23:40.576"/>
</kw>
<status status="PASS" starttime="20220201 13:23:22.882" endtime="20220201 13:23:40.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:23:40.581" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:23:55.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:23:55.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:23:40.579" endtime="20220201 13:23:55.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:23:55.019" level="INFO"/>
<status status="PASS" starttime="20220201 13:23:55.018" endtime="20220201 13:23:55.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:23:55.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:23:55.019" endtime="20220201 13:23:55.020"/>
</kw>
<status status="PASS" starttime="20220201 13:23:40.578" endtime="20220201 13:23:55.021"/>
</kw>
<msg timestamp="20220201 13:23:55.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:23:40.578" endtime="20220201 13:23:55.021"/>
</kw>
<status status="PASS" starttime="20220201 13:23:40.577" endtime="20220201 13:23:55.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:23:55.027" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:24:08.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:24:08.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:23:55.024" endtime="20220201 13:24:08.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:24:08.982" level="INFO"/>
<status status="PASS" starttime="20220201 13:24:08.981" endtime="20220201 13:24:08.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:24:08.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:24:08.982" endtime="20220201 13:24:08.983"/>
</kw>
<status status="PASS" starttime="20220201 13:23:55.023" endtime="20220201 13:24:08.983"/>
</kw>
<msg timestamp="20220201 13:24:08.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:23:55.022" endtime="20220201 13:24:08.984"/>
</kw>
<status status="PASS" starttime="20220201 13:23:55.022" endtime="20220201 13:24:08.984"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 13:22:34.309" endtime="20220201 13:24:08.985"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:24:08.993" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:24:08.993" endtime="20220201 13:24:08.993"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:24:08.994" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:24:08.993" endtime="20220201 13:24:08.994"/>
</kw>
<status status="PASS" starttime="20220201 13:24:08.992" endtime="20220201 13:24:08.994"/>
</kw>
<msg timestamp="20220201 13:24:08.995" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:24:08.991" endtime="20220201 13:24:08.995"/>
</kw>
<status status="PASS" starttime="20220201 13:24:08.989" endtime="20220201 13:24:08.995"/>
</kw>
<msg timestamp="20220201 13:24:08.995" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:24:08.989" endtime="20220201 13:24:08.995"/>
</kw>
<msg timestamp="20220201 13:24:08.996" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:24:08.988" endtime="20220201 13:24:08.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:24:09.001" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:24:17.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:24:17.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:24:08.998" endtime="20220201 13:24:17.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:24:17.694" level="INFO"/>
<status status="PASS" starttime="20220201 13:24:17.693" endtime="20220201 13:24:17.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:24:17.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:24:17.695" endtime="20220201 13:24:17.696"/>
</kw>
<status status="PASS" starttime="20220201 13:24:08.997" endtime="20220201 13:24:17.696"/>
</kw>
<msg timestamp="20220201 13:24:17.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:24:08.997" endtime="20220201 13:24:17.697"/>
</kw>
<status status="PASS" starttime="20220201 13:24:08.996" endtime="20220201 13:24:17.697"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:24:17.703" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:24:26.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:24:26.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:24:17.700" endtime="20220201 13:24:26.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:24:26.629" level="INFO"/>
<status status="PASS" starttime="20220201 13:24:26.627" endtime="20220201 13:24:26.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:24:26.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:24:26.629" endtime="20220201 13:24:26.630"/>
</kw>
<status status="PASS" starttime="20220201 13:24:17.699" endtime="20220201 13:24:26.630"/>
</kw>
<msg timestamp="20220201 13:24:26.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:24:17.699" endtime="20220201 13:24:26.631"/>
</kw>
<status status="PASS" starttime="20220201 13:24:17.698" endtime="20220201 13:24:26.631"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 13:24:08.986" endtime="20220201 13:24:26.631"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220201 13:22:34.217" endtime="20220201 13:24:26.635"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:22:26.732" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:22:26.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:22:26.742" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220201 13:22:26.727" endtime="20220201 13:22:26.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:22:26.744" level="INFO">om</msg>
<status status="PASS" starttime="20220201 13:22:26.743" endtime="20220201 13:22:26.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:22:26.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:22:26.744" endtime="20220201 13:22:26.745"/>
</kw>
<status status="PASS" starttime="20220201 13:22:26.726" endtime="20220201 13:22:26.745"/>
</kw>
<msg timestamp="20220201 13:22:26.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:22:26.726" endtime="20220201 13:22:26.747"/>
</kw>
<msg timestamp="20220201 13:22:26.747" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20220201 13:22:26.725" endtime="20220201 13:22:26.747"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220201 13:22:26.748" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220201 13:22:26.748" endtime="20220201 13:22:26.748"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:22:26.754" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:22:26.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:22:26.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:22:26.751" endtime="20220201 13:22:26.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:22:26.764" level="INFO"/>
<status status="PASS" starttime="20220201 13:22:26.763" endtime="20220201 13:22:26.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:22:26.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:22:26.764" endtime="20220201 13:22:26.765"/>
</kw>
<status status="PASS" starttime="20220201 13:22:26.750" endtime="20220201 13:22:26.766"/>
</kw>
<msg timestamp="20220201 13:22:26.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:22:26.750" endtime="20220201 13:22:26.766"/>
</kw>
<status status="PASS" starttime="20220201 13:22:26.749" endtime="20220201 13:22:26.767"/>
</kw>
<status status="PASS" starttime="20220201 13:22:26.748" endtime="20220201 13:22:26.767"/>
</kw>
<status status="PASS" starttime="20220201 13:22:26.724" endtime="20220201 13:22:26.767"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 13:22:26.723" endtime="20220201 13:22:26.767"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220201 13:22:26.617" endtime="20220201 13:22:26.770"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="112571"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
