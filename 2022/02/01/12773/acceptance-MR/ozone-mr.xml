<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220201 13:20:00.292" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite id="s1-s1-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 12:57:59.505" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 12:57:59.504" endtime="20220201 12:57:59.505"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 12:57:59.505" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 12:57:59.505" endtime="20220201 12:57:59.505"/>
</kw>
<status status="PASS" starttime="20220201 12:57:59.503" endtime="20220201 12:57:59.506"/>
</kw>
<msg timestamp="20220201 12:57:59.506" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 12:57:59.503" endtime="20220201 12:57:59.506"/>
</kw>
<status status="PASS" starttime="20220201 12:57:59.502" endtime="20220201 12:57:59.506"/>
</kw>
<msg timestamp="20220201 12:57:59.506" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 12:57:59.501" endtime="20220201 12:57:59.506"/>
</kw>
<msg timestamp="20220201 12:57:59.507" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 12:57:59.500" endtime="20220201 12:57:59.507"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 12:57:59.507" level="INFO">${random} = 91715</msg>
<status status="PASS" starttime="20220201 12:57:59.507" endtime="20220201 12:57:59.507"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:59.514" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-91715 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:58:03.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:58:03.990" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:57:59.509" endtime="20220201 12:58:03.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:58:03.992" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 12:58:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-01 12:58:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-01 12:58:02 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-01 12:58:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220201 12:58:03.991" endtime="20220201 12:58:03.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:58:03.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:58:03.992" endtime="20220201 12:58:03.993"/>
</kw>
<status status="PASS" starttime="20220201 12:57:59.509" endtime="20220201 12:58:03.993"/>
</kw>
<msg timestamp="20220201 12:58:03.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:57:59.508" endtime="20220201 12:58:03.993"/>
</kw>
<msg timestamp="20220201 12:58:03.994" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:57:59.508" endtime="20220201 12:58:03.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:58:03.998" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:58:06.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:58:06.331" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:58:03.996" endtime="20220201 12:58:06.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:58:06.332" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 12:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-02-01 12:58 o3fs://bucket1.volume1.om/ozone-91715
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 12:57 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 12:58:06.332" endtime="20220201 12:58:06.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:58:06.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:58:06.333" endtime="20220201 12:58:06.333"/>
</kw>
<status status="PASS" starttime="20220201 12:58:03.996" endtime="20220201 12:58:06.334"/>
</kw>
<msg timestamp="20220201 12:58:06.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:58:03.995" endtime="20220201 12:58:06.334"/>
</kw>
<msg timestamp="20220201 12:58:06.334" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:58:03.994" endtime="20220201 12:58:06.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 12:58:06.334" endtime="20220201 12:58:06.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:58:06.340" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-91715 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:58:10.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:58:10.431" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:58:06.337" endtime="20220201 12:58:10.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:58:10.433" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 12:58:08 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-01 12:58:08 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-01 12:58:08 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20220201 12:58:10.432" endtime="20220201 12:58:10.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:58:10.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:58:10.433" endtime="20220201 12:58:10.434"/>
</kw>
<status status="PASS" starttime="20220201 12:58:06.336" endtime="20220201 12:58:10.434"/>
</kw>
<msg timestamp="20220201 12:58:10.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:58:06.336" endtime="20220201 12:58:10.435"/>
</kw>
<msg timestamp="20220201 12:58:10.436" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:58:06.335" endtime="20220201 12:58:10.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 12:58:10.436" endtime="20220201 12:58:10.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220201 12:57:59.499" endtime="20220201 12:58:10.437"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220201 12:57:59.426" endtime="20220201 12:58:10.438"/>
</suite>
<suite id="s1-s1-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:58:15.796" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:58:15.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:58:15.803" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 12:58:15.792" endtime="20220201 12:58:15.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:58:15.805" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 12:58:15.804" endtime="20220201 12:58:15.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:58:15.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:58:15.805" endtime="20220201 12:58:15.806"/>
</kw>
<status status="PASS" starttime="20220201 12:58:15.791" endtime="20220201 12:58:15.806"/>
</kw>
<msg timestamp="20220201 12:58:15.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:58:15.791" endtime="20220201 12:58:15.807"/>
</kw>
<msg timestamp="20220201 12:58:15.807" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 12:58:15.790" endtime="20220201 12:58:15.807"/>
</kw>
<msg timestamp="20220201 12:58:15.807" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 12:58:15.790" endtime="20220201 12:58:15.807"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 12:58:15.813" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 12:58:15.813" endtime="20220201 12:58:15.813"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 12:58:15.814" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 12:58:15.814" endtime="20220201 12:58:15.814"/>
</kw>
<status status="PASS" starttime="20220201 12:58:15.812" endtime="20220201 12:58:15.815"/>
</kw>
<msg timestamp="20220201 12:58:15.815" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 12:58:15.811" endtime="20220201 12:58:15.815"/>
</kw>
<status status="PASS" starttime="20220201 12:58:15.810" endtime="20220201 12:58:15.817"/>
</kw>
<msg timestamp="20220201 12:58:15.817" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 12:58:15.810" endtime="20220201 12:58:15.817"/>
</kw>
<msg timestamp="20220201 12:58:15.817" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 12:58:15.808" endtime="20220201 12:58:15.817"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:58:15.821" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:59:00.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:59:00.319" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220201 12:58:15.819" endtime="20220201 12:59:00.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:59:00.321" level="INFO">Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 12:58:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-01 12:58:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-01 12:58:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-01 12:58:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-01 12:58:20 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.9:8032
2022-02-01 12:58:20 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-02-01 12:58:21 INFO  JobSubmitter:198 - number of splits:3
2022-02-01 12:58:21 INFO  JobSubmitter:287 - Submitting tokens for job: job_1643720175840_0001
2022-02-01 12:58:21 INFO  YarnClientImpl:273 - Submitted application application_1643720175840_0001
2022-02-01 12:58:22 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1643720175840_0001/
2022-02-01 12:58:22 INFO  Job:1339 - Running job: job_1643720175840_0001
2022-02-01 12:58:33 INFO  Job:1360 - Job job_1643720175840_0001 running in uber mode : false
2022-02-01 12:58:33 INFO  Job:1367 -  map 0% reduce 0%
2022-02-01 12:58:41 INFO  Job:1367 -  map 33% reduce 0%
2022-02-01 12:58:47 INFO  Job:1367 -  map 67% reduce 0%
2022-02-01 12:58:52 INFO  Job:1367 -  map 100% reduce 0%
2022-02-01 12:58:58 INFO  Job:1367 -  map 100% reduce 100%
2022-02-01 12:58:59 INFO  Job:1378 - Job job_1643720175840_0001 completed successfully
2022-02-01 12:58:59 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=479865
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=15
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51360
		Total time spent by all reduces in occupied slots (ms)=17684
		Total time spent by all map tasks (ms)=12840
		Total time spent by all reduce tasks (ms)=4421
		Total vcore-milliseconds taken by all map tasks=12840
		Total vcore-milliseconds taken by all reduce tasks=4421
		Total megabyte-milliseconds taken by all map tasks=52592640
		Total megabyte-milliseconds taken by all reduce tasks=18108416
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=668
		CPU time spent (ms)=8160
		Physical memory (bytes) snapshot=1414152192
		Virtual memory (bytes) snapshot=15816290304
		Total committed heap usage (bytes)=1196425216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.516 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220201 12:59:00.320" endtime="20220201 12:59:00.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:59:00.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:59:00.321" endtime="20220201 12:59:00.322"/>
</kw>
<status status="PASS" starttime="20220201 12:58:15.819" endtime="20220201 12:59:00.322"/>
</kw>
<msg timestamp="20220201 12:59:00.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:58:15.818" endtime="20220201 12:59:00.323"/>
</kw>
<msg timestamp="20220201 12:59:00.323" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220201 12:58:15.817" endtime="20220201 12:59:00.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 12:59:00.324" endtime="20220201 12:59:00.324"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 12:58:15.789" endtime="20220201 12:59:00.324"/>
</test>
<test id="s1-s1-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:59:00.331" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:59:00.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:59:00.338" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 12:59:00.328" endtime="20220201 12:59:00.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:59:00.340" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 12:59:00.339" endtime="20220201 12:59:00.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:59:00.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:59:00.340" endtime="20220201 12:59:00.341"/>
</kw>
<status status="PASS" starttime="20220201 12:59:00.328" endtime="20220201 12:59:00.341"/>
</kw>
<msg timestamp="20220201 12:59:00.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:59:00.327" endtime="20220201 12:59:00.341"/>
</kw>
<msg timestamp="20220201 12:59:00.342" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 12:59:00.327" endtime="20220201 12:59:00.342"/>
</kw>
<msg timestamp="20220201 12:59:00.342" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 12:59:00.326" endtime="20220201 12:59:00.342"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 12:59:00.343" level="INFO">${random} = ENgIHglB</msg>
<status status="PASS" starttime="20220201 12:59:00.342" endtime="20220201 12:59:00.343"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 12:59:00.347" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 12:59:00.346" endtime="20220201 12:59:00.347"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 12:59:00.348" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 12:59:00.347" endtime="20220201 12:59:00.348"/>
</kw>
<status status="PASS" starttime="20220201 12:59:00.346" endtime="20220201 12:59:00.348"/>
</kw>
<msg timestamp="20220201 12:59:00.348" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 12:59:00.345" endtime="20220201 12:59:00.348"/>
</kw>
<status status="PASS" starttime="20220201 12:59:00.344" endtime="20220201 12:59:00.349"/>
</kw>
<msg timestamp="20220201 12:59:00.349" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 12:59:00.344" endtime="20220201 12:59:00.349"/>
</kw>
<msg timestamp="20220201 12:59:00.349" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 12:59:00.343" endtime="20220201 12:59:00.349"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 12:59:00.353" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 12:59:00.353" endtime="20220201 12:59:00.353"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 12:59:00.354" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 12:59:00.354" endtime="20220201 12:59:00.354"/>
</kw>
<status status="PASS" starttime="20220201 12:59:00.352" endtime="20220201 12:59:00.355"/>
</kw>
<msg timestamp="20220201 12:59:00.355" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 12:59:00.352" endtime="20220201 12:59:00.355"/>
</kw>
<status status="PASS" starttime="20220201 12:59:00.351" endtime="20220201 12:59:00.355"/>
</kw>
<msg timestamp="20220201 12:59:00.355" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220201 12:59:00.350" endtime="20220201 12:59:00.355"/>
</kw>
<msg timestamp="20220201 12:59:00.356" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220201 12:59:00.349" endtime="20220201 12:59:00.356"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 12:59:00.359" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 12:59:00.359" endtime="20220201 12:59:00.360"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 12:59:00.360" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 12:59:00.360" endtime="20220201 12:59:00.360"/>
</kw>
<status status="PASS" starttime="20220201 12:59:00.358" endtime="20220201 12:59:00.361"/>
</kw>
<msg timestamp="20220201 12:59:00.361" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 12:59:00.358" endtime="20220201 12:59:00.361"/>
</kw>
<status status="PASS" starttime="20220201 12:59:00.357" endtime="20220201 12:59:00.361"/>
</kw>
<msg timestamp="20220201 12:59:00.361" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-ENgIHglB.txt</msg>
<status status="PASS" starttime="20220201 12:59:00.357" endtime="20220201 12:59:00.361"/>
</kw>
<msg timestamp="20220201 12:59:00.362" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-ENgIHglB.txt</msg>
<status status="PASS" starttime="20220201 12:59:00.356" endtime="20220201 12:59:00.362"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:59:00.366" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-ENgIHglB.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:59:40.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:59:40.192" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:59:00.364" endtime="20220201 12:59:40.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:59:40.194" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 12:59:02 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.9:8032
2022-02-01 12:59:02 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 12:59:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-01 12:59:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-01 12:59:03 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-01 12:59:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-01 12:59:04 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-02-01 12:59:04 INFO  JobSubmitter:198 - number of splits:3
2022-02-01 12:59:05 INFO  JobSubmitter:287 - Submitting tokens for job: job_1643720175840_0002
2022-02-01 12:59:05 INFO  YarnClientImpl:273 - Submitted application application_1643720175840_0002
2022-02-01 12:59:05 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1643720175840_0002/
2022-02-01 12:59:05 INFO  Job:1339 - Running job: job_1643720175840_0002
2022-02-01 12:59:14 INFO  Job:1360 - Job job_1643720175840_0002 running in uber mode : false
2022-02-01 12:59:14 INFO  Job:1367 -  map 0% reduce 0%
2022-02-01 12:59:21 INFO  Job:1367 -  map 33% reduce 0%
2022-02-01 12:59:27 INFO  Job:1367 -  map 67% reduce 0%
2022-02-01 12:59:33 INFO  Job:1367 -  map 100% reduce 0%
2022-02-01 12:59:38 INFO  Job:1367 -  map 100% reduce 100%
2022-02-01 12:59:39 INFO  Job:1378 - Job job_1643720175840_0002 completed successfully
2022-02-01 12:59:39 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=542711
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=12
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49380
		Total time spent by all reduces in occupied slots (ms)=18068
		Total time spent by all map tasks (ms)=12345
		Total time spent by all reduce tasks (ms)=4517
		Total vcore-milliseconds taken by all map tasks=12345
		Total vcore-milliseconds taken by all reduce tasks=4517
		Total megabyte-milliseconds taken by all map tasks=50565120
		Total megabyte-milliseconds taken by all reduce tasks=18501632
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=729
		CPU time spent (ms)=9410
		Physical memory (bytes) snapshot=1405673472
		Virtual memory (bytes) snapshot=15824748544
		Total committed heap usage (bytes)=1215299584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220201 12:59:40.193" endtime="20220201 12:59:40.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:59:40.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:59:40.194" endtime="20220201 12:59:40.195"/>
</kw>
<status status="PASS" starttime="20220201 12:59:00.363" endtime="20220201 12:59:40.196"/>
</kw>
<msg timestamp="20220201 12:59:40.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:59:00.363" endtime="20220201 12:59:40.196"/>
</kw>
<msg timestamp="20220201 12:59:40.196" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:59:00.362" endtime="20220201 12:59:40.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 12:59:40.197" endtime="20220201 12:59:40.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 12:59:40.198" endtime="20220201 12:59:40.198"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 12:59:00.325" endtime="20220201 12:59:40.199"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220201 12:58:15.716" endtime="20220201 12:59:40.200"/>
</suite>
<suite id="s1-s1-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 12:59:45.583" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 12:59:45.582" endtime="20220201 12:59:45.583"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 12:59:45.584" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 12:59:45.583" endtime="20220201 12:59:45.584"/>
</kw>
<status status="PASS" starttime="20220201 12:59:45.582" endtime="20220201 12:59:45.584"/>
</kw>
<msg timestamp="20220201 12:59:45.584" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 12:59:45.580" endtime="20220201 12:59:45.584"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 12:59:45.585" endtime="20220201 12:59:45.586"/>
</kw>
<msg timestamp="20220201 12:59:45.586" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 12:59:45.585" endtime="20220201 12:59:45.586"/>
</kw>
<status status="PASS" starttime="20220201 12:59:45.579" endtime="20220201 12:59:45.586"/>
</kw>
<msg timestamp="20220201 12:59:45.587" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 12:59:45.578" endtime="20220201 12:59:45.587"/>
</kw>
<msg timestamp="20220201 12:59:45.587" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 12:59:45.577" endtime="20220201 12:59:45.587"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 12:59:45.588" level="INFO">${random} = 78868</msg>
<status status="PASS" starttime="20220201 12:59:45.587" endtime="20220201 12:59:45.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:59:45.595" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-78868 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:59:49.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:59:49.859" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:59:45.590" endtime="20220201 12:59:49.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:59:49.861" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 12:59:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-01 12:59:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-01 12:59:48 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-01 12:59:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220201 12:59:49.860" endtime="20220201 12:59:49.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:59:49.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:59:49.861" endtime="20220201 12:59:49.862"/>
</kw>
<status status="PASS" starttime="20220201 12:59:45.589" endtime="20220201 12:59:49.862"/>
</kw>
<msg timestamp="20220201 12:59:49.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:59:45.589" endtime="20220201 12:59:49.863"/>
</kw>
<msg timestamp="20220201 12:59:49.863" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:59:45.588" endtime="20220201 12:59:49.863"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:59:49.867" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:59:52.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:59:52.140" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:59:49.865" endtime="20220201 12:59:52.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:59:52.141" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 12:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-02-01 12:59 ofs://om/volume1/bucket1/ozone-78868
-rw-rw-rw-   3 hadoop hadoop      14978 2022-02-01 12:58 ofs://om/volume1/bucket1/ozone-91715
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 12:57 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 12:59 ofs://om/volume1/bucket1/wordcount-ENgIHglB.txt</msg>
<status status="PASS" starttime="20220201 12:59:52.140" endtime="20220201 12:59:52.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:59:52.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:59:52.142" endtime="20220201 12:59:52.142"/>
</kw>
<status status="PASS" starttime="20220201 12:59:49.864" endtime="20220201 12:59:52.143"/>
</kw>
<msg timestamp="20220201 12:59:52.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:59:49.864" endtime="20220201 12:59:52.143"/>
</kw>
<msg timestamp="20220201 12:59:52.143" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:59:49.863" endtime="20220201 12:59:52.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 12:59:52.143" endtime="20220201 12:59:52.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:59:52.148" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-78868 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:59:55.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:59:55.908" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:59:52.146" endtime="20220201 12:59:55.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:59:55.909" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 12:59:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-01 12:59:54 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-01 12:59:54 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20220201 12:59:55.908" endtime="20220201 12:59:55.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:59:55.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:59:55.910" endtime="20220201 12:59:55.910"/>
</kw>
<status status="PASS" starttime="20220201 12:59:52.145" endtime="20220201 12:59:55.911"/>
</kw>
<msg timestamp="20220201 12:59:55.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:59:52.145" endtime="20220201 12:59:55.911"/>
</kw>
<msg timestamp="20220201 12:59:55.912" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 12:59:52.144" endtime="20220201 12:59:55.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 12:59:55.913" endtime="20220201 12:59:55.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220201 12:59:45.576" endtime="20220201 12:59:55.913"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220201 12:59:45.504" endtime="20220201 12:59:55.915"/>
</suite>
<suite id="s1-s1-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:00:01.188" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:00:01.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:00:01.197" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 13:00:01.184" endtime="20220201 13:00:01.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:00:01.198" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 13:00:01.197" endtime="20220201 13:00:01.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:00:01.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:00:01.198" endtime="20220201 13:00:01.199"/>
</kw>
<status status="PASS" starttime="20220201 13:00:01.183" endtime="20220201 13:00:01.199"/>
</kw>
<msg timestamp="20220201 13:00:01.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:00:01.183" endtime="20220201 13:00:01.200"/>
</kw>
<msg timestamp="20220201 13:00:01.200" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 13:00:01.182" endtime="20220201 13:00:01.200"/>
</kw>
<msg timestamp="20220201 13:00:01.200" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 13:00:01.182" endtime="20220201 13:00:01.200"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:00:01.206" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:00:01.205" endtime="20220201 13:00:01.206"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:00:01.207" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:00:01.206" endtime="20220201 13:00:01.207"/>
</kw>
<status status="PASS" starttime="20220201 13:00:01.205" endtime="20220201 13:00:01.207"/>
</kw>
<msg timestamp="20220201 13:00:01.207" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:00:01.204" endtime="20220201 13:00:01.207"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:00:01.208" endtime="20220201 13:00:01.209"/>
</kw>
<msg timestamp="20220201 13:00:01.209" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:00:01.207" endtime="20220201 13:00:01.209"/>
</kw>
<status status="PASS" starttime="20220201 13:00:01.203" endtime="20220201 13:00:01.209"/>
</kw>
<msg timestamp="20220201 13:00:01.210" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:00:01.203" endtime="20220201 13:00:01.210"/>
</kw>
<msg timestamp="20220201 13:00:01.210" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:00:01.200" endtime="20220201 13:00:01.210"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:00:01.214" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:00:40.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:00:40.771" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220201 13:00:01.212" endtime="20220201 13:00:40.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:00:40.773" level="INFO">Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:00:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-01 13:00:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-01 13:00:03 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-01 13:00:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-01 13:00:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.9:8032
2022-02-01 13:00:05 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:00:05 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-02-01 13:00:05 INFO  JobSubmitter:198 - number of splits:3
2022-02-01 13:00:06 INFO  JobSubmitter:287 - Submitting tokens for job: job_1643720175840_0003
2022-02-01 13:00:06 INFO  YarnClientImpl:273 - Submitted application application_1643720175840_0003
2022-02-01 13:00:06 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1643720175840_0003/
2022-02-01 13:00:06 INFO  Job:1339 - Running job: job_1643720175840_0003
2022-02-01 13:00:14 INFO  Job:1360 - Job job_1643720175840_0003 running in uber mode : false
2022-02-01 13:00:14 INFO  Job:1367 -  map 0% reduce 0%
2022-02-01 13:00:21 INFO  Job:1367 -  map 33% reduce 0%
2022-02-01 13:00:27 INFO  Job:1367 -  map 67% reduce 0%
2022-02-01 13:00:33 INFO  Job:1367 -  map 100% reduce 0%
2022-02-01 13:00:38 INFO  Job:1367 -  map 100% reduce 100%
2022-02-01 13:00:39 INFO  Job:1378 - Job job_1643720175840_0003 completed successfully
2022-02-01 13:00:40 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=479653
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=15
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49352
		Total time spent by all reduces in occupied slots (ms)=18072
		Total time spent by all map tasks (ms)=12338
		Total time spent by all reduce tasks (ms)=4518
		Total vcore-milliseconds taken by all map tasks=12338
		Total vcore-milliseconds taken by all reduce tasks=4518
		Total megabyte-milliseconds taken by all map tasks=50536448
		Total megabyte-milliseconds taken by all reduce tasks=18505728
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=637
		CPU time spent (ms)=9600
		Physical memory (bytes) snapshot=1429049344
		Virtual memory (bytes) snapshot=15817474048
		Total committed heap usage (bytes)=1193803776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.867 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220201 13:00:40.772" endtime="20220201 13:00:40.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:00:40.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:00:40.773" endtime="20220201 13:00:40.774"/>
</kw>
<status status="PASS" starttime="20220201 13:00:01.211" endtime="20220201 13:00:40.774"/>
</kw>
<msg timestamp="20220201 13:00:40.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:00:01.211" endtime="20220201 13:00:40.774"/>
</kw>
<msg timestamp="20220201 13:00:40.775" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220201 13:00:01.210" endtime="20220201 13:00:40.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:00:40.775" endtime="20220201 13:00:40.776"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:00:01.180" endtime="20220201 13:00:40.776"/>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:00:40.784" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:00:40.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:00:40.790" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 13:00:40.782" endtime="20220201 13:00:40.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:00:40.791" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 13:00:40.790" endtime="20220201 13:00:40.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:00:40.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:00:40.791" endtime="20220201 13:00:40.792"/>
</kw>
<status status="PASS" starttime="20220201 13:00:40.781" endtime="20220201 13:00:40.792"/>
</kw>
<msg timestamp="20220201 13:00:40.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:00:40.780" endtime="20220201 13:00:40.793"/>
</kw>
<msg timestamp="20220201 13:00:40.793" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 13:00:40.780" endtime="20220201 13:00:40.793"/>
</kw>
<msg timestamp="20220201 13:00:40.793" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220201 13:00:40.778" endtime="20220201 13:00:40.793"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:00:40.794" level="INFO">${random} = Afd71Vnv</msg>
<status status="PASS" starttime="20220201 13:00:40.793" endtime="20220201 13:00:40.794"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:00:40.799" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:00:40.798" endtime="20220201 13:00:40.799"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:00:40.800" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:00:40.799" endtime="20220201 13:00:40.800"/>
</kw>
<status status="PASS" starttime="20220201 13:00:40.797" endtime="20220201 13:00:40.800"/>
</kw>
<msg timestamp="20220201 13:00:40.800" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:00:40.797" endtime="20220201 13:00:40.800"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:00:40.801" endtime="20220201 13:00:40.801"/>
</kw>
<msg timestamp="20220201 13:00:40.802" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:00:40.800" endtime="20220201 13:00:40.802"/>
</kw>
<status status="PASS" starttime="20220201 13:00:40.796" endtime="20220201 13:00:40.802"/>
</kw>
<msg timestamp="20220201 13:00:40.802" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:00:40.795" endtime="20220201 13:00:40.802"/>
</kw>
<msg timestamp="20220201 13:00:40.802" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:00:40.794" endtime="20220201 13:00:40.802"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:00:40.807" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:00:40.806" endtime="20220201 13:00:40.807"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:00:40.808" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:00:40.807" endtime="20220201 13:00:40.808"/>
</kw>
<status status="PASS" starttime="20220201 13:00:40.806" endtime="20220201 13:00:40.808"/>
</kw>
<msg timestamp="20220201 13:00:40.808" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:00:40.805" endtime="20220201 13:00:40.808"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:00:40.810" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220201 13:00:40.809" endtime="20220201 13:00:40.810"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:00:40.811" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220201 13:00:40.810" endtime="20220201 13:00:40.811"/>
</kw>
<status status="PASS" starttime="20220201 13:00:40.809" endtime="20220201 13:00:40.811"/>
</kw>
<msg timestamp="20220201 13:00:40.811" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220201 13:00:40.808" endtime="20220201 13:00:40.811"/>
</kw>
<status status="PASS" starttime="20220201 13:00:40.804" endtime="20220201 13:00:40.812"/>
</kw>
<msg timestamp="20220201 13:00:40.812" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220201 13:00:40.803" endtime="20220201 13:00:40.812"/>
</kw>
<msg timestamp="20220201 13:00:40.812" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220201 13:00:40.803" endtime="20220201 13:00:40.812"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:00:40.817" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:00:40.816" endtime="20220201 13:00:40.817"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:00:40.818" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:00:40.817" endtime="20220201 13:00:40.818"/>
</kw>
<status status="PASS" starttime="20220201 13:00:40.815" endtime="20220201 13:00:40.818"/>
</kw>
<msg timestamp="20220201 13:00:40.818" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:00:40.815" endtime="20220201 13:00:40.818"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:00:40.820" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220201 13:00:40.820" endtime="20220201 13:00:40.820"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:00:40.821" level="INFO">${result} = /wordcount-Afd71Vnv.txt</msg>
<status status="PASS" starttime="20220201 13:00:40.820" endtime="20220201 13:00:40.821"/>
</kw>
<status status="PASS" starttime="20220201 13:00:40.819" endtime="20220201 13:00:40.821"/>
</kw>
<msg timestamp="20220201 13:00:40.821" level="INFO">${path_with_leading} = /wordcount-Afd71Vnv.txt</msg>
<status status="PASS" starttime="20220201 13:00:40.818" endtime="20220201 13:00:40.821"/>
</kw>
<status status="PASS" starttime="20220201 13:00:40.814" endtime="20220201 13:00:40.822"/>
</kw>
<msg timestamp="20220201 13:00:40.822" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-Afd71Vnv.txt</msg>
<status status="PASS" starttime="20220201 13:00:40.813" endtime="20220201 13:00:40.822"/>
</kw>
<msg timestamp="20220201 13:00:40.822" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-Afd71Vnv.txt</msg>
<status status="PASS" starttime="20220201 13:00:40.812" endtime="20220201 13:00:40.822"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:00:40.827" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-Afd71Vnv.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:01:18.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:01:18.699" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:00:40.824" endtime="20220201 13:01:18.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:01:18.701" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:00:42 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.9:8032
2022-02-01 13:00:43 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:00:43 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-01 13:00:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-01 13:00:43 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-01 13:00:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-01 13:00:44 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-02-01 13:00:45 INFO  JobSubmitter:198 - number of splits:3
2022-02-01 13:00:45 INFO  JobSubmitter:287 - Submitting tokens for job: job_1643720175840_0004
2022-02-01 13:00:45 INFO  YarnClientImpl:273 - Submitted application application_1643720175840_0004
2022-02-01 13:00:45 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1643720175840_0004/
2022-02-01 13:00:45 INFO  Job:1339 - Running job: job_1643720175840_0004
2022-02-01 13:00:53 INFO  Job:1360 - Job job_1643720175840_0004 running in uber mode : false
2022-02-01 13:00:53 INFO  Job:1367 -  map 0% reduce 0%
2022-02-01 13:01:01 INFO  Job:1367 -  map 33% reduce 0%
2022-02-01 13:01:07 INFO  Job:1367 -  map 67% reduce 0%
2022-02-01 13:01:13 INFO  Job:1367 -  map 100% reduce 0%
2022-02-01 13:01:17 INFO  Job:1367 -  map 100% reduce 100%
2022-02-01 13:01:18 INFO  Job:1378 - Job job_1643720175840_0004 completed successfully
2022-02-01 13:01:18 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=542627
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=12
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47604
		Total time spent by all reduces in occupied slots (ms)=17304
		Total time spent by all map tasks (ms)=11901
		Total time spent by all reduce tasks (ms)=4326
		Total vcore-milliseconds taken by all map tasks=11901
		Total vcore-milliseconds taken by all reduce tasks=4326
		Total megabyte-milliseconds taken by all map tasks=48746496
		Total megabyte-milliseconds taken by all reduce tasks=17719296
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=630
		CPU time spent (ms)=9640
		Physical memory (bytes) snapshot=1362165760
		Virtual memory (bytes) snapshot=15807651840
		Total committed heap usage (bytes)=1126694912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220201 13:01:18.700" endtime="20220201 13:01:18.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:01:18.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:01:18.701" endtime="20220201 13:01:18.702"/>
</kw>
<status status="PASS" starttime="20220201 13:00:40.824" endtime="20220201 13:01:18.703"/>
</kw>
<msg timestamp="20220201 13:01:18.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:00:40.823" endtime="20220201 13:01:18.703"/>
</kw>
<msg timestamp="20220201 13:01:18.703" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:00:40.822" endtime="20220201 13:01:18.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:01:18.704" endtime="20220201 13:01:18.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:01:18.704" endtime="20220201 13:01:18.705"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:00:40.777" endtime="20220201 13:01:18.705"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220201 13:00:01.112" endtime="20220201 13:01:18.707"/>
</suite>
<suite id="s1-s1-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:15.757" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:57:18.944" level="INFO">${rc} = 255</msg>
<msg timestamp="20220201 12:57:18.944" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 12:57:15.752" endtime="20220201 12:57:18.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:57:18.945" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 12:57:18.944" endtime="20220201 12:57:18.945"/>
</kw>
<msg timestamp="20220201 12:57:18.946" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 12:57:15.751" endtime="20220201 12:57:18.946"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:18.951" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:57:21.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:57:21.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 12:57:18.949" endtime="20220201 12:57:21.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:57:21.995" level="INFO"/>
<status status="PASS" starttime="20220201 12:57:21.994" endtime="20220201 12:57:21.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:57:21.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:57:21.995" endtime="20220201 12:57:21.996"/>
</kw>
<status status="PASS" starttime="20220201 12:57:18.948" endtime="20220201 12:57:21.996"/>
</kw>
<msg timestamp="20220201 12:57:21.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:57:18.948" endtime="20220201 12:57:21.998"/>
</kw>
<msg timestamp="20220201 12:57:21.998" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220201 12:57:18.947" endtime="20220201 12:57:21.998"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 12:57:21.999" endtime="20220201 12:57:21.999"/>
</kw>
<status status="PASS" starttime="20220201 12:57:18.947" endtime="20220201 12:57:21.999"/>
</kw>
<status status="PASS" starttime="20220201 12:57:18.946" endtime="20220201 12:57:21.999"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:22.005" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:57:24.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:57:24.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 12:57:22.003" endtime="20220201 12:57:24.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:57:24.793" level="INFO"/>
<status status="PASS" starttime="20220201 12:57:24.792" endtime="20220201 12:57:24.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:57:24.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:57:24.793" endtime="20220201 12:57:24.794"/>
</kw>
<status status="PASS" starttime="20220201 12:57:22.002" endtime="20220201 12:57:24.795"/>
</kw>
<msg timestamp="20220201 12:57:24.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:57:22.002" endtime="20220201 12:57:24.795"/>
</kw>
<status status="PASS" starttime="20220201 12:57:22.001" endtime="20220201 12:57:24.796"/>
</kw>
<status status="PASS" starttime="20220201 12:57:22.000" endtime="20220201 12:57:24.796"/>
</kw>
<status status="PASS" starttime="20220201 12:57:22.000" endtime="20220201 12:57:24.796"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220201 12:57:24.796" endtime="20220201 12:57:24.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:24.802" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:57:27.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:57:27.926" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T12:57...</msg>
<status status="PASS" starttime="20220201 12:57:24.799" endtime="20220201 12:57:27.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:57:27.928" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T12:57:24.720Z",
  "modificationTime" : "2022-02-01T12:57:24.720Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220201 12:57:27.927" endtime="20220201 12:57:27.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:57:27.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:57:27.928" endtime="20220201 12:57:27.929"/>
</kw>
<status status="PASS" starttime="20220201 12:57:24.798" endtime="20220201 12:57:27.929"/>
</kw>
<msg timestamp="20220201 12:57:27.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:57:24.798" endtime="20220201 12:57:27.930"/>
</kw>
<msg timestamp="20220201 12:57:27.930" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T12:57...</msg>
<status status="PASS" starttime="20220201 12:57:24.797" endtime="20220201 12:57:27.930"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 12:57:27.931" endtime="20220201 12:57:27.931"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 12:57:27.936" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 12:57:27.936" endtime="20220201 12:57:27.936"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 12:57:27.937" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 12:57:27.937" endtime="20220201 12:57:27.937"/>
</kw>
<status status="PASS" starttime="20220201 12:57:27.935" endtime="20220201 12:57:27.938"/>
</kw>
<msg timestamp="20220201 12:57:27.938" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 12:57:27.934" endtime="20220201 12:57:27.938"/>
</kw>
<status status="PASS" starttime="20220201 12:57:27.933" endtime="20220201 12:57:27.939"/>
</kw>
<msg timestamp="20220201 12:57:27.939" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 12:57:27.932" endtime="20220201 12:57:27.939"/>
</kw>
<msg timestamp="20220201 12:57:27.939" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 12:57:27.931" endtime="20220201 12:57:27.939"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:27.944" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:57:30.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:57:30.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 12:57:27.941" endtime="20220201 12:57:30.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:57:30.819" level="INFO"/>
<status status="PASS" starttime="20220201 12:57:30.818" endtime="20220201 12:57:30.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:57:30.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:57:30.819" endtime="20220201 12:57:30.820"/>
</kw>
<status status="PASS" starttime="20220201 12:57:27.941" endtime="20220201 12:57:30.820"/>
</kw>
<msg timestamp="20220201 12:57:30.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:57:27.940" endtime="20220201 12:57:30.821"/>
</kw>
<status status="PASS" starttime="20220201 12:57:27.939" endtime="20220201 12:57:30.821"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:30.826" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:57:37.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:57:37.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 12:57:30.823" endtime="20220201 12:57:37.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:57:37.198" level="INFO"/>
<status status="PASS" starttime="20220201 12:57:37.197" endtime="20220201 12:57:37.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:57:37.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:57:37.198" endtime="20220201 12:57:37.199"/>
</kw>
<status status="PASS" starttime="20220201 12:57:30.823" endtime="20220201 12:57:37.199"/>
</kw>
<msg timestamp="20220201 12:57:37.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:57:30.822" endtime="20220201 12:57:37.200"/>
</kw>
<status status="PASS" starttime="20220201 12:57:30.822" endtime="20220201 12:57:37.201"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:37.205" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:57:42.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:57:42.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 12:57:37.203" endtime="20220201 12:57:42.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:57:42.867" level="INFO"/>
<status status="PASS" starttime="20220201 12:57:42.866" endtime="20220201 12:57:42.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:57:42.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:57:42.867" endtime="20220201 12:57:42.868"/>
</kw>
<status status="PASS" starttime="20220201 12:57:37.202" endtime="20220201 12:57:42.868"/>
</kw>
<msg timestamp="20220201 12:57:42.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:57:37.202" endtime="20220201 12:57:42.869"/>
</kw>
<status status="PASS" starttime="20220201 12:57:37.201" endtime="20220201 12:57:42.869"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:42.874" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:57:48.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:57:48.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 12:57:42.871" endtime="20220201 12:57:48.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:57:48.172" level="INFO"/>
<status status="PASS" starttime="20220201 12:57:48.171" endtime="20220201 12:57:48.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:57:48.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:57:48.172" endtime="20220201 12:57:48.173"/>
</kw>
<status status="PASS" starttime="20220201 12:57:42.871" endtime="20220201 12:57:48.174"/>
</kw>
<msg timestamp="20220201 12:57:48.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:57:42.870" endtime="20220201 12:57:48.175"/>
</kw>
<status status="PASS" starttime="20220201 12:57:42.869" endtime="20220201 12:57:48.175"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 12:57:15.750" endtime="20220201 12:57:48.175"/>
</test>
<test id="s1-s1-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 12:57:48.186" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 12:57:48.185" endtime="20220201 12:57:48.186"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 12:57:48.187" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 12:57:48.186" endtime="20220201 12:57:48.187"/>
</kw>
<status status="PASS" starttime="20220201 12:57:48.184" endtime="20220201 12:57:48.188"/>
</kw>
<msg timestamp="20220201 12:57:48.188" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 12:57:48.182" endtime="20220201 12:57:48.188"/>
</kw>
<status status="PASS" starttime="20220201 12:57:48.181" endtime="20220201 12:57:48.189"/>
</kw>
<msg timestamp="20220201 12:57:48.189" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 12:57:48.179" endtime="20220201 12:57:48.189"/>
</kw>
<msg timestamp="20220201 12:57:48.189" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 12:57:48.178" endtime="20220201 12:57:48.189"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:48.195" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:57:51.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:57:51.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 12:57:48.192" endtime="20220201 12:57:51.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:57:51.181" level="INFO"/>
<status status="PASS" starttime="20220201 12:57:51.180" endtime="20220201 12:57:51.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:57:51.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:57:51.182" endtime="20220201 12:57:51.182"/>
</kw>
<status status="PASS" starttime="20220201 12:57:48.191" endtime="20220201 12:57:51.183"/>
</kw>
<msg timestamp="20220201 12:57:51.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:57:48.190" endtime="20220201 12:57:51.183"/>
</kw>
<status status="PASS" starttime="20220201 12:57:48.189" endtime="20220201 12:57:51.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 12:57:51.188" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 12:57:54.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 12:57:54.099" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 12:57:51.186" endtime="20220201 12:57:54.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 12:57:54.100" level="INFO"/>
<status status="PASS" starttime="20220201 12:57:54.099" endtime="20220201 12:57:54.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 12:57:54.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 12:57:54.100" endtime="20220201 12:57:54.101"/>
</kw>
<status status="PASS" starttime="20220201 12:57:51.185" endtime="20220201 12:57:54.102"/>
</kw>
<msg timestamp="20220201 12:57:54.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 12:57:51.185" endtime="20220201 12:57:54.102"/>
</kw>
<status status="PASS" starttime="20220201 12:57:51.184" endtime="20220201 12:57:54.102"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 12:57:48.177" endtime="20220201 12:57:54.103"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220201 12:57:15.672" endtime="20220201 12:57:54.104"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="221934"/>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite id="s1-s2-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:03:38.462" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:03:38.461" endtime="20220201 13:03:38.462"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:03:38.462" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:03:38.462" endtime="20220201 13:03:38.463"/>
</kw>
<status status="PASS" starttime="20220201 13:03:38.460" endtime="20220201 13:03:38.463"/>
</kw>
<msg timestamp="20220201 13:03:38.463" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:03:38.460" endtime="20220201 13:03:38.463"/>
</kw>
<status status="PASS" starttime="20220201 13:03:38.459" endtime="20220201 13:03:38.463"/>
</kw>
<msg timestamp="20220201 13:03:38.463" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:03:38.458" endtime="20220201 13:03:38.464"/>
</kw>
<msg timestamp="20220201 13:03:38.464" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:03:38.457" endtime="20220201 13:03:38.464"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:03:38.464" level="INFO">${random} = 51642</msg>
<status status="PASS" starttime="20220201 13:03:38.464" endtime="20220201 13:03:38.465"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:38.472" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-51642 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:43.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:43.363" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:03:38.466" endtime="20220201 13:03:43.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:43.364" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:03:39 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:03:41 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-01 13:03:41 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-01 13:03:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:03:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:03:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220201 13:03:43.363" endtime="20220201 13:03:43.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:43.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:43.364" endtime="20220201 13:03:43.365"/>
</kw>
<status status="PASS" starttime="20220201 13:03:38.466" endtime="20220201 13:03:43.365"/>
</kw>
<msg timestamp="20220201 13:03:43.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:38.465" endtime="20220201 13:03:43.365"/>
</kw>
<msg timestamp="20220201 13:03:43.366" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:03:38.465" endtime="20220201 13:03:43.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:43.370" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:45.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:45.633" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:03:43.368" endtime="20220201 13:03:45.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:45.635" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:03:44 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:03 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2022-02-01 13:03 o3fs://bucket1.volume1.om/ozone-51642
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:03 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:03:45.634" endtime="20220201 13:03:45.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:45.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:45.635" endtime="20220201 13:03:45.636"/>
</kw>
<status status="PASS" starttime="20220201 13:03:43.367" endtime="20220201 13:03:45.636"/>
</kw>
<msg timestamp="20220201 13:03:45.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:43.367" endtime="20220201 13:03:45.637"/>
</kw>
<msg timestamp="20220201 13:03:45.637" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:03:43.366" endtime="20220201 13:03:45.637"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:03:45.637" endtime="20220201 13:03:45.637"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:45.641" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-51642 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:49.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:49.482" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:03:45.639" endtime="20220201 13:03:49.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:49.483" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:03:46 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:03:47 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-01 13:03:48 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-01 13:03:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:03:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220201 13:03:49.482" endtime="20220201 13:03:49.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:49.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:49.484" endtime="20220201 13:03:49.485"/>
</kw>
<status status="PASS" starttime="20220201 13:03:45.639" endtime="20220201 13:03:49.486"/>
</kw>
<msg timestamp="20220201 13:03:49.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:45.638" endtime="20220201 13:03:49.486"/>
</kw>
<msg timestamp="20220201 13:03:49.488" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:03:45.638" endtime="20220201 13:03:49.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:03:49.488" endtime="20220201 13:03:49.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220201 13:03:38.456" endtime="20220201 13:03:49.489"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220201 13:03:38.384" endtime="20220201 13:03:49.491"/>
</suite>
<suite id="s1-s2-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:54.740" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:54.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:54.745" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:03:54.736" endtime="20220201 13:03:54.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:54.747" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:03:54.746" endtime="20220201 13:03:54.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:54.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:54.747" endtime="20220201 13:03:54.748"/>
</kw>
<status status="PASS" starttime="20220201 13:03:54.735" endtime="20220201 13:03:54.748"/>
</kw>
<msg timestamp="20220201 13:03:54.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:54.734" endtime="20220201 13:03:54.748"/>
</kw>
<msg timestamp="20220201 13:03:54.748" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:03:54.734" endtime="20220201 13:03:54.748"/>
</kw>
<msg timestamp="20220201 13:03:54.749" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:03:54.733" endtime="20220201 13:03:54.749"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:03:54.755" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:03:54.754" endtime="20220201 13:03:54.755"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:03:54.755" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:03:54.755" endtime="20220201 13:03:54.755"/>
</kw>
<status status="PASS" starttime="20220201 13:03:54.753" endtime="20220201 13:03:54.756"/>
</kw>
<msg timestamp="20220201 13:03:54.756" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:03:54.752" endtime="20220201 13:03:54.756"/>
</kw>
<status status="PASS" starttime="20220201 13:03:54.752" endtime="20220201 13:03:54.756"/>
</kw>
<msg timestamp="20220201 13:03:54.756" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:03:54.751" endtime="20220201 13:03:54.756"/>
</kw>
<msg timestamp="20220201 13:03:54.757" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:03:54.749" endtime="20220201 13:03:54.757"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:54.761" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:04:40.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:04:40.607" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:03:54.759" endtime="20220201 13:04:40.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:04:40.608" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-01 13:03:56 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:03:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-01 13:03:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-01 13:03:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:03:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:03:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-01 13:03:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-02-01 13:03:59 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:03:59 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:03:59 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-01 13:04:00 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:04:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643720533288_0001
2022-02-01 13:04:00 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:04:00 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:04:00 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:04:00 INFO  Configuration:2752 - resource-types.xml not found
2022-02-01 13:04:00 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-02-01 13:04:01 INFO  YarnClientImpl:324 - Submitted application application_1643720533288_0001
2022-02-01 13:04:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1643720533288_0001/
2022-02-01 13:04:01 INFO  Job:1619 - Running job: job_1643720533288_0001
2022-02-01 13:04:13 INFO  Job:1640 - Job job_1643720533288_0001 running in uber mode : false
2022-02-01 13:04:13 INFO  Job:1647 -  map 0% reduce 0%
2022-02-01 13:04:20 INFO  Job:1647 -  map 33% reduce 0%
2022-02-01 13:04:26 INFO  Job:1647 -  map 67% reduce 0%
2022-02-01 13:04:32 INFO  Job:1647 -  map 100% reduce 0%
2022-02-01 13:04:38 INFO  Job:1647 -  map 100% reduce 100%
2022-02-01 13:04:39 INFO  Job:1658 - Job job_1643720533288_0001 completed successfully
2022-02-01 13:04:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=867649
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48488
		Total time spent by all reduces in occupied slots (ms)=22580
		Total time spent by all map tasks (ms)=12122
		Total time spent by all reduce tasks (ms)=5645
		Total vcore-milliseconds taken by all map tasks=12122
		Total vcore-milliseconds taken by all reduce tasks=5645
		Total megabyte-milliseconds taken by all map tasks=49651712
		Total megabyte-milliseconds taken by all reduce tasks=23121920
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=683
		CPU time spent (ms)=8210
		Physical memory (bytes) snapshot=1504477184
		Virtual memory (bytes) snapshot=15814356992
		Total committed heap usage (bytes)=1260388352
		Peak Map Physical memory (bytes)=402952192
		Peak Map Virtual memory (bytes)=3950731264
		Peak Reduce Physical memory (bytes)=353189888
		Peak Reduce Virtual memory (bytes)=3968548864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.753 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220201 13:04:40.607" endtime="20220201 13:04:40.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:04:40.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:04:40.609" endtime="20220201 13:04:40.609"/>
</kw>
<status status="PASS" starttime="20220201 13:03:54.758" endtime="20220201 13:04:40.610"/>
</kw>
<msg timestamp="20220201 13:04:40.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:54.758" endtime="20220201 13:04:40.610"/>
</kw>
<msg timestamp="20220201 13:04:40.610" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:03:54.757" endtime="20220201 13:04:40.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:04:40.611" endtime="20220201 13:04:40.612"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:03:54.732" endtime="20220201 13:04:40.612"/>
</test>
<test id="s1-s2-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:04:40.619" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:04:40.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:04:40.626" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:04:40.617" endtime="20220201 13:04:40.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:04:40.627" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:04:40.627" endtime="20220201 13:04:40.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:04:40.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:04:40.628" endtime="20220201 13:04:40.629"/>
</kw>
<status status="PASS" starttime="20220201 13:04:40.616" endtime="20220201 13:04:40.629"/>
</kw>
<msg timestamp="20220201 13:04:40.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:04:40.616" endtime="20220201 13:04:40.629"/>
</kw>
<msg timestamp="20220201 13:04:40.629" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:04:40.615" endtime="20220201 13:04:40.629"/>
</kw>
<msg timestamp="20220201 13:04:40.630" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:04:40.615" endtime="20220201 13:04:40.630"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:04:40.630" level="INFO">${random} = hIf3DWEm</msg>
<status status="PASS" starttime="20220201 13:04:40.630" endtime="20220201 13:04:40.631"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:04:40.635" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:04:40.634" endtime="20220201 13:04:40.635"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:04:40.636" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:04:40.635" endtime="20220201 13:04:40.636"/>
</kw>
<status status="PASS" starttime="20220201 13:04:40.634" endtime="20220201 13:04:40.636"/>
</kw>
<msg timestamp="20220201 13:04:40.636" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:04:40.633" endtime="20220201 13:04:40.636"/>
</kw>
<status status="PASS" starttime="20220201 13:04:40.632" endtime="20220201 13:04:40.637"/>
</kw>
<msg timestamp="20220201 13:04:40.637" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:04:40.632" endtime="20220201 13:04:40.637"/>
</kw>
<msg timestamp="20220201 13:04:40.637" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:04:40.631" endtime="20220201 13:04:40.637"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:04:40.641" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:04:40.641" endtime="20220201 13:04:40.641"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:04:40.642" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:04:40.641" endtime="20220201 13:04:40.642"/>
</kw>
<status status="PASS" starttime="20220201 13:04:40.640" endtime="20220201 13:04:40.642"/>
</kw>
<msg timestamp="20220201 13:04:40.642" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:04:40.640" endtime="20220201 13:04:40.642"/>
</kw>
<status status="PASS" starttime="20220201 13:04:40.639" endtime="20220201 13:04:40.643"/>
</kw>
<msg timestamp="20220201 13:04:40.643" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220201 13:04:40.638" endtime="20220201 13:04:40.643"/>
</kw>
<msg timestamp="20220201 13:04:40.643" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220201 13:04:40.637" endtime="20220201 13:04:40.643"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:04:40.647" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:04:40.647" endtime="20220201 13:04:40.647"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:04:40.648" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:04:40.648" endtime="20220201 13:04:40.648"/>
</kw>
<status status="PASS" starttime="20220201 13:04:40.646" endtime="20220201 13:04:40.648"/>
</kw>
<msg timestamp="20220201 13:04:40.649" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:04:40.646" endtime="20220201 13:04:40.649"/>
</kw>
<status status="PASS" starttime="20220201 13:04:40.645" endtime="20220201 13:04:40.649"/>
</kw>
<msg timestamp="20220201 13:04:40.649" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-hIf3DWEm.txt</msg>
<status status="PASS" starttime="20220201 13:04:40.644" endtime="20220201 13:04:40.649"/>
</kw>
<msg timestamp="20220201 13:04:40.649" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-hIf3DWEm.txt</msg>
<status status="PASS" starttime="20220201 13:04:40.643" endtime="20220201 13:04:40.649"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:04:40.653" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-hIf3DWEm.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:05:20.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:05:20.190" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:04:40.651" endtime="20220201 13:05:20.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:05:20.191" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:04:41 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:04:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-02-01 13:04:43 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:04:43 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:04:43 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:04:43 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-01 13:04:43 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-01 13:04:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:04:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:04:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-01 13:04:45 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-01 13:04:45 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:04:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643720533288_0002
2022-02-01 13:04:45 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:04:45 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:04:45 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:04:46 INFO  Configuration:2752 - resource-types.xml not found
2022-02-01 13:04:46 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-02-01 13:04:46 INFO  YarnClientImpl:324 - Submitted application application_1643720533288_0002
2022-02-01 13:04:46 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1643720533288_0002/
2022-02-01 13:04:46 INFO  Job:1619 - Running job: job_1643720533288_0002
2022-02-01 13:04:54 INFO  Job:1640 - Job job_1643720533288_0002 running in uber mode : false
2022-02-01 13:04:54 INFO  Job:1647 -  map 0% reduce 0%
2022-02-01 13:05:02 INFO  Job:1647 -  map 33% reduce 0%
2022-02-01 13:05:08 INFO  Job:1647 -  map 67% reduce 0%
2022-02-01 13:05:14 INFO  Job:1647 -  map 100% reduce 0%
2022-02-01 13:05:19 INFO  Job:1647 -  map 100% reduce 100%
2022-02-01 13:05:19 INFO  Job:1658 - Job job_1643720533288_0002 completed successfully
2022-02-01 13:05:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=930399
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51080
		Total time spent by all reduces in occupied slots (ms)=17564
		Total time spent by all map tasks (ms)=12770
		Total time spent by all reduce tasks (ms)=4391
		Total vcore-milliseconds taken by all map tasks=12770
		Total vcore-milliseconds taken by all reduce tasks=4391
		Total megabyte-milliseconds taken by all map tasks=52305920
		Total megabyte-milliseconds taken by all reduce tasks=17985536
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1145
		CPU time spent (ms)=9290
		Physical memory (bytes) snapshot=1836945408
		Virtual memory (bytes) snapshot=15814119424
		Total committed heap usage (bytes)=1728053248
		Peak Map Physical memory (bytes)=575545344
		Peak Map Virtual memory (bytes)=3950465024
		Peak Reduce Physical memory (bytes)=337534976
		Peak Reduce Virtual memory (bytes)=3970068480
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220201 13:05:20.191" endtime="20220201 13:05:20.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:05:20.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:05:20.192" endtime="20220201 13:05:20.193"/>
</kw>
<status status="PASS" starttime="20220201 13:04:40.651" endtime="20220201 13:05:20.193"/>
</kw>
<msg timestamp="20220201 13:05:20.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:04:40.650" endtime="20220201 13:05:20.193"/>
</kw>
<msg timestamp="20220201 13:05:20.194" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:04:40.649" endtime="20220201 13:05:20.194"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:05:20.194" endtime="20220201 13:05:20.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:05:20.195" endtime="20220201 13:05:20.195"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:04:40.613" endtime="20220201 13:05:20.196"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220201 13:03:54.658" endtime="20220201 13:05:20.197"/>
</suite>
<suite id="s1-s2-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:05:25.673" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:05:25.672" endtime="20220201 13:05:25.673"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:05:25.674" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:05:25.673" endtime="20220201 13:05:25.674"/>
</kw>
<status status="PASS" starttime="20220201 13:05:25.672" endtime="20220201 13:05:25.674"/>
</kw>
<msg timestamp="20220201 13:05:25.675" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:05:25.671" endtime="20220201 13:05:25.675"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:05:25.675" endtime="20220201 13:05:25.676"/>
</kw>
<msg timestamp="20220201 13:05:25.676" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:05:25.675" endtime="20220201 13:05:25.676"/>
</kw>
<status status="PASS" starttime="20220201 13:05:25.670" endtime="20220201 13:05:25.677"/>
</kw>
<msg timestamp="20220201 13:05:25.677" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:05:25.670" endtime="20220201 13:05:25.677"/>
</kw>
<msg timestamp="20220201 13:05:25.677" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:05:25.668" endtime="20220201 13:05:25.677"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:05:25.678" level="INFO">${random} = 90769</msg>
<status status="PASS" starttime="20220201 13:05:25.677" endtime="20220201 13:05:25.678"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:05:25.695" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-90769 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:05:30.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:05:30.279" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:05:25.680" endtime="20220201 13:05:30.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:05:30.280" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:05:26 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:05:28 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-01 13:05:28 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-01 13:05:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:05:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:05:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220201 13:05:30.279" endtime="20220201 13:05:30.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:05:30.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:05:30.280" endtime="20220201 13:05:30.281"/>
</kw>
<status status="PASS" starttime="20220201 13:05:25.679" endtime="20220201 13:05:30.281"/>
</kw>
<msg timestamp="20220201 13:05:30.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:05:25.679" endtime="20220201 13:05:30.282"/>
</kw>
<msg timestamp="20220201 13:05:30.282" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:05:25.678" endtime="20220201 13:05:30.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:05:30.289" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:05:32.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:05:32.552" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:05:30.286" endtime="20220201 13:05:32.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:05:32.553" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:05:31 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:03 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2022-02-01 13:03 ofs://om/volume1/bucket1/ozone-51642
-rw-rw-rw-   3 hadoop hadoop      21867 2022-02-01 13:05 ofs://om/volume1/bucket1/ozone-90769
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:03 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:04 ofs://om/volume1/bucket1/wordcount-hIf3DWEm.txt</msg>
<status status="PASS" starttime="20220201 13:05:32.552" endtime="20220201 13:05:32.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:05:32.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:05:32.554" endtime="20220201 13:05:32.554"/>
</kw>
<status status="PASS" starttime="20220201 13:05:30.285" endtime="20220201 13:05:32.555"/>
</kw>
<msg timestamp="20220201 13:05:32.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:05:30.285" endtime="20220201 13:05:32.555"/>
</kw>
<msg timestamp="20220201 13:05:32.555" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:05:30.282" endtime="20220201 13:05:32.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:05:32.555" endtime="20220201 13:05:32.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:05:32.561" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-90769 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:05:36.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:05:36.400" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:05:32.559" endtime="20220201 13:05:36.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:05:36.402" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:05:33 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:05:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-01 13:05:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-01 13:05:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:05:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220201 13:05:36.401" endtime="20220201 13:05:36.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:05:36.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:05:36.403" endtime="20220201 13:05:36.404"/>
</kw>
<status status="PASS" starttime="20220201 13:05:32.558" endtime="20220201 13:05:36.404"/>
</kw>
<msg timestamp="20220201 13:05:36.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:05:32.558" endtime="20220201 13:05:36.405"/>
</kw>
<msg timestamp="20220201 13:05:36.407" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:05:32.556" endtime="20220201 13:05:36.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:05:36.407" endtime="20220201 13:05:36.407"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220201 13:05:25.668" endtime="20220201 13:05:36.408"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220201 13:05:25.595" endtime="20220201 13:05:36.410"/>
</suite>
<suite id="s1-s2-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:05:41.759" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:05:41.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:05:41.767" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:05:41.754" endtime="20220201 13:05:41.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:05:41.769" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:05:41.768" endtime="20220201 13:05:41.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:05:41.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:05:41.769" endtime="20220201 13:05:41.770"/>
</kw>
<status status="PASS" starttime="20220201 13:05:41.753" endtime="20220201 13:05:41.771"/>
</kw>
<msg timestamp="20220201 13:05:41.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:05:41.753" endtime="20220201 13:05:41.771"/>
</kw>
<msg timestamp="20220201 13:05:41.771" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:05:41.752" endtime="20220201 13:05:41.771"/>
</kw>
<msg timestamp="20220201 13:05:41.771" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:05:41.752" endtime="20220201 13:05:41.772"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:05:41.777" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:05:41.776" endtime="20220201 13:05:41.777"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:05:41.778" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:05:41.777" endtime="20220201 13:05:41.778"/>
</kw>
<status status="PASS" starttime="20220201 13:05:41.776" endtime="20220201 13:05:41.779"/>
</kw>
<msg timestamp="20220201 13:05:41.779" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:05:41.775" endtime="20220201 13:05:41.779"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:05:41.779" endtime="20220201 13:05:41.780"/>
</kw>
<msg timestamp="20220201 13:05:41.780" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:05:41.779" endtime="20220201 13:05:41.780"/>
</kw>
<status status="PASS" starttime="20220201 13:05:41.774" endtime="20220201 13:05:41.781"/>
</kw>
<msg timestamp="20220201 13:05:41.781" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:05:41.774" endtime="20220201 13:05:41.781"/>
</kw>
<msg timestamp="20220201 13:05:41.781" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:05:41.772" endtime="20220201 13:05:41.781"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:05:41.785" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:06:21.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:06:21.399" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:05:41.783" endtime="20220201 13:06:21.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:06:21.401" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-01 13:05:42 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:05:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-01 13:05:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-01 13:05:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:05:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:05:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-01 13:05:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-02-01 13:05:45 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:05:45 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:05:45 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:05:46 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-01 13:05:46 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:05:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643720533288_0003
2022-02-01 13:05:46 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:05:46 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:05:47 INFO  Configuration:2752 - resource-types.xml not found
2022-02-01 13:05:47 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-02-01 13:05:47 INFO  YarnClientImpl:324 - Submitted application application_1643720533288_0003
2022-02-01 13:05:47 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1643720533288_0003/
2022-02-01 13:05:47 INFO  Job:1619 - Running job: job_1643720533288_0003
2022-02-01 13:05:55 INFO  Job:1640 - Job job_1643720533288_0003 running in uber mode : false
2022-02-01 13:05:55 INFO  Job:1647 -  map 0% reduce 0%
2022-02-01 13:06:02 INFO  Job:1647 -  map 33% reduce 0%
2022-02-01 13:06:08 INFO  Job:1647 -  map 67% reduce 0%
2022-02-01 13:06:14 INFO  Job:1647 -  map 100% reduce 0%
2022-02-01 13:06:19 INFO  Job:1647 -  map 100% reduce 100%
2022-02-01 13:06:20 INFO  Job:1658 - Job job_1643720533288_0003 completed successfully
2022-02-01 13:06:20 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=867429
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51560
		Total time spent by all reduces in occupied slots (ms)=18808
		Total time spent by all map tasks (ms)=12890
		Total time spent by all reduce tasks (ms)=4702
		Total vcore-milliseconds taken by all map tasks=12890
		Total vcore-milliseconds taken by all reduce tasks=4702
		Total megabyte-milliseconds taken by all map tasks=52797440
		Total megabyte-milliseconds taken by all reduce tasks=19259392
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1058
		CPU time spent (ms)=10240
		Physical memory (bytes) snapshot=1872564224
		Virtual memory (bytes) snapshot=15815888896
		Total committed heap usage (bytes)=1812987904
		Peak Map Physical memory (bytes)=572235776
		Peak Map Virtual memory (bytes)=3947462656
		Peak Reduce Physical memory (bytes)=347729920
		Peak Reduce Virtual memory (bytes)=3975569408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.123 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220201 13:06:21.400" endtime="20220201 13:06:21.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:06:21.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:06:21.401" endtime="20220201 13:06:21.402"/>
</kw>
<status status="PASS" starttime="20220201 13:05:41.782" endtime="20220201 13:06:21.402"/>
</kw>
<msg timestamp="20220201 13:06:21.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:05:41.782" endtime="20220201 13:06:21.402"/>
</kw>
<msg timestamp="20220201 13:06:21.403" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:05:41.781" endtime="20220201 13:06:21.403"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:06:21.403" endtime="20220201 13:06:21.404"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:05:41.751" endtime="20220201 13:06:21.404"/>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:06:21.411" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:06:21.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:06:21.417" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:06:21.408" endtime="20220201 13:06:21.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:06:21.418" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:06:21.418" endtime="20220201 13:06:21.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:06:21.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:06:21.419" endtime="20220201 13:06:21.419"/>
</kw>
<status status="PASS" starttime="20220201 13:06:21.407" endtime="20220201 13:06:21.420"/>
</kw>
<msg timestamp="20220201 13:06:21.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:06:21.407" endtime="20220201 13:06:21.420"/>
</kw>
<msg timestamp="20220201 13:06:21.420" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:06:21.406" endtime="20220201 13:06:21.420"/>
</kw>
<msg timestamp="20220201 13:06:21.421" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220201 13:06:21.406" endtime="20220201 13:06:21.421"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:06:21.421" level="INFO">${random} = 4sm5YLZo</msg>
<status status="PASS" starttime="20220201 13:06:21.421" endtime="20220201 13:06:21.421"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:06:21.426" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:06:21.426" endtime="20220201 13:06:21.426"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:06:21.427" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:06:21.427" endtime="20220201 13:06:21.427"/>
</kw>
<status status="PASS" starttime="20220201 13:06:21.425" endtime="20220201 13:06:21.428"/>
</kw>
<msg timestamp="20220201 13:06:21.428" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:06:21.424" endtime="20220201 13:06:21.428"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:06:21.429" endtime="20220201 13:06:21.429"/>
</kw>
<msg timestamp="20220201 13:06:21.429" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:06:21.428" endtime="20220201 13:06:21.429"/>
</kw>
<status status="PASS" starttime="20220201 13:06:21.423" endtime="20220201 13:06:21.430"/>
</kw>
<msg timestamp="20220201 13:06:21.430" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:06:21.423" endtime="20220201 13:06:21.430"/>
</kw>
<msg timestamp="20220201 13:06:21.430" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:06:21.422" endtime="20220201 13:06:21.430"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:06:21.434" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:06:21.434" endtime="20220201 13:06:21.434"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:06:21.435" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:06:21.434" endtime="20220201 13:06:21.435"/>
</kw>
<status status="PASS" starttime="20220201 13:06:21.433" endtime="20220201 13:06:21.435"/>
</kw>
<msg timestamp="20220201 13:06:21.435" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:06:21.432" endtime="20220201 13:06:21.436"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:06:21.437" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220201 13:06:21.437" endtime="20220201 13:06:21.437"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:06:21.438" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220201 13:06:21.438" endtime="20220201 13:06:21.438"/>
</kw>
<status status="PASS" starttime="20220201 13:06:21.436" endtime="20220201 13:06:21.439"/>
</kw>
<msg timestamp="20220201 13:06:21.439" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220201 13:06:21.436" endtime="20220201 13:06:21.439"/>
</kw>
<status status="PASS" starttime="20220201 13:06:21.432" endtime="20220201 13:06:21.439"/>
</kw>
<msg timestamp="20220201 13:06:21.439" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220201 13:06:21.431" endtime="20220201 13:06:21.439"/>
</kw>
<msg timestamp="20220201 13:06:21.440" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220201 13:06:21.430" endtime="20220201 13:06:21.440"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:06:21.444" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:06:21.443" endtime="20220201 13:06:21.444"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:06:21.445" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:06:21.444" endtime="20220201 13:06:21.445"/>
</kw>
<status status="PASS" starttime="20220201 13:06:21.443" endtime="20220201 13:06:21.445"/>
</kw>
<msg timestamp="20220201 13:06:21.445" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:06:21.442" endtime="20220201 13:06:21.445"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:06:21.447" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220201 13:06:21.447" endtime="20220201 13:06:21.447"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:06:21.448" level="INFO">${result} = /wordcount-4sm5YLZo.txt</msg>
<status status="PASS" starttime="20220201 13:06:21.447" endtime="20220201 13:06:21.448"/>
</kw>
<status status="PASS" starttime="20220201 13:06:21.446" endtime="20220201 13:06:21.448"/>
</kw>
<msg timestamp="20220201 13:06:21.448" level="INFO">${path_with_leading} = /wordcount-4sm5YLZo.txt</msg>
<status status="PASS" starttime="20220201 13:06:21.445" endtime="20220201 13:06:21.448"/>
</kw>
<status status="PASS" starttime="20220201 13:06:21.441" endtime="20220201 13:06:21.449"/>
</kw>
<msg timestamp="20220201 13:06:21.449" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-4sm5YLZo.txt</msg>
<status status="PASS" starttime="20220201 13:06:21.441" endtime="20220201 13:06:21.449"/>
</kw>
<msg timestamp="20220201 13:06:21.449" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-4sm5YLZo.txt</msg>
<status status="PASS" starttime="20220201 13:06:21.440" endtime="20220201 13:06:21.449"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:06:21.454" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-4sm5YLZo.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:07:02.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:07:02.045" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:06:21.451" endtime="20220201 13:07:02.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:07:02.047" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:06:22 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:06:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.8:8032
2022-02-01 13:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:06:23 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:06:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:06:24 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-01 13:06:24 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-01 13:06:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:06:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:06:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-01 13:06:25 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-01 13:06:26 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:06:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643720533288_0004
2022-02-01 13:06:26 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:06:26 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:06:26 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-01 13:06:26 INFO  Configuration:2752 - resource-types.xml not found
2022-02-01 13:06:26 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-02-01 13:06:26 INFO  YarnClientImpl:324 - Submitted application application_1643720533288_0004
2022-02-01 13:06:26 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1643720533288_0004/
2022-02-01 13:06:26 INFO  Job:1619 - Running job: job_1643720533288_0004
2022-02-01 13:06:35 INFO  Job:1640 - Job job_1643720533288_0004 running in uber mode : false
2022-02-01 13:06:35 INFO  Job:1647 -  map 0% reduce 0%
2022-02-01 13:06:42 INFO  Job:1647 -  map 33% reduce 0%
2022-02-01 13:06:49 INFO  Job:1647 -  map 67% reduce 0%
2022-02-01 13:06:55 INFO  Job:1647 -  map 100% reduce 0%
2022-02-01 13:07:00 INFO  Job:1647 -  map 100% reduce 100%
2022-02-01 13:07:01 INFO  Job:1658 - Job job_1643720533288_0004 completed successfully
2022-02-01 13:07:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=930315
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50920
		Total time spent by all reduces in occupied slots (ms)=18096
		Total time spent by all map tasks (ms)=12730
		Total time spent by all reduce tasks (ms)=4524
		Total vcore-milliseconds taken by all map tasks=12730
		Total vcore-milliseconds taken by all reduce tasks=4524
		Total megabyte-milliseconds taken by all map tasks=52142080
		Total megabyte-milliseconds taken by all reduce tasks=18530304
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1083
		CPU time spent (ms)=10250
		Physical memory (bytes) snapshot=1884303360
		Virtual memory (bytes) snapshot=15833051136
		Total committed heap usage (bytes)=1821376512
		Peak Map Physical memory (bytes)=573054976
		Peak Map Virtual memory (bytes)=3954446336
		Peak Reduce Physical memory (bytes)=341172224
		Peak Reduce Virtual memory (bytes)=3972976640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220201 13:07:02.046" endtime="20220201 13:07:02.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:07:02.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:07:02.047" endtime="20220201 13:07:02.048"/>
</kw>
<status status="PASS" starttime="20220201 13:06:21.451" endtime="20220201 13:07:02.049"/>
</kw>
<msg timestamp="20220201 13:07:02.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:06:21.450" endtime="20220201 13:07:02.049"/>
</kw>
<msg timestamp="20220201 13:07:02.050" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:06:21.449" endtime="20220201 13:07:02.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:07:02.050" endtime="20220201 13:07:02.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:07:02.050" endtime="20220201 13:07:02.051"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:06:21.405" endtime="20220201 13:07:02.051"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220201 13:05:41.682" endtime="20220201 13:07:02.054"/>
</suite>
<suite id="s1-s2-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:02:52.254" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:02:57.609" level="INFO">${rc} = 255</msg>
<msg timestamp="20220201 13:02:57.609" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:02:52.245" endtime="20220201 13:02:57.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:02:57.611" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:02:57.610" endtime="20220201 13:02:57.611"/>
</kw>
<msg timestamp="20220201 13:02:57.612" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:02:52.244" endtime="20220201 13:02:57.612"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:02:57.618" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:00.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:00.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:02:57.615" endtime="20220201 13:03:00.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:00.837" level="INFO"/>
<status status="PASS" starttime="20220201 13:03:00.836" endtime="20220201 13:03:00.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:00.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:00.837" endtime="20220201 13:03:00.838"/>
</kw>
<status status="PASS" starttime="20220201 13:02:57.614" endtime="20220201 13:03:00.838"/>
</kw>
<msg timestamp="20220201 13:03:00.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:02:57.614" endtime="20220201 13:03:00.840"/>
</kw>
<msg timestamp="20220201 13:03:00.840" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220201 13:02:57.613" endtime="20220201 13:03:00.840"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:03:00.841" endtime="20220201 13:03:00.841"/>
</kw>
<status status="PASS" starttime="20220201 13:02:57.612" endtime="20220201 13:03:00.841"/>
</kw>
<status status="PASS" starttime="20220201 13:02:57.612" endtime="20220201 13:03:00.841"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:00.847" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:03.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:03.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:03:00.845" endtime="20220201 13:03:03.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:03.751" level="INFO"/>
<status status="PASS" starttime="20220201 13:03:03.750" endtime="20220201 13:03:03.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:03.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:03.751" endtime="20220201 13:03:03.752"/>
</kw>
<status status="PASS" starttime="20220201 13:03:00.844" endtime="20220201 13:03:03.752"/>
</kw>
<msg timestamp="20220201 13:03:03.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:00.844" endtime="20220201 13:03:03.753"/>
</kw>
<status status="PASS" starttime="20220201 13:03:00.843" endtime="20220201 13:03:03.753"/>
</kw>
<status status="PASS" starttime="20220201 13:03:00.842" endtime="20220201 13:03:03.754"/>
</kw>
<status status="PASS" starttime="20220201 13:03:00.842" endtime="20220201 13:03:03.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220201 13:03:03.754" endtime="20220201 13:03:03.755"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:03.759" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:06.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:06.895" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:03...</msg>
<status status="PASS" starttime="20220201 13:03:03.756" endtime="20220201 13:03:06.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:06.896" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:03:03.724Z",
  "modificationTime" : "2022-02-01T13:03:03.724Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220201 13:03:06.896" endtime="20220201 13:03:06.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:06.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:06.897" endtime="20220201 13:03:06.897"/>
</kw>
<status status="PASS" starttime="20220201 13:03:03.756" endtime="20220201 13:03:06.898"/>
</kw>
<msg timestamp="20220201 13:03:06.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:03.756" endtime="20220201 13:03:06.898"/>
</kw>
<msg timestamp="20220201 13:03:06.899" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:03...</msg>
<status status="PASS" starttime="20220201 13:03:03.755" endtime="20220201 13:03:06.899"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:03:06.899" endtime="20220201 13:03:06.900"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:03:06.905" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:03:06.904" endtime="20220201 13:03:06.905"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:03:06.906" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:03:06.905" endtime="20220201 13:03:06.906"/>
</kw>
<status status="PASS" starttime="20220201 13:03:06.904" endtime="20220201 13:03:06.906"/>
</kw>
<msg timestamp="20220201 13:03:06.906" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:03:06.903" endtime="20220201 13:03:06.907"/>
</kw>
<status status="PASS" starttime="20220201 13:03:06.901" endtime="20220201 13:03:06.907"/>
</kw>
<msg timestamp="20220201 13:03:06.907" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 13:03:06.901" endtime="20220201 13:03:06.907"/>
</kw>
<msg timestamp="20220201 13:03:06.907" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 13:03:06.900" endtime="20220201 13:03:06.907"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:06.911" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:09.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:09.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:03:06.909" endtime="20220201 13:03:09.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:09.886" level="INFO"/>
<status status="PASS" starttime="20220201 13:03:09.886" endtime="20220201 13:03:09.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:09.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:09.887" endtime="20220201 13:03:09.887"/>
</kw>
<status status="PASS" starttime="20220201 13:03:06.909" endtime="20220201 13:03:09.888"/>
</kw>
<msg timestamp="20220201 13:03:09.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:06.908" endtime="20220201 13:03:09.888"/>
</kw>
<status status="PASS" starttime="20220201 13:03:06.908" endtime="20220201 13:03:09.889"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:09.895" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:16.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:16.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:03:09.892" endtime="20220201 13:03:16.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:16.046" level="INFO"/>
<status status="PASS" starttime="20220201 13:03:16.045" endtime="20220201 13:03:16.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:16.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:16.046" endtime="20220201 13:03:16.047"/>
</kw>
<status status="PASS" starttime="20220201 13:03:09.892" endtime="20220201 13:03:16.048"/>
</kw>
<msg timestamp="20220201 13:03:16.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:09.891" endtime="20220201 13:03:16.048"/>
</kw>
<status status="PASS" starttime="20220201 13:03:09.889" endtime="20220201 13:03:16.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:16.053" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:21.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:21.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:03:16.051" endtime="20220201 13:03:21.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:21.712" level="INFO"/>
<status status="PASS" starttime="20220201 13:03:21.711" endtime="20220201 13:03:21.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:21.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:21.713" endtime="20220201 13:03:21.713"/>
</kw>
<status status="PASS" starttime="20220201 13:03:16.050" endtime="20220201 13:03:21.714"/>
</kw>
<msg timestamp="20220201 13:03:21.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:16.050" endtime="20220201 13:03:21.714"/>
</kw>
<status status="PASS" starttime="20220201 13:03:16.049" endtime="20220201 13:03:21.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:21.718" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:27.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:27.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:03:21.716" endtime="20220201 13:03:27.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:27.138" level="INFO"/>
<status status="PASS" starttime="20220201 13:03:27.137" endtime="20220201 13:03:27.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:27.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:27.138" endtime="20220201 13:03:27.139"/>
</kw>
<status status="PASS" starttime="20220201 13:03:21.715" endtime="20220201 13:03:27.139"/>
</kw>
<msg timestamp="20220201 13:03:27.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:21.715" endtime="20220201 13:03:27.140"/>
</kw>
<status status="PASS" starttime="20220201 13:03:21.715" endtime="20220201 13:03:27.140"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 13:02:52.242" endtime="20220201 13:03:27.141"/>
</test>
<test id="s1-s2-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:03:27.148" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:03:27.148" endtime="20220201 13:03:27.148"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:03:27.149" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:03:27.149" endtime="20220201 13:03:27.149"/>
</kw>
<status status="PASS" starttime="20220201 13:03:27.147" endtime="20220201 13:03:27.150"/>
</kw>
<msg timestamp="20220201 13:03:27.150" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:03:27.146" endtime="20220201 13:03:27.150"/>
</kw>
<status status="PASS" starttime="20220201 13:03:27.145" endtime="20220201 13:03:27.150"/>
</kw>
<msg timestamp="20220201 13:03:27.150" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:03:27.144" endtime="20220201 13:03:27.151"/>
</kw>
<msg timestamp="20220201 13:03:27.151" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:03:27.143" endtime="20220201 13:03:27.151"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:27.155" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:30.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:30.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:03:27.153" endtime="20220201 13:03:30.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:30.015" level="INFO"/>
<status status="PASS" starttime="20220201 13:03:30.014" endtime="20220201 13:03:30.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:30.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:30.015" endtime="20220201 13:03:30.016"/>
</kw>
<status status="PASS" starttime="20220201 13:03:27.152" endtime="20220201 13:03:30.016"/>
</kw>
<msg timestamp="20220201 13:03:30.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:27.152" endtime="20220201 13:03:30.017"/>
</kw>
<status status="PASS" starttime="20220201 13:03:27.151" endtime="20220201 13:03:30.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:03:30.021" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:03:32.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:03:32.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:03:30.019" endtime="20220201 13:03:32.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:03:32.965" level="INFO"/>
<status status="PASS" starttime="20220201 13:03:32.964" endtime="20220201 13:03:32.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:03:32.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:03:32.967" endtime="20220201 13:03:32.968"/>
</kw>
<status status="PASS" starttime="20220201 13:03:30.019" endtime="20220201 13:03:32.970"/>
</kw>
<msg timestamp="20220201 13:03:32.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:03:30.018" endtime="20220201 13:03:32.971"/>
</kw>
<status status="PASS" starttime="20220201 13:03:30.017" endtime="20220201 13:03:32.971"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 13:03:27.141" endtime="20220201 13:03:32.972"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220201 13:02:52.164" endtime="20220201 13:03:32.974"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="228643"/>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite id="s1-s3-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:09:44.514" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:09:44.513" endtime="20220201 13:09:44.514"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:09:44.515" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:09:44.514" endtime="20220201 13:09:44.515"/>
</kw>
<status status="PASS" starttime="20220201 13:09:44.513" endtime="20220201 13:09:44.515"/>
</kw>
<msg timestamp="20220201 13:09:44.515" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:09:44.512" endtime="20220201 13:09:44.515"/>
</kw>
<status status="PASS" starttime="20220201 13:09:44.511" endtime="20220201 13:09:44.516"/>
</kw>
<msg timestamp="20220201 13:09:44.516" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:09:44.511" endtime="20220201 13:09:44.516"/>
</kw>
<msg timestamp="20220201 13:09:44.516" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:09:44.509" endtime="20220201 13:09:44.516"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:09:44.517" level="INFO">${random} = 40010</msg>
<status status="PASS" starttime="20220201 13:09:44.516" endtime="20220201 13:09:44.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:09:44.524" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-40010 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:09:49.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:09:49.562" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:09:44.519" endtime="20220201 13:09:49.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:09:49.563" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:09:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:09:47 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:09:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:09:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220201 13:09:49.563" endtime="20220201 13:09:49.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:09:49.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:09:49.564" endtime="20220201 13:09:49.564"/>
</kw>
<status status="PASS" starttime="20220201 13:09:44.518" endtime="20220201 13:09:49.565"/>
</kw>
<msg timestamp="20220201 13:09:49.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:09:44.518" endtime="20220201 13:09:49.565"/>
</kw>
<msg timestamp="20220201 13:09:49.565" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:09:44.517" endtime="20220201 13:09:49.566"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:09:49.570" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:09:51.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:09:51.855" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:09:49.568" endtime="20220201 13:09:51.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:09:51.856" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-02-01 13:09 o3fs://bucket1.volume1.om/ozone-40010
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:09 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:09:51.856" endtime="20220201 13:09:51.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:09:51.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:09:51.857" endtime="20220201 13:09:51.857"/>
</kw>
<status status="PASS" starttime="20220201 13:09:49.567" endtime="20220201 13:09:51.858"/>
</kw>
<msg timestamp="20220201 13:09:51.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:09:49.567" endtime="20220201 13:09:51.858"/>
</kw>
<msg timestamp="20220201 13:09:51.858" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:09:49.566" endtime="20220201 13:09:51.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:09:51.859" endtime="20220201 13:09:51.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:09:51.864" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-40010 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:09:55.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:09:55.798" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:09:51.862" endtime="20220201 13:09:55.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:09:55.799" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:09:54 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:09:54 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:09:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220201 13:09:55.798" endtime="20220201 13:09:55.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:09:55.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:09:55.800" endtime="20220201 13:09:55.801"/>
</kw>
<status status="PASS" starttime="20220201 13:09:51.861" endtime="20220201 13:09:55.801"/>
</kw>
<msg timestamp="20220201 13:09:55.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:09:51.860" endtime="20220201 13:09:55.802"/>
</kw>
<msg timestamp="20220201 13:09:55.803" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:09:51.859" endtime="20220201 13:09:55.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:09:55.804" endtime="20220201 13:09:55.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220201 13:09:44.508" endtime="20220201 13:09:55.804"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220201 13:09:44.433" endtime="20220201 13:09:55.807"/>
</suite>
<suite id="s1-s3-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:10:01.316" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:10:01.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:10:01.322" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:10:01.312" endtime="20220201 13:10:01.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:10:01.324" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:10:01.323" endtime="20220201 13:10:01.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:10:01.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:10:01.324" endtime="20220201 13:10:01.325"/>
</kw>
<status status="PASS" starttime="20220201 13:10:01.311" endtime="20220201 13:10:01.325"/>
</kw>
<msg timestamp="20220201 13:10:01.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:10:01.311" endtime="20220201 13:10:01.325"/>
</kw>
<msg timestamp="20220201 13:10:01.326" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:10:01.311" endtime="20220201 13:10:01.327"/>
</kw>
<msg timestamp="20220201 13:10:01.327" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:10:01.310" endtime="20220201 13:10:01.327"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:10:01.332" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:10:01.331" endtime="20220201 13:10:01.332"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:10:01.333" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:10:01.332" endtime="20220201 13:10:01.333"/>
</kw>
<status status="PASS" starttime="20220201 13:10:01.331" endtime="20220201 13:10:01.333"/>
</kw>
<msg timestamp="20220201 13:10:01.333" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:10:01.330" endtime="20220201 13:10:01.333"/>
</kw>
<status status="PASS" starttime="20220201 13:10:01.329" endtime="20220201 13:10:01.334"/>
</kw>
<msg timestamp="20220201 13:10:01.334" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:10:01.328" endtime="20220201 13:10:01.334"/>
</kw>
<msg timestamp="20220201 13:10:01.334" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:10:01.327" endtime="20220201 13:10:01.334"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:10:01.338" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:10:47.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:10:47.005" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:10:01.336" endtime="20220201 13:10:47.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:10:47.007" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-01 13:10:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:10:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:10:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:10:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-01 13:10:05 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.5:8032
2022-02-01 13:10:06 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-01 13:10:06 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:10:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643720881727_0001
2022-02-01 13:10:06 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:10:07 INFO  Configuration:2795 - resource-types.xml not found
2022-02-01 13:10:07 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-02-01 13:10:07 INFO  YarnClientImpl:329 - Submitted application application_1643720881727_0001
2022-02-01 13:10:07 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1643720881727_0001/
2022-02-01 13:10:07 INFO  Job:1614 - Running job: job_1643720881727_0001
2022-02-01 13:10:20 INFO  Job:1635 - Job job_1643720881727_0001 running in uber mode : false
2022-02-01 13:10:20 INFO  Job:1642 -  map 0% reduce 0%
2022-02-01 13:10:28 INFO  Job:1642 -  map 33% reduce 0%
2022-02-01 13:10:34 INFO  Job:1642 -  map 67% reduce 0%
2022-02-01 13:10:40 INFO  Job:1642 -  map 100% reduce 0%
2022-02-01 13:10:45 INFO  Job:1642 -  map 100% reduce 100%
2022-02-01 13:10:46 INFO  Job:1653 - Job job_1643720881727_0001 completed successfully
2022-02-01 13:10:46 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=943033
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50988
		Total time spent by all reduces in occupied slots (ms)=19016
		Total time spent by all map tasks (ms)=12747
		Total time spent by all reduce tasks (ms)=4754
		Total vcore-milliseconds taken by all map tasks=12747
		Total vcore-milliseconds taken by all reduce tasks=4754
		Total megabyte-milliseconds taken by all map tasks=52211712
		Total megabyte-milliseconds taken by all reduce tasks=19472384
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=994
		CPU time spent (ms)=9240
		Physical memory (bytes) snapshot=1636134912
		Virtual memory (bytes) snapshot=15830626304
		Total committed heap usage (bytes)=1445462016
		Peak Map Physical memory (bytes)=561758208
		Peak Map Virtual memory (bytes)=3953745920
		Peak Reduce Physical memory (bytes)=343334912
		Peak Reduce Virtual memory (bytes)=3972919296
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.698 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220201 13:10:47.006" endtime="20220201 13:10:47.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:10:47.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:10:47.007" endtime="20220201 13:10:47.008"/>
</kw>
<status status="PASS" starttime="20220201 13:10:01.335" endtime="20220201 13:10:47.008"/>
</kw>
<msg timestamp="20220201 13:10:47.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:10:01.335" endtime="20220201 13:10:47.009"/>
</kw>
<msg timestamp="20220201 13:10:47.009" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:10:01.334" endtime="20220201 13:10:47.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:10:47.009" endtime="20220201 13:10:47.010"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:10:01.309" endtime="20220201 13:10:47.010"/>
</test>
<test id="s1-s3-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:10:47.017" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:10:47.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:10:47.023" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:10:47.015" endtime="20220201 13:10:47.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:10:47.025" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:10:47.024" endtime="20220201 13:10:47.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:10:47.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:10:47.025" endtime="20220201 13:10:47.026"/>
</kw>
<status status="PASS" starttime="20220201 13:10:47.014" endtime="20220201 13:10:47.026"/>
</kw>
<msg timestamp="20220201 13:10:47.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:10:47.014" endtime="20220201 13:10:47.026"/>
</kw>
<msg timestamp="20220201 13:10:47.027" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:10:47.013" endtime="20220201 13:10:47.027"/>
</kw>
<msg timestamp="20220201 13:10:47.027" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:10:47.012" endtime="20220201 13:10:47.027"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:10:47.028" level="INFO">${random} = JDRvyW8P</msg>
<status status="PASS" starttime="20220201 13:10:47.027" endtime="20220201 13:10:47.028"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:10:47.033" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:10:47.032" endtime="20220201 13:10:47.033"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:10:47.033" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:10:47.033" endtime="20220201 13:10:47.034"/>
</kw>
<status status="PASS" starttime="20220201 13:10:47.031" endtime="20220201 13:10:47.034"/>
</kw>
<msg timestamp="20220201 13:10:47.034" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:10:47.031" endtime="20220201 13:10:47.034"/>
</kw>
<status status="PASS" starttime="20220201 13:10:47.030" endtime="20220201 13:10:47.035"/>
</kw>
<msg timestamp="20220201 13:10:47.035" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:10:47.029" endtime="20220201 13:10:47.035"/>
</kw>
<msg timestamp="20220201 13:10:47.035" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:10:47.028" endtime="20220201 13:10:47.035"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:10:47.040" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:10:47.039" endtime="20220201 13:10:47.040"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:10:47.040" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:10:47.040" endtime="20220201 13:10:47.040"/>
</kw>
<status status="PASS" starttime="20220201 13:10:47.038" endtime="20220201 13:10:47.041"/>
</kw>
<msg timestamp="20220201 13:10:47.041" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:10:47.038" endtime="20220201 13:10:47.041"/>
</kw>
<status status="PASS" starttime="20220201 13:10:47.037" endtime="20220201 13:10:47.041"/>
</kw>
<msg timestamp="20220201 13:10:47.041" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220201 13:10:47.036" endtime="20220201 13:10:47.041"/>
</kw>
<msg timestamp="20220201 13:10:47.042" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220201 13:10:47.035" endtime="20220201 13:10:47.042"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:10:47.046" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:10:47.046" endtime="20220201 13:10:47.046"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:10:47.047" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:10:47.046" endtime="20220201 13:10:47.047"/>
</kw>
<status status="PASS" starttime="20220201 13:10:47.045" endtime="20220201 13:10:47.047"/>
</kw>
<msg timestamp="20220201 13:10:47.048" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:10:47.044" endtime="20220201 13:10:47.048"/>
</kw>
<status status="PASS" starttime="20220201 13:10:47.043" endtime="20220201 13:10:47.048"/>
</kw>
<msg timestamp="20220201 13:10:47.048" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-JDRvyW8P.txt</msg>
<status status="PASS" starttime="20220201 13:10:47.043" endtime="20220201 13:10:47.048"/>
</kw>
<msg timestamp="20220201 13:10:47.048" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-JDRvyW8P.txt</msg>
<status status="PASS" starttime="20220201 13:10:47.042" endtime="20220201 13:10:47.049"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:10:47.053" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-JDRvyW8P.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:11:29.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:11:29.521" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:10:47.050" endtime="20220201 13:11:29.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:11:29.523" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:10:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.5:8032
2022-02-01 13:10:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:10:49 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:10:49 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:10:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:10:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-01 13:10:51 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-01 13:10:51 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:10:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643720881727_0002
2022-02-01 13:10:52 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:10:52 INFO  Configuration:2795 - resource-types.xml not found
2022-02-01 13:10:52 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-02-01 13:10:52 INFO  YarnClientImpl:329 - Submitted application application_1643720881727_0002
2022-02-01 13:10:52 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1643720881727_0002/
2022-02-01 13:10:52 INFO  Job:1614 - Running job: job_1643720881727_0002
2022-02-01 13:11:01 INFO  Job:1635 - Job job_1643720881727_0002 running in uber mode : false
2022-02-01 13:11:01 INFO  Job:1642 -  map 0% reduce 0%
2022-02-01 13:11:09 INFO  Job:1642 -  map 33% reduce 0%
2022-02-01 13:11:16 INFO  Job:1642 -  map 67% reduce 0%
2022-02-01 13:11:22 INFO  Job:1642 -  map 100% reduce 0%
2022-02-01 13:11:27 INFO  Job:1642 -  map 100% reduce 100%
2022-02-01 13:11:29 INFO  Job:1653 - Job job_1643720881727_0002 completed successfully
2022-02-01 13:11:29 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1005799
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52460
		Total time spent by all reduces in occupied slots (ms)=18412
		Total time spent by all map tasks (ms)=13115
		Total time spent by all reduce tasks (ms)=4603
		Total vcore-milliseconds taken by all map tasks=13115
		Total vcore-milliseconds taken by all reduce tasks=4603
		Total megabyte-milliseconds taken by all map tasks=53719040
		Total megabyte-milliseconds taken by all reduce tasks=18853888
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1103
		CPU time spent (ms)=10110
		Physical memory (bytes) snapshot=1809252352
		Virtual memory (bytes) snapshot=15848370176
		Total committed heap usage (bytes)=1693450240
		Peak Map Physical memory (bytes)=569475072
		Peak Map Virtual memory (bytes)=3960414208
		Peak Reduce Physical memory (bytes)=330108928
		Peak Reduce Virtual memory (bytes)=3976159232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220201 13:11:29.522" endtime="20220201 13:11:29.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:11:29.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:11:29.524" endtime="20220201 13:11:29.525"/>
</kw>
<status status="PASS" starttime="20220201 13:10:47.050" endtime="20220201 13:11:29.525"/>
</kw>
<msg timestamp="20220201 13:11:29.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:10:47.049" endtime="20220201 13:11:29.525"/>
</kw>
<msg timestamp="20220201 13:11:29.526" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:10:47.049" endtime="20220201 13:11:29.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:11:29.526" endtime="20220201 13:11:29.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:11:29.527" endtime="20220201 13:11:29.527"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:10:47.011" endtime="20220201 13:11:29.528"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220201 13:10:01.235" endtime="20220201 13:11:29.529"/>
</suite>
<suite id="s1-s3-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:11:35.108" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:11:35.108" endtime="20220201 13:11:35.109"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:11:35.109" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:11:35.109" endtime="20220201 13:11:35.109"/>
</kw>
<status status="PASS" starttime="20220201 13:11:35.107" endtime="20220201 13:11:35.110"/>
</kw>
<msg timestamp="20220201 13:11:35.110" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:11:35.107" endtime="20220201 13:11:35.110"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:11:35.111" endtime="20220201 13:11:35.111"/>
</kw>
<msg timestamp="20220201 13:11:35.111" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:11:35.110" endtime="20220201 13:11:35.111"/>
</kw>
<status status="PASS" starttime="20220201 13:11:35.106" endtime="20220201 13:11:35.111"/>
</kw>
<msg timestamp="20220201 13:11:35.112" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:11:35.105" endtime="20220201 13:11:35.112"/>
</kw>
<msg timestamp="20220201 13:11:35.112" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:11:35.104" endtime="20220201 13:11:35.112"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:11:35.113" level="INFO">${random} = 01616</msg>
<status status="PASS" starttime="20220201 13:11:35.112" endtime="20220201 13:11:35.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:11:35.119" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-01616 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:11:39.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:11:39.475" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:11:35.114" endtime="20220201 13:11:39.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:11:39.476" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:11:37 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:11:37 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:11:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:11:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220201 13:11:39.476" endtime="20220201 13:11:39.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:11:39.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:11:39.482" endtime="20220201 13:11:39.483"/>
</kw>
<status status="PASS" starttime="20220201 13:11:35.114" endtime="20220201 13:11:39.484"/>
</kw>
<msg timestamp="20220201 13:11:39.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:11:35.113" endtime="20220201 13:11:39.484"/>
</kw>
<msg timestamp="20220201 13:11:39.484" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:11:35.113" endtime="20220201 13:11:39.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:11:39.489" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:11:41.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:11:41.684" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:11:39.487" endtime="20220201 13:11:41.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:11:41.686" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-02-01 13:11 ofs://om/volume1/bucket1/ozone-01616
-rw-rw-rw-   3 hadoop hadoop      21943 2022-02-01 13:09 ofs://om/volume1/bucket1/ozone-40010
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:09 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:11 ofs://om/volume1/bucket1/wordcount-JDRvyW8P.txt</msg>
<status status="PASS" starttime="20220201 13:11:41.685" endtime="20220201 13:11:41.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:11:41.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:11:41.686" endtime="20220201 13:11:41.687"/>
</kw>
<status status="PASS" starttime="20220201 13:11:39.486" endtime="20220201 13:11:41.687"/>
</kw>
<msg timestamp="20220201 13:11:41.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:11:39.486" endtime="20220201 13:11:41.688"/>
</kw>
<msg timestamp="20220201 13:11:41.688" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:11:39.485" endtime="20220201 13:11:41.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:11:41.688" endtime="20220201 13:11:41.689"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:11:41.693" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-01616 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:11:45.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:11:45.490" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:11:41.691" endtime="20220201 13:11:45.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:11:45.492" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:11:44 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:11:44 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:11:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220201 13:11:45.491" endtime="20220201 13:11:45.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:11:45.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:11:45.493" endtime="20220201 13:11:45.493"/>
</kw>
<status status="PASS" starttime="20220201 13:11:41.690" endtime="20220201 13:11:45.494"/>
</kw>
<msg timestamp="20220201 13:11:45.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:11:41.690" endtime="20220201 13:11:45.494"/>
</kw>
<msg timestamp="20220201 13:11:45.496" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:11:41.689" endtime="20220201 13:11:45.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:11:45.496" endtime="20220201 13:11:45.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220201 13:11:35.103" endtime="20220201 13:11:45.497"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220201 13:11:35.034" endtime="20220201 13:11:45.499"/>
</suite>
<suite id="s1-s3-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:11:50.886" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:11:50.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:11:50.893" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:11:50.880" endtime="20220201 13:11:50.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:11:50.895" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:11:50.894" endtime="20220201 13:11:50.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:11:50.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:11:50.895" endtime="20220201 13:11:50.896"/>
</kw>
<status status="PASS" starttime="20220201 13:11:50.880" endtime="20220201 13:11:50.896"/>
</kw>
<msg timestamp="20220201 13:11:50.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:11:50.879" endtime="20220201 13:11:50.896"/>
</kw>
<msg timestamp="20220201 13:11:50.897" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:11:50.879" endtime="20220201 13:11:50.898"/>
</kw>
<msg timestamp="20220201 13:11:50.898" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:11:50.878" endtime="20220201 13:11:50.898"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:11:50.902" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:11:50.902" endtime="20220201 13:11:50.902"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:11:50.903" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:11:50.903" endtime="20220201 13:11:50.903"/>
</kw>
<status status="PASS" starttime="20220201 13:11:50.901" endtime="20220201 13:11:50.904"/>
</kw>
<msg timestamp="20220201 13:11:50.904" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:11:50.901" endtime="20220201 13:11:50.904"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:11:50.905" endtime="20220201 13:11:50.905"/>
</kw>
<msg timestamp="20220201 13:11:50.905" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:11:50.904" endtime="20220201 13:11:50.905"/>
</kw>
<status status="PASS" starttime="20220201 13:11:50.900" endtime="20220201 13:11:50.906"/>
</kw>
<msg timestamp="20220201 13:11:50.906" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:11:50.899" endtime="20220201 13:11:50.906"/>
</kw>
<msg timestamp="20220201 13:11:50.906" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:11:50.899" endtime="20220201 13:11:50.906"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:11:50.910" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:12:31.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:12:31.940" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:11:50.908" endtime="20220201 13:12:31.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:12:31.942" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-01 13:11:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:11:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:11:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:11:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-01 13:11:55 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.5:8032
2022-02-01 13:11:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:11:55 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-01 13:11:55 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:11:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643720881727_0003
2022-02-01 13:11:56 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:11:56 INFO  Configuration:2795 - resource-types.xml not found
2022-02-01 13:11:56 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-02-01 13:11:56 INFO  YarnClientImpl:329 - Submitted application application_1643720881727_0003
2022-02-01 13:11:56 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1643720881727_0003/
2022-02-01 13:11:56 INFO  Job:1614 - Running job: job_1643720881727_0003
2022-02-01 13:12:04 INFO  Job:1635 - Job job_1643720881727_0003 running in uber mode : false
2022-02-01 13:12:04 INFO  Job:1642 -  map 0% reduce 0%
2022-02-01 13:12:12 INFO  Job:1642 -  map 33% reduce 0%
2022-02-01 13:12:19 INFO  Job:1642 -  map 67% reduce 0%
2022-02-01 13:12:24 INFO  Job:1642 -  map 100% reduce 0%
2022-02-01 13:12:30 INFO  Job:1642 -  map 100% reduce 100%
2022-02-01 13:12:31 INFO  Job:1653 - Job job_1643720881727_0003 completed successfully
2022-02-01 13:12:31 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=942813
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49620
		Total time spent by all reduces in occupied slots (ms)=18788
		Total time spent by all map tasks (ms)=12405
		Total time spent by all reduce tasks (ms)=4697
		Total vcore-milliseconds taken by all map tasks=12405
		Total vcore-milliseconds taken by all reduce tasks=4697
		Total megabyte-milliseconds taken by all map tasks=50810880
		Total megabyte-milliseconds taken by all reduce tasks=19238912
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=739
		CPU time spent (ms)=9760
		Physical memory (bytes) snapshot=1409331200
		Virtual memory (bytes) snapshot=15826747392
		Total committed heap usage (bytes)=1140850688
		Peak Map Physical memory (bytes)=383913984
		Peak Map Virtual memory (bytes)=3953070080
		Peak Reduce Physical memory (bytes)=338579456
		Peak Reduce Virtual memory (bytes)=3973918720
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.212 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220201 13:12:31.941" endtime="20220201 13:12:31.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:12:31.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:12:31.942" endtime="20220201 13:12:31.943"/>
</kw>
<status status="PASS" starttime="20220201 13:11:50.907" endtime="20220201 13:12:31.943"/>
</kw>
<msg timestamp="20220201 13:12:31.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:11:50.907" endtime="20220201 13:12:31.943"/>
</kw>
<msg timestamp="20220201 13:12:31.944" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:11:50.906" endtime="20220201 13:12:31.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:12:31.944" endtime="20220201 13:12:31.945"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:11:50.877" endtime="20220201 13:12:31.945"/>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:12:31.953" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:12:31.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:12:31.960" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:12:31.949" endtime="20220201 13:12:31.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:12:31.961" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:12:31.960" endtime="20220201 13:12:31.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:12:31.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:12:31.961" endtime="20220201 13:12:31.962"/>
</kw>
<status status="PASS" starttime="20220201 13:12:31.949" endtime="20220201 13:12:31.962"/>
</kw>
<msg timestamp="20220201 13:12:31.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:12:31.948" endtime="20220201 13:12:31.963"/>
</kw>
<msg timestamp="20220201 13:12:31.963" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:12:31.948" endtime="20220201 13:12:31.963"/>
</kw>
<msg timestamp="20220201 13:12:31.963" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220201 13:12:31.947" endtime="20220201 13:12:31.963"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:12:31.964" level="INFO">${random} = 98XfKlxG</msg>
<status status="PASS" starttime="20220201 13:12:31.964" endtime="20220201 13:12:31.964"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:12:31.969" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:12:31.968" endtime="20220201 13:12:31.969"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:12:31.970" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:12:31.969" endtime="20220201 13:12:31.970"/>
</kw>
<status status="PASS" starttime="20220201 13:12:31.968" endtime="20220201 13:12:31.971"/>
</kw>
<msg timestamp="20220201 13:12:31.971" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:12:31.967" endtime="20220201 13:12:31.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:12:31.972" endtime="20220201 13:12:31.972"/>
</kw>
<msg timestamp="20220201 13:12:31.972" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:12:31.971" endtime="20220201 13:12:31.972"/>
</kw>
<status status="PASS" starttime="20220201 13:12:31.966" endtime="20220201 13:12:31.973"/>
</kw>
<msg timestamp="20220201 13:12:31.973" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:12:31.965" endtime="20220201 13:12:31.973"/>
</kw>
<msg timestamp="20220201 13:12:31.973" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:12:31.964" endtime="20220201 13:12:31.973"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:12:31.977" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:12:31.977" endtime="20220201 13:12:31.978"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:12:31.978" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:12:31.978" endtime="20220201 13:12:31.978"/>
</kw>
<status status="PASS" starttime="20220201 13:12:31.976" endtime="20220201 13:12:31.979"/>
</kw>
<msg timestamp="20220201 13:12:31.979" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:12:31.976" endtime="20220201 13:12:31.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:12:31.981" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220201 13:12:31.980" endtime="20220201 13:12:31.981"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:12:31.982" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220201 13:12:31.981" endtime="20220201 13:12:31.982"/>
</kw>
<status status="PASS" starttime="20220201 13:12:31.980" endtime="20220201 13:12:31.982"/>
</kw>
<msg timestamp="20220201 13:12:31.982" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220201 13:12:31.979" endtime="20220201 13:12:31.982"/>
</kw>
<status status="PASS" starttime="20220201 13:12:31.975" endtime="20220201 13:12:31.983"/>
</kw>
<msg timestamp="20220201 13:12:31.983" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220201 13:12:31.974" endtime="20220201 13:12:31.983"/>
</kw>
<msg timestamp="20220201 13:12:31.983" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220201 13:12:31.974" endtime="20220201 13:12:31.983"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:12:31.988" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:12:31.987" endtime="20220201 13:12:31.988"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:12:31.988" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:12:31.988" endtime="20220201 13:12:31.989"/>
</kw>
<status status="PASS" starttime="20220201 13:12:31.986" endtime="20220201 13:12:31.989"/>
</kw>
<msg timestamp="20220201 13:12:31.989" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:12:31.986" endtime="20220201 13:12:31.989"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:12:31.991" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220201 13:12:31.990" endtime="20220201 13:12:31.991"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:12:31.992" level="INFO">${result} = /wordcount-98XfKlxG.txt</msg>
<status status="PASS" starttime="20220201 13:12:31.991" endtime="20220201 13:12:31.992"/>
</kw>
<status status="PASS" starttime="20220201 13:12:31.990" endtime="20220201 13:12:31.992"/>
</kw>
<msg timestamp="20220201 13:12:31.992" level="INFO">${path_with_leading} = /wordcount-98XfKlxG.txt</msg>
<status status="PASS" starttime="20220201 13:12:31.989" endtime="20220201 13:12:31.992"/>
</kw>
<status status="PASS" starttime="20220201 13:12:31.985" endtime="20220201 13:12:31.993"/>
</kw>
<msg timestamp="20220201 13:12:31.993" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-98XfKlxG.txt</msg>
<status status="PASS" starttime="20220201 13:12:31.984" endtime="20220201 13:12:31.993"/>
</kw>
<msg timestamp="20220201 13:12:31.993" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-98XfKlxG.txt</msg>
<status status="PASS" starttime="20220201 13:12:31.983" endtime="20220201 13:12:31.993"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:12:31.998" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-98XfKlxG.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:13:13.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:13:13.422" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:12:31.995" endtime="20220201 13:13:13.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:13:13.423" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:12:33 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.5:8032
2022-02-01 13:12:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:12:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:12:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:12:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:12:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-01 13:12:36 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-01 13:12:36 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:12:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643720881727_0004
2022-02-01 13:12:36 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:12:37 INFO  Configuration:2795 - resource-types.xml not found
2022-02-01 13:12:37 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-02-01 13:12:37 INFO  YarnClientImpl:329 - Submitted application application_1643720881727_0004
2022-02-01 13:12:37 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1643720881727_0004/
2022-02-01 13:12:37 INFO  Job:1614 - Running job: job_1643720881727_0004
2022-02-01 13:12:46 INFO  Job:1635 - Job job_1643720881727_0004 running in uber mode : false
2022-02-01 13:12:46 INFO  Job:1642 -  map 0% reduce 0%
2022-02-01 13:12:53 INFO  Job:1642 -  map 33% reduce 0%
2022-02-01 13:13:00 INFO  Job:1642 -  map 67% reduce 0%
2022-02-01 13:13:06 INFO  Job:1642 -  map 100% reduce 0%
2022-02-01 13:13:11 INFO  Job:1642 -  map 100% reduce 100%
2022-02-01 13:13:12 INFO  Job:1653 - Job job_1643720881727_0004 completed successfully
2022-02-01 13:13:13 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1005715
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50900
		Total time spent by all reduces in occupied slots (ms)=18136
		Total time spent by all map tasks (ms)=12725
		Total time spent by all reduce tasks (ms)=4534
		Total vcore-milliseconds taken by all map tasks=12725
		Total vcore-milliseconds taken by all reduce tasks=4534
		Total megabyte-milliseconds taken by all map tasks=52121600
		Total megabyte-milliseconds taken by all reduce tasks=18571264
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=650
		CPU time spent (ms)=10250
		Physical memory (bytes) snapshot=1410740224
		Virtual memory (bytes) snapshot=15826743296
		Total committed heap usage (bytes)=1140326400
		Peak Map Physical memory (bytes)=385949696
		Peak Map Virtual memory (bytes)=3951783936
		Peak Reduce Physical memory (bytes)=334626816
		Peak Reduce Virtual memory (bytes)=3972358144
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220201 13:13:13.422" endtime="20220201 13:13:13.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:13:13.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:13:13.424" endtime="20220201 13:13:13.424"/>
</kw>
<status status="PASS" starttime="20220201 13:12:31.995" endtime="20220201 13:13:13.425"/>
</kw>
<msg timestamp="20220201 13:13:13.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:12:31.994" endtime="20220201 13:13:13.425"/>
</kw>
<msg timestamp="20220201 13:13:13.425" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:12:31.993" endtime="20220201 13:13:13.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:13:13.426" endtime="20220201 13:13:13.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:13:13.426" endtime="20220201 13:13:13.427"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:12:31.946" endtime="20220201 13:13:13.427"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220201 13:11:50.807" endtime="20220201 13:13:13.429"/>
</suite>
<suite id="s1-s3-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s3-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:08:43.410" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:08:49.135" level="INFO">${rc} = 255</msg>
<msg timestamp="20220201 13:08:49.135" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:08:43.405" endtime="20220201 13:08:49.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:08:49.137" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:08:49.136" endtime="20220201 13:08:49.137"/>
</kw>
<msg timestamp="20220201 13:08:49.137" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:08:43.404" endtime="20220201 13:08:49.137"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:08:49.143" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:08:53.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:08:53.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:08:49.140" endtime="20220201 13:08:53.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:08:53.574" level="INFO"/>
<status status="PASS" starttime="20220201 13:08:53.573" endtime="20220201 13:08:53.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:08:53.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:08:53.574" endtime="20220201 13:08:53.575"/>
</kw>
<status status="PASS" starttime="20220201 13:08:49.140" endtime="20220201 13:08:53.576"/>
</kw>
<msg timestamp="20220201 13:08:53.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:08:49.139" endtime="20220201 13:08:53.577"/>
</kw>
<msg timestamp="20220201 13:08:53.578" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220201 13:08:49.139" endtime="20220201 13:08:53.578"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:08:53.578" endtime="20220201 13:08:53.579"/>
</kw>
<status status="PASS" starttime="20220201 13:08:49.138" endtime="20220201 13:08:53.579"/>
</kw>
<status status="PASS" starttime="20220201 13:08:49.137" endtime="20220201 13:08:53.579"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:08:53.585" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:08:57.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:08:57.635" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:08:53.582" endtime="20220201 13:08:57.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:08:57.637" level="INFO"/>
<status status="PASS" starttime="20220201 13:08:57.636" endtime="20220201 13:08:57.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:08:57.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:08:57.637" endtime="20220201 13:08:57.638"/>
</kw>
<status status="PASS" starttime="20220201 13:08:53.582" endtime="20220201 13:08:57.638"/>
</kw>
<msg timestamp="20220201 13:08:57.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:08:53.581" endtime="20220201 13:08:57.639"/>
</kw>
<status status="PASS" starttime="20220201 13:08:53.580" endtime="20220201 13:08:57.642"/>
</kw>
<status status="PASS" starttime="20220201 13:08:53.580" endtime="20220201 13:08:57.642"/>
</kw>
<status status="PASS" starttime="20220201 13:08:53.579" endtime="20220201 13:08:57.642"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220201 13:08:57.642" endtime="20220201 13:08:57.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:08:57.652" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:09:02.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:09:02.043" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:08...</msg>
<status status="PASS" starttime="20220201 13:08:57.645" endtime="20220201 13:09:02.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:09:02.045" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:08:57.248Z",
  "modificationTime" : "2022-02-01T13:08:57.248Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220201 13:09:02.045" endtime="20220201 13:09:02.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:09:02.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:09:02.046" endtime="20220201 13:09:02.046"/>
</kw>
<status status="PASS" starttime="20220201 13:08:57.644" endtime="20220201 13:09:02.047"/>
</kw>
<msg timestamp="20220201 13:09:02.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:08:57.644" endtime="20220201 13:09:02.048"/>
</kw>
<msg timestamp="20220201 13:09:02.048" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:08...</msg>
<status status="PASS" starttime="20220201 13:08:57.643" endtime="20220201 13:09:02.048"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:09:02.048" endtime="20220201 13:09:02.049"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:09:02.055" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:09:02.055" endtime="20220201 13:09:02.055"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:09:02.056" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:09:02.055" endtime="20220201 13:09:02.056"/>
</kw>
<status status="PASS" starttime="20220201 13:09:02.054" endtime="20220201 13:09:02.057"/>
</kw>
<msg timestamp="20220201 13:09:02.057" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:09:02.052" endtime="20220201 13:09:02.057"/>
</kw>
<status status="PASS" starttime="20220201 13:09:02.051" endtime="20220201 13:09:02.057"/>
</kw>
<msg timestamp="20220201 13:09:02.057" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 13:09:02.050" endtime="20220201 13:09:02.057"/>
</kw>
<msg timestamp="20220201 13:09:02.058" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 13:09:02.049" endtime="20220201 13:09:02.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:09:02.062" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:09:07.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:09:07.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:09:02.060" endtime="20220201 13:09:07.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:09:07.236" level="INFO"/>
<status status="PASS" starttime="20220201 13:09:07.235" endtime="20220201 13:09:07.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:09:07.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:09:07.236" endtime="20220201 13:09:07.237"/>
</kw>
<status status="PASS" starttime="20220201 13:09:02.059" endtime="20220201 13:09:07.238"/>
</kw>
<msg timestamp="20220201 13:09:07.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:09:02.059" endtime="20220201 13:09:07.238"/>
</kw>
<status status="PASS" starttime="20220201 13:09:02.058" endtime="20220201 13:09:07.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:09:07.243" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:09:15.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:09:15.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:09:07.241" endtime="20220201 13:09:15.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:09:15.448" level="INFO"/>
<status status="PASS" starttime="20220201 13:09:15.447" endtime="20220201 13:09:15.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:09:15.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:09:15.448" endtime="20220201 13:09:15.449"/>
</kw>
<status status="PASS" starttime="20220201 13:09:07.240" endtime="20220201 13:09:15.449"/>
</kw>
<msg timestamp="20220201 13:09:15.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:09:07.240" endtime="20220201 13:09:15.450"/>
</kw>
<status status="PASS" starttime="20220201 13:09:07.239" endtime="20220201 13:09:15.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:09:15.455" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:09:23.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:09:23.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:09:15.453" endtime="20220201 13:09:23.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:09:23.060" level="INFO"/>
<status status="PASS" starttime="20220201 13:09:23.059" endtime="20220201 13:09:23.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:09:23.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:09:23.060" endtime="20220201 13:09:23.061"/>
</kw>
<status status="PASS" starttime="20220201 13:09:15.452" endtime="20220201 13:09:23.061"/>
</kw>
<msg timestamp="20220201 13:09:23.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:09:15.451" endtime="20220201 13:09:23.062"/>
</kw>
<status status="PASS" starttime="20220201 13:09:15.451" endtime="20220201 13:09:23.062"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:09:23.067" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:09:30.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:09:30.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:09:23.065" endtime="20220201 13:09:30.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:09:30.348" level="INFO"/>
<status status="PASS" starttime="20220201 13:09:30.347" endtime="20220201 13:09:30.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:09:30.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:09:30.348" endtime="20220201 13:09:30.349"/>
</kw>
<status status="PASS" starttime="20220201 13:09:23.064" endtime="20220201 13:09:30.350"/>
</kw>
<msg timestamp="20220201 13:09:30.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:09:23.064" endtime="20220201 13:09:30.350"/>
</kw>
<status status="PASS" starttime="20220201 13:09:23.062" endtime="20220201 13:09:30.351"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 13:08:43.403" endtime="20220201 13:09:30.351"/>
</test>
<test id="s1-s3-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:09:30.359" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:09:30.358" endtime="20220201 13:09:30.359"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:09:30.360" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:09:30.359" endtime="20220201 13:09:30.360"/>
</kw>
<status status="PASS" starttime="20220201 13:09:30.357" endtime="20220201 13:09:30.360"/>
</kw>
<msg timestamp="20220201 13:09:30.360" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:09:30.356" endtime="20220201 13:09:30.360"/>
</kw>
<status status="PASS" starttime="20220201 13:09:30.355" endtime="20220201 13:09:30.361"/>
</kw>
<msg timestamp="20220201 13:09:30.361" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:09:30.354" endtime="20220201 13:09:30.361"/>
</kw>
<msg timestamp="20220201 13:09:30.361" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:09:30.353" endtime="20220201 13:09:30.361"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:09:30.366" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:09:34.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:09:34.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:09:30.364" endtime="20220201 13:09:34.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:09:34.777" level="INFO"/>
<status status="PASS" starttime="20220201 13:09:34.776" endtime="20220201 13:09:34.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:09:34.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:09:34.777" endtime="20220201 13:09:34.778"/>
</kw>
<status status="PASS" starttime="20220201 13:09:30.363" endtime="20220201 13:09:34.778"/>
</kw>
<msg timestamp="20220201 13:09:34.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:09:30.363" endtime="20220201 13:09:34.779"/>
</kw>
<status status="PASS" starttime="20220201 13:09:30.362" endtime="20220201 13:09:34.779"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:09:34.783" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:09:39.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:09:39.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:09:34.781" endtime="20220201 13:09:39.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:09:39.029" level="INFO"/>
<status status="PASS" starttime="20220201 13:09:39.028" endtime="20220201 13:09:39.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:09:39.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:09:39.029" endtime="20220201 13:09:39.030"/>
</kw>
<status status="PASS" starttime="20220201 13:09:34.780" endtime="20220201 13:09:39.031"/>
</kw>
<msg timestamp="20220201 13:09:39.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:09:34.780" endtime="20220201 13:09:39.031"/>
</kw>
<status status="PASS" starttime="20220201 13:09:34.779" endtime="20220201 13:09:39.031"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 13:09:30.352" endtime="20220201 13:09:39.032"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220201 13:08:43.293" endtime="20220201 13:09:39.033"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="248495"/>
</suite>
<suite id="s1-s4" name="hadoop33">
<suite id="s1-s4-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:16:03.236" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:16:03.235" endtime="20220201 13:16:03.236"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:16:03.237" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:16:03.236" endtime="20220201 13:16:03.237"/>
</kw>
<status status="PASS" starttime="20220201 13:16:03.234" endtime="20220201 13:16:03.237"/>
</kw>
<msg timestamp="20220201 13:16:03.237" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:16:03.234" endtime="20220201 13:16:03.237"/>
</kw>
<status status="PASS" starttime="20220201 13:16:03.233" endtime="20220201 13:16:03.238"/>
</kw>
<msg timestamp="20220201 13:16:03.238" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:16:03.232" endtime="20220201 13:16:03.238"/>
</kw>
<msg timestamp="20220201 13:16:03.238" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:16:03.231" endtime="20220201 13:16:03.238"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:16:03.239" level="INFO">${random} = 61985</msg>
<status status="PASS" starttime="20220201 13:16:03.238" endtime="20220201 13:16:03.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:16:03.246" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-61985 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:16:08.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:16:08.048" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:16:03.241" endtime="20220201 13:16:08.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:16:08.049" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:16:05 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:16:05 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:16:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:16:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220201 13:16:08.049" endtime="20220201 13:16:08.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:16:08.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:16:08.050" endtime="20220201 13:16:08.050"/>
</kw>
<status status="PASS" starttime="20220201 13:16:03.240" endtime="20220201 13:16:08.051"/>
</kw>
<msg timestamp="20220201 13:16:08.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:16:03.240" endtime="20220201 13:16:08.051"/>
</kw>
<msg timestamp="20220201 13:16:08.052" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:16:03.239" endtime="20220201 13:16:08.052"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:16:08.056" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:16:10.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:16:10.512" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:16:08.053" endtime="20220201 13:16:10.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:16:10.514" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-02-01 13:16 o3fs://bucket1.volume1.om/ozone-61985
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:15 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:16:10.513" endtime="20220201 13:16:10.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:16:10.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:16:10.514" endtime="20220201 13:16:10.515"/>
</kw>
<status status="PASS" starttime="20220201 13:16:08.053" endtime="20220201 13:16:10.516"/>
</kw>
<msg timestamp="20220201 13:16:10.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:16:08.052" endtime="20220201 13:16:10.516"/>
</kw>
<msg timestamp="20220201 13:16:10.516" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:16:08.052" endtime="20220201 13:16:10.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:16:10.516" endtime="20220201 13:16:10.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:16:10.521" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-61985 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:16:14.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:16:14.681" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:16:10.519" endtime="20220201 13:16:14.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:16:14.682" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:16:12 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:16:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:16:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20220201 13:16:14.682" endtime="20220201 13:16:14.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:16:14.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:16:14.683" endtime="20220201 13:16:14.683"/>
</kw>
<status status="PASS" starttime="20220201 13:16:10.518" endtime="20220201 13:16:14.685"/>
</kw>
<msg timestamp="20220201 13:16:14.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:16:10.518" endtime="20220201 13:16:14.685"/>
</kw>
<msg timestamp="20220201 13:16:14.685" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:16:10.517" endtime="20220201 13:16:14.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:16:14.686" endtime="20220201 13:16:14.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220201 13:16:03.230" endtime="20220201 13:16:14.687"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220201 13:16:03.142" endtime="20220201 13:16:14.689"/>
</suite>
<suite id="s1-s4-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:16:20.065" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:16:20.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:16:20.073" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:16:20.061" endtime="20220201 13:16:20.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:16:20.074" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:16:20.074" endtime="20220201 13:16:20.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:16:20.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:16:20.075" endtime="20220201 13:16:20.075"/>
</kw>
<status status="PASS" starttime="20220201 13:16:20.060" endtime="20220201 13:16:20.076"/>
</kw>
<msg timestamp="20220201 13:16:20.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:16:20.060" endtime="20220201 13:16:20.076"/>
</kw>
<msg timestamp="20220201 13:16:20.077" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:16:20.059" endtime="20220201 13:16:20.078"/>
</kw>
<msg timestamp="20220201 13:16:20.078" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:16:20.059" endtime="20220201 13:16:20.078"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:16:20.083" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:16:20.083" endtime="20220201 13:16:20.083"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:16:20.085" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:16:20.084" endtime="20220201 13:16:20.085"/>
</kw>
<status status="PASS" starttime="20220201 13:16:20.082" endtime="20220201 13:16:20.085"/>
</kw>
<msg timestamp="20220201 13:16:20.085" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:16:20.082" endtime="20220201 13:16:20.085"/>
</kw>
<status status="PASS" starttime="20220201 13:16:20.081" endtime="20220201 13:16:20.086"/>
</kw>
<msg timestamp="20220201 13:16:20.086" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:16:20.079" endtime="20220201 13:16:20.086"/>
</kw>
<msg timestamp="20220201 13:16:20.086" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:16:20.078" endtime="20220201 13:16:20.086"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:16:20.090" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:17:09.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:17:09.220" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:16:20.088" endtime="20220201 13:17:09.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:17:09.222" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-01 13:16:22 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:16:22 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:16:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:16:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-01 13:16:24 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-02-01 13:16:25 INFO  FileInputFormat:300 - Total input files to process : 3
2022-02-01 13:16:25 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:16:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643721263052_0001
2022-02-01 13:16:25 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:16:26 INFO  Configuration:2824 - resource-types.xml not found
2022-02-01 13:16:26 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-02-01 13:16:26 INFO  YarnClientImpl:338 - Submitted application application_1643721263052_0001
2022-02-01 13:16:26 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1643721263052_0001/
2022-02-01 13:16:26 INFO  Job:1620 - Running job: job_1643721263052_0001
2022-02-01 13:16:41 INFO  Job:1641 - Job job_1643721263052_0001 running in uber mode : false
2022-02-01 13:16:41 INFO  Job:1648 -  map 0% reduce 0%
2022-02-01 13:16:49 INFO  Job:1648 -  map 33% reduce 0%
2022-02-01 13:16:55 INFO  Job:1648 -  map 67% reduce 0%
2022-02-01 13:17:01 INFO  Job:1648 -  map 100% reduce 0%
2022-02-01 13:17:07 INFO  Job:1648 -  map 100% reduce 100%
2022-02-01 13:17:08 INFO  Job:1659 - Job job_1643721263052_0001 completed successfully
2022-02-01 13:17:08 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1094985
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=55012
		Total time spent by all reduces in occupied slots (ms)=20172
		Total time spent by all map tasks (ms)=13753
		Total time spent by all reduce tasks (ms)=5043
		Total vcore-milliseconds taken by all map tasks=13753
		Total vcore-milliseconds taken by all reduce tasks=5043
		Total megabyte-milliseconds taken by all map tasks=56332288
		Total megabyte-milliseconds taken by all reduce tasks=20656128
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=672
		CPU time spent (ms)=9300
		Physical memory (bytes) snapshot=1669091328
		Virtual memory (bytes) snapshot=15820521472
		Total committed heap usage (bytes)=1414529024
		Peak Map Physical memory (bytes)=448753664
		Peak Map Virtual memory (bytes)=3952455680
		Peak Reduce Physical memory (bytes)=338718720
		Peak Reduce Virtual memory (bytes)=3971751936
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.928 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220201 13:17:09.221" endtime="20220201 13:17:09.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:17:09.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:17:09.223" endtime="20220201 13:17:09.223"/>
</kw>
<status status="PASS" starttime="20220201 13:16:20.087" endtime="20220201 13:17:09.224"/>
</kw>
<msg timestamp="20220201 13:17:09.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:16:20.087" endtime="20220201 13:17:09.224"/>
</kw>
<msg timestamp="20220201 13:17:09.224" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:16:20.086" endtime="20220201 13:17:09.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:17:09.225" endtime="20220201 13:17:09.225"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:16:20.058" endtime="20220201 13:17:09.225"/>
</test>
<test id="s1-s4-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:17:09.232" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:17:09.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:17:09.240" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:17:09.229" endtime="20220201 13:17:09.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:17:09.242" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:17:09.241" endtime="20220201 13:17:09.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:17:09.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:17:09.242" endtime="20220201 13:17:09.243"/>
</kw>
<status status="PASS" starttime="20220201 13:17:09.229" endtime="20220201 13:17:09.243"/>
</kw>
<msg timestamp="20220201 13:17:09.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:17:09.228" endtime="20220201 13:17:09.244"/>
</kw>
<msg timestamp="20220201 13:17:09.244" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:17:09.228" endtime="20220201 13:17:09.244"/>
</kw>
<msg timestamp="20220201 13:17:09.244" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:17:09.227" endtime="20220201 13:17:09.244"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:17:09.245" level="INFO">${random} = W9G8wRrv</msg>
<status status="PASS" starttime="20220201 13:17:09.244" endtime="20220201 13:17:09.245"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:17:09.250" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:17:09.249" endtime="20220201 13:17:09.250"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:17:09.251" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:17:09.250" endtime="20220201 13:17:09.251"/>
</kw>
<status status="PASS" starttime="20220201 13:17:09.249" endtime="20220201 13:17:09.251"/>
</kw>
<msg timestamp="20220201 13:17:09.251" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:17:09.248" endtime="20220201 13:17:09.252"/>
</kw>
<status status="PASS" starttime="20220201 13:17:09.247" endtime="20220201 13:17:09.252"/>
</kw>
<msg timestamp="20220201 13:17:09.252" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:17:09.246" endtime="20220201 13:17:09.252"/>
</kw>
<msg timestamp="20220201 13:17:09.252" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220201 13:17:09.245" endtime="20220201 13:17:09.252"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:17:09.257" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:17:09.257" endtime="20220201 13:17:09.257"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:17:09.258" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:17:09.258" endtime="20220201 13:17:09.258"/>
</kw>
<status status="PASS" starttime="20220201 13:17:09.256" endtime="20220201 13:17:09.259"/>
</kw>
<msg timestamp="20220201 13:17:09.259" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:17:09.255" endtime="20220201 13:17:09.259"/>
</kw>
<status status="PASS" starttime="20220201 13:17:09.254" endtime="20220201 13:17:09.259"/>
</kw>
<msg timestamp="20220201 13:17:09.259" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220201 13:17:09.253" endtime="20220201 13:17:09.259"/>
</kw>
<msg timestamp="20220201 13:17:09.260" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220201 13:17:09.253" endtime="20220201 13:17:09.260"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:17:09.264" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:17:09.264" endtime="20220201 13:17:09.264"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:17:09.265" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:17:09.265" endtime="20220201 13:17:09.265"/>
</kw>
<status status="PASS" starttime="20220201 13:17:09.263" endtime="20220201 13:17:09.266"/>
</kw>
<msg timestamp="20220201 13:17:09.266" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:17:09.263" endtime="20220201 13:17:09.266"/>
</kw>
<status status="PASS" starttime="20220201 13:17:09.262" endtime="20220201 13:17:09.266"/>
</kw>
<msg timestamp="20220201 13:17:09.266" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-W9G8wRrv.txt</msg>
<status status="PASS" starttime="20220201 13:17:09.261" endtime="20220201 13:17:09.266"/>
</kw>
<msg timestamp="20220201 13:17:09.267" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-W9G8wRrv.txt</msg>
<status status="PASS" starttime="20220201 13:17:09.260" endtime="20220201 13:17:09.267"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:17:09.271" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-W9G8wRrv.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:17:52.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:17:52.178" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:17:09.269" endtime="20220201 13:17:52.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:17:52.179" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:17:11 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-02-01 13:17:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:17:12 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:17:12 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:17:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:17:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-01 13:17:14 INFO  FileInputFormat:300 - Total input files to process : 3
2022-02-01 13:17:14 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:17:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643721263052_0002
2022-02-01 13:17:14 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:17:14 INFO  Configuration:2824 - resource-types.xml not found
2022-02-01 13:17:14 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-02-01 13:17:15 INFO  YarnClientImpl:338 - Submitted application application_1643721263052_0002
2022-02-01 13:17:15 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1643721263052_0002/
2022-02-01 13:17:15 INFO  Job:1620 - Running job: job_1643721263052_0002
2022-02-01 13:17:24 INFO  Job:1641 - Job job_1643721263052_0002 running in uber mode : false
2022-02-01 13:17:24 INFO  Job:1648 -  map 0% reduce 0%
2022-02-01 13:17:32 INFO  Job:1648 -  map 33% reduce 0%
2022-02-01 13:17:38 INFO  Job:1648 -  map 67% reduce 0%
2022-02-01 13:17:44 INFO  Job:1648 -  map 100% reduce 0%
2022-02-01 13:17:50 INFO  Job:1648 -  map 100% reduce 100%
2022-02-01 13:17:51 INFO  Job:1659 - Job job_1643721263052_0002 completed successfully
2022-02-01 13:17:51 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1157743
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53816
		Total time spent by all reduces in occupied slots (ms)=19464
		Total time spent by all map tasks (ms)=13454
		Total time spent by all reduce tasks (ms)=4866
		Total vcore-milliseconds taken by all map tasks=13454
		Total vcore-milliseconds taken by all reduce tasks=4866
		Total megabyte-milliseconds taken by all map tasks=55107584
		Total megabyte-milliseconds taken by all reduce tasks=19931136
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=713
		CPU time spent (ms)=9850
		Physical memory (bytes) snapshot=1665380352
		Virtual memory (bytes) snapshot=15828111360
		Total committed heap usage (bytes)=1415577600
		Peak Map Physical memory (bytes)=444309504
		Peak Map Virtual memory (bytes)=3954180096
		Peak Reduce Physical memory (bytes)=340598784
		Peak Reduce Virtual memory (bytes)=3977093120
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220201 13:17:52.179" endtime="20220201 13:17:52.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:17:52.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:17:52.180" endtime="20220201 13:17:52.181"/>
</kw>
<status status="PASS" starttime="20220201 13:17:09.268" endtime="20220201 13:17:52.181"/>
</kw>
<msg timestamp="20220201 13:17:52.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:17:09.268" endtime="20220201 13:17:52.181"/>
</kw>
<msg timestamp="20220201 13:17:52.182" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:17:09.267" endtime="20220201 13:17:52.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:17:52.182" endtime="20220201 13:17:52.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:17:52.183" endtime="20220201 13:17:52.183"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:17:09.226" endtime="20220201 13:17:52.183"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220201 13:16:19.989" endtime="20220201 13:17:52.185"/>
</suite>
<suite id="s1-s4-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:17:57.701" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:17:57.700" endtime="20220201 13:17:57.701"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:17:57.702" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:17:57.701" endtime="20220201 13:17:57.702"/>
</kw>
<status status="PASS" starttime="20220201 13:17:57.700" endtime="20220201 13:17:57.702"/>
</kw>
<msg timestamp="20220201 13:17:57.702" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:17:57.699" endtime="20220201 13:17:57.702"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:17:57.703" endtime="20220201 13:17:57.703"/>
</kw>
<msg timestamp="20220201 13:17:57.704" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:17:57.703" endtime="20220201 13:17:57.704"/>
</kw>
<status status="PASS" starttime="20220201 13:17:57.698" endtime="20220201 13:17:57.704"/>
</kw>
<msg timestamp="20220201 13:17:57.704" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:17:57.698" endtime="20220201 13:17:57.704"/>
</kw>
<msg timestamp="20220201 13:17:57.705" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:17:57.696" endtime="20220201 13:17:57.705"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:17:57.705" level="INFO">${random} = 54814</msg>
<status status="PASS" starttime="20220201 13:17:57.705" endtime="20220201 13:17:57.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:17:57.712" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-54814 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:18:02.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:18:02.433" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:17:57.707" endtime="20220201 13:18:02.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:18:02.435" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:18:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:18:00 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:18:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:18:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220201 13:18:02.434" endtime="20220201 13:18:02.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:18:02.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:18:02.435" endtime="20220201 13:18:02.436"/>
</kw>
<status status="PASS" starttime="20220201 13:17:57.706" endtime="20220201 13:18:02.436"/>
</kw>
<msg timestamp="20220201 13:18:02.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:17:57.706" endtime="20220201 13:18:02.436"/>
</kw>
<msg timestamp="20220201 13:18:02.437" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:17:57.705" endtime="20220201 13:18:02.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:18:02.441" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:18:04.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:18:04.839" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:18:02.439" endtime="20220201 13:18:04.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:18:04.840" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-02-01 13:18 ofs://om/volume1/bucket1/ozone-54814
-rw-rw-rw-   3 hadoop hadoop       1541 2022-02-01 13:16 ofs://om/volume1/bucket1/ozone-61985
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:15 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-02-01 13:17 ofs://om/volume1/bucket1/wordcount-W9G8wRrv.txt</msg>
<status status="PASS" starttime="20220201 13:18:04.839" endtime="20220201 13:18:04.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:18:04.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:18:04.841" endtime="20220201 13:18:04.841"/>
</kw>
<status status="PASS" starttime="20220201 13:18:02.438" endtime="20220201 13:18:04.842"/>
</kw>
<msg timestamp="20220201 13:18:04.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:18:02.438" endtime="20220201 13:18:04.842"/>
</kw>
<msg timestamp="20220201 13:18:04.843" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:18:02.437" endtime="20220201 13:18:04.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:18:04.843" endtime="20220201 13:18:04.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:18:04.847" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-54814 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:18:08.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:18:08.653" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:18:04.845" endtime="20220201 13:18:08.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:18:08.655" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:18:07 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:18:07 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:18:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20220201 13:18:08.654" endtime="20220201 13:18:08.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:18:08.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:18:08.656" endtime="20220201 13:18:08.656"/>
</kw>
<status status="PASS" starttime="20220201 13:18:04.845" endtime="20220201 13:18:08.657"/>
</kw>
<msg timestamp="20220201 13:18:08.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:18:04.844" endtime="20220201 13:18:08.657"/>
</kw>
<msg timestamp="20220201 13:18:08.657" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:18:04.844" endtime="20220201 13:18:08.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:18:08.658" endtime="20220201 13:18:08.658"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220201 13:17:57.695" endtime="20220201 13:18:08.658"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220201 13:17:57.624" endtime="20220201 13:18:08.660"/>
</suite>
<suite id="s1-s4-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:18:14.101" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:18:14.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:18:14.107" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:18:14.097" endtime="20220201 13:18:14.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:18:14.108" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:18:14.108" endtime="20220201 13:18:14.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:18:14.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:18:14.109" endtime="20220201 13:18:14.109"/>
</kw>
<status status="PASS" starttime="20220201 13:18:14.096" endtime="20220201 13:18:14.110"/>
</kw>
<msg timestamp="20220201 13:18:14.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:18:14.096" endtime="20220201 13:18:14.110"/>
</kw>
<msg timestamp="20220201 13:18:14.110" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:18:14.095" endtime="20220201 13:18:14.111"/>
</kw>
<msg timestamp="20220201 13:18:14.112" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:18:14.095" endtime="20220201 13:18:14.112"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:18:14.116" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:18:14.116" endtime="20220201 13:18:14.116"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:18:14.117" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:18:14.117" endtime="20220201 13:18:14.117"/>
</kw>
<status status="PASS" starttime="20220201 13:18:14.115" endtime="20220201 13:18:14.117"/>
</kw>
<msg timestamp="20220201 13:18:14.118" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:18:14.114" endtime="20220201 13:18:14.118"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:18:14.118" endtime="20220201 13:18:14.119"/>
</kw>
<msg timestamp="20220201 13:18:14.119" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:18:14.118" endtime="20220201 13:18:14.119"/>
</kw>
<status status="PASS" starttime="20220201 13:18:14.114" endtime="20220201 13:18:14.119"/>
</kw>
<msg timestamp="20220201 13:18:14.119" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:18:14.113" endtime="20220201 13:18:14.119"/>
</kw>
<msg timestamp="20220201 13:18:14.120" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:18:14.112" endtime="20220201 13:18:14.120"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:18:14.124" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:18:59.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:18:59.698" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:18:14.122" endtime="20220201 13:18:59.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:18:59.700" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-01 13:18:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:18:16 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:18:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:18:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-01 13:18:18 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-02-01 13:18:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:18:19 INFO  FileInputFormat:300 - Total input files to process : 3
2022-02-01 13:18:19 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:18:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643721263052_0003
2022-02-01 13:18:19 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:18:20 INFO  Configuration:2824 - resource-types.xml not found
2022-02-01 13:18:20 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-02-01 13:18:20 INFO  YarnClientImpl:338 - Submitted application application_1643721263052_0003
2022-02-01 13:18:20 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1643721263052_0003/
2022-02-01 13:18:20 INFO  Job:1620 - Running job: job_1643721263052_0003
2022-02-01 13:18:29 INFO  Job:1641 - Job job_1643721263052_0003 running in uber mode : false
2022-02-01 13:18:29 INFO  Job:1648 -  map 0% reduce 0%
2022-02-01 13:18:37 INFO  Job:1648 -  map 33% reduce 0%
2022-02-01 13:18:43 INFO  Job:1648 -  map 67% reduce 0%
2022-02-01 13:18:49 INFO  Job:1648 -  map 100% reduce 0%
2022-02-01 13:18:55 INFO  Job:1648 -  map 100% reduce 100%
2022-02-01 13:18:58 INFO  Job:1659 - Job job_1643721263052_0003 completed successfully
2022-02-01 13:18:59 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1094781
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53152
		Total time spent by all reduces in occupied slots (ms)=19624
		Total time spent by all map tasks (ms)=13288
		Total time spent by all reduce tasks (ms)=4906
		Total vcore-milliseconds taken by all map tasks=13288
		Total vcore-milliseconds taken by all reduce tasks=4906
		Total megabyte-milliseconds taken by all map tasks=54427648
		Total megabyte-milliseconds taken by all reduce tasks=20094976
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=661
		CPU time spent (ms)=9320
		Physical memory (bytes) snapshot=1568075776
		Virtual memory (bytes) snapshot=15776059392
		Total committed heap usage (bytes)=1448083456
		Peak Map Physical memory (bytes)=450154496
		Peak Map Virtual memory (bytes)=3950985216
		Peak Reduce Physical memory (bytes)=351678464
		Peak Reduce Virtual memory (bytes)=3958824960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.54 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220201 13:18:59.699" endtime="20220201 13:18:59.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:18:59.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:18:59.700" endtime="20220201 13:18:59.701"/>
</kw>
<status status="PASS" starttime="20220201 13:18:14.121" endtime="20220201 13:18:59.701"/>
</kw>
<msg timestamp="20220201 13:18:59.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:18:14.121" endtime="20220201 13:18:59.702"/>
</kw>
<msg timestamp="20220201 13:18:59.702" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:18:14.120" endtime="20220201 13:18:59.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:18:59.702" endtime="20220201 13:18:59.703"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:18:14.094" endtime="20220201 13:18:59.703"/>
</test>
<test id="s1-s4-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:18:59.710" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:18:59.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:18:59.716" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:18:59.707" endtime="20220201 13:18:59.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:18:59.718" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:18:59.717" endtime="20220201 13:18:59.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:18:59.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:18:59.718" endtime="20220201 13:18:59.719"/>
</kw>
<status status="PASS" starttime="20220201 13:18:59.707" endtime="20220201 13:18:59.719"/>
</kw>
<msg timestamp="20220201 13:18:59.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:18:59.706" endtime="20220201 13:18:59.719"/>
</kw>
<msg timestamp="20220201 13:18:59.720" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:18:59.706" endtime="20220201 13:18:59.720"/>
</kw>
<msg timestamp="20220201 13:18:59.720" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220201 13:18:59.705" endtime="20220201 13:18:59.720"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220201 13:18:59.721" level="INFO">${random} = 2tSDRjP2</msg>
<status status="PASS" starttime="20220201 13:18:59.720" endtime="20220201 13:18:59.721"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:18:59.725" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:18:59.725" endtime="20220201 13:18:59.725"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:18:59.726" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:18:59.725" endtime="20220201 13:18:59.726"/>
</kw>
<status status="PASS" starttime="20220201 13:18:59.724" endtime="20220201 13:18:59.727"/>
</kw>
<msg timestamp="20220201 13:18:59.727" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:18:59.724" endtime="20220201 13:18:59.727"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220201 13:18:59.728" endtime="20220201 13:18:59.728"/>
</kw>
<msg timestamp="20220201 13:18:59.728" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220201 13:18:59.727" endtime="20220201 13:18:59.728"/>
</kw>
<status status="PASS" starttime="20220201 13:18:59.723" endtime="20220201 13:18:59.729"/>
</kw>
<msg timestamp="20220201 13:18:59.729" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:18:59.722" endtime="20220201 13:18:59.729"/>
</kw>
<msg timestamp="20220201 13:18:59.729" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220201 13:18:59.721" endtime="20220201 13:18:59.730"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:18:59.734" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:18:59.733" endtime="20220201 13:18:59.734"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:18:59.734" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:18:59.734" endtime="20220201 13:18:59.735"/>
</kw>
<status status="PASS" starttime="20220201 13:18:59.733" endtime="20220201 13:18:59.735"/>
</kw>
<msg timestamp="20220201 13:18:59.735" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:18:59.732" endtime="20220201 13:18:59.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:18:59.737" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220201 13:18:59.736" endtime="20220201 13:18:59.737"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:18:59.738" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220201 13:18:59.737" endtime="20220201 13:18:59.738"/>
</kw>
<status status="PASS" starttime="20220201 13:18:59.736" endtime="20220201 13:18:59.738"/>
</kw>
<msg timestamp="20220201 13:18:59.738" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220201 13:18:59.735" endtime="20220201 13:18:59.738"/>
</kw>
<status status="PASS" starttime="20220201 13:18:59.731" endtime="20220201 13:18:59.738"/>
</kw>
<msg timestamp="20220201 13:18:59.738" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220201 13:18:59.730" endtime="20220201 13:18:59.739"/>
</kw>
<msg timestamp="20220201 13:18:59.739" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220201 13:18:59.730" endtime="20220201 13:18:59.739"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:18:59.743" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220201 13:18:59.743" endtime="20220201 13:18:59.744"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:18:59.744" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220201 13:18:59.744" endtime="20220201 13:18:59.744"/>
</kw>
<status status="PASS" starttime="20220201 13:18:59.742" endtime="20220201 13:18:59.745"/>
</kw>
<msg timestamp="20220201 13:18:59.745" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220201 13:18:59.741" endtime="20220201 13:18:59.745"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:18:59.747" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220201 13:18:59.746" endtime="20220201 13:18:59.747"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:18:59.747" level="INFO">${result} = /wordcount-2tSDRjP2.txt</msg>
<status status="PASS" starttime="20220201 13:18:59.747" endtime="20220201 13:18:59.747"/>
</kw>
<status status="PASS" starttime="20220201 13:18:59.745" endtime="20220201 13:18:59.748"/>
</kw>
<msg timestamp="20220201 13:18:59.748" level="INFO">${path_with_leading} = /wordcount-2tSDRjP2.txt</msg>
<status status="PASS" starttime="20220201 13:18:59.745" endtime="20220201 13:18:59.748"/>
</kw>
<status status="PASS" starttime="20220201 13:18:59.740" endtime="20220201 13:18:59.748"/>
</kw>
<msg timestamp="20220201 13:18:59.748" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-2tSDRjP2.txt</msg>
<status status="PASS" starttime="20220201 13:18:59.740" endtime="20220201 13:18:59.748"/>
</kw>
<msg timestamp="20220201 13:18:59.748" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-2tSDRjP2.txt</msg>
<status status="PASS" starttime="20220201 13:18:59.739" endtime="20220201 13:18:59.749"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:18:59.754" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-2tSDRjP2.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:19:42.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:19:42.624" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:18:59.752" endtime="20220201 13:19:42.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:19:42.625" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-01 13:19:01 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.4:8032
2022-02-01 13:19:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-01 13:19:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-01 13:19:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-01 13:19:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-01 13:19:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-01 13:19:04 INFO  FileInputFormat:300 - Total input files to process : 3
2022-02-01 13:19:04 INFO  JobSubmitter:202 - number of splits:3
2022-02-01 13:19:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1643721263052_0004
2022-02-01 13:19:05 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-01 13:19:05 INFO  Configuration:2824 - resource-types.xml not found
2022-02-01 13:19:05 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-02-01 13:19:05 INFO  YarnClientImpl:338 - Submitted application application_1643721263052_0004
2022-02-01 13:19:05 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1643721263052_0004/
2022-02-01 13:19:05 INFO  Job:1620 - Running job: job_1643721263052_0004
2022-02-01 13:19:14 INFO  Job:1641 - Job job_1643721263052_0004 running in uber mode : false
2022-02-01 13:19:14 INFO  Job:1648 -  map 0% reduce 0%
2022-02-01 13:19:21 INFO  Job:1648 -  map 33% reduce 0%
2022-02-01 13:19:28 INFO  Job:1648 -  map 67% reduce 0%
2022-02-01 13:19:35 INFO  Job:1648 -  map 100% reduce 0%
2022-02-01 13:19:41 INFO  Job:1648 -  map 100% reduce 100%
2022-02-01 13:19:42 INFO  Job:1659 - Job job_1643721263052_0004 completed successfully
2022-02-01 13:19:42 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1157659
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51904
		Total time spent by all reduces in occupied slots (ms)=18828
		Total time spent by all map tasks (ms)=12976
		Total time spent by all reduce tasks (ms)=4707
		Total vcore-milliseconds taken by all map tasks=12976
		Total vcore-milliseconds taken by all reduce tasks=4707
		Total megabyte-milliseconds taken by all map tasks=53149696
		Total megabyte-milliseconds taken by all reduce tasks=19279872
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=680
		CPU time spent (ms)=9870
		Physical memory (bytes) snapshot=1589350400
		Virtual memory (bytes) snapshot=15790874624
		Total committed heap usage (bytes)=1406140416
		Peak Map Physical memory (bytes)=415002624
		Peak Map Virtual memory (bytes)=3951628288
		Peak Reduce Physical memory (bytes)=373825536
		Peak Reduce Virtual memory (bytes)=3975790592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220201 13:19:42.624" endtime="20220201 13:19:42.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:19:42.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:19:42.626" endtime="20220201 13:19:42.626"/>
</kw>
<status status="PASS" starttime="20220201 13:18:59.751" endtime="20220201 13:19:42.627"/>
</kw>
<msg timestamp="20220201 13:19:42.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:18:59.751" endtime="20220201 13:19:42.627"/>
</kw>
<msg timestamp="20220201 13:19:42.628" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220201 13:18:59.749" endtime="20220201 13:19:42.628"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:19:42.628" endtime="20220201 13:19:42.628"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:19:42.629" endtime="20220201 13:19:42.629"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220201 13:18:59.704" endtime="20220201 13:19:42.629"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220201 13:18:14.025" endtime="20220201 13:19:42.631"/>
</suite>
<suite id="s1-s4-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s4-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:15:02.770" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:15:08.332" level="INFO">${rc} = 255</msg>
<msg timestamp="20220201 13:15:08.332" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:15:02.765" endtime="20220201 13:15:08.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:15:08.334" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:15:08.333" endtime="20220201 13:15:08.334"/>
</kw>
<msg timestamp="20220201 13:15:08.334" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 13:15:02.764" endtime="20220201 13:15:08.334"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:15:08.343" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:15:12.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:15:12.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:15:08.341" endtime="20220201 13:15:12.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:15:12.595" level="INFO"/>
<status status="PASS" starttime="20220201 13:15:12.594" endtime="20220201 13:15:12.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:15:12.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:15:12.596" endtime="20220201 13:15:12.596"/>
</kw>
<status status="PASS" starttime="20220201 13:15:08.340" endtime="20220201 13:15:12.597"/>
</kw>
<msg timestamp="20220201 13:15:12.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:15:08.340" endtime="20220201 13:15:12.598"/>
</kw>
<msg timestamp="20220201 13:15:12.599" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220201 13:15:08.339" endtime="20220201 13:15:12.599"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:15:12.599" endtime="20220201 13:15:12.600"/>
</kw>
<status status="PASS" starttime="20220201 13:15:08.336" endtime="20220201 13:15:12.600"/>
</kw>
<status status="PASS" starttime="20220201 13:15:08.335" endtime="20220201 13:15:12.600"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:15:12.605" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:15:16.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:15:16.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:15:12.603" endtime="20220201 13:15:16.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:15:16.883" level="INFO"/>
<status status="PASS" starttime="20220201 13:15:16.882" endtime="20220201 13:15:16.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:15:16.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:15:16.883" endtime="20220201 13:15:16.884"/>
</kw>
<status status="PASS" starttime="20220201 13:15:12.602" endtime="20220201 13:15:16.884"/>
</kw>
<msg timestamp="20220201 13:15:16.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:15:12.602" endtime="20220201 13:15:16.885"/>
</kw>
<status status="PASS" starttime="20220201 13:15:12.601" endtime="20220201 13:15:16.885"/>
</kw>
<status status="PASS" starttime="20220201 13:15:12.601" endtime="20220201 13:15:16.885"/>
</kw>
<status status="PASS" starttime="20220201 13:15:12.600" endtime="20220201 13:15:16.885"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220201 13:15:16.886" endtime="20220201 13:15:16.890"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:15:16.895" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:15:21.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:15:21.741" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:15...</msg>
<status status="PASS" starttime="20220201 13:15:16.892" endtime="20220201 13:15:21.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:15:21.743" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:15:16.710Z",
  "modificationTime" : "2022-02-01T13:15:16.710Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220201 13:15:21.742" endtime="20220201 13:15:21.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:15:21.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:15:21.744" endtime="20220201 13:15:21.745"/>
</kw>
<status status="PASS" starttime="20220201 13:15:16.892" endtime="20220201 13:15:21.745"/>
</kw>
<msg timestamp="20220201 13:15:21.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:15:16.891" endtime="20220201 13:15:21.746"/>
</kw>
<msg timestamp="20220201 13:15:21.746" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T13:15...</msg>
<status status="PASS" starttime="20220201 13:15:16.891" endtime="20220201 13:15:21.746"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 13:15:21.746" endtime="20220201 13:15:21.747"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:15:21.753" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:15:21.752" endtime="20220201 13:15:21.753"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:15:21.754" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:15:21.753" endtime="20220201 13:15:21.754"/>
</kw>
<status status="PASS" starttime="20220201 13:15:21.752" endtime="20220201 13:15:21.755"/>
</kw>
<msg timestamp="20220201 13:15:21.755" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:15:21.750" endtime="20220201 13:15:21.755"/>
</kw>
<status status="PASS" starttime="20220201 13:15:21.749" endtime="20220201 13:15:21.755"/>
</kw>
<msg timestamp="20220201 13:15:21.756" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 13:15:21.748" endtime="20220201 13:15:21.756"/>
</kw>
<msg timestamp="20220201 13:15:21.756" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 13:15:21.747" endtime="20220201 13:15:21.756"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:15:21.761" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:15:26.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:15:26.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:15:21.758" endtime="20220201 13:15:26.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:15:26.224" level="INFO"/>
<status status="PASS" starttime="20220201 13:15:26.224" endtime="20220201 13:15:26.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:15:26.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:15:26.225" endtime="20220201 13:15:26.225"/>
</kw>
<status status="PASS" starttime="20220201 13:15:21.757" endtime="20220201 13:15:26.226"/>
</kw>
<msg timestamp="20220201 13:15:26.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:15:21.757" endtime="20220201 13:15:26.226"/>
</kw>
<status status="PASS" starttime="20220201 13:15:21.756" endtime="20220201 13:15:26.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:15:26.231" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:15:34.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:15:34.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:15:26.229" endtime="20220201 13:15:34.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:15:34.693" level="INFO"/>
<status status="PASS" starttime="20220201 13:15:34.690" endtime="20220201 13:15:34.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:15:34.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:15:34.694" endtime="20220201 13:15:34.696"/>
</kw>
<status status="PASS" starttime="20220201 13:15:26.228" endtime="20220201 13:15:34.696"/>
</kw>
<msg timestamp="20220201 13:15:34.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:15:26.228" endtime="20220201 13:15:34.697"/>
</kw>
<status status="PASS" starttime="20220201 13:15:26.227" endtime="20220201 13:15:34.697"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:15:34.702" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:15:41.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:15:41.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:15:34.699" endtime="20220201 13:15:41.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:15:41.722" level="INFO"/>
<status status="PASS" starttime="20220201 13:15:41.721" endtime="20220201 13:15:41.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:15:41.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:15:41.722" endtime="20220201 13:15:41.723"/>
</kw>
<status status="PASS" starttime="20220201 13:15:34.699" endtime="20220201 13:15:41.723"/>
</kw>
<msg timestamp="20220201 13:15:41.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:15:34.698" endtime="20220201 13:15:41.724"/>
</kw>
<status status="PASS" starttime="20220201 13:15:34.697" endtime="20220201 13:15:41.724"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:15:41.728" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:15:48.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:15:48.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:15:41.726" endtime="20220201 13:15:48.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:15:48.889" level="INFO"/>
<status status="PASS" starttime="20220201 13:15:48.888" endtime="20220201 13:15:48.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:15:48.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:15:48.889" endtime="20220201 13:15:48.891"/>
</kw>
<status status="PASS" starttime="20220201 13:15:41.725" endtime="20220201 13:15:48.891"/>
</kw>
<msg timestamp="20220201 13:15:48.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:15:41.725" endtime="20220201 13:15:48.892"/>
</kw>
<status status="PASS" starttime="20220201 13:15:41.724" endtime="20220201 13:15:48.892"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 13:15:02.763" endtime="20220201 13:15:48.892"/>
</test>
<test id="s1-s4-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 13:15:48.904" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 13:15:48.904" endtime="20220201 13:15:48.904"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 13:15:48.905" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 13:15:48.904" endtime="20220201 13:15:48.905"/>
</kw>
<status status="PASS" starttime="20220201 13:15:48.903" endtime="20220201 13:15:48.906"/>
</kw>
<msg timestamp="20220201 13:15:48.906" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 13:15:48.901" endtime="20220201 13:15:48.906"/>
</kw>
<status status="PASS" starttime="20220201 13:15:48.900" endtime="20220201 13:15:48.906"/>
</kw>
<msg timestamp="20220201 13:15:48.907" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:15:48.899" endtime="20220201 13:15:48.907"/>
</kw>
<msg timestamp="20220201 13:15:48.907" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 13:15:48.894" endtime="20220201 13:15:48.907"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:15:48.912" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:15:52.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:15:52.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:15:48.909" endtime="20220201 13:15:52.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:15:52.951" level="INFO"/>
<status status="PASS" starttime="20220201 13:15:52.950" endtime="20220201 13:15:52.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:15:52.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:15:52.951" endtime="20220201 13:15:52.952"/>
</kw>
<status status="PASS" starttime="20220201 13:15:48.908" endtime="20220201 13:15:52.952"/>
</kw>
<msg timestamp="20220201 13:15:52.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:15:48.908" endtime="20220201 13:15:52.953"/>
</kw>
<status status="PASS" starttime="20220201 13:15:48.907" endtime="20220201 13:15:52.953"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 13:15:52.957" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 13:15:57.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 13:15:57.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 13:15:52.955" endtime="20220201 13:15:57.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 13:15:57.207" level="INFO"/>
<status status="PASS" starttime="20220201 13:15:57.206" endtime="20220201 13:15:57.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 13:15:57.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 13:15:57.207" endtime="20220201 13:15:57.208"/>
</kw>
<status status="PASS" starttime="20220201 13:15:52.954" endtime="20220201 13:15:57.208"/>
</kw>
<msg timestamp="20220201 13:15:57.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 13:15:52.954" endtime="20220201 13:15:57.209"/>
</kw>
<status status="PASS" starttime="20220201 13:15:52.953" endtime="20220201 13:15:57.210"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 13:15:48.893" endtime="20220201 13:15:57.210"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220201 13:15:02.684" endtime="20220201 13:15:57.212"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="257913"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="956985"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-mr">ozone-mr</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="hadoop27">ozone-mr.hadoop27</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="hadoopfs-o3fs">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="mapreduce-o3fs">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="hadoopfs-ofs">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="mapreduce-ofs">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Createmrenv">ozone-mr.hadoop27.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="hadoop31">ozone-mr.hadoop31</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="hadoopfs-o3fs">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="mapreduce-o3fs">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="hadoopfs-ofs">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="mapreduce-ofs">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="Createmrenv">ozone-mr.hadoop31.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s3" name="hadoop32">ozone-mr.hadoop32</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="hadoopfs-o3fs">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s2" name="mapreduce-o3fs">ozone-mr.hadoop32.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s3" name="hadoopfs-ofs">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s4" name="mapreduce-ofs">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="Createmrenv">ozone-mr.hadoop32.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s4" name="hadoop33">ozone-mr.hadoop33</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s1" name="hadoopfs-o3fs">ozone-mr.hadoop33.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s2" name="mapreduce-o3fs">ozone-mr.hadoop33.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s3" name="hadoopfs-ofs">ozone-mr.hadoop33.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s4" name="mapreduce-ofs">ozone-mr.hadoop33.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s5" name="Createmrenv">ozone-mr.hadoop33.Createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
