<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220201 01:28:04.674" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:26:17.548" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:26:27.643" level="INFO">${rc} = 255</msg>
<msg timestamp="20220201 01:26:27.643" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 01:26:17.543" endtime="20220201 01:26:27.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:26:27.645" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 01:26:27.644" endtime="20220201 01:26:27.645"/>
</kw>
<msg timestamp="20220201 01:26:27.646" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220201 01:26:17.541" endtime="20220201 01:26:27.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:26:27.652" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:26:35.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:26:35.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 01:26:27.649" endtime="20220201 01:26:35.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:26:35.398" level="INFO"/>
<status status="PASS" starttime="20220201 01:26:35.396" endtime="20220201 01:26:35.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:26:35.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:26:35.399" endtime="20220201 01:26:35.400"/>
</kw>
<status status="PASS" starttime="20220201 01:26:27.648" endtime="20220201 01:26:35.401"/>
</kw>
<msg timestamp="20220201 01:26:35.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:26:27.648" endtime="20220201 01:26:35.403"/>
</kw>
<msg timestamp="20220201 01:26:35.403" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220201 01:26:27.647" endtime="20220201 01:26:35.403"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 01:26:35.404" endtime="20220201 01:26:35.404"/>
</kw>
<status status="PASS" starttime="20220201 01:26:27.646" endtime="20220201 01:26:35.404"/>
</kw>
<status status="PASS" starttime="20220201 01:26:27.646" endtime="20220201 01:26:35.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:26:35.410" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:26:44.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:26:44.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 01:26:35.408" endtime="20220201 01:26:44.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:26:44.230" level="INFO"/>
<status status="PASS" starttime="20220201 01:26:44.229" endtime="20220201 01:26:44.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:26:44.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:26:44.231" endtime="20220201 01:26:44.232"/>
</kw>
<status status="PASS" starttime="20220201 01:26:35.407" endtime="20220201 01:26:44.233"/>
</kw>
<msg timestamp="20220201 01:26:44.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:26:35.406" endtime="20220201 01:26:44.234"/>
</kw>
<status status="PASS" starttime="20220201 01:26:35.406" endtime="20220201 01:26:44.234"/>
</kw>
<status status="PASS" starttime="20220201 01:26:35.405" endtime="20220201 01:26:44.234"/>
</kw>
<status status="PASS" starttime="20220201 01:26:35.405" endtime="20220201 01:26:44.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220201 01:26:44.235" endtime="20220201 01:26:44.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:26:44.249" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:26:52.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:26:52.641" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T01:26...</msg>
<status status="PASS" starttime="20220201 01:26:44.243" endtime="20220201 01:26:52.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:26:52.643" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T01:26:43.738Z",
  "modificationTime" : "2022-02-01T01:26:43.738Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20220201 01:26:52.642" endtime="20220201 01:26:52.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:26:52.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:26:52.643" endtime="20220201 01:26:52.644"/>
</kw>
<status status="PASS" starttime="20220201 01:26:44.242" endtime="20220201 01:26:52.645"/>
</kw>
<msg timestamp="20220201 01:26:52.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:26:44.236" endtime="20220201 01:26:52.645"/>
</kw>
<msg timestamp="20220201 01:26:52.646" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-01T01:26...</msg>
<status status="PASS" starttime="20220201 01:26:44.236" endtime="20220201 01:26:52.646"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220201 01:26:52.646" endtime="20220201 01:26:52.646"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 01:26:52.653" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 01:26:52.652" endtime="20220201 01:26:52.653"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 01:26:52.654" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 01:26:52.653" endtime="20220201 01:26:52.654"/>
</kw>
<status status="PASS" starttime="20220201 01:26:52.651" endtime="20220201 01:26:52.654"/>
</kw>
<msg timestamp="20220201 01:26:52.654" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 01:26:52.650" endtime="20220201 01:26:52.654"/>
</kw>
<status status="PASS" starttime="20220201 01:26:52.648" endtime="20220201 01:26:52.655"/>
</kw>
<msg timestamp="20220201 01:26:52.655" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 01:26:52.648" endtime="20220201 01:26:52.655"/>
</kw>
<msg timestamp="20220201 01:26:52.656" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220201 01:26:52.647" endtime="20220201 01:26:52.656"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:26:52.660" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:27:00.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:27:00.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 01:26:52.658" endtime="20220201 01:27:00.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:27:00.622" level="INFO"/>
<status status="PASS" starttime="20220201 01:27:00.622" endtime="20220201 01:27:00.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:27:00.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:27:00.623" endtime="20220201 01:27:00.624"/>
</kw>
<status status="PASS" starttime="20220201 01:26:52.657" endtime="20220201 01:27:00.624"/>
</kw>
<msg timestamp="20220201 01:27:00.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:26:52.657" endtime="20220201 01:27:00.624"/>
</kw>
<status status="PASS" starttime="20220201 01:26:52.656" endtime="20220201 01:27:00.625"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:27:00.631" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:27:17.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:27:17.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 01:27:00.628" endtime="20220201 01:27:17.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:27:17.678" level="INFO"/>
<status status="PASS" starttime="20220201 01:27:17.677" endtime="20220201 01:27:17.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:27:17.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:27:17.678" endtime="20220201 01:27:17.679"/>
</kw>
<status status="PASS" starttime="20220201 01:27:00.626" endtime="20220201 01:27:17.679"/>
</kw>
<msg timestamp="20220201 01:27:17.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:27:00.626" endtime="20220201 01:27:17.680"/>
</kw>
<status status="PASS" starttime="20220201 01:27:00.625" endtime="20220201 01:27:17.680"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:27:17.684" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:27:29.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:27:29.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 01:27:17.682" endtime="20220201 01:27:29.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:27:29.611" level="INFO"/>
<status status="PASS" starttime="20220201 01:27:29.610" endtime="20220201 01:27:29.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:27:29.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:27:29.611" endtime="20220201 01:27:29.612"/>
</kw>
<status status="PASS" starttime="20220201 01:27:17.681" endtime="20220201 01:27:29.612"/>
</kw>
<msg timestamp="20220201 01:27:29.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:27:17.681" endtime="20220201 01:27:29.613"/>
</kw>
<status status="PASS" starttime="20220201 01:27:17.680" endtime="20220201 01:27:29.613"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:27:29.617" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:27:41.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:27:41.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 01:27:29.615" endtime="20220201 01:27:41.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:27:41.776" level="INFO"/>
<status status="PASS" starttime="20220201 01:27:41.775" endtime="20220201 01:27:41.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:27:41.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:27:41.776" endtime="20220201 01:27:41.777"/>
</kw>
<status status="PASS" starttime="20220201 01:27:29.614" endtime="20220201 01:27:41.777"/>
</kw>
<msg timestamp="20220201 01:27:41.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:27:29.614" endtime="20220201 01:27:41.778"/>
</kw>
<status status="PASS" starttime="20220201 01:27:29.613" endtime="20220201 01:27:41.778"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 01:26:17.540" endtime="20220201 01:27:41.778"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220201 01:27:41.785" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220201 01:27:41.785" endtime="20220201 01:27:41.785"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220201 01:27:41.786" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220201 01:27:41.786" endtime="20220201 01:27:41.786"/>
</kw>
<status status="PASS" starttime="20220201 01:27:41.784" endtime="20220201 01:27:41.787"/>
</kw>
<msg timestamp="20220201 01:27:41.787" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220201 01:27:41.782" endtime="20220201 01:27:41.787"/>
</kw>
<status status="PASS" starttime="20220201 01:27:41.781" endtime="20220201 01:27:41.787"/>
</kw>
<msg timestamp="20220201 01:27:41.787" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 01:27:41.781" endtime="20220201 01:27:41.788"/>
</kw>
<msg timestamp="20220201 01:27:41.788" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220201 01:27:41.780" endtime="20220201 01:27:41.788"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:27:41.792" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:27:49.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:27:49.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 01:27:41.789" endtime="20220201 01:27:49.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:27:49.587" level="INFO"/>
<status status="PASS" starttime="20220201 01:27:49.586" endtime="20220201 01:27:49.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:27:49.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:27:49.587" endtime="20220201 01:27:49.588"/>
</kw>
<status status="PASS" starttime="20220201 01:27:41.789" endtime="20220201 01:27:49.588"/>
</kw>
<msg timestamp="20220201 01:27:49.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:27:41.789" endtime="20220201 01:27:49.589"/>
</kw>
<status status="PASS" starttime="20220201 01:27:41.788" endtime="20220201 01:27:49.589"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:27:49.595" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:27:57.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:27:57.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 01:27:49.593" endtime="20220201 01:27:57.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:27:57.166" level="INFO"/>
<status status="PASS" starttime="20220201 01:27:57.165" endtime="20220201 01:27:57.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:27:57.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:27:57.166" endtime="20220201 01:27:57.167"/>
</kw>
<status status="PASS" starttime="20220201 01:27:49.592" endtime="20220201 01:27:57.168"/>
</kw>
<msg timestamp="20220201 01:27:57.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:27:49.590" endtime="20220201 01:27:57.169"/>
</kw>
<status status="PASS" starttime="20220201 01:27:49.589" endtime="20220201 01:27:57.169"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 01:27:41.778" endtime="20220201 01:27:57.169"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220201 01:26:17.466" endtime="20220201 01:27:57.171"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:26:11.118" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:26:11.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:26:11.126" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220201 01:26:11.112" endtime="20220201 01:26:11.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:26:11.127" level="INFO">om</msg>
<status status="PASS" starttime="20220201 01:26:11.127" endtime="20220201 01:26:11.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:26:11.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:26:11.127" endtime="20220201 01:26:11.128"/>
</kw>
<status status="PASS" starttime="20220201 01:26:11.112" endtime="20220201 01:26:11.129"/>
</kw>
<msg timestamp="20220201 01:26:11.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:26:11.111" endtime="20220201 01:26:11.130"/>
</kw>
<msg timestamp="20220201 01:26:11.131" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20220201 01:26:11.111" endtime="20220201 01:26:11.131"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220201 01:26:11.133" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220201 01:26:11.131" endtime="20220201 01:26:11.133"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220201 01:26:11.137" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220201 01:26:11.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20220201 01:26:11.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220201 01:26:11.135" endtime="20220201 01:26:11.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220201 01:26:11.150" level="INFO"/>
<status status="PASS" starttime="20220201 01:26:11.149" endtime="20220201 01:26:11.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220201 01:26:11.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220201 01:26:11.150" endtime="20220201 01:26:11.151"/>
</kw>
<status status="PASS" starttime="20220201 01:26:11.135" endtime="20220201 01:26:11.151"/>
</kw>
<msg timestamp="20220201 01:26:11.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220201 01:26:11.135" endtime="20220201 01:26:11.152"/>
</kw>
<status status="PASS" starttime="20220201 01:26:11.134" endtime="20220201 01:26:11.152"/>
</kw>
<status status="PASS" starttime="20220201 01:26:11.133" endtime="20220201 01:26:11.152"/>
</kw>
<status status="PASS" starttime="20220201 01:26:11.110" endtime="20220201 01:26:11.153"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220201 01:26:11.108" endtime="20220201 01:26:11.154"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220201 01:26:11.029" endtime="20220201 01:26:11.156"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="99832"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
