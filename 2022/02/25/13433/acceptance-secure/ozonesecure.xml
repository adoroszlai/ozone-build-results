<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220225 13:41:21.680" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 12:56:23.513" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 12:56:23.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 12:56:23.518" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 12:56:23.509" endtime="20220225 12:56:23.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 12:56:23.520" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 12:56:23.518" endtime="20220225 12:56:23.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 12:56:23.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 12:56:23.520" endtime="20220225 12:56:23.521"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.509" endtime="20220225 12:56:23.521"/>
</kw>
<msg timestamp="20220225 12:56:23.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 12:56:23.509" endtime="20220225 12:56:23.523"/>
</kw>
<msg timestamp="20220225 12:56:23.523" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20220225 12:56:23.508" endtime="20220225 12:56:23.523"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 12:56:23.527" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 12:56:23.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 12:56:23.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 12:56:23.525" endtime="20220225 12:56:23.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 12:56:23.537" level="INFO"/>
<status status="PASS" starttime="20220225 12:56:23.536" endtime="20220225 12:56:23.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 12:56:23.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 12:56:23.537" endtime="20220225 12:56:23.538"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.524" endtime="20220225 12:56:23.538"/>
</kw>
<msg timestamp="20220225 12:56:23.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 12:56:23.524" endtime="20220225 12:56:23.539"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.524" endtime="20220225 12:56:23.539"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.523" endtime="20220225 12:56:23.539"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.508" endtime="20220225 12:56:23.540"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.507" endtime="20220225 12:56:23.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 12:56:23.544" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 12:56:23.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 12:56:23.729" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220225 12:56:23.541" endtime="20220225 12:56:23.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 12:56:23.731" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Fri, 25 Feb 2022 12:56:23 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCth/b7CxUesmdgQQTzN3XDfzflstmllNu51L9o5RdzzTl7d0kI5s56SxWyty8a2h5lCepgnEfsAsfrp6/Rj8upk/x
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1645829783698&amp;s=BOqFoDg9VidB/jiX+N6/KTLWOrElVBbUbC52xD44PCo="; Path=/; HttpOnly
Last-Modified: Fri, 25 Feb 2022 12:43:44 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220225 12:56:23.730" endtime="20220225 12:56:23.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 12:56:23.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 12:56:23.731" endtime="20220225 12:56:23.732"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.541" endtime="20220225 12:56:23.732"/>
</kw>
<msg timestamp="20220225 12:56:23.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 12:56:23.540" endtime="20220225 12:56:23.734"/>
</kw>
<msg timestamp="20220225 12:56:23.734" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220225 12:56:23.540" endtime="20220225 12:56:23.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 12:56:23.735" endtime="20220225 12:56:23.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220225 12:56:23.506" endtime="20220225 12:56:23.735"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 12:56:23.767" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 12:56:23.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 12:56:23.775" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 12:56:23.752" endtime="20220225 12:56:23.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 12:56:23.776" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 12:56:23.776" endtime="20220225 12:56:23.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 12:56:23.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 12:56:23.777" endtime="20220225 12:56:23.777"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.751" endtime="20220225 12:56:23.778"/>
</kw>
<msg timestamp="20220225 12:56:23.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 12:56:23.751" endtime="20220225 12:56:23.785"/>
</kw>
<msg timestamp="20220225 12:56:23.785" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 12:56:23.750" endtime="20220225 12:56:23.785"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 12:56:23.791" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 12:56:23.785" endtime="20220225 12:56:23.791"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 12:56:23.805" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 12:56:23.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 12:56:23.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 12:56:23.793" endtime="20220225 12:56:23.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 12:56:23.822" level="INFO"/>
<status status="PASS" starttime="20220225 12:56:23.820" endtime="20220225 12:56:23.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 12:56:23.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 12:56:23.826" endtime="20220225 12:56:23.828"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.792" endtime="20220225 12:56:23.829"/>
</kw>
<msg timestamp="20220225 12:56:23.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 12:56:23.792" endtime="20220225 12:56:23.829"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.792" endtime="20220225 12:56:23.829"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.791" endtime="20220225 12:56:23.830"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.750" endtime="20220225 12:56:23.830"/>
</kw>
<status status="PASS" starttime="20220225 12:56:23.749" endtime="20220225 12:56:23.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 12:56:23.848" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:01:23.744" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220225 12:56:23.838" endtime="20220225 13:01:23.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220225 13:01:23.745" endtime="20220225 13:01:23.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220225 13:01:23.745" endtime="20220225 13:01:23.745"/>
</kw>
<status status="FAIL" starttime="20220225 12:56:23.835" endtime="20220225 13:01:23.746"/>
</kw>
<msg timestamp="20220225 13:01:23.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220225 12:56:23.834" endtime="20220225 13:01:23.747"/>
</kw>
<status status="FAIL" starttime="20220225 12:56:23.834" endtime="20220225 13:01:23.747"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20220225 13:01:23.747" endtime="20220225 13:01:23.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:01:23.747" endtime="20220225 13:01:23.747"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220225 12:56:23.743" endtime="20220225 13:01:23.748">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20220225 12:56:23.478" endtime="20220225 13:01:23.749"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:01:23.763" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:01:26.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:01:26.620" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220225 13:01:23.760" endtime="20220225 13:01:26.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:01:26.622" level="INFO">om</msg>
<status status="PASS" starttime="20220225 13:01:26.621" endtime="20220225 13:01:26.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:01:26.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:01:26.622" endtime="20220225 13:01:26.623"/>
</kw>
<status status="PASS" starttime="20220225 13:01:23.759" endtime="20220225 13:01:26.623"/>
</kw>
<msg timestamp="20220225 13:01:26.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:01:23.758" endtime="20220225 13:01:26.624"/>
</kw>
<msg timestamp="20220225 13:01:26.625" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220225 13:01:23.757" endtime="20220225 13:01:26.626"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:01:26.626" endtime="20220225 13:01:26.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:01:26.635" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:01:29.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:01:29.778" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220225 13:01:26.632" endtime="20220225 13:01:29.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:01:29.781" level="INFO">om</msg>
<status status="PASS" starttime="20220225 13:01:29.779" endtime="20220225 13:01:29.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:01:29.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:01:29.781" endtime="20220225 13:01:29.783"/>
</kw>
<status status="PASS" starttime="20220225 13:01:26.629" endtime="20220225 13:01:29.784"/>
</kw>
<msg timestamp="20220225 13:01:29.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:01:26.629" endtime="20220225 13:01:29.785"/>
</kw>
<msg timestamp="20220225 13:01:29.785" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220225 13:01:26.627" endtime="20220225 13:01:29.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:01:29.786" endtime="20220225 13:01:29.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220225 13:01:23.756" endtime="20220225 13:01:29.787"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:01:29.798" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:01:32.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:01:32.902" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:01:29.795" endtime="20220225 13:01:32.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:01:32.903" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:01:32.903" endtime="20220225 13:01:32.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:01:32.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:01:32.904" endtime="20220225 13:01:32.904"/>
</kw>
<status status="PASS" starttime="20220225 13:01:29.794" endtime="20220225 13:01:32.905"/>
</kw>
<msg timestamp="20220225 13:01:32.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:01:29.793" endtime="20220225 13:01:32.905"/>
</kw>
<msg timestamp="20220225 13:01:32.905" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220225 13:01:29.790" endtime="20220225 13:01:32.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:01:32.906" endtime="20220225 13:01:32.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:01:32.912" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:01:35.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:01:35.978" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:01:32.908" endtime="20220225 13:01:35.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:01:35.980" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:01:35.979" endtime="20220225 13:01:35.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:01:35.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:01:35.981" endtime="20220225 13:01:35.982"/>
</kw>
<status status="PASS" starttime="20220225 13:01:32.907" endtime="20220225 13:01:35.983"/>
</kw>
<msg timestamp="20220225 13:01:35.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:01:32.907" endtime="20220225 13:01:35.984"/>
</kw>
<msg timestamp="20220225 13:01:35.985" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220225 13:01:32.906" endtime="20220225 13:01:35.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:01:35.985" endtime="20220225 13:01:35.986"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220225 13:01:29.789" endtime="20220225 13:01:35.987"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:01:35.999" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:01:38.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:01:38.609" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220225 13:01:35.992" endtime="20220225 13:01:38.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:01:38.612" level="INFO">om</msg>
<status status="PASS" starttime="20220225 13:01:38.610" endtime="20220225 13:01:38.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:01:38.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:01:38.612" endtime="20220225 13:01:38.613"/>
</kw>
<status status="PASS" starttime="20220225 13:01:35.992" endtime="20220225 13:01:38.613"/>
</kw>
<msg timestamp="20220225 13:01:38.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:01:35.991" endtime="20220225 13:01:38.614"/>
</kw>
<msg timestamp="20220225 13:01:38.614" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220225 13:01:35.991" endtime="20220225 13:01:38.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:01:38.614" endtime="20220225 13:01:38.615"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:01:38.615" endtime="20220225 13:01:38.615"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:01:38.625" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:01:41.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:01:41.071" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220225 13:01:38.617" endtime="20220225 13:01:41.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:01:41.072" level="INFO">om</msg>
<status status="PASS" starttime="20220225 13:01:41.072" endtime="20220225 13:01:41.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:01:41.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:01:41.073" endtime="20220225 13:01:41.073"/>
</kw>
<status status="PASS" starttime="20220225 13:01:38.616" endtime="20220225 13:01:41.074"/>
</kw>
<msg timestamp="20220225 13:01:41.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:01:38.616" endtime="20220225 13:01:41.074"/>
</kw>
<msg timestamp="20220225 13:01:41.075" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220225 13:01:38.615" endtime="20220225 13:01:41.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:01:41.075" endtime="20220225 13:01:41.075"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:01:41.075" endtime="20220225 13:01:41.076"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220225 13:01:35.989" endtime="20220225 13:01:41.076"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:01:41.082" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:01:43.637" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:01:43.637" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220225 13:01:41.079" endtime="20220225 13:01:43.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:01:43.638" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220225 13:01:43.637" endtime="20220225 13:01:43.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:01:43.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:01:43.638" endtime="20220225 13:01:43.639"/>
</kw>
<msg timestamp="20220225 13:01:43.639" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220225 13:01:41.078" endtime="20220225 13:01:43.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:01:43.639" endtime="20220225 13:01:43.640"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:01:43.644" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:01:46.487" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:01:46.487" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220225 13:01:43.641" endtime="20220225 13:01:46.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:01:46.489" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220225 13:01:46.488" endtime="20220225 13:01:46.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:01:46.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:01:46.489" endtime="20220225 13:01:46.490"/>
</kw>
<msg timestamp="20220225 13:01:46.490" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220225 13:01:43.640" endtime="20220225 13:01:46.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:01:46.490" endtime="20220225 13:01:46.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220225 13:01:41.077" endtime="20220225 13:01:46.491"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20220225 13:01:23.752" endtime="20220225 13:01:46.492"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220225 13:01:46.514" level="INFO">${random} = 86532</msg>
<status status="PASS" starttime="20220225 13:01:46.513" endtime="20220225 13:01:46.514"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:01:46.517" level="INFO">${source} = 86532-source</msg>
<status status="PASS" starttime="20220225 13:01:46.514" endtime="20220225 13:01:46.517"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:01:46.520" level="INFO">${target} = 86532-target</msg>
<status status="PASS" starttime="20220225 13:01:46.518" endtime="20220225 13:01:46.520"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:01:46.524" level="INFO">Running command 'ozone sh volume create 86532-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:01:53.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:01:53.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:01:46.522" endtime="20220225 13:01:53.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:01:53.709" level="INFO"/>
<status status="PASS" starttime="20220225 13:01:53.708" endtime="20220225 13:01:53.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:01:53.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:01:53.709" endtime="20220225 13:01:53.711"/>
</kw>
<status status="PASS" starttime="20220225 13:01:46.521" endtime="20220225 13:01:53.711"/>
</kw>
<msg timestamp="20220225 13:01:53.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:01:46.521" endtime="20220225 13:01:53.713"/>
</kw>
<status status="PASS" starttime="20220225 13:01:46.520" endtime="20220225 13:01:53.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:01:53.719" level="INFO">Running command 'ozone sh volume create 86532-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:02:00.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:02:00.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:01:53.716" endtime="20220225 13:02:00.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:02:00.724" level="INFO"/>
<status status="PASS" starttime="20220225 13:02:00.723" endtime="20220225 13:02:00.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:02:00.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:02:00.724" endtime="20220225 13:02:00.725"/>
</kw>
<status status="PASS" starttime="20220225 13:01:53.715" endtime="20220225 13:02:00.726"/>
</kw>
<msg timestamp="20220225 13:02:00.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:01:53.714" endtime="20220225 13:02:00.726"/>
</kw>
<status status="PASS" starttime="20220225 13:01:53.713" endtime="20220225 13:02:00.726"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:02:00.731" level="INFO">Running command 'ozone sh bucket create 86532-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:02:08.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:02:08.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:02:00.728" endtime="20220225 13:02:08.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:02:08.661" level="INFO"/>
<status status="PASS" starttime="20220225 13:02:08.660" endtime="20220225 13:02:08.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:02:08.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:02:08.661" endtime="20220225 13:02:08.662"/>
</kw>
<status status="PASS" starttime="20220225 13:02:00.728" endtime="20220225 13:02:08.662"/>
</kw>
<msg timestamp="20220225 13:02:08.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:02:00.728" endtime="20220225 13:02:08.663"/>
</kw>
<status status="PASS" starttime="20220225 13:02:00.727" endtime="20220225 13:02:08.663"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:02:08.668" level="INFO">Running command 'ozone sh key put 86532-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:05:20.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:05:20.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:02:08.665" endtime="20220225 13:05:20.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:05:20.233" level="INFO"/>
<status status="PASS" starttime="20220225 13:05:20.232" endtime="20220225 13:05:20.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:05:20.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:05:20.233" endtime="20220225 13:05:20.234"/>
</kw>
<status status="PASS" starttime="20220225 13:02:08.664" endtime="20220225 13:05:20.235"/>
</kw>
<msg timestamp="20220225 13:05:20.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:02:08.664" endtime="20220225 13:05:20.236"/>
</kw>
<status status="PASS" starttime="20220225 13:02:08.664" endtime="20220225 13:05:20.236"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:05:20.243" level="INFO">Running command 'ozone sh bucket create 86532-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:05:27.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:05:27.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:05:20.239" endtime="20220225 13:05:27.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:05:27.930" level="INFO"/>
<status status="PASS" starttime="20220225 13:05:27.928" endtime="20220225 13:05:27.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:05:27.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:05:27.931" endtime="20220225 13:05:27.932"/>
</kw>
<status status="PASS" starttime="20220225 13:05:20.238" endtime="20220225 13:05:27.933"/>
</kw>
<msg timestamp="20220225 13:05:27.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:05:20.237" endtime="20220225 13:05:27.933"/>
</kw>
<status status="PASS" starttime="20220225 13:05:20.237" endtime="20220225 13:05:27.934"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:05:27.940" level="INFO">Running command 'ozone sh bucket link 86532-source/readable-bucket 86532-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:05:35.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:05:35.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:05:27.937" endtime="20220225 13:05:35.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:05:35.942" level="INFO"/>
<status status="PASS" starttime="20220225 13:05:35.940" endtime="20220225 13:05:35.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:05:35.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:05:35.942" endtime="20220225 13:05:35.944"/>
</kw>
<status status="PASS" starttime="20220225 13:05:27.936" endtime="20220225 13:05:35.945"/>
</kw>
<msg timestamp="20220225 13:05:35.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:05:27.935" endtime="20220225 13:05:35.947"/>
</kw>
<status status="PASS" starttime="20220225 13:05:27.934" endtime="20220225 13:05:35.948"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:05:35.958" level="INFO">Running command 'ozone sh bucket link 86532-source/readable-bucket 86532-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:05:43.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:05:43.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:05:35.953" endtime="20220225 13:05:43.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:05:43.458" level="INFO"/>
<status status="PASS" starttime="20220225 13:05:43.457" endtime="20220225 13:05:43.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:05:43.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:05:43.459" endtime="20220225 13:05:43.461"/>
</kw>
<status status="PASS" starttime="20220225 13:05:35.951" endtime="20220225 13:05:43.461"/>
</kw>
<msg timestamp="20220225 13:05:43.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:05:35.950" endtime="20220225 13:05:43.463"/>
</kw>
<status status="PASS" starttime="20220225 13:05:35.949" endtime="20220225 13:05:43.464"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:05:43.471" level="INFO">Running command 'ozone sh bucket link 86532-source/unreadable-bucket 86532-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:05:48.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:05:48.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:05:43.468" endtime="20220225 13:05:48.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:05:48.441" level="INFO"/>
<status status="PASS" starttime="20220225 13:05:48.440" endtime="20220225 13:05:48.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:05:48.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:05:48.441" endtime="20220225 13:05:48.443"/>
</kw>
<status status="PASS" starttime="20220225 13:05:43.467" endtime="20220225 13:05:48.443"/>
</kw>
<msg timestamp="20220225 13:05:48.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:05:43.466" endtime="20220225 13:05:48.444"/>
</kw>
<status status="PASS" starttime="20220225 13:05:43.464" endtime="20220225 13:05:48.444"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:05:48.448" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 86532-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:05:55.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:05:55.578" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:05:48.446" endtime="20220225 13:05:55.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:05:55.579" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:05:55.578" endtime="20220225 13:05:55.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:05:55.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:05:55.580" endtime="20220225 13:05:55.581"/>
</kw>
<status status="PASS" starttime="20220225 13:05:48.445" endtime="20220225 13:05:55.581"/>
</kw>
<msg timestamp="20220225 13:05:55.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:05:48.445" endtime="20220225 13:05:55.582"/>
</kw>
<status status="PASS" starttime="20220225 13:05:48.444" endtime="20220225 13:05:55.583"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:05:55.589" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 86532-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:03.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:03.155" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:05:55.586" endtime="20220225 13:06:03.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:03.156" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:06:03.156" endtime="20220225 13:06:03.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:03.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:03.156" endtime="20220225 13:06:03.158"/>
</kw>
<status status="PASS" starttime="20220225 13:05:55.584" endtime="20220225 13:06:03.158"/>
</kw>
<msg timestamp="20220225 13:06:03.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:05:55.584" endtime="20220225 13:06:03.159"/>
</kw>
<status status="PASS" starttime="20220225 13:05:55.583" endtime="20220225 13:06:03.159"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:03.163" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 86532-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:11.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:11.981" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:06:03.161" endtime="20220225 13:06:11.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:11.983" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:06:11.982" endtime="20220225 13:06:11.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:11.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:11.983" endtime="20220225 13:06:11.985"/>
</kw>
<status status="PASS" starttime="20220225 13:06:03.160" endtime="20220225 13:06:11.985"/>
</kw>
<msg timestamp="20220225 13:06:11.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:06:03.160" endtime="20220225 13:06:11.987"/>
</kw>
<status status="PASS" starttime="20220225 13:06:03.159" endtime="20220225 13:06:11.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:11.993" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 86532-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:19.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:19.630" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:06:11.990" endtime="20220225 13:06:19.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:19.632" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:06:19.631" endtime="20220225 13:06:19.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:19.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:19.633" endtime="20220225 13:06:19.634"/>
</kw>
<status status="PASS" starttime="20220225 13:06:11.989" endtime="20220225 13:06:19.635"/>
</kw>
<msg timestamp="20220225 13:06:19.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:06:11.988" endtime="20220225 13:06:19.636"/>
</kw>
<status status="PASS" starttime="20220225 13:06:11.987" endtime="20220225 13:06:19.636"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:19.643" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 86532-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:26.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:26.784" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:06:19.640" endtime="20220225 13:06:26.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:26.785" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:06:26.785" endtime="20220225 13:06:26.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:26.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:26.786" endtime="20220225 13:06:26.786"/>
</kw>
<status status="PASS" starttime="20220225 13:06:19.639" endtime="20220225 13:06:26.787"/>
</kw>
<msg timestamp="20220225 13:06:26.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:06:19.638" endtime="20220225 13:06:26.787"/>
</kw>
<status status="PASS" starttime="20220225 13:06:19.637" endtime="20220225 13:06:26.787"/>
</kw>
<status status="PASS" starttime="20220225 13:02:00.727" endtime="20220225 13:06:26.788"/>
</kw>
<status status="PASS" starttime="20220225 13:02:00.727" endtime="20220225 13:06:26.788"/>
</kw>
<status status="PASS" starttime="20220225 13:01:46.512" endtime="20220225 13:06:26.788"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:26.796" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:26.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:26.801" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:06:26.792" endtime="20220225 13:06:26.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:26.802" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:06:26.801" endtime="20220225 13:06:26.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:26.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:26.802" endtime="20220225 13:06:26.803"/>
</kw>
<status status="PASS" starttime="20220225 13:06:26.792" endtime="20220225 13:06:26.804"/>
</kw>
<msg timestamp="20220225 13:06:26.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:06:26.791" endtime="20220225 13:06:26.805"/>
</kw>
<msg timestamp="20220225 13:06:26.805" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:06:26.791" endtime="20220225 13:06:26.806"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:06:26.809" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:06:26.806" endtime="20220225 13:06:26.809"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:26.816" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:26.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:26.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:06:26.812" endtime="20220225 13:06:26.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:26.858" level="INFO"/>
<status status="PASS" starttime="20220225 13:06:26.857" endtime="20220225 13:06:26.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:26.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:26.859" endtime="20220225 13:06:26.859"/>
</kw>
<status status="PASS" starttime="20220225 13:06:26.811" endtime="20220225 13:06:26.860"/>
</kw>
<msg timestamp="20220225 13:06:26.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:06:26.811" endtime="20220225 13:06:26.860"/>
</kw>
<status status="PASS" starttime="20220225 13:06:26.810" endtime="20220225 13:06:26.861"/>
</kw>
<status status="PASS" starttime="20220225 13:06:26.809" endtime="20220225 13:06:26.861"/>
</kw>
<status status="PASS" starttime="20220225 13:06:26.790" endtime="20220225 13:06:26.861"/>
</kw>
<status status="PASS" starttime="20220225 13:06:26.790" endtime="20220225 13:06:26.861"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:26.865" level="INFO">Running command 'ozone sh bucket link 86532-source/no-such-bucket 86532-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:34.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:34.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:06:26.863" endtime="20220225 13:06:34.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:34.436" level="INFO"/>
<status status="PASS" starttime="20220225 13:06:34.435" endtime="20220225 13:06:34.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:34.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:34.436" endtime="20220225 13:06:34.436"/>
</kw>
<status status="PASS" starttime="20220225 13:06:26.862" endtime="20220225 13:06:34.437"/>
</kw>
<msg timestamp="20220225 13:06:34.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:06:26.862" endtime="20220225 13:06:34.438"/>
</kw>
<status status="PASS" starttime="20220225 13:06:26.861" endtime="20220225 13:06:34.438"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:34.443" level="INFO">Running command 'ozone sh key list 86532-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:41.608" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:06:41.608" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220225 13:06:34.439" endtime="20220225 13:06:41.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:41.609" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220225 13:06:41.608" endtime="20220225 13:06:41.609"/>
</kw>
<msg timestamp="20220225 13:06:41.610" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220225 13:06:34.438" endtime="20220225 13:06:41.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:06:41.610" endtime="20220225 13:06:41.611"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 13:06:26.788" endtime="20220225 13:06:41.611"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:41.619" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:41.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:41.624" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:06:41.616" endtime="20220225 13:06:41.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:41.626" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:06:41.625" endtime="20220225 13:06:41.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:41.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:41.627" endtime="20220225 13:06:41.628"/>
</kw>
<status status="PASS" starttime="20220225 13:06:41.615" endtime="20220225 13:06:41.628"/>
</kw>
<msg timestamp="20220225 13:06:41.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:06:41.615" endtime="20220225 13:06:41.629"/>
</kw>
<msg timestamp="20220225 13:06:41.629" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:06:41.615" endtime="20220225 13:06:41.629"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:06:41.630" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:06:41.629" endtime="20220225 13:06:41.630"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:41.636" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:41.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:41.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:06:41.634" endtime="20220225 13:06:41.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:41.652" level="INFO"/>
<status status="PASS" starttime="20220225 13:06:41.651" endtime="20220225 13:06:41.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:41.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:41.653" endtime="20220225 13:06:41.654"/>
</kw>
<status status="PASS" starttime="20220225 13:06:41.633" endtime="20220225 13:06:41.654"/>
</kw>
<msg timestamp="20220225 13:06:41.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:06:41.632" endtime="20220225 13:06:41.655"/>
</kw>
<status status="PASS" starttime="20220225 13:06:41.631" endtime="20220225 13:06:41.655"/>
</kw>
<status status="PASS" starttime="20220225 13:06:41.631" endtime="20220225 13:06:41.655"/>
</kw>
<status status="PASS" starttime="20220225 13:06:41.614" endtime="20220225 13:06:41.656"/>
</kw>
<status status="PASS" starttime="20220225 13:06:41.613" endtime="20220225 13:06:41.656"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:41.661" level="INFO">Running command 'ozone sh bucket link 86532-source/bucket1 86532-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:49.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:49.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:06:41.658" endtime="20220225 13:06:49.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:49.452" level="INFO"/>
<status status="PASS" starttime="20220225 13:06:49.451" endtime="20220225 13:06:49.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:49.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:49.452" endtime="20220225 13:06:49.454"/>
</kw>
<status status="PASS" starttime="20220225 13:06:41.657" endtime="20220225 13:06:49.459"/>
</kw>
<msg timestamp="20220225 13:06:49.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:06:41.657" endtime="20220225 13:06:49.460"/>
</kw>
<status status="PASS" starttime="20220225 13:06:41.656" endtime="20220225 13:06:49.460"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:49.470" level="INFO">Running command 'ozone sh bucket create 86532-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:06:57.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:06:57.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:06:49.464" endtime="20220225 13:06:57.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:06:57.243" level="INFO"/>
<status status="PASS" starttime="20220225 13:06:57.243" endtime="20220225 13:06:57.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:06:57.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:06:57.244" endtime="20220225 13:06:57.244"/>
</kw>
<status status="PASS" starttime="20220225 13:06:49.464" endtime="20220225 13:06:57.244"/>
</kw>
<msg timestamp="20220225 13:06:57.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:06:49.463" endtime="20220225 13:06:57.245"/>
</kw>
<status status="PASS" starttime="20220225 13:06:49.461" endtime="20220225 13:06:57.245"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:06:57.249" level="INFO">Running command 'ozone sh key put 86532-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:08:41.613" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220225 13:06:57.247" endtime="20220225 13:08:41.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220225 13:08:41.614" endtime="20220225 13:08:41.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220225 13:08:41.614" endtime="20220225 13:08:41.615"/>
</kw>
<status status="FAIL" starttime="20220225 13:06:57.246" endtime="20220225 13:08:41.615"/>
</kw>
<msg timestamp="20220225 13:08:41.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220225 13:06:57.246" endtime="20220225 13:08:41.616"/>
</kw>
<status status="FAIL" starttime="20220225 13:06:57.245" endtime="20220225 13:08:41.616"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20220225 13:08:41.616" endtime="20220225 13:08:41.616"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220225 13:06:41.612" endtime="20220225 13:08:41.617">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:08:41.624" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:08:41.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:08:41.630" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:08:41.621" endtime="20220225 13:08:41.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:08:41.632" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:08:41.631" endtime="20220225 13:08:41.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:08:41.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:08:41.633" endtime="20220225 13:08:41.634"/>
</kw>
<status status="PASS" starttime="20220225 13:08:41.620" endtime="20220225 13:08:41.634"/>
</kw>
<msg timestamp="20220225 13:08:41.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:08:41.620" endtime="20220225 13:08:41.636"/>
</kw>
<msg timestamp="20220225 13:08:41.636" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:08:41.619" endtime="20220225 13:08:41.636"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:08:41.637" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:08:41.636" endtime="20220225 13:08:41.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:08:41.646" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:08:41.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:08:41.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:08:41.642" endtime="20220225 13:08:41.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:08:41.660" level="INFO"/>
<status status="PASS" starttime="20220225 13:08:41.658" endtime="20220225 13:08:41.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:08:41.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:08:41.661" endtime="20220225 13:08:41.662"/>
</kw>
<status status="PASS" starttime="20220225 13:08:41.641" endtime="20220225 13:08:41.663"/>
</kw>
<msg timestamp="20220225 13:08:41.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:08:41.640" endtime="20220225 13:08:41.665"/>
</kw>
<status status="PASS" starttime="20220225 13:08:41.639" endtime="20220225 13:08:41.666"/>
</kw>
<status status="PASS" starttime="20220225 13:08:41.638" endtime="20220225 13:08:41.666"/>
</kw>
<status status="PASS" starttime="20220225 13:08:41.619" endtime="20220225 13:08:41.667"/>
</kw>
<status status="PASS" starttime="20220225 13:08:41.618" endtime="20220225 13:08:41.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:08:41.674" level="INFO">Running command 'ozone sh key put 86532-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:10:41.619" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220225 13:08:41.670" endtime="20220225 13:10:41.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220225 13:10:41.620" endtime="20220225 13:10:41.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220225 13:10:41.620" endtime="20220225 13:10:41.620"/>
</kw>
<status status="FAIL" starttime="20220225 13:08:41.669" endtime="20220225 13:10:41.620"/>
</kw>
<msg timestamp="20220225 13:10:41.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220225 13:08:41.669" endtime="20220225 13:10:41.621"/>
</kw>
<status status="FAIL" starttime="20220225 13:08:41.667" endtime="20220225 13:10:41.622"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220225 13:10:41.622" endtime="20220225 13:10:41.622"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220225 13:08:41.617" endtime="20220225 13:10:41.623">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:10:41.631" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:10:41.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:10:41.634" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:10:41.626" endtime="20220225 13:10:41.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:10:41.635" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:10:41.634" endtime="20220225 13:10:41.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:10:41.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:10:41.635" endtime="20220225 13:10:41.636"/>
</kw>
<status status="PASS" starttime="20220225 13:10:41.626" endtime="20220225 13:10:41.636"/>
</kw>
<msg timestamp="20220225 13:10:41.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:10:41.625" endtime="20220225 13:10:41.637"/>
</kw>
<msg timestamp="20220225 13:10:41.637" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:10:41.625" endtime="20220225 13:10:41.637"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:10:41.638" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:10:41.637" endtime="20220225 13:10:41.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:10:41.644" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:10:41.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:10:41.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:10:41.641" endtime="20220225 13:10:41.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:10:41.659" level="INFO"/>
<status status="PASS" starttime="20220225 13:10:41.658" endtime="20220225 13:10:41.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:10:41.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:10:41.659" endtime="20220225 13:10:41.660"/>
</kw>
<status status="PASS" starttime="20220225 13:10:41.641" endtime="20220225 13:10:41.660"/>
</kw>
<msg timestamp="20220225 13:10:41.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:10:41.640" endtime="20220225 13:10:41.661"/>
</kw>
<status status="PASS" starttime="20220225 13:10:41.639" endtime="20220225 13:10:41.661"/>
</kw>
<status status="PASS" starttime="20220225 13:10:41.638" endtime="20220225 13:10:41.661"/>
</kw>
<status status="PASS" starttime="20220225 13:10:41.625" endtime="20220225 13:10:41.661"/>
</kw>
<status status="PASS" starttime="20220225 13:10:41.624" endtime="20220225 13:10:41.661"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:10:41.669" level="INFO">Running command 'ozone sh key list 86532-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:10:49.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:10:49.424" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220225 13:10:41.664" endtime="20220225 13:10:49.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:10:49.425" level="INFO">key1</msg>
<status status="PASS" starttime="20220225 13:10:49.425" endtime="20220225 13:10:49.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:10:49.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:10:49.426" endtime="20220225 13:10:49.427"/>
</kw>
<status status="PASS" starttime="20220225 13:10:41.663" endtime="20220225 13:10:49.427"/>
</kw>
<msg timestamp="20220225 13:10:49.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:10:41.663" endtime="20220225 13:10:49.429"/>
</kw>
<msg timestamp="20220225 13:10:49.430" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20220225 13:10:41.662" endtime="20220225 13:10:49.430"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:10:49.438" level="INFO">Running command 'ozone sh key list 86532-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:10:57.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:10:57.838" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220225 13:10:49.434" endtime="20220225 13:10:57.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:10:57.840" level="INFO">key1</msg>
<status status="PASS" starttime="20220225 13:10:57.839" endtime="20220225 13:10:57.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:10:57.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:10:57.841" endtime="20220225 13:10:57.845"/>
</kw>
<status status="PASS" starttime="20220225 13:10:49.433" endtime="20220225 13:10:57.846"/>
</kw>
<msg timestamp="20220225 13:10:57.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:10:49.432" endtime="20220225 13:10:57.847"/>
</kw>
<msg timestamp="20220225 13:10:57.847" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20220225 13:10:49.430" endtime="20220225 13:10:57.847"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:10:57.847" endtime="20220225 13:10:57.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:10:57.848" endtime="20220225 13:10:57.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220225 13:10:57.849" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20220225 13:10:57.848" endtime="20220225 13:10:57.849"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220225 13:10:41.623" endtime="20220225 13:10:57.850">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:10:57.858" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:10:57.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:10:57.863" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:10:57.855" endtime="20220225 13:10:57.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:10:57.865" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:10:57.863" endtime="20220225 13:10:57.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:10:57.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:10:57.865" endtime="20220225 13:10:57.866"/>
</kw>
<status status="PASS" starttime="20220225 13:10:57.854" endtime="20220225 13:10:57.867"/>
</kw>
<msg timestamp="20220225 13:10:57.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:10:57.854" endtime="20220225 13:10:57.868"/>
</kw>
<msg timestamp="20220225 13:10:57.868" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:10:57.853" endtime="20220225 13:10:57.869"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:10:57.870" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:10:57.869" endtime="20220225 13:10:57.870"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:10:57.875" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:10:57.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:10:57.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:10:57.872" endtime="20220225 13:10:57.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:10:57.889" level="INFO"/>
<status status="PASS" starttime="20220225 13:10:57.888" endtime="20220225 13:10:57.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:10:57.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:10:57.890" endtime="20220225 13:10:57.891"/>
</kw>
<status status="PASS" starttime="20220225 13:10:57.872" endtime="20220225 13:10:57.891"/>
</kw>
<msg timestamp="20220225 13:10:57.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:10:57.871" endtime="20220225 13:10:57.892"/>
</kw>
<status status="PASS" starttime="20220225 13:10:57.870" endtime="20220225 13:10:57.892"/>
</kw>
<status status="PASS" starttime="20220225 13:10:57.870" endtime="20220225 13:10:57.892"/>
</kw>
<status status="PASS" starttime="20220225 13:10:57.852" endtime="20220225 13:10:57.892"/>
</kw>
<status status="PASS" starttime="20220225 13:10:57.851" endtime="20220225 13:10:57.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:10:57.898" level="INFO">Running command 'ozone sh key delete 86532-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:04.182" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:11:04.182" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20220225 13:10:57.895" endtime="20220225 13:11:04.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:04.183" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20220225 13:11:04.182" endtime="20220225 13:11:04.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:04.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20220225 13:11:04.184" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20220225 13:11:04.183" endtime="20220225 13:11:04.185"/>
</kw>
<status status="FAIL" starttime="20220225 13:10:57.894" endtime="20220225 13:11:04.186"/>
</kw>
<msg timestamp="20220225 13:11:04.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220225 13:10:57.893" endtime="20220225 13:11:04.186"/>
</kw>
<status status="FAIL" starttime="20220225 13:10:57.893" endtime="20220225 13:11:04.187"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220225 13:11:04.187" endtime="20220225 13:11:04.187"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:11:04.187" endtime="20220225 13:11:04.187"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220225 13:10:57.850" endtime="20220225 13:11:04.188">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:04.194" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:04.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:04.198" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:11:04.192" endtime="20220225 13:11:04.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:04.200" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:11:04.199" endtime="20220225 13:11:04.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:04.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:04.200" endtime="20220225 13:11:04.201"/>
</kw>
<status status="PASS" starttime="20220225 13:11:04.191" endtime="20220225 13:11:04.201"/>
</kw>
<msg timestamp="20220225 13:11:04.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:04.191" endtime="20220225 13:11:04.201"/>
</kw>
<msg timestamp="20220225 13:11:04.202" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:11:04.191" endtime="20220225 13:11:04.202"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:11:04.203" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:11:04.202" endtime="20220225 13:11:04.203"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:04.207" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:04.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:04.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:11:04.205" endtime="20220225 13:11:04.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:04.216" level="INFO"/>
<status status="PASS" starttime="20220225 13:11:04.216" endtime="20220225 13:11:04.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:04.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:04.217" endtime="20220225 13:11:04.217"/>
</kw>
<status status="PASS" starttime="20220225 13:11:04.204" endtime="20220225 13:11:04.218"/>
</kw>
<msg timestamp="20220225 13:11:04.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:04.204" endtime="20220225 13:11:04.218"/>
</kw>
<status status="PASS" starttime="20220225 13:11:04.203" endtime="20220225 13:11:04.219"/>
</kw>
<status status="PASS" starttime="20220225 13:11:04.203" endtime="20220225 13:11:04.219"/>
</kw>
<status status="PASS" starttime="20220225 13:11:04.190" endtime="20220225 13:11:04.219"/>
</kw>
<status status="PASS" starttime="20220225 13:11:04.190" endtime="20220225 13:11:04.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:04.225" level="INFO">Running command 'ozone sh bucket list 86532-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:12.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:12.038" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220225 13:11:04.222" endtime="20220225 13:11:12.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:12.041" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:06:34.256Z",
  "modificationTime" : "2022-02-25T13:06:34.256Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:05:48.096Z",
  "modificationTime" : "2022-02-25T13:06:26.659Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:06:49.144Z",
  "modificationTime" : "2022-02-25T13:06:49.144Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:05:35.804Z",
  "modificationTime" : "2022-02-25T13:06:19.326Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:05:43.344Z",
  "modificationTime" : "2022-02-25T13:05:43.344Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220225 13:11:12.039" endtime="20220225 13:11:12.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:12.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:12.041" endtime="20220225 13:11:12.043"/>
</kw>
<status status="PASS" starttime="20220225 13:11:04.221" endtime="20220225 13:11:12.044"/>
</kw>
<msg timestamp="20220225 13:11:12.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:04.220" endtime="20220225 13:11:12.045"/>
</kw>
<msg timestamp="20220225 13:11:12.045" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220225 13:11:04.219" endtime="20220225 13:11:12.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:11:12.046" endtime="20220225 13:11:12.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:11:12.047" endtime="20220225 13:11:12.048"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 13:11:04.189" endtime="20220225 13:11:12.049"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:12.058" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:12.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:12.063" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:11:12.055" endtime="20220225 13:11:12.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:12.064" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:11:12.063" endtime="20220225 13:11:12.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:12.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:12.065" endtime="20220225 13:11:12.066"/>
</kw>
<status status="PASS" starttime="20220225 13:11:12.054" endtime="20220225 13:11:12.066"/>
</kw>
<msg timestamp="20220225 13:11:12.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:12.053" endtime="20220225 13:11:12.067"/>
</kw>
<msg timestamp="20220225 13:11:12.067" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:11:12.052" endtime="20220225 13:11:12.067"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:11:12.068" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:11:12.067" endtime="20220225 13:11:12.068"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:12.073" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:12.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:12.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:11:12.070" endtime="20220225 13:11:12.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:12.084" level="INFO"/>
<status status="PASS" starttime="20220225 13:11:12.083" endtime="20220225 13:11:12.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:12.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:12.084" endtime="20220225 13:11:12.085"/>
</kw>
<status status="PASS" starttime="20220225 13:11:12.070" endtime="20220225 13:11:12.085"/>
</kw>
<msg timestamp="20220225 13:11:12.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:12.069" endtime="20220225 13:11:12.086"/>
</kw>
<status status="PASS" starttime="20220225 13:11:12.069" endtime="20220225 13:11:12.086"/>
</kw>
<status status="PASS" starttime="20220225 13:11:12.068" endtime="20220225 13:11:12.086"/>
</kw>
<status status="PASS" starttime="20220225 13:11:12.052" endtime="20220225 13:11:12.087"/>
</kw>
<status status="PASS" starttime="20220225 13:11:12.051" endtime="20220225 13:11:12.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:12.092" level="INFO">Running command 'ozone sh bucket info 86532-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:20.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:20.534" level="INFO">${output} = {
  "volumeName" : "86532-target",
  "bucketName" : "link1",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-02-25T13:06:49.144Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220225 13:11:12.089" endtime="20220225 13:11:20.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:20.536" level="INFO">{
  "volumeName" : "86532-target",
  "bucketName" : "link1",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-02-25T13:06:49.144Z",
  "modificationTime" : "2022-02-25T13:06:49.144Z"
}</msg>
<status status="PASS" starttime="20220225 13:11:20.535" endtime="20220225 13:11:20.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:20.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:20.537" endtime="20220225 13:11:20.538"/>
</kw>
<status status="PASS" starttime="20220225 13:11:12.088" endtime="20220225 13:11:20.539"/>
</kw>
<msg timestamp="20220225 13:11:20.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:12.088" endtime="20220225 13:11:20.540"/>
</kw>
<msg timestamp="20220225 13:11:20.541" level="INFO">${result} = {
  "volumeName" : "86532-target",
  "bucketName" : "link1",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-02-25T13:06:49.144Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220225 13:11:12.087" endtime="20220225 13:11:20.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:11:20.541" endtime="20220225 13:11:20.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:11:20.543" endtime="20220225 13:11:20.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:11:20.544" endtime="20220225 13:11:20.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:11:20.545" endtime="20220225 13:11:20.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:11:20.547" endtime="20220225 13:11:20.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:11:20.548" endtime="20220225 13:11:20.549"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:11:20.549" endtime="20220225 13:11:20.550"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 13:11:12.050" endtime="20220225 13:11:20.550"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:20.560" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:20.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:20.565" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:11:20.556" endtime="20220225 13:11:20.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:20.567" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:11:20.566" endtime="20220225 13:11:20.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:20.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:20.568" endtime="20220225 13:11:20.569"/>
</kw>
<status status="PASS" starttime="20220225 13:11:20.556" endtime="20220225 13:11:20.570"/>
</kw>
<msg timestamp="20220225 13:11:20.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:20.556" endtime="20220225 13:11:20.571"/>
</kw>
<msg timestamp="20220225 13:11:20.571" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:11:20.555" endtime="20220225 13:11:20.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:11:20.573" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:11:20.572" endtime="20220225 13:11:20.573"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:20.580" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:20.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:20.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:11:20.577" endtime="20220225 13:11:20.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:20.594" level="INFO"/>
<status status="PASS" starttime="20220225 13:11:20.593" endtime="20220225 13:11:20.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:20.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:20.595" endtime="20220225 13:11:20.596"/>
</kw>
<status status="PASS" starttime="20220225 13:11:20.576" endtime="20220225 13:11:20.597"/>
</kw>
<msg timestamp="20220225 13:11:20.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:20.575" endtime="20220225 13:11:20.598"/>
</kw>
<status status="PASS" starttime="20220225 13:11:20.574" endtime="20220225 13:11:20.599"/>
</kw>
<status status="PASS" starttime="20220225 13:11:20.573" endtime="20220225 13:11:20.599"/>
</kw>
<status status="PASS" starttime="20220225 13:11:20.554" endtime="20220225 13:11:20.599"/>
</kw>
<status status="PASS" starttime="20220225 13:11:20.553" endtime="20220225 13:11:20.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:20.606" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 86532-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:28.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:28.114" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:11:20.603" endtime="20220225 13:11:28.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:28.116" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:11:28.115" endtime="20220225 13:11:28.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:28.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:28.116" endtime="20220225 13:11:28.117"/>
</kw>
<status status="PASS" starttime="20220225 13:11:20.601" endtime="20220225 13:11:28.117"/>
</kw>
<msg timestamp="20220225 13:11:28.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:20.601" endtime="20220225 13:11:28.118"/>
</kw>
<status status="PASS" starttime="20220225 13:11:20.600" endtime="20220225 13:11:28.118"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:28.124" level="INFO">Running command 'ozone sh bucket getacl 86532-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:36.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:36.050" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220225 13:11:28.121" endtime="20220225 13:11:36.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:36.052" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220225 13:11:36.051" endtime="20220225 13:11:36.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:36.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:36.052" endtime="20220225 13:11:36.053"/>
</kw>
<status status="PASS" starttime="20220225 13:11:28.121" endtime="20220225 13:11:36.053"/>
</kw>
<msg timestamp="20220225 13:11:36.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:28.120" endtime="20220225 13:11:36.054"/>
</kw>
<msg timestamp="20220225 13:11:36.054" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220225 13:11:28.119" endtime="20220225 13:11:36.054"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:11:36.054" endtime="20220225 13:11:36.055"/>
</kw>
<status status="PASS" starttime="20220225 13:11:28.119" endtime="20220225 13:11:36.055"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:36.063" level="INFO">Running command 'ozone sh bucket getacl 86532-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:44.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:44.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:11:36.061" endtime="20220225 13:11:44.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:44.454" level="INFO"/>
<status status="PASS" starttime="20220225 13:11:44.451" endtime="20220225 13:11:44.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:44.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:44.454" endtime="20220225 13:11:44.455"/>
</kw>
<status status="PASS" starttime="20220225 13:11:36.060" endtime="20220225 13:11:44.455"/>
</kw>
<msg timestamp="20220225 13:11:44.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:36.059" endtime="20220225 13:11:44.456"/>
</kw>
<msg timestamp="20220225 13:11:44.456" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220225 13:11:36.059" endtime="20220225 13:11:44.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:11:44.457" endtime="20220225 13:11:44.457"/>
</kw>
<status status="PASS" starttime="20220225 13:11:36.055" endtime="20220225 13:11:44.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:44.463" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 86532-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:52.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:52.149" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:11:44.461" endtime="20220225 13:11:52.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:52.151" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:11:52.150" endtime="20220225 13:11:52.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:52.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:52.151" endtime="20220225 13:11:52.152"/>
</kw>
<status status="PASS" starttime="20220225 13:11:44.460" endtime="20220225 13:11:52.152"/>
</kw>
<msg timestamp="20220225 13:11:52.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:44.458" endtime="20220225 13:11:52.153"/>
</kw>
<status status="PASS" starttime="20220225 13:11:44.457" endtime="20220225 13:11:52.153"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:52.160" level="INFO">Running command 'ozone sh bucket getacl 86532-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:11:59.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:11:59.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:11:52.157" endtime="20220225 13:11:59.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:11:59.703" level="INFO"/>
<status status="PASS" starttime="20220225 13:11:59.703" endtime="20220225 13:11:59.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:11:59.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:11:59.704" endtime="20220225 13:11:59.704"/>
</kw>
<status status="PASS" starttime="20220225 13:11:52.157" endtime="20220225 13:11:59.704"/>
</kw>
<msg timestamp="20220225 13:11:59.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:52.156" endtime="20220225 13:11:59.705"/>
</kw>
<msg timestamp="20220225 13:11:59.705" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220225 13:11:52.155" endtime="20220225 13:11:59.705"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:11:59.706" endtime="20220225 13:11:59.706"/>
</kw>
<status status="PASS" starttime="20220225 13:11:52.153" endtime="20220225 13:11:59.706"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:11:59.711" level="INFO">Running command 'ozone sh bucket getacl 86532-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:06.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:06.659" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20220225 13:11:59.709" endtime="20220225 13:12:06.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:06.660" level="INFO">READ</msg>
<status status="PASS" starttime="20220225 13:12:06.659" endtime="20220225 13:12:06.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:06.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:06.661" endtime="20220225 13:12:06.661"/>
</kw>
<status status="PASS" starttime="20220225 13:11:59.708" endtime="20220225 13:12:06.662"/>
</kw>
<msg timestamp="20220225 13:12:06.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:11:59.708" endtime="20220225 13:12:06.664"/>
</kw>
<msg timestamp="20220225 13:12:06.664" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20220225 13:11:59.707" endtime="20220225 13:12:06.664"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:12:06.665" endtime="20220225 13:12:06.665"/>
</kw>
<status status="PASS" starttime="20220225 13:11:59.706" endtime="20220225 13:12:06.665"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 13:11:20.551" endtime="20220225 13:12:06.666"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:06.683" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:06.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:06.687" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:12:06.679" endtime="20220225 13:12:06.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:06.689" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:12:06.688" endtime="20220225 13:12:06.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:06.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:06.689" endtime="20220225 13:12:06.689"/>
</kw>
<status status="PASS" starttime="20220225 13:12:06.678" endtime="20220225 13:12:06.690"/>
</kw>
<msg timestamp="20220225 13:12:06.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:06.677" endtime="20220225 13:12:06.691"/>
</kw>
<msg timestamp="20220225 13:12:06.691" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:12:06.675" endtime="20220225 13:12:06.691"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:12:06.692" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:12:06.691" endtime="20220225 13:12:06.692"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:06.697" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:06.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:06.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:06.694" endtime="20220225 13:12:06.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:06.730" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:06.729" endtime="20220225 13:12:06.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:06.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:06.731" endtime="20220225 13:12:06.731"/>
</kw>
<status status="PASS" starttime="20220225 13:12:06.694" endtime="20220225 13:12:06.732"/>
</kw>
<msg timestamp="20220225 13:12:06.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:06.693" endtime="20220225 13:12:06.732"/>
</kw>
<status status="PASS" starttime="20220225 13:12:06.693" endtime="20220225 13:12:06.732"/>
</kw>
<status status="PASS" starttime="20220225 13:12:06.692" endtime="20220225 13:12:06.732"/>
</kw>
<status status="PASS" starttime="20220225 13:12:06.674" endtime="20220225 13:12:06.733"/>
</kw>
<status status="PASS" starttime="20220225 13:12:06.672" endtime="20220225 13:12:06.733"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:06.739" level="INFO">Running command 'ozone sh bucket link 86532-source/bucket2 86532-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:14.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:14.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:06.735" endtime="20220225 13:12:14.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:14.261" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:14.260" endtime="20220225 13:12:14.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:14.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:14.261" endtime="20220225 13:12:14.262"/>
</kw>
<status status="PASS" starttime="20220225 13:12:06.735" endtime="20220225 13:12:14.262"/>
</kw>
<msg timestamp="20220225 13:12:14.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:06.734" endtime="20220225 13:12:14.263"/>
</kw>
<status status="PASS" starttime="20220225 13:12:06.733" endtime="20220225 13:12:14.263"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:14.266" level="INFO">Running command 'ozone sh bucket create 86532-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:20.231" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:12:20.231" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220225 13:12:14.264" endtime="20220225 13:12:20.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:20.233" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220225 13:12:20.232" endtime="20220225 13:12:20.233"/>
</kw>
<msg timestamp="20220225 13:12:20.233" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220225 13:12:14.263" endtime="20220225 13:12:20.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:12:20.235" endtime="20220225 13:12:20.236"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:20.242" level="INFO">Running command 'ozone sh bucket create 86532-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:27.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:27.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:20.238" endtime="20220225 13:12:27.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:27.581" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:27.580" endtime="20220225 13:12:27.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:27.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:27.582" endtime="20220225 13:12:27.584"/>
</kw>
<status status="PASS" starttime="20220225 13:12:20.237" endtime="20220225 13:12:27.585"/>
</kw>
<msg timestamp="20220225 13:12:27.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:20.237" endtime="20220225 13:12:27.586"/>
</kw>
<status status="PASS" starttime="20220225 13:12:20.236" endtime="20220225 13:12:27.587"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:27.593" level="INFO">Running command 'ozone sh bucket link 86532-source/bucket1 86532-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:35.239" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:12:35.239" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220225 13:12:27.589" endtime="20220225 13:12:35.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:35.242" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220225 13:12:35.240" endtime="20220225 13:12:35.242"/>
</kw>
<msg timestamp="20220225 13:12:35.243" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220225 13:12:27.587" endtime="20220225 13:12:35.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:12:35.244" endtime="20220225 13:12:35.245"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 13:12:06.670" endtime="20220225 13:12:35.245"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:35.256" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:35.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:35.262" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:12:35.253" endtime="20220225 13:12:35.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:35.264" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:12:35.263" endtime="20220225 13:12:35.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:35.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:35.265" endtime="20220225 13:12:35.266"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.252" endtime="20220225 13:12:35.270"/>
</kw>
<msg timestamp="20220225 13:12:35.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:35.251" endtime="20220225 13:12:35.271"/>
</kw>
<msg timestamp="20220225 13:12:35.271" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:12:35.250" endtime="20220225 13:12:35.271"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:12:35.273" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:12:35.272" endtime="20220225 13:12:35.273"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:35.281" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:35.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:35.290" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:35.278" endtime="20220225 13:12:35.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:35.292" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:35.291" endtime="20220225 13:12:35.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:35.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:35.292" endtime="20220225 13:12:35.293"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.277" endtime="20220225 13:12:35.294"/>
</kw>
<msg timestamp="20220225 13:12:35.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:35.276" endtime="20220225 13:12:35.294"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.275" endtime="20220225 13:12:35.294"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.274" endtime="20220225 13:12:35.295"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.249" endtime="20220225 13:12:35.295"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.247" endtime="20220225 13:12:35.295"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:35.301" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:35.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:35.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:35.299" endtime="20220225 13:12:35.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:35.308" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:35.307" endtime="20220225 13:12:35.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:35.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:35.308" endtime="20220225 13:12:35.309"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.298" endtime="20220225 13:12:35.309"/>
</kw>
<msg timestamp="20220225 13:12:35.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:35.297" endtime="20220225 13:12:35.310"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.296" endtime="20220225 13:12:35.310"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:35.314" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:35.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:35.321" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:12:35.312" endtime="20220225 13:12:35.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:35.323" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:12:35.322" endtime="20220225 13:12:35.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:35.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:35.324" endtime="20220225 13:12:35.325"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.312" endtime="20220225 13:12:35.325"/>
</kw>
<msg timestamp="20220225 13:12:35.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:35.312" endtime="20220225 13:12:35.326"/>
</kw>
<msg timestamp="20220225 13:12:35.326" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:12:35.311" endtime="20220225 13:12:35.327"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:12:35.328" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:12:35.327" endtime="20220225 13:12:35.328"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:35.333" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:35.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:35.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:35.331" endtime="20220225 13:12:35.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:35.345" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:35.344" endtime="20220225 13:12:35.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:35.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:35.345" endtime="20220225 13:12:35.346"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.330" endtime="20220225 13:12:35.347"/>
</kw>
<msg timestamp="20220225 13:12:35.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:35.329" endtime="20220225 13:12:35.348"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.328" endtime="20220225 13:12:35.349"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.328" endtime="20220225 13:12:35.349"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.311" endtime="20220225 13:12:35.349"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.310" endtime="20220225 13:12:35.349"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:35.353" level="INFO">Running command 'ozone sh key list 86532-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:43.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:43.595" level="INFO">${output} = [ {
  "volumeName" : "86532-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-02-25T13:02:15.429Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220225 13:12:35.350" endtime="20220225 13:12:43.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:43.597" level="INFO">[ {
  "volumeName" : "86532-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-02-25T13:02:15.429Z",
  "modificationTime" : "2022-02-25T13:05:19.289Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
} ]</msg>
<status status="PASS" starttime="20220225 13:12:43.596" endtime="20220225 13:12:43.597"/>
</kw>
<msg timestamp="20220225 13:12:43.597" level="INFO">${result} = [ {
  "volumeName" : "86532-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-02-25T13:02:15.429Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220225 13:12:35.349" endtime="20220225 13:12:43.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:12:43.598" endtime="20220225 13:12:43.598"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.296" endtime="20220225 13:12:43.599"/>
</kw>
<status status="PASS" starttime="20220225 13:12:35.295" endtime="20220225 13:12:43.599"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 13:12:35.246" endtime="20220225 13:12:43.599"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:43.611" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:43.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:43.616" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:12:43.608" endtime="20220225 13:12:43.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:43.618" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:12:43.616" endtime="20220225 13:12:43.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:43.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:43.618" endtime="20220225 13:12:43.619"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.607" endtime="20220225 13:12:43.620"/>
</kw>
<msg timestamp="20220225 13:12:43.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:43.606" endtime="20220225 13:12:43.621"/>
</kw>
<msg timestamp="20220225 13:12:43.622" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:12:43.604" endtime="20220225 13:12:43.622"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:12:43.623" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:12:43.622" endtime="20220225 13:12:43.623"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:43.629" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:43.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:43.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:43.626" endtime="20220225 13:12:43.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:43.645" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:43.643" endtime="20220225 13:12:43.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:43.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:43.646" endtime="20220225 13:12:43.647"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.625" endtime="20220225 13:12:43.648"/>
</kw>
<msg timestamp="20220225 13:12:43.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:43.625" endtime="20220225 13:12:43.649"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.624" endtime="20220225 13:12:43.650"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.623" endtime="20220225 13:12:43.650"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.603" endtime="20220225 13:12:43.651"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.602" endtime="20220225 13:12:43.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:43.658" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:43.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:43.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:43.655" endtime="20220225 13:12:43.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:43.666" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:43.664" endtime="20220225 13:12:43.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:43.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:43.667" endtime="20220225 13:12:43.668"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.654" endtime="20220225 13:12:43.669"/>
</kw>
<msg timestamp="20220225 13:12:43.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:43.654" endtime="20220225 13:12:43.670"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.653" endtime="20220225 13:12:43.670"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:43.677" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:43.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:43.682" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:12:43.674" endtime="20220225 13:12:43.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:43.684" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:12:43.683" endtime="20220225 13:12:43.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:43.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:43.684" endtime="20220225 13:12:43.685"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.673" endtime="20220225 13:12:43.686"/>
</kw>
<msg timestamp="20220225 13:12:43.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:43.672" endtime="20220225 13:12:43.686"/>
</kw>
<msg timestamp="20220225 13:12:43.687" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:12:43.672" endtime="20220225 13:12:43.687"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:12:43.688" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:12:43.687" endtime="20220225 13:12:43.688"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:43.694" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:43.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:43.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:43.691" endtime="20220225 13:12:43.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:43.705" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:43.704" endtime="20220225 13:12:43.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:43.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:43.706" endtime="20220225 13:12:43.706"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.690" endtime="20220225 13:12:43.707"/>
</kw>
<msg timestamp="20220225 13:12:43.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:43.690" endtime="20220225 13:12:43.708"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.689" endtime="20220225 13:12:43.710"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.688" endtime="20220225 13:12:43.710"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.671" endtime="20220225 13:12:43.710"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.671" endtime="20220225 13:12:43.710"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:43.715" level="INFO">Running command 'ozone sh key list 86532-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:50.931" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:12:50.932" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:86532-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220225 13:12:43.712" endtime="20220225 13:12:50.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:50.933" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:86532-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220225 13:12:50.932" endtime="20220225 13:12:50.935"/>
</kw>
<msg timestamp="20220225 13:12:50.936" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:86532-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220225 13:12:43.711" endtime="20220225 13:12:50.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:12:50.936" endtime="20220225 13:12:50.936"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.652" endtime="20220225 13:12:50.937"/>
</kw>
<status status="PASS" starttime="20220225 13:12:43.652" endtime="20220225 13:12:50.937"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 13:12:43.601" endtime="20220225 13:12:50.937"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:50.944" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:50.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:50.950" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:12:50.942" endtime="20220225 13:12:50.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:50.952" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:12:50.951" endtime="20220225 13:12:50.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:50.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:50.952" endtime="20220225 13:12:50.953"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.941" endtime="20220225 13:12:50.953"/>
</kw>
<msg timestamp="20220225 13:12:50.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:50.941" endtime="20220225 13:12:50.954"/>
</kw>
<msg timestamp="20220225 13:12:50.954" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:12:50.941" endtime="20220225 13:12:50.954"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:12:50.955" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:12:50.955" endtime="20220225 13:12:50.955"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:50.960" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:50.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:50.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:50.958" endtime="20220225 13:12:50.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:50.975" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:50.973" endtime="20220225 13:12:50.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:50.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:50.975" endtime="20220225 13:12:50.976"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.957" endtime="20220225 13:12:50.976"/>
</kw>
<msg timestamp="20220225 13:12:50.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:50.956" endtime="20220225 13:12:50.977"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.956" endtime="20220225 13:12:50.978"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.955" endtime="20220225 13:12:50.978"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.940" endtime="20220225 13:12:50.978"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.940" endtime="20220225 13:12:50.978"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:50.985" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:50.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:50.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:50.982" endtime="20220225 13:12:50.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:50.990" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:50.990" endtime="20220225 13:12:50.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:50.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:50.991" endtime="20220225 13:12:50.991"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.981" endtime="20220225 13:12:50.992"/>
</kw>
<msg timestamp="20220225 13:12:50.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:50.981" endtime="20220225 13:12:50.992"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.980" endtime="20220225 13:12:50.992"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:50.999" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:51.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:51.004" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:12:50.996" endtime="20220225 13:12:51.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:51.005" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:12:51.004" endtime="20220225 13:12:51.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:51.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:51.005" endtime="20220225 13:12:51.006"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.995" endtime="20220225 13:12:51.007"/>
</kw>
<msg timestamp="20220225 13:12:51.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:50.995" endtime="20220225 13:12:51.008"/>
</kw>
<msg timestamp="20220225 13:12:51.008" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:12:50.994" endtime="20220225 13:12:51.008"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:12:51.009" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:12:51.008" endtime="20220225 13:12:51.010"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:51.015" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:51.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:51.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:12:51.012" endtime="20220225 13:12:51.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:51.025" level="INFO"/>
<status status="PASS" starttime="20220225 13:12:51.024" endtime="20220225 13:12:51.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:51.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:51.025" endtime="20220225 13:12:51.026"/>
</kw>
<status status="PASS" starttime="20220225 13:12:51.011" endtime="20220225 13:12:51.026"/>
</kw>
<msg timestamp="20220225 13:12:51.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:51.011" endtime="20220225 13:12:51.027"/>
</kw>
<status status="PASS" starttime="20220225 13:12:51.010" endtime="20220225 13:12:51.027"/>
</kw>
<status status="PASS" starttime="20220225 13:12:51.010" endtime="20220225 13:12:51.028"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.993" endtime="20220225 13:12:51.028"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.993" endtime="20220225 13:12:51.028"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:51.033" level="INFO">Running command 'ozone sh bucket info 86532-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:12:58.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:12:58.683" level="INFO">${output} = {
  "volumeName" : "86532-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-02-25T13:05:48.096Z...</msg>
<status status="PASS" starttime="20220225 13:12:51.030" endtime="20220225 13:12:58.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:12:58.685" level="INFO">{
  "volumeName" : "86532-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-02-25T13:05:48.096Z",
  "modificationTime" : "2022-02-25T13:06:26.659Z"
}</msg>
<status status="PASS" starttime="20220225 13:12:58.684" endtime="20220225 13:12:58.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:12:58.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:12:58.685" endtime="20220225 13:12:58.686"/>
</kw>
<status status="PASS" starttime="20220225 13:12:51.029" endtime="20220225 13:12:58.687"/>
</kw>
<msg timestamp="20220225 13:12:58.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:12:51.029" endtime="20220225 13:12:58.688"/>
</kw>
<msg timestamp="20220225 13:12:58.688" level="INFO">${result} = {
  "volumeName" : "86532-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-02-25T13:05:48.096Z...</msg>
<status status="PASS" starttime="20220225 13:12:51.028" endtime="20220225 13:12:58.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:12:58.689" endtime="20220225 13:12:58.690"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:12:58.690" endtime="20220225 13:12:58.691"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:12:58.696" level="INFO">Running command 'ozone sh key list 86532-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:13:06.052" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:13:06.053" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:86532-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220225 13:12:58.693" endtime="20220225 13:13:06.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:13:06.056" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:86532-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220225 13:13:06.054" endtime="20220225 13:13:06.056"/>
</kw>
<msg timestamp="20220225 13:13:06.057" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:86532-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220225 13:12:58.691" endtime="20220225 13:13:06.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:13:06.057" endtime="20220225 13:13:06.058"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.980" endtime="20220225 13:13:06.059"/>
</kw>
<status status="PASS" starttime="20220225 13:12:50.979" endtime="20220225 13:13:06.059"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 13:12:50.938" endtime="20220225 13:13:06.059"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:13:06.069" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:13:06.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:13:06.077" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:13:06.065" endtime="20220225 13:13:06.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:13:06.080" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:13:06.078" endtime="20220225 13:13:06.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:13:06.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:13:06.081" endtime="20220225 13:13:06.083"/>
</kw>
<status status="PASS" starttime="20220225 13:13:06.065" endtime="20220225 13:13:06.083"/>
</kw>
<msg timestamp="20220225 13:13:06.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:13:06.064" endtime="20220225 13:13:06.084"/>
</kw>
<msg timestamp="20220225 13:13:06.084" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:13:06.064" endtime="20220225 13:13:06.084"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:13:06.085" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:13:06.085" endtime="20220225 13:13:06.086"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:13:06.093" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:13:06.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:13:06.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:13:06.090" endtime="20220225 13:13:06.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:13:06.107" level="INFO"/>
<status status="PASS" starttime="20220225 13:13:06.106" endtime="20220225 13:13:06.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:13:06.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:13:06.108" endtime="20220225 13:13:06.109"/>
</kw>
<status status="PASS" starttime="20220225 13:13:06.089" endtime="20220225 13:13:06.109"/>
</kw>
<msg timestamp="20220225 13:13:06.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:13:06.088" endtime="20220225 13:13:06.110"/>
</kw>
<status status="PASS" starttime="20220225 13:13:06.087" endtime="20220225 13:13:06.110"/>
</kw>
<status status="PASS" starttime="20220225 13:13:06.086" endtime="20220225 13:13:06.110"/>
</kw>
<status status="PASS" starttime="20220225 13:13:06.063" endtime="20220225 13:13:06.111"/>
</kw>
<status status="PASS" starttime="20220225 13:13:06.063" endtime="20220225 13:13:06.111"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:13:06.117" level="INFO">Running command 'ozone sh bucket link 86532-target/loop1 86532-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:13:13.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:13:13.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:13:06.114" endtime="20220225 13:13:13.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:13:13.338" level="INFO"/>
<status status="PASS" starttime="20220225 13:13:13.338" endtime="20220225 13:13:13.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:13:13.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:13:13.339" endtime="20220225 13:13:13.339"/>
</kw>
<status status="PASS" starttime="20220225 13:13:06.113" endtime="20220225 13:13:13.340"/>
</kw>
<msg timestamp="20220225 13:13:13.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:13:06.112" endtime="20220225 13:13:13.340"/>
</kw>
<status status="PASS" starttime="20220225 13:13:06.111" endtime="20220225 13:13:13.341"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:13:13.345" level="INFO">Running command 'ozone sh bucket link 86532-target/loop2 86532-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:13:20.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:13:20.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:13:13.343" endtime="20220225 13:13:20.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:13:20.158" level="INFO"/>
<status status="PASS" starttime="20220225 13:13:20.157" endtime="20220225 13:13:20.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:13:20.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:13:20.158" endtime="20220225 13:13:20.159"/>
</kw>
<status status="PASS" starttime="20220225 13:13:13.342" endtime="20220225 13:13:20.160"/>
</kw>
<msg timestamp="20220225 13:13:20.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:13:13.342" endtime="20220225 13:13:20.161"/>
</kw>
<status status="PASS" starttime="20220225 13:13:13.341" endtime="20220225 13:13:20.161"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:13:20.167" level="INFO">Running command 'ozone sh bucket link 86532-target/loop3 86532-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:13:25.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:13:25.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:13:20.164" endtime="20220225 13:13:25.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:13:25.912" level="INFO"/>
<status status="PASS" starttime="20220225 13:13:25.911" endtime="20220225 13:13:25.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:13:25.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:13:25.912" endtime="20220225 13:13:25.912"/>
</kw>
<status status="PASS" starttime="20220225 13:13:20.163" endtime="20220225 13:13:25.913"/>
</kw>
<msg timestamp="20220225 13:13:25.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:13:20.163" endtime="20220225 13:13:25.913"/>
</kw>
<status status="PASS" starttime="20220225 13:13:20.161" endtime="20220225 13:13:25.914"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:13:25.917" level="INFO">Running command 'ozone sh key list 86532-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:13:32.929" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:13:32.929" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 86532-target</msg>
<status status="PASS" starttime="20220225 13:13:25.915" endtime="20220225 13:13:32.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:13:32.931" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 86532-target</msg>
<status status="PASS" starttime="20220225 13:13:32.930" endtime="20220225 13:13:32.932"/>
</kw>
<msg timestamp="20220225 13:13:32.932" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 86532-target</msg>
<status status="PASS" starttime="20220225 13:13:25.914" endtime="20220225 13:13:32.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:13:32.933" endtime="20220225 13:13:32.933"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 13:13:06.061" endtime="20220225 13:13:32.933"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:13:32.944" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:13:32.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:13:32.948" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:13:32.941" endtime="20220225 13:13:32.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:13:32.949" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:13:32.949" endtime="20220225 13:13:32.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:13:32.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:13:32.950" endtime="20220225 13:13:32.951"/>
</kw>
<status status="PASS" starttime="20220225 13:13:32.940" endtime="20220225 13:13:32.951"/>
</kw>
<msg timestamp="20220225 13:13:32.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:13:32.939" endtime="20220225 13:13:32.952"/>
</kw>
<msg timestamp="20220225 13:13:32.952" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:13:32.937" endtime="20220225 13:13:32.952"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:13:32.954" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:13:32.953" endtime="20220225 13:13:32.954"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:13:32.960" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:13:32.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:13:32.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:13:32.957" endtime="20220225 13:13:32.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:13:32.973" level="INFO"/>
<status status="PASS" starttime="20220225 13:13:32.972" endtime="20220225 13:13:32.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:13:32.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:13:32.973" endtime="20220225 13:13:32.974"/>
</kw>
<status status="PASS" starttime="20220225 13:13:32.956" endtime="20220225 13:13:32.975"/>
</kw>
<msg timestamp="20220225 13:13:32.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:13:32.956" endtime="20220225 13:13:32.975"/>
</kw>
<status status="PASS" starttime="20220225 13:13:32.954" endtime="20220225 13:13:32.976"/>
</kw>
<status status="PASS" starttime="20220225 13:13:32.954" endtime="20220225 13:13:32.976"/>
</kw>
<status status="PASS" starttime="20220225 13:13:32.936" endtime="20220225 13:13:32.976"/>
</kw>
<status status="PASS" starttime="20220225 13:13:32.936" endtime="20220225 13:13:32.976"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:13:32.982" level="INFO">Running command 'ozone sh bucket link 86532-source/bucket1 86532-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:13:39.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:13:39.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:13:32.979" endtime="20220225 13:13:39.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:13:39.924" level="INFO"/>
<status status="PASS" starttime="20220225 13:13:39.923" endtime="20220225 13:13:39.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:13:39.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:13:39.924" endtime="20220225 13:13:39.926"/>
</kw>
<status status="PASS" starttime="20220225 13:13:32.978" endtime="20220225 13:13:39.926"/>
</kw>
<msg timestamp="20220225 13:13:39.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:13:32.977" endtime="20220225 13:13:39.927"/>
</kw>
<status status="PASS" starttime="20220225 13:13:32.976" endtime="20220225 13:13:39.928"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:13:39.932" level="INFO">Running command 'ozone sh key put 86532-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:15:32.936" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220225 13:13:39.930" endtime="20220225 13:15:32.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220225 13:15:32.937" endtime="20220225 13:15:32.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220225 13:15:32.937" endtime="20220225 13:15:32.937"/>
</kw>
<status status="FAIL" starttime="20220225 13:13:39.929" endtime="20220225 13:15:32.937"/>
</kw>
<msg timestamp="20220225 13:15:32.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220225 13:13:39.928" endtime="20220225 13:15:32.938"/>
</kw>
<status status="FAIL" starttime="20220225 13:13:39.928" endtime="20220225 13:15:32.938"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20220225 13:15:32.939" endtime="20220225 13:15:32.939"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220225 13:13:32.935" endtime="20220225 13:15:32.939">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:15:32.947" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:15:32.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:15:32.953" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:15:32.944" endtime="20220225 13:15:32.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:15:32.956" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:15:32.955" endtime="20220225 13:15:32.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:15:32.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:15:32.957" endtime="20220225 13:15:32.958"/>
</kw>
<status status="PASS" starttime="20220225 13:15:32.944" endtime="20220225 13:15:32.959"/>
</kw>
<msg timestamp="20220225 13:15:32.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:15:32.943" endtime="20220225 13:15:32.960"/>
</kw>
<msg timestamp="20220225 13:15:32.960" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:15:32.943" endtime="20220225 13:15:32.960"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:15:32.961" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:15:32.961" endtime="20220225 13:15:32.961"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:15:32.969" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:15:32.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:15:32.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:15:32.966" endtime="20220225 13:15:32.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:15:32.980" level="INFO"/>
<status status="PASS" starttime="20220225 13:15:32.979" endtime="20220225 13:15:32.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:15:32.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:15:32.981" endtime="20220225 13:15:32.982"/>
</kw>
<status status="PASS" starttime="20220225 13:15:32.964" endtime="20220225 13:15:32.982"/>
</kw>
<msg timestamp="20220225 13:15:32.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:15:32.964" endtime="20220225 13:15:32.983"/>
</kw>
<status status="PASS" starttime="20220225 13:15:32.963" endtime="20220225 13:15:32.984"/>
</kw>
<status status="PASS" starttime="20220225 13:15:32.962" endtime="20220225 13:15:32.984"/>
</kw>
<status status="PASS" starttime="20220225 13:15:32.942" endtime="20220225 13:15:32.984"/>
</kw>
<status status="PASS" starttime="20220225 13:15:32.941" endtime="20220225 13:15:32.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:15:32.992" level="INFO">Running command 'ozone sh bucket delete 86532-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:15:38.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:15:38.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:15:32.987" endtime="20220225 13:15:38.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:15:38.555" level="INFO"/>
<status status="PASS" starttime="20220225 13:15:38.555" endtime="20220225 13:15:38.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:15:38.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:15:38.556" endtime="20220225 13:15:38.556"/>
</kw>
<status status="PASS" starttime="20220225 13:15:32.986" endtime="20220225 13:15:38.557"/>
</kw>
<msg timestamp="20220225 13:15:38.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:15:32.986" endtime="20220225 13:15:38.557"/>
</kw>
<status status="PASS" starttime="20220225 13:15:32.985" endtime="20220225 13:15:38.557"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:15:38.562" level="INFO">Running command 'ozone sh bucket list 86532-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:15:47.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:15:47.704" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-2...</msg>
<status status="PASS" starttime="20220225 13:15:38.559" endtime="20220225 13:15:47.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:15:47.706" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:12:27.325Z",
  "modificationTime" : "2022-02-25T13:12:27.325Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:06:34.256Z",
  "modificationTime" : "2022-02-25T13:06:34.256Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:05:48.096Z",
  "modificationTime" : "2022-02-25T13:06:26.659Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:12:14.089Z",
  "modificationTime" : "2022-02-25T13:12:14.089Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:13:39.859Z",
  "modificationTime" : "2022-02-25T13:13:39.859Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:13:25.676Z",
  "modificationTime" : "2022-02-25T13:13:25.676Z",
  "sourceVolume" : "86532-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:13:13.240Z",
  "modificationTime" : "2022-02-25T13:13:13.240Z",
  "sourceVolume" : "86532-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:13:19.986Z",
  "modificationTime" : "2022-02-25T13:13:19.986Z",
  "sourceVolume" : "86532-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:05:35.804Z",
  "modificationTime" : "2022-02-25T13:06:19.326Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-25T13:05:43.344Z",
  "modificationTime" : "2022-02-25T13:05:43.344Z",
  "sourceVolume" : "86532-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220225 13:15:47.705" endtime="20220225 13:15:47.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:15:47.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:15:47.707" endtime="20220225 13:15:47.709"/>
</kw>
<status status="PASS" starttime="20220225 13:15:38.559" endtime="20220225 13:15:47.709"/>
</kw>
<msg timestamp="20220225 13:15:47.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:15:38.558" endtime="20220225 13:15:47.711"/>
</kw>
<msg timestamp="20220225 13:15:47.711" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "86532-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-2...</msg>
<status status="PASS" starttime="20220225 13:15:38.557" endtime="20220225 13:15:47.712"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:15:47.712" endtime="20220225 13:15:47.713"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:15:47.720" level="INFO">Running command 'ozone sh key list 86532-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:15:55.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:15:55.048" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220225 13:15:47.717" endtime="20220225 13:15:55.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:15:55.049" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220225 13:15:55.048" endtime="20220225 13:15:55.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:15:55.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:15:55.049" endtime="20220225 13:15:55.050"/>
</kw>
<status status="PASS" starttime="20220225 13:15:47.716" endtime="20220225 13:15:55.050"/>
</kw>
<msg timestamp="20220225 13:15:55.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:15:47.715" endtime="20220225 13:15:55.051"/>
</kw>
<msg timestamp="20220225 13:15:55.051" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20220225 13:15:47.713" endtime="20220225 13:15:55.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:15:55.051" endtime="20220225 13:15:55.052"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 13:15:32.940" endtime="20220225 13:15:55.052"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20220225 13:01:46.495" endtime="20220225 13:15:55.054"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220225 13:15:55.082" level="INFO">${random} = 55428</msg>
<status status="PASS" starttime="20220225 13:15:55.081" endtime="20220225 13:15:55.082"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:15:55.082" level="INFO">${prefix} = 55428</msg>
<status status="PASS" starttime="20220225 13:15:55.082" endtime="20220225 13:15:55.082"/>
</kw>
<status status="PASS" starttime="20220225 13:15:55.080" endtime="20220225 13:15:55.082"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:15:55.088" level="INFO">Running command 'ozone sh volume info /55428-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:16:02.059" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:16:02.060" level="INFO">${output} = VOLUME_NOT_FOUND Volume 55428-without-scheme is not found</msg>
<status status="PASS" starttime="20220225 13:15:55.086" endtime="20220225 13:16:02.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:16:02.063" level="INFO">VOLUME_NOT_FOUND Volume 55428-without-scheme is not found</msg>
<status status="PASS" starttime="20220225 13:16:02.061" endtime="20220225 13:16:02.063"/>
</kw>
<msg timestamp="20220225 13:16:02.063" level="INFO">${result} = VOLUME_NOT_FOUND Volume 55428-without-scheme is not found</msg>
<status status="PASS" starttime="20220225 13:15:55.085" endtime="20220225 13:16:02.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:16:02.064" endtime="20220225 13:16:02.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:16:02.069" level="INFO">Running command 'ozone sh volume create /55428-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:16:09.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:16:09.804" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:16:02.067" endtime="20220225 13:16:09.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:16:09.805" level="INFO"/>
<status status="PASS" starttime="20220225 13:16:09.805" endtime="20220225 13:16:09.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:16:09.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:16:09.806" endtime="20220225 13:16:09.806"/>
</kw>
<status status="PASS" starttime="20220225 13:16:02.066" endtime="20220225 13:16:09.807"/>
</kw>
<msg timestamp="20220225 13:16:09.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:16:02.066" endtime="20220225 13:16:09.807"/>
</kw>
<msg timestamp="20220225 13:16:09.808" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220225 13:16:02.065" endtime="20220225 13:16:09.808"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:16:09.808" endtime="20220225 13:16:09.808"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:16:09.813" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="55428-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:16:17.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:16:17.918" level="INFO">${output} = {
  "metadata": {},
  "name": "55428-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220225 13:16:09.811" endtime="20220225 13:16:17.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:16:17.919" level="INFO">{
  "metadata": {},
  "name": "55428-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-02-25T13:16:09.489Z",
  "modificationTime": "2022-02-25T13:16:09.489Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220225 13:16:17.919" endtime="20220225 13:16:17.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:16:17.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:16:17.920" endtime="20220225 13:16:17.920"/>
</kw>
<status status="PASS" starttime="20220225 13:16:09.810" endtime="20220225 13:16:17.921"/>
</kw>
<msg timestamp="20220225 13:16:17.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:16:09.810" endtime="20220225 13:16:17.921"/>
</kw>
<msg timestamp="20220225 13:16:17.921" level="INFO">${result} = {
  "metadata": {},
  "name": "55428-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220225 13:16:09.809" endtime="20220225 13:16:17.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:16:17.922" endtime="20220225 13:16:17.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:16:17.931" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="55428-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:16:24.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:16:24.272" level="INFO">${output} = {
  "metadata": {},
  "name": "55428-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220225 13:16:17.927" endtime="20220225 13:16:24.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:16:24.274" level="INFO">{
  "metadata": {},
  "name": "55428-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-02-25T13:16:09.489Z",
  "modificationTime": "2022-02-25T13:16:09.489Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220225 13:16:24.273" endtime="20220225 13:16:24.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:16:24.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:16:24.274" endtime="20220225 13:16:24.275"/>
</kw>
<status status="PASS" starttime="20220225 13:16:17.926" endtime="20220225 13:16:24.275"/>
</kw>
<msg timestamp="20220225 13:16:24.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:16:17.926" endtime="20220225 13:16:24.276"/>
</kw>
<msg timestamp="20220225 13:16:24.276" level="INFO">${result} = {
  "metadata": {},
  "name": "55428-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220225 13:16:17.922" endtime="20220225 13:16:24.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:16:24.276" endtime="20220225 13:16:24.277"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:16:24.281" level="INFO">Running command 'ozone sh volume setquota /55428-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:16:32.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:16:32.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:16:24.279" endtime="20220225 13:16:32.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:16:32.013" level="INFO"/>
<status status="PASS" starttime="20220225 13:16:32.013" endtime="20220225 13:16:32.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:16:32.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:16:32.014" endtime="20220225 13:16:32.014"/>
</kw>
<status status="PASS" starttime="20220225 13:16:24.278" endtime="20220225 13:16:32.015"/>
</kw>
<msg timestamp="20220225 13:16:32.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:16:24.278" endtime="20220225 13:16:32.016"/>
</kw>
<status status="PASS" starttime="20220225 13:16:24.277" endtime="20220225 13:16:32.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:16:32.024" level="INFO">Running command 'ozone sh volume info /55428-without-scheme | jq -r '. | select(.name=="55428-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:16:38.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:16:38.495" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:16:32.021" endtime="20220225 13:16:38.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:16:38.497" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220225 13:16:38.496" endtime="20220225 13:16:38.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:16:38.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:16:38.497" endtime="20220225 13:16:38.498"/>
</kw>
<status status="PASS" starttime="20220225 13:16:32.020" endtime="20220225 13:16:38.498"/>
</kw>
<msg timestamp="20220225 13:16:38.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:16:32.019" endtime="20220225 13:16:38.499"/>
</kw>
<msg timestamp="20220225 13:16:38.499" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:16:32.017" endtime="20220225 13:16:38.499"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:16:38.499" endtime="20220225 13:16:38.499"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:16:38.504" level="INFO">Running command 'ozone sh bucket create /55428-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:16:46.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:16:46.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:16:38.501" endtime="20220225 13:16:46.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:16:46.181" level="INFO"/>
<status status="PASS" starttime="20220225 13:16:46.180" endtime="20220225 13:16:46.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:16:46.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:16:46.181" endtime="20220225 13:16:46.181"/>
</kw>
<status status="PASS" starttime="20220225 13:16:38.501" endtime="20220225 13:16:46.182"/>
</kw>
<msg timestamp="20220225 13:16:46.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:16:38.500" endtime="20220225 13:16:46.183"/>
</kw>
<status status="PASS" starttime="20220225 13:16:38.500" endtime="20220225 13:16:46.183"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:16:46.188" level="INFO">Running command 'ozone sh bucket info /55428-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:16:54.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:16:54.673" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220225 13:16:46.185" endtime="20220225 13:16:54.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:16:54.674" level="INFO">DISK</msg>
<status status="PASS" starttime="20220225 13:16:54.673" endtime="20220225 13:16:54.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:16:54.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:16:54.674" endtime="20220225 13:16:54.675"/>
</kw>
<status status="PASS" starttime="20220225 13:16:46.184" endtime="20220225 13:16:54.675"/>
</kw>
<msg timestamp="20220225 13:16:54.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:16:46.184" endtime="20220225 13:16:54.676"/>
</kw>
<msg timestamp="20220225 13:16:54.676" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220225 13:16:46.183" endtime="20220225 13:16:54.676"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:16:54.676" endtime="20220225 13:16:54.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:16:54.683" level="INFO">Running command 'ozone sh bucket info /55428-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:17:02.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:17:02.669" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:16:54.679" endtime="20220225 13:17:02.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:17:02.671" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220225 13:17:02.670" endtime="20220225 13:17:02.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:17:02.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:17:02.671" endtime="20220225 13:17:02.672"/>
</kw>
<status status="PASS" starttime="20220225 13:16:54.679" endtime="20220225 13:17:02.672"/>
</kw>
<msg timestamp="20220225 13:17:02.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:16:54.678" endtime="20220225 13:17:02.673"/>
</kw>
<msg timestamp="20220225 13:17:02.673" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:16:54.677" endtime="20220225 13:17:02.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:17:02.673" endtime="20220225 13:17:02.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:17:02.679" level="INFO">Running command 'ozone sh bucket info /55428-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:17:10.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:17:10.406" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220225 13:17:02.676" endtime="20220225 13:17:10.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:17:10.407" level="INFO">100</msg>
<status status="PASS" starttime="20220225 13:17:10.407" endtime="20220225 13:17:10.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:17:10.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:17:10.408" endtime="20220225 13:17:10.408"/>
</kw>
<status status="PASS" starttime="20220225 13:17:02.675" endtime="20220225 13:17:10.408"/>
</kw>
<msg timestamp="20220225 13:17:10.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:17:02.675" endtime="20220225 13:17:10.409"/>
</kw>
<msg timestamp="20220225 13:17:10.409" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220225 13:17:02.674" endtime="20220225 13:17:10.409"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:17:10.410" endtime="20220225 13:17:10.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:17:10.414" level="INFO">Running command 'ozone sh bucket setquota /55428-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:17:17.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:17:17.416" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:17:10.412" endtime="20220225 13:17:17.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:17:17.419" level="INFO"/>
<status status="PASS" starttime="20220225 13:17:17.417" endtime="20220225 13:17:17.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:17:17.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:17:17.420" endtime="20220225 13:17:17.421"/>
</kw>
<status status="PASS" starttime="20220225 13:17:10.411" endtime="20220225 13:17:17.422"/>
</kw>
<msg timestamp="20220225 13:17:17.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:17:10.411" endtime="20220225 13:17:17.424"/>
</kw>
<status status="PASS" starttime="20220225 13:17:10.410" endtime="20220225 13:17:17.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:17:17.432" level="INFO">Running command 'ozone sh bucket info /55428-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:17:25.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:17:25.370" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220225 13:17:17.428" endtime="20220225 13:17:25.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:17:25.373" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220225 13:17:25.371" endtime="20220225 13:17:25.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:17:25.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:17:25.373" endtime="20220225 13:17:25.375"/>
</kw>
<status status="PASS" starttime="20220225 13:17:17.427" endtime="20220225 13:17:25.376"/>
</kw>
<msg timestamp="20220225 13:17:25.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:17:17.426" endtime="20220225 13:17:25.377"/>
</kw>
<msg timestamp="20220225 13:17:25.378" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220225 13:17:17.424" endtime="20220225 13:17:25.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:17:25.378" endtime="20220225 13:17:25.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:17:25.387" level="INFO">Running command 'ozone sh bucket info /55428-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:17:33.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:17:33.295" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220225 13:17:25.384" endtime="20220225 13:17:33.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:17:33.297" level="INFO">1000</msg>
<status status="PASS" starttime="20220225 13:17:33.296" endtime="20220225 13:17:33.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:17:33.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:17:33.297" endtime="20220225 13:17:33.298"/>
</kw>
<status status="PASS" starttime="20220225 13:17:25.383" endtime="20220225 13:17:33.298"/>
</kw>
<msg timestamp="20220225 13:17:33.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:17:25.382" endtime="20220225 13:17:33.299"/>
</kw>
<msg timestamp="20220225 13:17:33.300" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220225 13:17:25.379" endtime="20220225 13:17:33.300"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:17:33.300" endtime="20220225 13:17:33.301"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:17:33.308" level="INFO">Running command 'ozone sh bucket list /55428-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:17:41.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:17:41.044" level="INFO">${output} = 55428-without-scheme</msg>
<status status="PASS" starttime="20220225 13:17:33.304" endtime="20220225 13:17:41.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:17:41.045" level="INFO">55428-without-scheme</msg>
<status status="PASS" starttime="20220225 13:17:41.044" endtime="20220225 13:17:41.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:17:41.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:17:41.045" endtime="20220225 13:17:41.047"/>
</kw>
<status status="PASS" starttime="20220225 13:17:33.303" endtime="20220225 13:17:41.047"/>
</kw>
<msg timestamp="20220225 13:17:41.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:17:33.303" endtime="20220225 13:17:41.048"/>
</kw>
<msg timestamp="20220225 13:17:41.048" level="INFO">${result} = 55428-without-scheme</msg>
<status status="PASS" starttime="20220225 13:17:33.301" endtime="20220225 13:17:41.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:17:41.049" endtime="20220225 13:17:41.049"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:17:41.056" level="INFO">Running command 'ozone sh key put /55428-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:20:52.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:20:52.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:17:41.053" endtime="20220225 13:20:52.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:20:52.928" level="INFO"/>
<status status="PASS" starttime="20220225 13:20:52.927" endtime="20220225 13:20:52.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:20:52.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:20:52.928" endtime="20220225 13:20:52.929"/>
</kw>
<status status="PASS" starttime="20220225 13:17:41.052" endtime="20220225 13:20:52.929"/>
</kw>
<msg timestamp="20220225 13:20:52.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:17:41.052" endtime="20220225 13:20:52.931"/>
</kw>
<status status="PASS" starttime="20220225 13:17:41.051" endtime="20220225 13:20:52.932"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:20:52.938" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:20:52.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:20:52.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:20:52.935" endtime="20220225 13:20:52.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:20:52.945" level="INFO"/>
<status status="PASS" starttime="20220225 13:20:52.944" endtime="20220225 13:20:52.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:20:52.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:20:52.947" endtime="20220225 13:20:52.948"/>
</kw>
<status status="PASS" starttime="20220225 13:20:52.933" endtime="20220225 13:20:52.948"/>
</kw>
<msg timestamp="20220225 13:20:52.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:20:52.933" endtime="20220225 13:20:52.949"/>
</kw>
<status status="PASS" starttime="20220225 13:20:52.932" endtime="20220225 13:20:52.950"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:20:52.955" level="INFO">Running command 'ozone sh key get /55428-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:20:55.084" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220225 13:20:52.952" endtime="20220225 13:20:55.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.085" endtime="20220225 13:20:55.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.085" endtime="20220225 13:20:55.085"/>
</kw>
<status status="FAIL" starttime="20220225 13:20:52.951" endtime="20220225 13:20:55.086"/>
</kw>
<msg timestamp="20220225 13:20:55.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220225 13:20:52.951" endtime="20220225 13:20:55.087"/>
</kw>
<status status="FAIL" starttime="20220225 13:20:52.950" endtime="20220225 13:20:55.088"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.089" endtime="20220225 13:20:55.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.090" endtime="20220225 13:20:55.090"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.090" endtime="20220225 13:20:55.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.090" endtime="20220225 13:20:55.091"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.091" endtime="20220225 13:20:55.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.091" endtime="20220225 13:20:55.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.091" endtime="20220225 13:20:55.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.091" endtime="20220225 13:20:55.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.094" endtime="20220225 13:20:55.095"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.096" endtime="20220225 13:20:55.096"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.097" endtime="20220225 13:20:55.097"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.097" endtime="20220225 13:20:55.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.100" endtime="20220225 13:20:55.100"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.100" endtime="20220225 13:20:55.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.101" endtime="20220225 13:20:55.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.102" endtime="20220225 13:20:55.103"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.104" endtime="20220225 13:20:55.104"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.105" endtime="20220225 13:20:55.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.105" endtime="20220225 13:20:55.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.107" endtime="20220225 13:20:55.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.108" endtime="20220225 13:20:55.109"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.109" endtime="20220225 13:20:55.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.109" endtime="20220225 13:20:55.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.110" endtime="20220225 13:20:55.110"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.111" endtime="20220225 13:20:55.111"/>
</kw>
<status status="FAIL" starttime="20220225 13:17:41.050" endtime="20220225 13:20:55.112"/>
</kw>
<status status="FAIL" starttime="20220225 13:17:41.050" endtime="20220225 13:20:55.112"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.113" endtime="20220225 13:20:55.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.114" endtime="20220225 13:20:55.114"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.117" endtime="20220225 13:20:55.118"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.118" endtime="20220225 13:20:55.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.120" endtime="20220225 13:20:55.120"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.121" endtime="20220225 13:20:55.122"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.122" endtime="20220225 13:20:55.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.123" endtime="20220225 13:20:55.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.124" endtime="20220225 13:20:55.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.125" endtime="20220225 13:20:55.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.126" endtime="20220225 13:20:55.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.127" endtime="20220225 13:20:55.128"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.128" endtime="20220225 13:20:55.128"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.129" endtime="20220225 13:20:55.129"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.129" endtime="20220225 13:20:55.129"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.130" endtime="20220225 13:20:55.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.130" endtime="20220225 13:20:55.130"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.131" endtime="20220225 13:20:55.131"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.131" endtime="20220225 13:20:55.132"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.132" endtime="20220225 13:20:55.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.133" endtime="20220225 13:20:55.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.133" endtime="20220225 13:20:55.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.134" endtime="20220225 13:20:55.134"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:20:55.135" endtime="20220225 13:20:55.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.135" endtime="20220225 13:20:55.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:20:55.136" endtime="20220225 13:20:55.136"/>
</kw>
<status status="FAIL" starttime="20220225 13:15:55.083" endtime="20220225 13:20:55.137"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220225 13:15:55.083" endtime="20220225 13:20:55.143">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20220225 13:15:55.059" endtime="20220225 13:20:55.150"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220225 13:20:55.200" level="INFO">${random} = 88057</msg>
<status status="PASS" starttime="20220225 13:20:55.199" endtime="20220225 13:20:55.200"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:20:55.201" level="INFO">${prefix} = 88057</msg>
<status status="PASS" starttime="20220225 13:20:55.200" endtime="20220225 13:20:55.201"/>
</kw>
<status status="PASS" starttime="20220225 13:20:55.199" endtime="20220225 13:20:55.203"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:20:55.214" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:20:55.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:20:55.232" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:20:55.209" endtime="20220225 13:20:55.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:20:55.234" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:20:55.232" endtime="20220225 13:20:55.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:20:55.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:20:55.235" endtime="20220225 13:20:55.235"/>
</kw>
<status status="PASS" starttime="20220225 13:20:55.208" endtime="20220225 13:20:55.236"/>
</kw>
<msg timestamp="20220225 13:20:55.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:20:55.208" endtime="20220225 13:20:55.237"/>
</kw>
<msg timestamp="20220225 13:20:55.237" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:20:55.207" endtime="20220225 13:20:55.237"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:20:55.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:20:55.237" endtime="20220225 13:20:55.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:20:55.256" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:20:55.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:20:55.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:20:55.248" endtime="20220225 13:20:55.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:20:55.339" level="INFO"/>
<status status="PASS" starttime="20220225 13:20:55.338" endtime="20220225 13:20:55.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:20:55.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:20:55.339" endtime="20220225 13:20:55.340"/>
</kw>
<status status="PASS" starttime="20220225 13:20:55.246" endtime="20220225 13:20:55.340"/>
</kw>
<msg timestamp="20220225 13:20:55.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:20:55.245" endtime="20220225 13:20:55.341"/>
</kw>
<status status="PASS" starttime="20220225 13:20:55.244" endtime="20220225 13:20:55.341"/>
</kw>
<status status="PASS" starttime="20220225 13:20:55.243" endtime="20220225 13:20:55.341"/>
</kw>
<status status="PASS" starttime="20220225 13:20:55.207" endtime="20220225 13:20:55.341"/>
</kw>
<status status="PASS" starttime="20220225 13:20:55.206" endtime="20220225 13:20:55.341"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:20:55.351" level="INFO">Running command 'ozone sh volume info o3://om:9862/88057-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:21:11.089" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:21:11.090" level="INFO">${output} = VOLUME_NOT_FOUND Volume 88057-with-host is not found</msg>
<status status="PASS" starttime="20220225 13:20:55.343" endtime="20220225 13:21:11.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:21:11.093" level="INFO">VOLUME_NOT_FOUND Volume 88057-with-host is not found</msg>
<status status="PASS" starttime="20220225 13:21:11.091" endtime="20220225 13:21:11.093"/>
</kw>
<msg timestamp="20220225 13:21:11.094" level="INFO">${result} = VOLUME_NOT_FOUND Volume 88057-with-host is not found</msg>
<status status="PASS" starttime="20220225 13:20:55.342" endtime="20220225 13:21:11.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:21:11.094" endtime="20220225 13:21:11.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:21:11.118" level="INFO">Running command 'ozone sh volume create o3://om:9862/88057-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:21:18.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:21:18.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:21:11.099" endtime="20220225 13:21:18.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:21:18.062" level="INFO"/>
<status status="PASS" starttime="20220225 13:21:18.061" endtime="20220225 13:21:18.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:21:18.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:21:18.062" endtime="20220225 13:21:18.062"/>
</kw>
<status status="PASS" starttime="20220225 13:21:11.097" endtime="20220225 13:21:18.063"/>
</kw>
<msg timestamp="20220225 13:21:18.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:21:11.096" endtime="20220225 13:21:18.063"/>
</kw>
<msg timestamp="20220225 13:21:18.064" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220225 13:21:11.095" endtime="20220225 13:21:18.064"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:21:18.064" endtime="20220225 13:21:18.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:21:18.071" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="88057-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:21:26.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:21:26.116" level="INFO">${output} = {
  "metadata": {},
  "name": "88057-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220225 13:21:18.068" endtime="20220225 13:21:26.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:21:26.117" level="INFO">{
  "metadata": {},
  "name": "88057-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-02-25T13:21:17.663Z",
  "modificationTime": "2022-02-25T13:21:17.663Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220225 13:21:26.116" endtime="20220225 13:21:26.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:21:26.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:21:26.118" endtime="20220225 13:21:26.118"/>
</kw>
<status status="PASS" starttime="20220225 13:21:18.067" endtime="20220225 13:21:26.119"/>
</kw>
<msg timestamp="20220225 13:21:26.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:21:18.067" endtime="20220225 13:21:26.119"/>
</kw>
<msg timestamp="20220225 13:21:26.120" level="INFO">${result} = {
  "metadata": {},
  "name": "88057-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220225 13:21:18.065" endtime="20220225 13:21:26.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:21:26.120" endtime="20220225 13:21:26.121"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:21:26.126" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="88057-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:21:34.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:21:34.374" level="INFO">${output} = {
  "metadata": {},
  "name": "88057-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220225 13:21:26.123" endtime="20220225 13:21:34.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:21:34.376" level="INFO">{
  "metadata": {},
  "name": "88057-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-02-25T13:21:17.663Z",
  "modificationTime": "2022-02-25T13:21:17.663Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220225 13:21:34.375" endtime="20220225 13:21:34.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:21:34.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:21:34.377" endtime="20220225 13:21:34.378"/>
</kw>
<status status="PASS" starttime="20220225 13:21:26.122" endtime="20220225 13:21:34.379"/>
</kw>
<msg timestamp="20220225 13:21:34.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:21:26.122" endtime="20220225 13:21:34.381"/>
</kw>
<msg timestamp="20220225 13:21:34.381" level="INFO">${result} = {
  "metadata": {},
  "name": "88057-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220225 13:21:26.121" endtime="20220225 13:21:34.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:21:34.382" endtime="20220225 13:21:34.384"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:21:34.392" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/88057-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:21:42.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:21:42.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:21:34.388" endtime="20220225 13:21:42.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:21:42.099" level="INFO"/>
<status status="PASS" starttime="20220225 13:21:42.097" endtime="20220225 13:21:42.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:21:42.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:21:42.100" endtime="20220225 13:21:42.101"/>
</kw>
<status status="PASS" starttime="20220225 13:21:34.386" endtime="20220225 13:21:42.102"/>
</kw>
<msg timestamp="20220225 13:21:42.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:21:34.386" endtime="20220225 13:21:42.103"/>
</kw>
<status status="PASS" starttime="20220225 13:21:34.384" endtime="20220225 13:21:42.104"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:21:42.112" level="INFO">Running command 'ozone sh volume info o3://om:9862/88057-with-host | jq -r '. | select(.name=="88057-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:21:50.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:21:50.039" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:21:42.109" endtime="20220225 13:21:50.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:21:50.041" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220225 13:21:50.039" endtime="20220225 13:21:50.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:21:50.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:21:50.041" endtime="20220225 13:21:50.042"/>
</kw>
<status status="PASS" starttime="20220225 13:21:42.107" endtime="20220225 13:21:50.042"/>
</kw>
<msg timestamp="20220225 13:21:50.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:21:42.107" endtime="20220225 13:21:50.043"/>
</kw>
<msg timestamp="20220225 13:21:50.044" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:21:42.104" endtime="20220225 13:21:50.044"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:21:50.044" endtime="20220225 13:21:50.045"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:21:50.052" level="INFO">Running command 'ozone sh bucket create o3://om:9862/88057-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:21:57.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:21:57.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:21:50.049" endtime="20220225 13:21:57.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:21:57.687" level="INFO"/>
<status status="PASS" starttime="20220225 13:21:57.685" endtime="20220225 13:21:57.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:21:57.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:21:57.688" endtime="20220225 13:21:57.690"/>
</kw>
<status status="PASS" starttime="20220225 13:21:50.048" endtime="20220225 13:21:57.691"/>
</kw>
<msg timestamp="20220225 13:21:57.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:21:50.047" endtime="20220225 13:21:57.692"/>
</kw>
<status status="PASS" starttime="20220225 13:21:50.046" endtime="20220225 13:21:57.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:21:57.700" level="INFO">Running command 'ozone sh bucket info o3://om:9862/88057-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:22:04.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:22:04.022" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220225 13:21:57.696" endtime="20220225 13:22:04.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:22:04.024" level="INFO">DISK</msg>
<status status="PASS" starttime="20220225 13:22:04.023" endtime="20220225 13:22:04.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:22:04.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:22:04.024" endtime="20220225 13:22:04.029"/>
</kw>
<status status="PASS" starttime="20220225 13:21:57.695" endtime="20220225 13:22:04.029"/>
</kw>
<msg timestamp="20220225 13:22:04.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:21:57.695" endtime="20220225 13:22:04.030"/>
</kw>
<msg timestamp="20220225 13:22:04.030" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220225 13:21:57.693" endtime="20220225 13:22:04.030"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:22:04.031" endtime="20220225 13:22:04.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:22:04.036" level="INFO">Running command 'ozone sh bucket info o3://om:9862/88057-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:22:12.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:22:12.386" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:22:04.033" endtime="20220225 13:22:12.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:22:12.389" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220225 13:22:12.388" endtime="20220225 13:22:12.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:22:12.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:22:12.390" endtime="20220225 13:22:12.390"/>
</kw>
<status status="PASS" starttime="20220225 13:22:04.032" endtime="20220225 13:22:12.391"/>
</kw>
<msg timestamp="20220225 13:22:12.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:22:04.032" endtime="20220225 13:22:12.391"/>
</kw>
<msg timestamp="20220225 13:22:12.392" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:22:04.031" endtime="20220225 13:22:12.392"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:22:12.392" endtime="20220225 13:22:12.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:22:12.399" level="INFO">Running command 'ozone sh bucket info o3://om:9862/88057-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:22:20.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:22:20.306" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220225 13:22:12.395" endtime="20220225 13:22:20.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:22:20.307" level="INFO">100</msg>
<status status="PASS" starttime="20220225 13:22:20.307" endtime="20220225 13:22:20.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:22:20.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:22:20.308" endtime="20220225 13:22:20.309"/>
</kw>
<status status="PASS" starttime="20220225 13:22:12.394" endtime="20220225 13:22:20.309"/>
</kw>
<msg timestamp="20220225 13:22:20.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:22:12.394" endtime="20220225 13:22:20.310"/>
</kw>
<msg timestamp="20220225 13:22:20.310" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220225 13:22:12.392" endtime="20220225 13:22:20.310"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:22:20.310" endtime="20220225 13:22:20.311"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:22:20.315" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/88057-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:22:27.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:22:27.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:22:20.312" endtime="20220225 13:22:27.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:22:27.957" level="INFO"/>
<status status="PASS" starttime="20220225 13:22:27.956" endtime="20220225 13:22:27.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:22:27.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:22:27.957" endtime="20220225 13:22:27.958"/>
</kw>
<status status="PASS" starttime="20220225 13:22:20.312" endtime="20220225 13:22:27.958"/>
</kw>
<msg timestamp="20220225 13:22:27.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:22:20.312" endtime="20220225 13:22:27.959"/>
</kw>
<status status="PASS" starttime="20220225 13:22:20.311" endtime="20220225 13:22:27.962"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:22:27.969" level="INFO">Running command 'ozone sh bucket info o3://om:9862/88057-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:22:35.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:22:35.609" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220225 13:22:27.965" endtime="20220225 13:22:35.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:22:35.612" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220225 13:22:35.610" endtime="20220225 13:22:35.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:22:35.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:22:35.612" endtime="20220225 13:22:35.613"/>
</kw>
<status status="PASS" starttime="20220225 13:22:27.964" endtime="20220225 13:22:35.614"/>
</kw>
<msg timestamp="20220225 13:22:35.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:22:27.964" endtime="20220225 13:22:35.615"/>
</kw>
<msg timestamp="20220225 13:22:35.616" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220225 13:22:27.963" endtime="20220225 13:22:35.616"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:22:35.616" endtime="20220225 13:22:35.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:22:35.640" level="INFO">Running command 'ozone sh bucket info o3://om:9862/88057-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:22:44.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:22:44.090" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220225 13:22:35.637" endtime="20220225 13:22:44.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:22:44.091" level="INFO">1000</msg>
<status status="PASS" starttime="20220225 13:22:44.091" endtime="20220225 13:22:44.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:22:44.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:22:44.092" endtime="20220225 13:22:44.092"/>
</kw>
<status status="PASS" starttime="20220225 13:22:35.636" endtime="20220225 13:22:44.093"/>
</kw>
<msg timestamp="20220225 13:22:44.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:22:35.618" endtime="20220225 13:22:44.093"/>
</kw>
<msg timestamp="20220225 13:22:44.094" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220225 13:22:35.617" endtime="20220225 13:22:44.094"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:22:44.094" endtime="20220225 13:22:44.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:22:44.100" level="INFO">Running command 'ozone sh bucket list o3://om:9862/88057-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:22:51.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:22:51.892" level="INFO">${output} = 88057-with-host</msg>
<status status="PASS" starttime="20220225 13:22:44.097" endtime="20220225 13:22:51.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:22:51.894" level="INFO">88057-with-host</msg>
<status status="PASS" starttime="20220225 13:22:51.893" endtime="20220225 13:22:51.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:22:51.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:22:51.895" endtime="20220225 13:22:51.896"/>
</kw>
<status status="PASS" starttime="20220225 13:22:44.096" endtime="20220225 13:22:51.896"/>
</kw>
<msg timestamp="20220225 13:22:51.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:22:44.096" endtime="20220225 13:22:51.898"/>
</kw>
<msg timestamp="20220225 13:22:51.898" level="INFO">${result} = 88057-with-host</msg>
<status status="PASS" starttime="20220225 13:22:44.095" endtime="20220225 13:22:51.898"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:22:51.899" endtime="20220225 13:22:51.900"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:22:51.907" level="INFO">Running command 'ozone sh key put o3://om:9862/88057-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:25:55.205" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220225 13:22:51.904" endtime="20220225 13:25:55.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.206" endtime="20220225 13:25:55.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.206" endtime="20220225 13:25:55.207"/>
</kw>
<status status="FAIL" starttime="20220225 13:22:51.903" endtime="20220225 13:25:55.207"/>
</kw>
<msg timestamp="20220225 13:25:55.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220225 13:22:51.903" endtime="20220225 13:25:55.208"/>
</kw>
<status status="FAIL" starttime="20220225 13:22:51.902" endtime="20220225 13:25:55.208"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.208" endtime="20220225 13:25:55.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.208" endtime="20220225 13:25:55.208"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.209" endtime="20220225 13:25:55.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.209" endtime="20220225 13:25:55.209"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.209" endtime="20220225 13:25:55.209"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.209" endtime="20220225 13:25:55.209"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.209" endtime="20220225 13:25:55.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.209" endtime="20220225 13:25:55.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.210" endtime="20220225 13:25:55.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.210" endtime="20220225 13:25:55.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.210" endtime="20220225 13:25:55.210"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.210" endtime="20220225 13:25:55.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.210" endtime="20220225 13:25:55.210"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.210" endtime="20220225 13:25:55.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.211" endtime="20220225 13:25:55.211"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.211" endtime="20220225 13:25:55.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.211" endtime="20220225 13:25:55.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.211" endtime="20220225 13:25:55.211"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.211" endtime="20220225 13:25:55.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.211" endtime="20220225 13:25:55.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.212" endtime="20220225 13:25:55.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.212" endtime="20220225 13:25:55.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.212" endtime="20220225 13:25:55.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.212" endtime="20220225 13:25:55.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.212" endtime="20220225 13:25:55.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.212" endtime="20220225 13:25:55.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.213" endtime="20220225 13:25:55.213"/>
</kw>
<status status="FAIL" starttime="20220225 13:22:51.900" endtime="20220225 13:25:55.213"/>
</kw>
<status status="FAIL" starttime="20220225 13:22:51.900" endtime="20220225 13:25:55.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.213" endtime="20220225 13:25:55.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.213" endtime="20220225 13:25:55.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.213" endtime="20220225 13:25:55.214"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.214" endtime="20220225 13:25:55.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.214" endtime="20220225 13:25:55.214"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.215" endtime="20220225 13:25:55.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.215" endtime="20220225 13:25:55.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.215" endtime="20220225 13:25:55.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.215" endtime="20220225 13:25:55.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.215" endtime="20220225 13:25:55.215"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.216" endtime="20220225 13:25:55.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.216" endtime="20220225 13:25:55.216"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.216" endtime="20220225 13:25:55.216"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.216" endtime="20220225 13:25:55.216"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.216" endtime="20220225 13:25:55.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.216" endtime="20220225 13:25:55.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.217" endtime="20220225 13:25:55.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.217" endtime="20220225 13:25:55.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.217" endtime="20220225 13:25:55.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.217" endtime="20220225 13:25:55.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.217" endtime="20220225 13:25:55.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.217" endtime="20220225 13:25:55.217"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.217" endtime="20220225 13:25:55.218"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:25:55.218" endtime="20220225 13:25:55.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.218" endtime="20220225 13:25:55.218"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:25:55.218" endtime="20220225 13:25:55.218"/>
</kw>
<status status="FAIL" starttime="20220225 13:20:55.342" endtime="20220225 13:25:55.218"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220225 13:20:55.204" endtime="20220225 13:25:55.219">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:25:55.227" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:25:55.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:25:55.232" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:25:55.224" endtime="20220225 13:25:55.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:25:55.234" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:25:55.233" endtime="20220225 13:25:55.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:25:55.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:25:55.235" endtime="20220225 13:25:55.236"/>
</kw>
<status status="PASS" starttime="20220225 13:25:55.224" endtime="20220225 13:25:55.237"/>
</kw>
<msg timestamp="20220225 13:25:55.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:25:55.223" endtime="20220225 13:25:55.239"/>
</kw>
<msg timestamp="20220225 13:25:55.239" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:25:55.223" endtime="20220225 13:25:55.239"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:25:55.241" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:25:55.240" endtime="20220225 13:25:55.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:25:55.249" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:25:55.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:25:55.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:25:55.246" endtime="20220225 13:25:55.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:25:55.266" level="INFO"/>
<status status="PASS" starttime="20220225 13:25:55.265" endtime="20220225 13:25:55.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:25:55.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:25:55.267" endtime="20220225 13:25:55.268"/>
</kw>
<status status="PASS" starttime="20220225 13:25:55.245" endtime="20220225 13:25:55.268"/>
</kw>
<msg timestamp="20220225 13:25:55.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:25:55.244" endtime="20220225 13:25:55.269"/>
</kw>
<status status="PASS" starttime="20220225 13:25:55.243" endtime="20220225 13:25:55.269"/>
</kw>
<status status="PASS" starttime="20220225 13:25:55.242" endtime="20220225 13:25:55.270"/>
</kw>
<status status="PASS" starttime="20220225 13:25:55.222" endtime="20220225 13:25:55.270"/>
</kw>
<status status="PASS" starttime="20220225 13:25:55.221" endtime="20220225 13:25:55.270"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:25:55.276" level="INFO">Running command 'ozone sh volume create o3://om:9862/88057-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:02.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:02.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:25:55.273" endtime="20220225 13:26:02.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:02.769" level="INFO"/>
<status status="PASS" starttime="20220225 13:26:02.769" endtime="20220225 13:26:02.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:02.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:02.770" endtime="20220225 13:26:02.771"/>
</kw>
<status status="PASS" starttime="20220225 13:25:55.273" endtime="20220225 13:26:02.771"/>
</kw>
<msg timestamp="20220225 13:26:02.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:25:55.272" endtime="20220225 13:26:02.772"/>
</kw>
<status status="PASS" starttime="20220225 13:25:55.271" endtime="20220225 13:26:02.772"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:02.777" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/88057-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:11.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:11.273" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:26:02.774" endtime="20220225 13:26:11.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:11.274" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:26:11.273" endtime="20220225 13:26:11.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:11.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:11.274" endtime="20220225 13:26:11.275"/>
</kw>
<status status="PASS" starttime="20220225 13:26:02.773" endtime="20220225 13:26:11.275"/>
</kw>
<msg timestamp="20220225 13:26:11.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:02.773" endtime="20220225 13:26:11.276"/>
</kw>
<msg timestamp="20220225 13:26:11.276" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:26:02.772" endtime="20220225 13:26:11.276"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:26:11.276" endtime="20220225 13:26:11.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:11.284" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/88057-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:18.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:18.880" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220225 13:26:11.281" endtime="20220225 13:26:18.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:18.881" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220225 13:26:18.881" endtime="20220225 13:26:18.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:18.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:18.882" endtime="20220225 13:26:18.883"/>
</kw>
<status status="PASS" starttime="20220225 13:26:11.280" endtime="20220225 13:26:18.883"/>
</kw>
<msg timestamp="20220225 13:26:18.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:11.279" endtime="20220225 13:26:18.884"/>
</kw>
<msg timestamp="20220225 13:26:18.885" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220225 13:26:11.278" endtime="20220225 13:26:18.885"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:18.891" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/88057-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:24.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:24.747" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220225 13:26:18.888" endtime="20220225 13:26:24.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:24.750" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:26:24.748" endtime="20220225 13:26:24.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:24.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:24.751" endtime="20220225 13:26:24.753"/>
</kw>
<status status="PASS" starttime="20220225 13:26:18.887" endtime="20220225 13:26:24.754"/>
</kw>
<msg timestamp="20220225 13:26:24.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:18.886" endtime="20220225 13:26:24.755"/>
</kw>
<msg timestamp="20220225 13:26:24.755" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220225 13:26:18.885" endtime="20220225 13:26:24.755"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:26:24.755" endtime="20220225 13:26:24.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:24.761" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/88057-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:31.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:31.583" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220225 13:26:24.758" endtime="20220225 13:26:31.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:31.584" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220225 13:26:31.583" endtime="20220225 13:26:31.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:31.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:31.584" endtime="20220225 13:26:31.585"/>
</kw>
<status status="PASS" starttime="20220225 13:26:24.757" endtime="20220225 13:26:31.585"/>
</kw>
<msg timestamp="20220225 13:26:31.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:24.757" endtime="20220225 13:26:31.586"/>
</kw>
<msg timestamp="20220225 13:26:31.586" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220225 13:26:24.756" endtime="20220225 13:26:31.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:31.591" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/88057-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:38.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:38.372" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220225 13:26:31.588" endtime="20220225 13:26:38.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:38.374" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:26:38.373" endtime="20220225 13:26:38.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:38.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:38.375" endtime="20220225 13:26:38.375"/>
</kw>
<status status="PASS" starttime="20220225 13:26:31.587" endtime="20220225 13:26:38.376"/>
</kw>
<msg timestamp="20220225 13:26:38.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:31.587" endtime="20220225 13:26:38.376"/>
</kw>
<msg timestamp="20220225 13:26:38.377" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220225 13:26:31.586" endtime="20220225 13:26:38.377"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:26:38.377" endtime="20220225 13:26:38.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:38.383" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/88057-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:45.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:45.861" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:26:38.380" endtime="20220225 13:26:45.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:45.864" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:26:45.861" endtime="20220225 13:26:45.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:45.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:45.864" endtime="20220225 13:26:45.865"/>
</kw>
<status status="PASS" starttime="20220225 13:26:38.380" endtime="20220225 13:26:45.871"/>
</kw>
<msg timestamp="20220225 13:26:45.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:38.379" endtime="20220225 13:26:45.871"/>
</kw>
<msg timestamp="20220225 13:26:45.872" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:26:38.378" endtime="20220225 13:26:45.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:45.880" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/88057-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:52.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:52.203" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220225 13:26:45.877" endtime="20220225 13:26:52.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:52.204" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:26:52.203" endtime="20220225 13:26:52.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:52.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:52.204" endtime="20220225 13:26:52.205"/>
</kw>
<status status="PASS" starttime="20220225 13:26:45.876" endtime="20220225 13:26:52.205"/>
</kw>
<msg timestamp="20220225 13:26:52.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:45.875" endtime="20220225 13:26:52.206"/>
</kw>
<msg timestamp="20220225 13:26:52.206" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220225 13:26:45.872" endtime="20220225 13:26:52.206"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:26:52.206" endtime="20220225 13:26:52.207"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:26:52.207" endtime="20220225 13:26:52.208"/>
</kw>
<status status="PASS" starttime="20220225 13:25:55.270" endtime="20220225 13:26:52.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220225 13:25:55.220" endtime="20220225 13:26:52.208"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:52.214" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:52.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:52.219" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:26:52.212" endtime="20220225 13:26:52.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:52.220" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:26:52.219" endtime="20220225 13:26:52.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:52.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:52.220" endtime="20220225 13:26:52.221"/>
</kw>
<status status="PASS" starttime="20220225 13:26:52.212" endtime="20220225 13:26:52.221"/>
</kw>
<msg timestamp="20220225 13:26:52.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:52.211" endtime="20220225 13:26:52.222"/>
</kw>
<msg timestamp="20220225 13:26:52.222" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:26:52.211" endtime="20220225 13:26:52.222"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:26:52.223" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:26:52.222" endtime="20220225 13:26:52.223"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:52.228" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:52.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:52.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:26:52.226" endtime="20220225 13:26:52.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:52.265" level="INFO"/>
<status status="PASS" starttime="20220225 13:26:52.264" endtime="20220225 13:26:52.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:52.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:52.266" endtime="20220225 13:26:52.266"/>
</kw>
<status status="PASS" starttime="20220225 13:26:52.225" endtime="20220225 13:26:52.266"/>
</kw>
<msg timestamp="20220225 13:26:52.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:52.225" endtime="20220225 13:26:52.267"/>
</kw>
<status status="PASS" starttime="20220225 13:26:52.224" endtime="20220225 13:26:52.267"/>
</kw>
<status status="PASS" starttime="20220225 13:26:52.223" endtime="20220225 13:26:52.267"/>
</kw>
<status status="PASS" starttime="20220225 13:26:52.210" endtime="20220225 13:26:52.268"/>
</kw>
<status status="PASS" starttime="20220225 13:26:52.210" endtime="20220225 13:26:52.268"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:52.276" level="INFO">Running command 'ozone sh bucket create o3://om:9862/88057-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:26:59.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:26:59.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:26:52.273" endtime="20220225 13:26:59.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:26:59.583" level="INFO"/>
<status status="PASS" starttime="20220225 13:26:59.583" endtime="20220225 13:26:59.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:26:59.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:26:59.584" endtime="20220225 13:26:59.584"/>
</kw>
<status status="PASS" starttime="20220225 13:26:52.272" endtime="20220225 13:26:59.585"/>
</kw>
<msg timestamp="20220225 13:26:59.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:52.271" endtime="20220225 13:26:59.585"/>
</kw>
<status status="PASS" starttime="20220225 13:26:52.270" endtime="20220225 13:26:59.586"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:26:59.590" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/88057-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:27:07.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:27:07.449" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220225 13:26:59.587" endtime="20220225 13:27:07.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:27:07.451" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:27:07.450" endtime="20220225 13:27:07.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:27:07.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:27:07.452" endtime="20220225 13:27:07.452"/>
</kw>
<status status="PASS" starttime="20220225 13:26:59.587" endtime="20220225 13:27:07.453"/>
</kw>
<msg timestamp="20220225 13:27:07.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:26:59.587" endtime="20220225 13:27:07.453"/>
</kw>
<msg timestamp="20220225 13:27:07.454" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220225 13:26:59.586" endtime="20220225 13:27:07.454"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:27:07.454" endtime="20220225 13:27:07.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:27:07.459" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/88057-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:27:14.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:27:14.043" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220225 13:27:07.456" endtime="20220225 13:27:14.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:27:14.045" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220225 13:27:14.044" endtime="20220225 13:27:14.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:27:14.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:27:14.045" endtime="20220225 13:27:14.046"/>
</kw>
<status status="PASS" starttime="20220225 13:27:07.456" endtime="20220225 13:27:14.046"/>
</kw>
<msg timestamp="20220225 13:27:14.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:27:07.456" endtime="20220225 13:27:14.047"/>
</kw>
<msg timestamp="20220225 13:27:14.047" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220225 13:27:07.455" endtime="20220225 13:27:14.047"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:27:14.054" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/88057-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:27:20.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:27:20.865" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220225 13:27:14.050" endtime="20220225 13:27:20.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:27:20.867" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:27:20.866" endtime="20220225 13:27:20.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:27:20.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:27:20.867" endtime="20220225 13:27:20.868"/>
</kw>
<status status="PASS" starttime="20220225 13:27:14.049" endtime="20220225 13:27:20.868"/>
</kw>
<msg timestamp="20220225 13:27:20.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:27:14.049" endtime="20220225 13:27:20.869"/>
</kw>
<msg timestamp="20220225 13:27:20.870" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220225 13:27:14.047" endtime="20220225 13:27:20.870"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:27:20.870" endtime="20220225 13:27:20.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:27:20.876" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/88057-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:27:28.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:27:28.274" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220225 13:27:20.873" endtime="20220225 13:27:28.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:27:28.276" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220225 13:27:28.274" endtime="20220225 13:27:28.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:27:28.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:27:28.276" endtime="20220225 13:27:28.276"/>
</kw>
<status status="PASS" starttime="20220225 13:27:20.872" endtime="20220225 13:27:28.277"/>
</kw>
<msg timestamp="20220225 13:27:28.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:27:20.872" endtime="20220225 13:27:28.277"/>
</kw>
<msg timestamp="20220225 13:27:28.278" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220225 13:27:20.871" endtime="20220225 13:27:28.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:27:28.283" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/88057-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:27:36.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:27:36.090" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220225 13:27:28.280" endtime="20220225 13:27:36.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:27:36.092" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:27:36.091" endtime="20220225 13:27:36.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:27:36.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:27:36.092" endtime="20220225 13:27:36.093"/>
</kw>
<status status="PASS" starttime="20220225 13:27:28.279" endtime="20220225 13:27:36.093"/>
</kw>
<msg timestamp="20220225 13:27:36.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:27:28.279" endtime="20220225 13:27:36.094"/>
</kw>
<msg timestamp="20220225 13:27:36.094" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220225 13:27:28.278" endtime="20220225 13:27:36.094"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:27:36.094" endtime="20220225 13:27:36.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:27:36.099" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/88057-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:27:43.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:27:43.669" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:27:36.097" endtime="20220225 13:27:43.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:27:43.671" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:27:43.669" endtime="20220225 13:27:43.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:27:43.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:27:43.671" endtime="20220225 13:27:43.672"/>
</kw>
<status status="PASS" starttime="20220225 13:27:36.096" endtime="20220225 13:27:43.672"/>
</kw>
<msg timestamp="20220225 13:27:43.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:27:36.096" endtime="20220225 13:27:43.673"/>
</kw>
<msg timestamp="20220225 13:27:43.673" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:27:36.095" endtime="20220225 13:27:43.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:27:43.678" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/88057-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:27:51.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:27:51.037" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220225 13:27:43.675" endtime="20220225 13:27:51.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:27:51.040" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:27:51.038" endtime="20220225 13:27:51.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:27:51.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:27:51.040" endtime="20220225 13:27:51.041"/>
</kw>
<status status="PASS" starttime="20220225 13:27:43.675" endtime="20220225 13:27:51.042"/>
</kw>
<msg timestamp="20220225 13:27:51.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:27:43.674" endtime="20220225 13:27:51.043"/>
</kw>
<msg timestamp="20220225 13:27:51.043" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220225 13:27:43.673" endtime="20220225 13:27:51.043"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:27:51.044" endtime="20220225 13:27:51.045"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:27:51.045" endtime="20220225 13:27:51.046"/>
</kw>
<status status="PASS" starttime="20220225 13:26:52.268" endtime="20220225 13:27:51.046"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220225 13:26:52.209" endtime="20220225 13:27:51.047"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:27:51.056" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:27:51.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:27:51.061" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:27:51.053" endtime="20220225 13:27:51.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:27:51.063" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:27:51.062" endtime="20220225 13:27:51.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:27:51.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:27:51.064" endtime="20220225 13:27:51.065"/>
</kw>
<status status="PASS" starttime="20220225 13:27:51.052" endtime="20220225 13:27:51.065"/>
</kw>
<msg timestamp="20220225 13:27:51.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:27:51.052" endtime="20220225 13:27:51.066"/>
</kw>
<msg timestamp="20220225 13:27:51.067" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:27:51.051" endtime="20220225 13:27:51.067"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:27:51.068" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:27:51.067" endtime="20220225 13:27:51.069"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:27:51.076" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:27:51.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:27:51.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:27:51.072" endtime="20220225 13:27:51.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:27:51.089" level="INFO"/>
<status status="PASS" starttime="20220225 13:27:51.088" endtime="20220225 13:27:51.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:27:51.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:27:51.089" endtime="20220225 13:27:51.090"/>
</kw>
<status status="PASS" starttime="20220225 13:27:51.071" endtime="20220225 13:27:51.091"/>
</kw>
<msg timestamp="20220225 13:27:51.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:27:51.071" endtime="20220225 13:27:51.092"/>
</kw>
<status status="PASS" starttime="20220225 13:27:51.069" endtime="20220225 13:27:51.092"/>
</kw>
<status status="PASS" starttime="20220225 13:27:51.069" endtime="20220225 13:27:51.092"/>
</kw>
<status status="PASS" starttime="20220225 13:27:51.050" endtime="20220225 13:27:51.093"/>
</kw>
<status status="PASS" starttime="20220225 13:27:51.049" endtime="20220225 13:27:51.093"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:27:51.103" level="INFO">Running command 'ozone sh key put o3://om:9862/88057-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:31:03.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:31:03.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:27:51.097" endtime="20220225 13:31:03.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:31:03.263" level="INFO"/>
<status status="PASS" starttime="20220225 13:31:03.262" endtime="20220225 13:31:03.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:31:03.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:31:03.263" endtime="20220225 13:31:03.264"/>
</kw>
<status status="PASS" starttime="20220225 13:27:51.096" endtime="20220225 13:31:03.264"/>
</kw>
<msg timestamp="20220225 13:31:03.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:27:51.096" endtime="20220225 13:31:03.265"/>
</kw>
<status status="PASS" starttime="20220225 13:27:51.095" endtime="20220225 13:31:03.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:31:03.273" level="INFO">Running command 'ozone sh key getacl o3://om:9862/88057-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:31:09.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:31:09.434" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220225 13:31:03.270" endtime="20220225 13:31:09.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:31:09.435" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:31:09.435" endtime="20220225 13:31:09.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:31:09.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:31:09.436" endtime="20220225 13:31:09.436"/>
</kw>
<status status="PASS" starttime="20220225 13:31:03.267" endtime="20220225 13:31:09.436"/>
</kw>
<msg timestamp="20220225 13:31:09.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:31:03.266" endtime="20220225 13:31:09.437"/>
</kw>
<msg timestamp="20220225 13:31:09.437" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220225 13:31:03.265" endtime="20220225 13:31:09.437"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:31:09.438" endtime="20220225 13:31:09.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:31:09.442" level="INFO">Running command 'ozone sh key addacl o3://om:9862/88057-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:31:15.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:31:15.005" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:31:09.440" endtime="20220225 13:31:15.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:31:15.007" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:31:15.006" endtime="20220225 13:31:15.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:31:15.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:31:15.007" endtime="20220225 13:31:15.009"/>
</kw>
<status status="PASS" starttime="20220225 13:31:09.439" endtime="20220225 13:31:15.009"/>
</kw>
<msg timestamp="20220225 13:31:15.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:31:09.439" endtime="20220225 13:31:15.011"/>
</kw>
<msg timestamp="20220225 13:31:15.012" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220225 13:31:09.438" endtime="20220225 13:31:15.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:31:15.019" level="INFO">Running command 'ozone sh key getacl o3://om:9862/88057-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:31:23.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:31:23.000" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220225 13:31:15.015" endtime="20220225 13:31:23.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:31:23.001" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:31:23.001" endtime="20220225 13:31:23.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:31:23.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:31:23.002" endtime="20220225 13:31:23.003"/>
</kw>
<status status="PASS" starttime="20220225 13:31:15.014" endtime="20220225 13:31:23.003"/>
</kw>
<msg timestamp="20220225 13:31:23.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:31:15.013" endtime="20220225 13:31:23.005"/>
</kw>
<msg timestamp="20220225 13:31:23.005" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220225 13:31:15.012" endtime="20220225 13:31:23.005"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:31:23.006" endtime="20220225 13:31:23.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:31:23.014" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/88057-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:31:29.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:31:29.943" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220225 13:31:23.011" endtime="20220225 13:31:29.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:31:29.947" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220225 13:31:29.944" endtime="20220225 13:31:29.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:31:29.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:31:29.948" endtime="20220225 13:31:29.949"/>
</kw>
<status status="PASS" starttime="20220225 13:31:23.010" endtime="20220225 13:31:29.950"/>
</kw>
<msg timestamp="20220225 13:31:29.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:31:23.009" endtime="20220225 13:31:29.952"/>
</kw>
<msg timestamp="20220225 13:31:29.952" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220225 13:31:23.007" endtime="20220225 13:31:29.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:31:29.960" level="INFO">Running command 'ozone sh key getacl o3://om:9862/88057-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:31:38.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:31:38.087" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220225 13:31:29.957" endtime="20220225 13:31:38.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:31:38.089" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:31:38.088" endtime="20220225 13:31:38.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:31:38.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:31:38.089" endtime="20220225 13:31:38.090"/>
</kw>
<status status="PASS" starttime="20220225 13:31:29.956" endtime="20220225 13:31:38.090"/>
</kw>
<msg timestamp="20220225 13:31:38.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:31:29.955" endtime="20220225 13:31:38.091"/>
</kw>
<msg timestamp="20220225 13:31:38.092" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220225 13:31:29.953" endtime="20220225 13:31:38.093"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:31:38.093" endtime="20220225 13:31:38.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:31:38.102" level="INFO">Running command 'ozone sh key setacl o3://om:9862/88057-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:31:45.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:31:45.373" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:31:38.098" endtime="20220225 13:31:45.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:31:45.375" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:31:45.374" endtime="20220225 13:31:45.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:31:45.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:31:45.376" endtime="20220225 13:31:45.377"/>
</kw>
<status status="PASS" starttime="20220225 13:31:38.096" endtime="20220225 13:31:45.377"/>
</kw>
<msg timestamp="20220225 13:31:45.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:31:38.096" endtime="20220225 13:31:45.379"/>
</kw>
<msg timestamp="20220225 13:31:45.379" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:31:38.094" endtime="20220225 13:31:45.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:31:45.386" level="INFO">Running command 'ozone sh key getacl o3://om:9862/88057-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:31:53.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:31:53.897" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220225 13:31:45.383" endtime="20220225 13:31:53.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:31:53.900" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:31:53.898" endtime="20220225 13:31:53.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:31:53.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:31:53.900" endtime="20220225 13:31:53.902"/>
</kw>
<status status="PASS" starttime="20220225 13:31:45.382" endtime="20220225 13:31:53.903"/>
</kw>
<msg timestamp="20220225 13:31:53.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:31:45.381" endtime="20220225 13:31:53.904"/>
</kw>
<msg timestamp="20220225 13:31:53.905" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220225 13:31:45.380" endtime="20220225 13:31:53.905"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:31:53.905" endtime="20220225 13:31:53.907"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:31:53.907" endtime="20220225 13:31:53.909"/>
</kw>
<status status="PASS" starttime="20220225 13:27:51.093" endtime="20220225 13:31:53.909"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220225 13:27:51.048" endtime="20220225 13:31:53.910"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:31:53.922" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:31:53.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:31:53.925" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:31:53.917" endtime="20220225 13:31:53.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:31:53.927" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:31:53.926" endtime="20220225 13:31:53.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:31:53.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:31:53.927" endtime="20220225 13:31:53.928"/>
</kw>
<status status="PASS" starttime="20220225 13:31:53.916" endtime="20220225 13:31:53.929"/>
</kw>
<msg timestamp="20220225 13:31:53.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:31:53.915" endtime="20220225 13:31:53.929"/>
</kw>
<msg timestamp="20220225 13:31:53.930" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:31:53.914" endtime="20220225 13:31:53.930"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:31:53.931" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:31:53.930" endtime="20220225 13:31:53.931"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:31:53.937" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:31:53.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:31:53.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:31:53.934" endtime="20220225 13:31:53.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:31:53.970" level="INFO"/>
<status status="PASS" starttime="20220225 13:31:53.969" endtime="20220225 13:31:53.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:31:53.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:31:53.970" endtime="20220225 13:31:53.971"/>
</kw>
<status status="PASS" starttime="20220225 13:31:53.933" endtime="20220225 13:31:53.971"/>
</kw>
<msg timestamp="20220225 13:31:53.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:31:53.933" endtime="20220225 13:31:53.972"/>
</kw>
<status status="PASS" starttime="20220225 13:31:53.931" endtime="20220225 13:31:53.972"/>
</kw>
<status status="PASS" starttime="20220225 13:31:53.931" endtime="20220225 13:31:53.972"/>
</kw>
<status status="PASS" starttime="20220225 13:31:53.913" endtime="20220225 13:31:53.972"/>
</kw>
<status status="PASS" starttime="20220225 13:31:53.913" endtime="20220225 13:31:53.972"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:31:53.978" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/88057-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:32:01.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:32:01.522" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220225 13:31:53.975" endtime="20220225 13:32:01.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:32:01.524" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220225 13:32:01.523" endtime="20220225 13:32:01.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:32:01.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:32:01.525" endtime="20220225 13:32:01.527"/>
</kw>
<status status="PASS" starttime="20220225 13:31:53.974" endtime="20220225 13:32:01.527"/>
</kw>
<msg timestamp="20220225 13:32:01.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:31:53.974" endtime="20220225 13:32:01.528"/>
</kw>
<status status="PASS" starttime="20220225 13:31:53.973" endtime="20220225 13:32:01.528"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:32:01.535" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/88057-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:32:09.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:32:09.389" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220225 13:32:01.531" endtime="20220225 13:32:09.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:32:09.391" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:32:09.390" endtime="20220225 13:32:09.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:32:09.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:32:09.392" endtime="20220225 13:32:09.392"/>
</kw>
<status status="PASS" starttime="20220225 13:32:01.529" endtime="20220225 13:32:09.393"/>
</kw>
<msg timestamp="20220225 13:32:09.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:32:01.529" endtime="20220225 13:32:09.394"/>
</kw>
<msg timestamp="20220225 13:32:09.394" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220225 13:32:01.528" endtime="20220225 13:32:09.394"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:32:09.394" endtime="20220225 13:32:09.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:32:09.402" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/88057-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:32:16.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:32:16.845" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220225 13:32:09.399" endtime="20220225 13:32:16.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:32:16.847" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220225 13:32:16.846" endtime="20220225 13:32:16.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:32:16.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:32:16.848" endtime="20220225 13:32:16.849"/>
</kw>
<status status="PASS" starttime="20220225 13:32:09.398" endtime="20220225 13:32:16.850"/>
</kw>
<msg timestamp="20220225 13:32:16.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:32:09.397" endtime="20220225 13:32:16.850"/>
</kw>
<msg timestamp="20220225 13:32:16.851" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220225 13:32:09.396" endtime="20220225 13:32:16.851"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:32:16.858" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/88057-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:32:24.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:32:24.755" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220225 13:32:16.854" endtime="20220225 13:32:24.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:32:24.756" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:32:24.756" endtime="20220225 13:32:24.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:32:24.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:32:24.757" endtime="20220225 13:32:24.758"/>
</kw>
<status status="PASS" starttime="20220225 13:32:16.853" endtime="20220225 13:32:24.759"/>
</kw>
<msg timestamp="20220225 13:32:24.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:32:16.853" endtime="20220225 13:32:24.760"/>
</kw>
<msg timestamp="20220225 13:32:24.760" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220225 13:32:16.851" endtime="20220225 13:32:24.760"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:32:24.761" endtime="20220225 13:32:24.763"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:32:24.770" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/88057-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:32:32.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:32:32.144" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:32:24.767" endtime="20220225 13:32:32.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:32:32.145" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:32:32.144" endtime="20220225 13:32:32.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:32:32.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:32:32.145" endtime="20220225 13:32:32.146"/>
</kw>
<status status="PASS" starttime="20220225 13:32:24.765" endtime="20220225 13:32:32.146"/>
</kw>
<msg timestamp="20220225 13:32:32.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:32:24.765" endtime="20220225 13:32:32.148"/>
</kw>
<msg timestamp="20220225 13:32:32.149" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220225 13:32:24.763" endtime="20220225 13:32:32.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:32:32.156" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/88057-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:32:40.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:32:40.600" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220225 13:32:32.153" endtime="20220225 13:32:40.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:32:40.603" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:32:40.601" endtime="20220225 13:32:40.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:32:40.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:32:40.604" endtime="20220225 13:32:40.605"/>
</kw>
<status status="PASS" starttime="20220225 13:32:32.152" endtime="20220225 13:32:40.605"/>
</kw>
<msg timestamp="20220225 13:32:40.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:32:32.151" endtime="20220225 13:32:40.606"/>
</kw>
<msg timestamp="20220225 13:32:40.607" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220225 13:32:32.149" endtime="20220225 13:32:40.607"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:32:40.607" endtime="20220225 13:32:40.608"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:32:40.608" endtime="20220225 13:32:40.608"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:32:40.616" level="INFO">Running command 'ozone sh key put o3://om:9862/88057-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:35:51.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:35:51.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:32:40.610" endtime="20220225 13:35:51.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:35:51.915" level="INFO"/>
<status status="PASS" starttime="20220225 13:35:51.913" endtime="20220225 13:35:51.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:35:51.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:35:51.915" endtime="20220225 13:35:51.916"/>
</kw>
<status status="PASS" starttime="20220225 13:32:40.609" endtime="20220225 13:35:51.916"/>
</kw>
<msg timestamp="20220225 13:35:51.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:32:40.609" endtime="20220225 13:35:51.917"/>
</kw>
<status status="PASS" starttime="20220225 13:32:40.608" endtime="20220225 13:35:51.917"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:35:51.922" level="INFO">Running command 'ozone sh key getacl o3://om:9862/88057-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:36:00.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:36:00.849" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220225 13:35:51.919" endtime="20220225 13:36:00.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:36:00.852" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220225 13:36:00.850" endtime="20220225 13:36:00.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:36:00.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:36:00.852" endtime="20220225 13:36:00.854"/>
</kw>
<status status="PASS" starttime="20220225 13:35:51.919" endtime="20220225 13:36:00.855"/>
</kw>
<msg timestamp="20220225 13:36:00.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:35:51.918" endtime="20220225 13:36:00.856"/>
</kw>
<msg timestamp="20220225 13:36:00.856" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220225 13:35:51.917" endtime="20220225 13:36:00.856"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:36:00.857" endtime="20220225 13:36:00.858"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220225 13:36:00.858" endtime="20220225 13:36:00.859"/>
</kw>
<status status="PASS" starttime="20220225 13:31:53.972" endtime="20220225 13:36:00.859"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220225 13:31:53.911" endtime="20220225 13:36:00.860"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:36:00.872" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:36:00.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:36:00.878" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 13:36:00.868" endtime="20220225 13:36:00.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:36:00.880" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 13:36:00.879" endtime="20220225 13:36:00.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:36:00.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:36:00.880" endtime="20220225 13:36:00.881"/>
</kw>
<status status="PASS" starttime="20220225 13:36:00.867" endtime="20220225 13:36:00.881"/>
</kw>
<msg timestamp="20220225 13:36:00.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:36:00.867" endtime="20220225 13:36:00.882"/>
</kw>
<msg timestamp="20220225 13:36:00.883" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 13:36:00.866" endtime="20220225 13:36:00.883"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 13:36:00.884" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 13:36:00.883" endtime="20220225 13:36:00.884"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:36:00.889" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:36:00.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:36:00.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:36:00.887" endtime="20220225 13:36:00.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:36:00.903" level="INFO"/>
<status status="PASS" starttime="20220225 13:36:00.902" endtime="20220225 13:36:00.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:36:00.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:36:00.903" endtime="20220225 13:36:00.904"/>
</kw>
<status status="PASS" starttime="20220225 13:36:00.886" endtime="20220225 13:36:00.905"/>
</kw>
<msg timestamp="20220225 13:36:00.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:36:00.885" endtime="20220225 13:36:00.905"/>
</kw>
<status status="PASS" starttime="20220225 13:36:00.885" endtime="20220225 13:36:00.906"/>
</kw>
<status status="PASS" starttime="20220225 13:36:00.884" endtime="20220225 13:36:00.906"/>
</kw>
<status status="PASS" starttime="20220225 13:36:00.865" endtime="20220225 13:36:00.906"/>
</kw>
<status status="PASS" starttime="20220225 13:36:00.864" endtime="20220225 13:36:00.906"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:36:00.913" level="INFO">Running command 'ozone sh volume info o3:///88057-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:36:08.269" level="INFO">${rc} = 255</msg>
<msg timestamp="20220225 13:36:08.269" level="INFO">${output} = VOLUME_NOT_FOUND Volume 88057-without-host is not found</msg>
<status status="PASS" starttime="20220225 13:36:00.909" endtime="20220225 13:36:08.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:36:08.270" level="INFO">VOLUME_NOT_FOUND Volume 88057-without-host is not found</msg>
<status status="PASS" starttime="20220225 13:36:08.269" endtime="20220225 13:36:08.270"/>
</kw>
<msg timestamp="20220225 13:36:08.271" level="INFO">${result} = VOLUME_NOT_FOUND Volume 88057-without-host is not found</msg>
<status status="PASS" starttime="20220225 13:36:00.908" endtime="20220225 13:36:08.271"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:36:08.271" endtime="20220225 13:36:08.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:36:08.276" level="INFO">Running command 'ozone sh volume create o3:///88057-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:36:15.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:36:15.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:36:08.273" endtime="20220225 13:36:15.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:36:15.580" level="INFO"/>
<status status="PASS" starttime="20220225 13:36:15.579" endtime="20220225 13:36:15.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:36:15.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:36:15.580" endtime="20220225 13:36:15.581"/>
</kw>
<status status="PASS" starttime="20220225 13:36:08.273" endtime="20220225 13:36:15.582"/>
</kw>
<msg timestamp="20220225 13:36:15.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:36:08.272" endtime="20220225 13:36:15.583"/>
</kw>
<msg timestamp="20220225 13:36:15.583" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220225 13:36:08.272" endtime="20220225 13:36:15.583"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:36:15.583" endtime="20220225 13:36:15.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:36:15.590" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="88057-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:36:23.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:36:23.813" level="INFO">${output} = {
  "metadata": {},
  "name": "88057-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220225 13:36:15.587" endtime="20220225 13:36:23.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:36:23.815" level="INFO">{
  "metadata": {},
  "name": "88057-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-02-25T13:36:15.430Z",
  "modificationTime": "2022-02-25T13:36:15.430Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220225 13:36:23.814" endtime="20220225 13:36:23.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:36:23.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:36:23.815" endtime="20220225 13:36:23.815"/>
</kw>
<status status="PASS" starttime="20220225 13:36:15.586" endtime="20220225 13:36:23.816"/>
</kw>
<msg timestamp="20220225 13:36:23.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:36:15.585" endtime="20220225 13:36:23.816"/>
</kw>
<msg timestamp="20220225 13:36:23.817" level="INFO">${result} = {
  "metadata": {},
  "name": "88057-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220225 13:36:15.584" endtime="20220225 13:36:23.817"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:36:23.817" endtime="20220225 13:36:23.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:36:23.822" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="88057-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:36:31.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:36:31.618" level="INFO">${output} = {
  "metadata": {},
  "name": "88057-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220225 13:36:23.820" endtime="20220225 13:36:31.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:36:31.620" level="INFO">{
  "metadata": {},
  "name": "88057-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-02-25T13:36:15.430Z",
  "modificationTime": "2022-02-25T13:36:15.430Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220225 13:36:31.619" endtime="20220225 13:36:31.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:36:31.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:36:31.620" endtime="20220225 13:36:31.621"/>
</kw>
<status status="PASS" starttime="20220225 13:36:23.819" endtime="20220225 13:36:31.621"/>
</kw>
<msg timestamp="20220225 13:36:31.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:36:23.819" endtime="20220225 13:36:31.622"/>
</kw>
<msg timestamp="20220225 13:36:31.622" level="INFO">${result} = {
  "metadata": {},
  "name": "88057-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220225 13:36:23.818" endtime="20220225 13:36:31.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220225 13:36:31.622" endtime="20220225 13:36:31.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:36:31.633" level="INFO">Running command 'ozone sh volume setquota o3:///88057-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:36:39.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:36:39.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:36:31.629" endtime="20220225 13:36:39.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:36:39.373" level="INFO"/>
<status status="PASS" starttime="20220225 13:36:39.372" endtime="20220225 13:36:39.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:36:39.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:36:39.373" endtime="20220225 13:36:39.374"/>
</kw>
<status status="PASS" starttime="20220225 13:36:31.629" endtime="20220225 13:36:39.374"/>
</kw>
<msg timestamp="20220225 13:36:39.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:36:31.628" endtime="20220225 13:36:39.375"/>
</kw>
<status status="PASS" starttime="20220225 13:36:31.625" endtime="20220225 13:36:39.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:36:39.383" level="INFO">Running command 'ozone sh volume info o3:///88057-without-host | jq -r '. | select(.name=="88057-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:36:47.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:36:47.408" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:36:39.379" endtime="20220225 13:36:47.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:36:47.411" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220225 13:36:47.410" endtime="20220225 13:36:47.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:36:47.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:36:47.412" endtime="20220225 13:36:47.413"/>
</kw>
<status status="PASS" starttime="20220225 13:36:39.378" endtime="20220225 13:36:47.414"/>
</kw>
<msg timestamp="20220225 13:36:47.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:36:39.378" endtime="20220225 13:36:47.415"/>
</kw>
<msg timestamp="20220225 13:36:47.416" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:36:39.376" endtime="20220225 13:36:47.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:36:47.416" endtime="20220225 13:36:47.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:36:47.424" level="INFO">Running command 'ozone sh bucket create o3:///88057-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:36:53.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:36:53.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:36:47.421" endtime="20220225 13:36:53.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:36:53.352" level="INFO"/>
<status status="PASS" starttime="20220225 13:36:53.351" endtime="20220225 13:36:53.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:36:53.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:36:53.353" endtime="20220225 13:36:53.353"/>
</kw>
<status status="PASS" starttime="20220225 13:36:47.420" endtime="20220225 13:36:53.353"/>
</kw>
<msg timestamp="20220225 13:36:53.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:36:47.420" endtime="20220225 13:36:53.354"/>
</kw>
<status status="PASS" starttime="20220225 13:36:47.418" endtime="20220225 13:36:53.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:36:53.361" level="INFO">Running command 'ozone sh bucket info o3:///88057-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:37:01.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:37:01.059" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220225 13:36:53.358" endtime="20220225 13:37:01.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:37:01.060" level="INFO">DISK</msg>
<status status="PASS" starttime="20220225 13:37:01.060" endtime="20220225 13:37:01.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:37:01.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:37:01.061" endtime="20220225 13:37:01.061"/>
</kw>
<status status="PASS" starttime="20220225 13:36:53.357" endtime="20220225 13:37:01.062"/>
</kw>
<msg timestamp="20220225 13:37:01.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:36:53.356" endtime="20220225 13:37:01.063"/>
</kw>
<msg timestamp="20220225 13:37:01.063" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220225 13:36:53.355" endtime="20220225 13:37:01.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:37:01.063" endtime="20220225 13:37:01.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:37:01.068" level="INFO">Running command 'ozone sh bucket info o3:///88057-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:37:09.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:37:09.352" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:37:01.066" endtime="20220225 13:37:09.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:37:09.354" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220225 13:37:09.353" endtime="20220225 13:37:09.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:37:09.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:37:09.354" endtime="20220225 13:37:09.355"/>
</kw>
<status status="PASS" starttime="20220225 13:37:01.065" endtime="20220225 13:37:09.355"/>
</kw>
<msg timestamp="20220225 13:37:09.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:37:01.065" endtime="20220225 13:37:09.356"/>
</kw>
<msg timestamp="20220225 13:37:09.356" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220225 13:37:01.064" endtime="20220225 13:37:09.356"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:37:09.356" endtime="20220225 13:37:09.357"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:37:09.362" level="INFO">Running command 'ozone sh bucket info o3:///88057-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:37:17.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:37:17.454" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220225 13:37:09.359" endtime="20220225 13:37:17.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:37:17.455" level="INFO">100</msg>
<status status="PASS" starttime="20220225 13:37:17.454" endtime="20220225 13:37:17.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:37:17.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:37:17.456" endtime="20220225 13:37:17.457"/>
</kw>
<status status="PASS" starttime="20220225 13:37:09.358" endtime="20220225 13:37:17.458"/>
</kw>
<msg timestamp="20220225 13:37:17.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:37:09.358" endtime="20220225 13:37:17.459"/>
</kw>
<msg timestamp="20220225 13:37:17.459" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220225 13:37:09.357" endtime="20220225 13:37:17.460"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:37:17.460" endtime="20220225 13:37:17.460"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:37:17.468" level="INFO">Running command 'ozone sh bucket setquota o3:///88057-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:37:23.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:37:23.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:37:17.464" endtime="20220225 13:37:23.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:37:23.820" level="INFO"/>
<status status="PASS" starttime="20220225 13:37:23.819" endtime="20220225 13:37:23.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:37:23.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:37:23.820" endtime="20220225 13:37:23.821"/>
</kw>
<status status="PASS" starttime="20220225 13:37:17.463" endtime="20220225 13:37:23.821"/>
</kw>
<msg timestamp="20220225 13:37:23.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:37:17.462" endtime="20220225 13:37:23.822"/>
</kw>
<status status="PASS" starttime="20220225 13:37:17.461" endtime="20220225 13:37:23.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:37:23.826" level="INFO">Running command 'ozone sh bucket info o3:///88057-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:37:31.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:37:31.200" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220225 13:37:23.824" endtime="20220225 13:37:31.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:37:31.202" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220225 13:37:31.200" endtime="20220225 13:37:31.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:37:31.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:37:31.203" endtime="20220225 13:37:31.204"/>
</kw>
<status status="PASS" starttime="20220225 13:37:23.823" endtime="20220225 13:37:31.205"/>
</kw>
<msg timestamp="20220225 13:37:31.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:37:23.823" endtime="20220225 13:37:31.206"/>
</kw>
<msg timestamp="20220225 13:37:31.206" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220225 13:37:23.822" endtime="20220225 13:37:31.206"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:37:31.207" endtime="20220225 13:37:31.207"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:37:31.214" level="INFO">Running command 'ozone sh bucket info o3:///88057-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:37:37.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:37:37.437" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220225 13:37:31.211" endtime="20220225 13:37:37.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:37:37.440" level="INFO">1000</msg>
<status status="PASS" starttime="20220225 13:37:37.438" endtime="20220225 13:37:37.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:37:37.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:37:37.440" endtime="20220225 13:37:37.442"/>
</kw>
<status status="PASS" starttime="20220225 13:37:31.210" endtime="20220225 13:37:37.443"/>
</kw>
<msg timestamp="20220225 13:37:37.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:37:31.209" endtime="20220225 13:37:37.444"/>
</kw>
<msg timestamp="20220225 13:37:37.445" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220225 13:37:31.208" endtime="20220225 13:37:37.445"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:37:37.445" endtime="20220225 13:37:37.447"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:37:37.455" level="INFO">Running command 'ozone sh bucket list o3:///88057-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:37:45.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:37:45.123" level="INFO">${output} = 88057-without-host</msg>
<status status="PASS" starttime="20220225 13:37:37.451" endtime="20220225 13:37:45.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:37:45.124" level="INFO">88057-without-host</msg>
<status status="PASS" starttime="20220225 13:37:45.123" endtime="20220225 13:37:45.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:37:45.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:37:45.125" endtime="20220225 13:37:45.127"/>
</kw>
<status status="PASS" starttime="20220225 13:37:37.450" endtime="20220225 13:37:45.128"/>
</kw>
<msg timestamp="20220225 13:37:45.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:37:37.449" endtime="20220225 13:37:45.129"/>
</kw>
<msg timestamp="20220225 13:37:45.130" level="INFO">${result} = 88057-without-host</msg>
<status status="PASS" starttime="20220225 13:37:37.447" endtime="20220225 13:37:45.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220225 13:37:45.131" endtime="20220225 13:37:45.132"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:37:45.140" level="INFO">Running command 'ozone sh key put o3:///88057-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:40:57.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:40:57.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:37:45.136" endtime="20220225 13:40:57.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:40:57.203" level="INFO"/>
<status status="PASS" starttime="20220225 13:40:57.201" endtime="20220225 13:40:57.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:40:57.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:40:57.204" endtime="20220225 13:40:57.205"/>
</kw>
<status status="PASS" starttime="20220225 13:37:45.136" endtime="20220225 13:40:57.206"/>
</kw>
<msg timestamp="20220225 13:40:57.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:37:45.135" endtime="20220225 13:40:57.207"/>
</kw>
<status status="PASS" starttime="20220225 13:37:45.134" endtime="20220225 13:40:57.208"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:40:57.214" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:40:57.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 13:40:57.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 13:40:57.211" endtime="20220225 13:40:57.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 13:40:57.221" level="INFO"/>
<status status="PASS" starttime="20220225 13:40:57.220" endtime="20220225 13:40:57.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 13:40:57.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 13:40:57.222" endtime="20220225 13:40:57.223"/>
</kw>
<status status="PASS" starttime="20220225 13:40:57.210" endtime="20220225 13:40:57.223"/>
</kw>
<msg timestamp="20220225 13:40:57.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 13:40:57.209" endtime="20220225 13:40:57.224"/>
</kw>
<status status="PASS" starttime="20220225 13:40:57.208" endtime="20220225 13:40:57.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 13:40:57.228" level="INFO">Running command 'ozone sh key get o3:///88057-without-host/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 13:41:00.863" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220225 13:40:57.226" endtime="20220225 13:41:00.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.865" endtime="20220225 13:41:00.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.865" endtime="20220225 13:41:00.865"/>
</kw>
<status status="FAIL" starttime="20220225 13:40:57.225" endtime="20220225 13:41:00.866"/>
</kw>
<msg timestamp="20220225 13:41:00.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220225 13:40:57.225" endtime="20220225 13:41:00.867"/>
</kw>
<status status="FAIL" starttime="20220225 13:40:57.224" endtime="20220225 13:41:00.868"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.868" endtime="20220225 13:41:00.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.868" endtime="20220225 13:41:00.869"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.869" endtime="20220225 13:41:00.869"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.869" endtime="20220225 13:41:00.869"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.869" endtime="20220225 13:41:00.869"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.870" endtime="20220225 13:41:00.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.870" endtime="20220225 13:41:00.870"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.870" endtime="20220225 13:41:00.870"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.871" endtime="20220225 13:41:00.871"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.872" endtime="20220225 13:41:00.872"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.873" endtime="20220225 13:41:00.873"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.873" endtime="20220225 13:41:00.873"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.874" endtime="20220225 13:41:00.874"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.874" endtime="20220225 13:41:00.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.875" endtime="20220225 13:41:00.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.876" endtime="20220225 13:41:00.876"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.877" endtime="20220225 13:41:00.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.877" endtime="20220225 13:41:00.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.879" endtime="20220225 13:41:00.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.880" endtime="20220225 13:41:00.880"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.880" endtime="20220225 13:41:00.881"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.881" endtime="20220225 13:41:00.882"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.883" endtime="20220225 13:41:00.884"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.884" endtime="20220225 13:41:00.884"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.885" endtime="20220225 13:41:00.885"/>
</kw>
<status status="FAIL" starttime="20220225 13:37:45.133" endtime="20220225 13:41:00.886"/>
</kw>
<status status="FAIL" starttime="20220225 13:37:45.132" endtime="20220225 13:41:00.886"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.887" endtime="20220225 13:41:00.887"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.887" endtime="20220225 13:41:00.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.888" endtime="20220225 13:41:00.888"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.888" endtime="20220225 13:41:00.888"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.890" endtime="20220225 13:41:00.893"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.894" endtime="20220225 13:41:00.894"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.895" endtime="20220225 13:41:00.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.896" endtime="20220225 13:41:00.896"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.897" endtime="20220225 13:41:00.897"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.897" endtime="20220225 13:41:00.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.898" endtime="20220225 13:41:00.898"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.899" endtime="20220225 13:41:00.899"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.899" endtime="20220225 13:41:00.900"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.900" endtime="20220225 13:41:00.900"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.901" endtime="20220225 13:41:00.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.901" endtime="20220225 13:41:00.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.902" endtime="20220225 13:41:00.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.903" endtime="20220225 13:41:00.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.904" endtime="20220225 13:41:00.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.904" endtime="20220225 13:41:00.905"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.905" endtime="20220225 13:41:00.906"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.906" endtime="20220225 13:41:00.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.909" endtime="20220225 13:41:00.909"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220225 13:41:00.910" endtime="20220225 13:41:00.910"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.910" endtime="20220225 13:41:00.910"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220225 13:41:00.910" endtime="20220225 13:41:00.910"/>
</kw>
<status status="FAIL" starttime="20220225 13:36:00.907" endtime="20220225 13:41:00.911"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220225 13:36:00.862" endtime="20220225 13:41:00.911">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20220225 13:20:55.161" endtime="20220225 13:41:00.916"/>
</suite>
<status status="FAIL" starttime="20220225 12:56:23.450" endtime="20220225 13:41:00.946"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 12:56:17.996" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 12:56:18.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 12:56:18.001" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220225 12:56:17.991" endtime="20220225 12:56:18.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 12:56:18.002" level="INFO">scm</msg>
<status status="PASS" starttime="20220225 12:56:18.002" endtime="20220225 12:56:18.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 12:56:18.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 12:56:18.003" endtime="20220225 12:56:18.003"/>
</kw>
<status status="PASS" starttime="20220225 12:56:17.990" endtime="20220225 12:56:18.004"/>
</kw>
<msg timestamp="20220225 12:56:18.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 12:56:17.990" endtime="20220225 12:56:18.005"/>
</kw>
<msg timestamp="20220225 12:56:18.005" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220225 12:56:17.987" endtime="20220225 12:56:18.005"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220225 12:56:18.006" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220225 12:56:18.006" endtime="20220225 12:56:18.006"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220225 12:56:18.011" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220225 12:56:18.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20220225 12:56:18.019" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220225 12:56:18.008" endtime="20220225 12:56:18.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220225 12:56:18.020" level="INFO"/>
<status status="PASS" starttime="20220225 12:56:18.019" endtime="20220225 12:56:18.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220225 12:56:18.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220225 12:56:18.020" endtime="20220225 12:56:18.021"/>
</kw>
<status status="PASS" starttime="20220225 12:56:18.008" endtime="20220225 12:56:18.021"/>
</kw>
<msg timestamp="20220225 12:56:18.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220225 12:56:18.008" endtime="20220225 12:56:18.021"/>
</kw>
<status status="PASS" starttime="20220225 12:56:18.007" endtime="20220225 12:56:18.022"/>
</kw>
<status status="PASS" starttime="20220225 12:56:18.006" endtime="20220225 12:56:18.022"/>
</kw>
<status status="PASS" starttime="20220225 12:56:17.985" endtime="20220225 12:56:18.022"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220225 12:56:17.982" endtime="20220225 12:56:18.022"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220225 12:56:17.918" endtime="20220225 12:56:18.024"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2677602"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="9" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="9" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="9" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="2" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
