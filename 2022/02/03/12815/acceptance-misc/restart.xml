<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220203 13:20:38.822" rpa="false" schemaversion="2">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:18:00.595" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:18:05.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:18:05.750" level="INFO">${output} = 2022-02-03 13:18:02,009 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:18:02,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:18:00.592" endtime="20220203 13:18:05.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:18:05.752" level="INFO">2022-02-03 13:18:02,009 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:18:02,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:18:02,172 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:18:02,363 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2022-02-03 13:18:02,470 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:18:03,471 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:18:03,697 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-03 13:18:04,472 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-02-03 13:18:05,385 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=44.307426, max=44.307426, mean=44.307426, stddev=0.0, median=44.307426, p75=44.307426, p95=44.307426, p98=44.307426, p99=44.307426, p999=44.307426, mean_rate=0.9888646561671707, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:18:05,385 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-02-03 13:18:05,386 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:18:05,386 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220203 13:18:05.750" endtime="20220203 13:18:05.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:18:05.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:18:05.753" endtime="20220203 13:18:05.753"/>
</kw>
<status status="PASS" starttime="20220203 13:18:00.591" endtime="20220203 13:18:05.753"/>
</kw>
<msg timestamp="20220203 13:18:05.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:18:00.591" endtime="20220203 13:18:05.755"/>
</kw>
<msg timestamp="20220203 13:18:05.755" level="INFO">${result} = 2022-02-03 13:18:02,009 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:18:02,172 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:18:00.590" endtime="20220203 13:18:05.755"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:18:05.755" endtime="20220203 13:18:05.756"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:18:00.589" endtime="20220203 13:18:05.756"/>
</test>
<test id="s1-s1-t2" name="DN Chunk Validator">
<kw name="DN Chunk Validator">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220203 13:18:05.758" endtime="20220203 13:18:05.758"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t1 -n100 -p dcg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:18:05.762" level="INFO">Running command 'ozone freon dcv -t1 -n100 -p dcgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:18:11.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:18:11.055" level="INFO">${output} = 2022-02-03 13:18:07,136 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:18:07,305 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:18:05.760" endtime="20220203 13:18:11.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:18:11.057" level="INFO">2022-02-03 13:18:07,136 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:18:07,305 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:18:07,305 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:18:07,507 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre
2022-02-03 13:18:07,630 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:18:08,176 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=527885bc-0978-4b5f-ba24-526fb4e5d290
2022-02-03 13:18:08,645 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:18:08,736 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-03 13:18:08,935 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-03 13:18:09,646 [Thread-3] INFO freon.ProgressBar: Progress: 38.00 % (38 out of 100)
2022-02-03 13:18:10,647 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-02-03 13:18:10,698 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.033365, max=14.111554, mean=4.773347510000002, stddev=2.448302100662973, median=4.086431, p75=5.623381, p95=9.279999, p98=12.239394, p99=13.027219, p999=14.111554, mean_rate=81.30683837367853, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:18:10,699 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-02-03 13:18:10,699 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:18:10,699 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220203 13:18:11.056" endtime="20220203 13:18:11.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:18:11.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:18:11.058" endtime="20220203 13:18:11.058"/>
</kw>
<status status="PASS" starttime="20220203 13:18:05.759" endtime="20220203 13:18:11.059"/>
</kw>
<msg timestamp="20220203 13:18:11.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:18:05.759" endtime="20220203 13:18:11.059"/>
</kw>
<msg timestamp="20220203 13:18:11.060" level="INFO">${result} = 2022-02-03 13:18:07,136 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:18:07,305 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:18:05.758" endtime="20220203 13:18:11.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 100</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:18:11.060" endtime="20220203 13:18:11.061"/>
</kw>
<status status="PASS" starttime="20220203 13:18:05.757" endtime="20220203 13:18:11.061"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:18:05.756" endtime="20220203 13:18:11.062"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20220203 13:18:00.540" endtime="20220203 13:18:11.063"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:19:20.901" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:19:27.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:19:27.418" level="INFO">${output} = 2022-02-03 13:19:22,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:22,500 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:19:20.898" endtime="20220203 13:19:27.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:19:27.421" level="INFO">2022-02-03 13:19:22,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:22,500 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:19:22,500 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:19:22,694 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2022-02-03 13:19:22,765 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:23,767 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:24,768 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:25,118 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-03 13:19:25,768 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:26,769 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-02-03 13:19:27,047 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=53.641811, max=53.641811, mean=53.641811, stddev=0.0, median=53.641811, p75=53.641811, p95=53.641811, p98=53.641811, p99=53.641811, p999=53.641811, mean_rate=0.9898288895171553, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:19:27,048 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2022-02-03 13:19:27,048 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:19:27,048 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220203 13:19:27.419" endtime="20220203 13:19:27.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:19:27.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:19:27.421" endtime="20220203 13:19:27.422"/>
</kw>
<status status="PASS" starttime="20220203 13:19:20.897" endtime="20220203 13:19:27.423"/>
</kw>
<msg timestamp="20220203 13:19:27.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:19:20.897" endtime="20220203 13:19:27.424"/>
</kw>
<msg timestamp="20220203 13:19:27.424" level="INFO">${result} = 2022-02-03 13:19:22,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:22,500 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:19:20.896" endtime="20220203 13:19:27.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:19:27.425" endtime="20220203 13:19:27.425"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:19:20.895" endtime="20220203 13:19:27.425"/>
</test>
<test id="s1-s2-t2" name="DN Chunk Validator">
<kw name="DN Chunk Validator">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220203 13:19:27.428" endtime="20220203 13:19:27.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t1 -n100 -p dcg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:19:27.433" level="INFO">Running command 'ozone freon dcv -t1 -n100 -p dcgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:19:32.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:19:32.776" level="INFO">${output} = 2022-02-03 13:19:28,912 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:29,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:19:27.429" endtime="20220203 13:19:32.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:19:32.778" level="INFO">2022-02-03 13:19:28,912 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:29,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:19:29,047 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:19:29,264 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre
2022-02-03 13:19:29,353 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:19:29,895 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=527885bc-0978-4b5f-ba24-526fb4e5d290
2022-02-03 13:19:30,366 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:19:30,432 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-03 13:19:30,635 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-03 13:19:31,366 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:19:32,367 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-02-03 13:19:32,412 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.400176, max=19.043207, mean=5.0333785, stddev=2.643909527770678, median=4.36724, p75=5.751083, p95=10.807945, p98=13.18622, p99=13.687037, p999=19.043207, mean_rate=95.05413019035711, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:19:32,412 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-02-03 13:19:32,413 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:19:32,413 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220203 13:19:32.777" endtime="20220203 13:19:32.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:19:32.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:19:32.778" endtime="20220203 13:19:32.779"/>
</kw>
<status status="PASS" starttime="20220203 13:19:27.429" endtime="20220203 13:19:32.779"/>
</kw>
<msg timestamp="20220203 13:19:32.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:19:27.429" endtime="20220203 13:19:32.780"/>
</kw>
<msg timestamp="20220203 13:19:32.780" level="INFO">${result} = 2022-02-03 13:19:28,912 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:29,047 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:19:27.428" endtime="20220203 13:19:32.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 100</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:19:32.780" endtime="20220203 13:19:32.781"/>
</kw>
<status status="PASS" starttime="20220203 13:19:27.427" endtime="20220203 13:19:32.781"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:19:27.426" endtime="20220203 13:19:32.781"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20220203 13:19:20.846" endtime="20220203 13:19:32.782"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s3-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:19:37.167" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:19:54.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:19:54.435" level="INFO">${output} = 2022-02-03 13:19:38,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:38,717 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:19:37.164" endtime="20220203 13:19:54.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:19:54.437" level="INFO">2022-02-03 13:19:38,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:38,717 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:19:38,721 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:19:38,919 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2022-02-03 13:19:39,016 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:40,021 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:40,692 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-03 13:19:40,954 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-03 13:19:41,021 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:42,022 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:43,022 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:44,023 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:45,023 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:46,024 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:47,024 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:48,025 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:49,025 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:50,025 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:51,026 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:52,027 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:53,027 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:54,028 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-02-03 13:19:54,058 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=13684.17875, max=13684.17875, mean=13684.17875, stddev=0.0, median=13684.17875, p75=13684.17875, p95=13684.17875, p98=13684.17875, p99=13684.17875, p999=13684.17875, mean_rate=0.06949455535642435, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:19:54,059 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 15
2022-02-03 13:19:54,059 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:19:54,059 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220203 13:19:54.435" endtime="20220203 13:19:54.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:19:54.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:19:54.438" endtime="20220203 13:19:54.438"/>
</kw>
<status status="PASS" starttime="20220203 13:19:37.163" endtime="20220203 13:19:54.438"/>
</kw>
<msg timestamp="20220203 13:19:54.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:19:37.163" endtime="20220203 13:19:54.440"/>
</kw>
<msg timestamp="20220203 13:19:54.440" level="INFO">${result} = 2022-02-03 13:19:38,572 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:38,717 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:19:37.162" endtime="20220203 13:19:54.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:19:54.441" endtime="20220203 13:19:54.441"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:19:37.161" endtime="20220203 13:19:54.441"/>
</test>
<test id="s1-s3-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:19:54.446" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:19:57.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:19:57.817" level="INFO">${output} = 2022-02-03 13:19:55,740 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:55,905 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:19:54.444" endtime="20220203 13:19:57.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:19:57.819" level="INFO">2022-02-03 13:19:55,740 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:55,905 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:19:55,905 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:19:56,115 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost
2022-02-03 13:19:56,170 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:19:57,180 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-02-03 13:19:57,772 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=66.979731, max=66.979731, mean=66.979731, stddev=0.0, median=66.979731, p75=66.979731, p95=66.979731, p98=66.979731, p99=66.979731, p999=66.979731, mean_rate=0.9815955737892386, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:19:57,775 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-02-03 13:19:57,776 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:19:57,776 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220203 13:19:57.818" endtime="20220203 13:19:57.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:19:57.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:19:57.819" endtime="20220203 13:19:57.820"/>
</kw>
<status status="PASS" starttime="20220203 13:19:54.444" endtime="20220203 13:19:57.820"/>
</kw>
<msg timestamp="20220203 13:19:57.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:19:54.444" endtime="20220203 13:19:57.821"/>
</kw>
<msg timestamp="20220203 13:19:57.821" level="INFO">${result} = 2022-02-03 13:19:55,740 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:55,905 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:19:54.443" endtime="20220203 13:19:57.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:19:57.828" endtime="20220203 13:19:57.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:19:54.442" endtime="20220203 13:19:57.828"/>
</test>
<test id="s1-s3-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:19:57.834" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:20:01.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:20:01.275" level="INFO">${output} = 2022-02-03 13:19:59,138 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:59,320 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:19:57.832" endtime="20220203 13:20:01.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:20:01.276" level="INFO">2022-02-03 13:19:59,138 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:59,320 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:19:59,320 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:19:59,514 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost
2022-02-03 13:19:59,579 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:20:00,582 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-02-03 13:20:01,231 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=19.018005, max=19.018005, mean=19.018005, stddev=0.0, median=19.018005, p75=19.018005, p95=19.018005, p98=19.018005, p99=19.018005, p999=19.018005, mean_rate=0.9739348314336578, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:20:01,233 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-02-03 13:20:01,236 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:20:01,236 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220203 13:20:01.276" endtime="20220203 13:20:01.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:20:01.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:20:01.277" endtime="20220203 13:20:01.277"/>
</kw>
<status status="PASS" starttime="20220203 13:19:57.832" endtime="20220203 13:20:01.278"/>
</kw>
<msg timestamp="20220203 13:20:01.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:19:57.831" endtime="20220203 13:20:01.278"/>
</kw>
<msg timestamp="20220203 13:20:01.278" level="INFO">${result} = 2022-02-03 13:19:59,138 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:19:59,320 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:19:57.830" endtime="20220203 13:20:01.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:20:01.279" endtime="20220203 13:20:01.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:19:57.829" endtime="20220203 13:20:01.279"/>
</test>
<test id="s1-s3-t4" name="DN Chunk Generator">
<kw name="DN Chunk Generator">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220203 13:20:01.281" endtime="20220203 13:20:01.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t1 -n100 -p dcg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:20:01.285" level="INFO">Running command 'ozone freon dcg -t1 -n100 -p dcgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:20:08.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:20:08.654" level="INFO">${output} = 2022-02-03 13:20:02,670 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:20:02,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:20:01.283" endtime="20220203 13:20:08.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:20:08.656" level="INFO">2022-02-03 13:20:02,670 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:20:02,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:20:02,809 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:20:03,624 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost
2022-02-03 13:20:03,667 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:20:04,132 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-03 13:20:04,345 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-03 13:20:04,675 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:20:05,676 [Thread-4] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2022-02-03 13:20:06,676 [Thread-4] INFO freon.ProgressBar: Progress: 65.00 % (65 out of 100)
2022-02-03 13:20:07,677 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-02-03 13:20:08,305 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=11.558567, max=610.894916, mean=30.005953788788943, stddev=58.11372233424535, median=22.760223, p75=28.901318, p95=39.760463, p98=44.779323, p99=51.427534, p999=610.894916, mean_rate=24.66289188347454, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:20:08,306 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-02-03 13:20:08,306 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:20:08,306 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220203 13:20:08.655" endtime="20220203 13:20:08.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:20:08.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:20:08.656" endtime="20220203 13:20:08.657"/>
</kw>
<status status="PASS" starttime="20220203 13:20:01.282" endtime="20220203 13:20:08.657"/>
</kw>
<msg timestamp="20220203 13:20:08.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:20:01.282" endtime="20220203 13:20:08.658"/>
</kw>
<msg timestamp="20220203 13:20:08.658" level="INFO">${result} = 2022-02-03 13:20:02,670 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:20:02,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:20:01.281" endtime="20220203 13:20:08.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 100</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:20:08.658" endtime="20220203 13:20:08.659"/>
</kw>
<status status="PASS" starttime="20220203 13:20:01.280" endtime="20220203 13:20:08.659"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:20:01.280" endtime="20220203 13:20:08.659"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20220203 13:19:37.120" endtime="20220203 13:20:08.661"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:20:13.123" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:20:18.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:20:18.289" level="INFO">${output} = 2022-02-03 13:20:14,439 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:20:14,543 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:20:13.120" endtime="20220203 13:20:18.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:20:18.292" level="INFO">2022-02-03 13:20:14,439 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:20:14,543 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:20:14,543 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:20:14,741 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2022-02-03 13:20:14,822 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:20:15,828 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:20:16,109 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-03 13:20:16,828 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:20:17,829 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-02-03 13:20:17,925 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=42.851261, max=42.851261, mean=42.851261, stddev=0.0, median=42.851261, p75=42.851261, p95=42.851261, p98=42.851261, p99=42.851261, p999=42.851261, mean_rate=0.9869115133863982, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:20:17,926 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-02-03 13:20:17,926 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:20:17,926 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220203 13:20:18.290" endtime="20220203 13:20:18.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:20:18.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:20:18.292" endtime="20220203 13:20:18.292"/>
</kw>
<status status="PASS" starttime="20220203 13:20:13.119" endtime="20220203 13:20:18.293"/>
</kw>
<msg timestamp="20220203 13:20:18.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:20:13.119" endtime="20220203 13:20:18.294"/>
</kw>
<msg timestamp="20220203 13:20:18.295" level="INFO">${result} = 2022-02-03 13:20:14,439 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:20:14,543 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:20:13.118" endtime="20220203 13:20:18.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:20:18.295" endtime="20220203 13:20:18.295"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:20:13.117" endtime="20220203 13:20:18.295"/>
</test>
<test id="s1-s4-t2" name="DN Chunk Validator">
<kw name="DN Chunk Validator">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220203 13:20:18.297" endtime="20220203 13:20:18.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t1 -n100 -p dcg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:20:18.301" level="INFO">Running command 'ozone freon dcv -t1 -n100 -p dcgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:20:23.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:20:23.484" level="INFO">${output} = 2022-02-03 13:20:19,625 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:20:19,794 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:20:18.299" endtime="20220203 13:20:23.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:20:23.486" level="INFO">2022-02-03 13:20:19,625 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:20:19,794 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:20:19,796 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:20:19,981 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost
2022-02-03 13:20:20,053 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:20:20,544 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=527885bc-0978-4b5f-ba24-526fb4e5d290
2022-02-03 13:20:21,052 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-03 13:20:21,061 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:20:21,271 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-03 13:20:22,064 [Thread-3] INFO freon.ProgressBar: Progress: 41.00 % (41 out of 100)
2022-02-03 13:20:23,064 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-02-03 13:20:23,109 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.975662, max=13.315123, mean=4.1946695744810905, stddev=2.344984669670849, median=3.534512, p75=4.976758, p95=8.798779, p98=11.557766, p99=11.706171, p999=13.315123, mean_rate=77.82966857330702, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:20:23,110 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2022-02-03 13:20:23,110 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:20:23,110 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220203 13:20:23.485" endtime="20220203 13:20:23.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:20:23.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:20:23.486" endtime="20220203 13:20:23.487"/>
</kw>
<status status="PASS" starttime="20220203 13:20:18.299" endtime="20220203 13:20:23.487"/>
</kw>
<msg timestamp="20220203 13:20:23.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:20:18.298" endtime="20220203 13:20:23.488"/>
</kw>
<msg timestamp="20220203 13:20:23.488" level="INFO">${result} = 2022-02-03 13:20:19,625 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:20:19,794 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:20:18.298" endtime="20220203 13:20:23.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 100</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:20:23.488" endtime="20220203 13:20:23.489"/>
</kw>
<status status="PASS" starttime="20220203 13:20:18.297" endtime="20220203 13:20:23.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:20:18.296" endtime="20220203 13:20:23.489"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20220203 13:20:13.067" endtime="20220203 13:20:23.491"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s5-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:17:33.208" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:17:41.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:17:41.632" level="INFO">${output} = 2022-02-03 13:17:34,625 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:34,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:17:33.204" endtime="20220203 13:17:41.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:17:41.635" level="INFO">2022-02-03 13:17:34,625 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:34,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:17:34,748 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:17:34,916 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2022-02-03 13:17:35,010 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:17:36,022 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:17:36,072 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2022-02-03 13:17:36,202 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with hadoop as owner and Versioning false and Storage Type set to DISK and Encryption set to false 
2022-02-03 13:17:36,951 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-03 13:17:37,023 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:17:37,186 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-03 13:17:38,024 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:17:39,024 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:17:40,025 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:17:41,025 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-02-03 13:17:41,281 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4764.864478, max=4764.864478, mean=4764.864478, stddev=0.0, median=4764.864478, p75=4764.864478, p95=4764.864478, p98=4764.864478, p99=4764.864478, p999=4764.864478, mean_rate=0.1982576804962973, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:17:41,281 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2022-02-03 13:17:41,281 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:17:41,281 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220203 13:17:41.633" endtime="20220203 13:17:41.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:17:41.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:17:41.635" endtime="20220203 13:17:41.636"/>
</kw>
<status status="PASS" starttime="20220203 13:17:33.204" endtime="20220203 13:17:41.636"/>
</kw>
<msg timestamp="20220203 13:17:41.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:17:33.203" endtime="20220203 13:17:41.638"/>
</kw>
<msg timestamp="20220203 13:17:41.638" level="INFO">${result} = 2022-02-03 13:17:34,625 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:34,748 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:17:33.202" endtime="20220203 13:17:41.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:17:41.638" endtime="20220203 13:17:41.639"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:17:33.202" endtime="20220203 13:17:41.639"/>
</test>
<test id="s1-s5-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:17:41.644" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:17:45.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:17:45.132" level="INFO">${output} = 2022-02-03 13:17:42,916 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:43,106 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:17:41.642" endtime="20220203 13:17:45.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:17:45.133" level="INFO">2022-02-03 13:17:42,916 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:43,106 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:17:43,106 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:17:43,282 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2022-02-03 13:17:43,356 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:17:44,365 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-02-03 13:17:45,056 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=59.129907, max=59.129907, mean=59.129907, stddev=0.0, median=59.129907, p75=59.129907, p95=59.129907, p98=59.129907, p99=59.129907, p999=59.129907, mean_rate=0.9843923984742545, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:17:45,057 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-02-03 13:17:45,057 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:17:45,057 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220203 13:17:45.132" endtime="20220203 13:17:45.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:17:45.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:17:45.134" endtime="20220203 13:17:45.134"/>
</kw>
<status status="PASS" starttime="20220203 13:17:41.641" endtime="20220203 13:17:45.135"/>
</kw>
<msg timestamp="20220203 13:17:45.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:17:41.641" endtime="20220203 13:17:45.135"/>
</kw>
<msg timestamp="20220203 13:17:45.136" level="INFO">${result} = 2022-02-03 13:17:42,916 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:43,106 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:17:41.640" endtime="20220203 13:17:45.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:17:45.136" endtime="20220203 13:17:45.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:17:41.640" endtime="20220203 13:17:45.137"/>
</test>
<test id="s1-s5-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:17:45.143" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:17:48.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:17:48.534" level="INFO">${output} = 2022-02-03 13:17:46,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:46,612 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:17:45.141" endtime="20220203 13:17:48.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:17:48.535" level="INFO">2022-02-03 13:17:46,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:46,612 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:17:46,612 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:17:46,772 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2022-02-03 13:17:46,830 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2022-02-03 13:17:47,844 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2022-02-03 13:17:48,467 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=24.291283, max=24.291283, mean=24.291283, stddev=0.0, median=24.291283, p75=24.291283, p95=24.291283, p98=24.291283, p99=24.291283, p999=24.291283, mean_rate=0.9688128712323802, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:17:48,468 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2022-02-03 13:17:48,468 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:17:48,468 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20220203 13:17:48.534" endtime="20220203 13:17:48.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:17:48.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:17:48.535" endtime="20220203 13:17:48.536"/>
</kw>
<status status="PASS" starttime="20220203 13:17:45.140" endtime="20220203 13:17:48.536"/>
</kw>
<msg timestamp="20220203 13:17:48.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:17:45.140" endtime="20220203 13:17:48.537"/>
</kw>
<msg timestamp="20220203 13:17:48.537" level="INFO">${result} = 2022-02-03 13:17:46,455 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:46,612 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:17:45.139" endtime="20220203 13:17:48.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:17:48.537" endtime="20220203 13:17:48.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:17:45.138" endtime="20220203 13:17:48.538"/>
</test>
<test id="s1-s5-t4" name="DN Chunk Generator">
<kw name="DN Chunk Generator">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20220203 13:17:48.540" endtime="20220203 13:17:48.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t1 -n100 -p dcg${PREFIX}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220203 13:17:48.543" level="INFO">Running command 'ozone freon dcg -t1 -n100 -p dcgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20220203 13:17:56.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20220203 13:17:56.211" level="INFO">${output} = 2022-02-03 13:17:50,132 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:50,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:17:48.541" endtime="20220203 13:17:56.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220203 13:17:56.212" level="INFO">2022-02-03 13:17:50,132 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:50,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2022-02-03 13:17:50,241 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2022-02-03 13:17:51,073 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre
2022-02-03 13:17:51,107 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:17:51,638 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2022-02-03 13:17:51,874 [pool-3-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-03 13:17:52,117 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2022-02-03 13:17:53,117 [Thread-4] INFO freon.ProgressBar: Progress: 18.00 % (18 out of 100)
2022-02-03 13:17:54,117 [Thread-4] INFO freon.ProgressBar: Progress: 60.00 % (60 out of 100)
2022-02-03 13:17:55,118 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2022-02-03 13:17:55,857 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=10.073124, max=704.870312, mean=30.474103470014057, stddev=67.6340997133664, median=22.33332, p75=28.092005, p95=42.20606, p98=50.830037, p99=53.465422, p999=704.870312, mean_rate=24.50684595126889, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2022-02-03 13:17:55,858 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2022-02-03 13:17:55,858 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2022-02-03 13:17:55,858 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20220203 13:17:56.211" endtime="20220203 13:17:56.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220203 13:17:56.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220203 13:17:56.212" endtime="20220203 13:17:56.213"/>
</kw>
<status status="PASS" starttime="20220203 13:17:48.541" endtime="20220203 13:17:56.213"/>
</kw>
<msg timestamp="20220203 13:17:56.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220203 13:17:48.541" endtime="20220203 13:17:56.214"/>
</kw>
<msg timestamp="20220203 13:17:56.214" level="INFO">${result} = 2022-02-03 13:17:50,132 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2022-02-03 13:17:50,240 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20220203 13:17:48.540" endtime="20220203 13:17:56.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: 100</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220203 13:17:56.215" endtime="20220203 13:17:56.215"/>
</kw>
<status status="PASS" starttime="20220203 13:17:48.539" endtime="20220203 13:17:56.215"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220203 13:17:48.538" endtime="20220203 13:17:56.215"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20220203 13:17:33.161" endtime="20220203 13:17:56.217"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="87480"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Validate">restart.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Validate">restart.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3" name="Generate">restart.Generate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5" name="Generate">restart.Generate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
