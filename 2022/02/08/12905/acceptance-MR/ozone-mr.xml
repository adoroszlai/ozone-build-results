<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220208 12:52:07.993" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite id="s1-s1-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:31:56.066" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:31:56.066" endtime="20220208 12:31:56.066"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:31:56.067" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:31:56.066" endtime="20220208 12:31:56.067"/>
</kw>
<status status="PASS" starttime="20220208 12:31:56.065" endtime="20220208 12:31:56.067"/>
</kw>
<msg timestamp="20220208 12:31:56.067" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:31:56.065" endtime="20220208 12:31:56.067"/>
</kw>
<status status="PASS" starttime="20220208 12:31:56.064" endtime="20220208 12:31:56.068"/>
</kw>
<msg timestamp="20220208 12:31:56.068" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:31:56.064" endtime="20220208 12:31:56.068"/>
</kw>
<msg timestamp="20220208 12:31:56.068" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:31:56.062" endtime="20220208 12:31:56.068"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:31:56.068" level="INFO">${random} = 42437</msg>
<status status="PASS" starttime="20220208 12:31:56.068" endtime="20220208 12:31:56.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:56.074" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-42437 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:59.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:31:59.759" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:31:56.070" endtime="20220208 12:31:59.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:59.761" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:31:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:31:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-08 12:31:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-08 12:31:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220208 12:31:59.760" endtime="20220208 12:31:59.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:31:59.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:31:59.761" endtime="20220208 12:31:59.761"/>
</kw>
<status status="PASS" starttime="20220208 12:31:56.069" endtime="20220208 12:31:59.762"/>
</kw>
<msg timestamp="20220208 12:31:59.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:56.069" endtime="20220208 12:31:59.762"/>
</kw>
<msg timestamp="20220208 12:31:59.762" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:31:56.069" endtime="20220208 12:31:59.762"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:59.766" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:32:01.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:32:01.754" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:31:59.764" endtime="20220208 12:32:01.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:32:01.758" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-02-08 12:31 o3fs://bucket1.volume1.om/ozone-42437
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:31 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:32:01.755" endtime="20220208 12:32:01.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:32:01.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:32:01.758" endtime="20220208 12:32:01.759"/>
</kw>
<status status="PASS" starttime="20220208 12:31:59.763" endtime="20220208 12:32:01.759"/>
</kw>
<msg timestamp="20220208 12:32:01.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:59.763" endtime="20220208 12:32:01.759"/>
</kw>
<msg timestamp="20220208 12:32:01.760" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:31:59.762" endtime="20220208 12:32:01.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:32:01.760" endtime="20220208 12:32:01.760"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:32:01.764" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-42437 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:32:05.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:32:05.124" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:32:01.762" endtime="20220208 12:32:05.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:32:05.126" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:32:03 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:32:03 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-08 12:32:03 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20220208 12:32:05.125" endtime="20220208 12:32:05.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:32:05.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:32:05.126" endtime="20220208 12:32:05.127"/>
</kw>
<status status="PASS" starttime="20220208 12:32:01.762" endtime="20220208 12:32:05.127"/>
</kw>
<msg timestamp="20220208 12:32:05.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:32:01.761" endtime="20220208 12:32:05.127"/>
</kw>
<msg timestamp="20220208 12:32:05.128" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:32:01.761" endtime="20220208 12:32:05.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:32:05.129" endtime="20220208 12:32:05.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220208 12:31:56.062" endtime="20220208 12:32:05.129"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220208 12:31:56.005" endtime="20220208 12:32:05.131"/>
</suite>
<suite id="s1-s1-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:32:10.051" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:32:10.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:32:10.057" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:32:10.047" endtime="20220208 12:32:10.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:32:10.059" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:32:10.058" endtime="20220208 12:32:10.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:32:10.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:32:10.059" endtime="20220208 12:32:10.060"/>
</kw>
<status status="PASS" starttime="20220208 12:32:10.046" endtime="20220208 12:32:10.060"/>
</kw>
<msg timestamp="20220208 12:32:10.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:32:10.046" endtime="20220208 12:32:10.060"/>
</kw>
<msg timestamp="20220208 12:32:10.060" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:32:10.045" endtime="20220208 12:32:10.060"/>
</kw>
<msg timestamp="20220208 12:32:10.061" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:32:10.045" endtime="20220208 12:32:10.061"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:32:10.065" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:32:10.065" endtime="20220208 12:32:10.066"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:32:10.066" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:32:10.066" endtime="20220208 12:32:10.066"/>
</kw>
<status status="PASS" starttime="20220208 12:32:10.065" endtime="20220208 12:32:10.066"/>
</kw>
<msg timestamp="20220208 12:32:10.066" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:32:10.064" endtime="20220208 12:32:10.066"/>
</kw>
<status status="PASS" starttime="20220208 12:32:10.063" endtime="20220208 12:32:10.067"/>
</kw>
<msg timestamp="20220208 12:32:10.067" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:32:10.063" endtime="20220208 12:32:10.067"/>
</kw>
<msg timestamp="20220208 12:32:10.067" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:32:10.061" endtime="20220208 12:32:10.067"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:32:10.071" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:32:52.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:32:52.162" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220208 12:32:10.069" endtime="20220208 12:32:52.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:32:52.164" level="INFO">Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:32:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:32:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-08 12:32:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-08 12:32:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-08 12:32:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-02-08 12:32:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-02-08 12:32:14 INFO  JobSubmitter:198 - number of splits:3
2022-02-08 12:32:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1644323416934_0001
2022-02-08 12:32:14 INFO  YarnClientImpl:273 - Submitted application application_1644323416934_0001
2022-02-08 12:32:14 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1644323416934_0001/
2022-02-08 12:32:14 INFO  Job:1339 - Running job: job_1644323416934_0001
2022-02-08 12:32:25 INFO  Job:1360 - Job job_1644323416934_0001 running in uber mode : false
2022-02-08 12:32:25 INFO  Job:1367 -  map 0% reduce 0%
2022-02-08 12:32:32 INFO  Job:1367 -  map 33% reduce 0%
2022-02-08 12:32:38 INFO  Job:1367 -  map 67% reduce 0%
2022-02-08 12:32:43 INFO  Job:1367 -  map 100% reduce 0%
2022-02-08 12:32:50 INFO  Job:1367 -  map 100% reduce 100%
2022-02-08 12:32:51 INFO  Job:1378 - Job job_1644323416934_0001 completed successfully
2022-02-08 12:32:51 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=479857
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=15
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42364
		Total time spent by all reduces in occupied slots (ms)=25816
		Total time spent by all map tasks (ms)=10591
		Total time spent by all reduce tasks (ms)=6454
		Total vcore-milliseconds taken by all map tasks=10591
		Total vcore-milliseconds taken by all reduce tasks=6454
		Total megabyte-milliseconds taken by all map tasks=43380736
		Total megabyte-milliseconds taken by all reduce tasks=26435584
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=670
		CPU time spent (ms)=6540
		Physical memory (bytes) snapshot=1257574400
		Virtual memory (bytes) snapshot=15784079360
		Total committed heap usage (bytes)=1065353216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.905 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220208 12:32:52.163" endtime="20220208 12:32:52.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:32:52.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:32:52.164" endtime="20220208 12:32:52.165"/>
</kw>
<status status="PASS" starttime="20220208 12:32:10.068" endtime="20220208 12:32:52.165"/>
</kw>
<msg timestamp="20220208 12:32:52.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:32:10.068" endtime="20220208 12:32:52.165"/>
</kw>
<msg timestamp="20220208 12:32:52.166" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220208 12:32:10.067" endtime="20220208 12:32:52.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:32:52.166" endtime="20220208 12:32:52.166"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:32:10.044" endtime="20220208 12:32:52.166"/>
</test>
<test id="s1-s1-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:32:52.172" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:32:52.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:32:52.183" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:32:52.170" endtime="20220208 12:32:52.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:32:52.184" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:32:52.184" endtime="20220208 12:32:52.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:32:52.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:32:52.184" endtime="20220208 12:32:52.185"/>
</kw>
<status status="PASS" starttime="20220208 12:32:52.169" endtime="20220208 12:32:52.186"/>
</kw>
<msg timestamp="20220208 12:32:52.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:32:52.169" endtime="20220208 12:32:52.186"/>
</kw>
<msg timestamp="20220208 12:32:52.186" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:32:52.168" endtime="20220208 12:32:52.186"/>
</kw>
<msg timestamp="20220208 12:32:52.186" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:32:52.168" endtime="20220208 12:32:52.186"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:32:52.187" level="INFO">${random} = VLgEeA3i</msg>
<status status="PASS" starttime="20220208 12:32:52.187" endtime="20220208 12:32:52.187"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:32:52.191" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:32:52.190" endtime="20220208 12:32:52.191"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:32:52.191" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:32:52.191" endtime="20220208 12:32:52.191"/>
</kw>
<status status="PASS" starttime="20220208 12:32:52.190" endtime="20220208 12:32:52.192"/>
</kw>
<msg timestamp="20220208 12:32:52.192" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:32:52.189" endtime="20220208 12:32:52.192"/>
</kw>
<status status="PASS" starttime="20220208 12:32:52.189" endtime="20220208 12:32:52.192"/>
</kw>
<msg timestamp="20220208 12:32:52.192" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:32:52.188" endtime="20220208 12:32:52.192"/>
</kw>
<msg timestamp="20220208 12:32:52.192" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:32:52.187" endtime="20220208 12:32:52.193"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:32:52.196" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:32:52.195" endtime="20220208 12:32:52.196"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:32:52.196" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:32:52.196" endtime="20220208 12:32:52.196"/>
</kw>
<status status="PASS" starttime="20220208 12:32:52.195" endtime="20220208 12:32:52.197"/>
</kw>
<msg timestamp="20220208 12:32:52.197" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:32:52.195" endtime="20220208 12:32:52.197"/>
</kw>
<status status="PASS" starttime="20220208 12:32:52.194" endtime="20220208 12:32:52.197"/>
</kw>
<msg timestamp="20220208 12:32:52.197" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220208 12:32:52.193" endtime="20220208 12:32:52.197"/>
</kw>
<msg timestamp="20220208 12:32:52.198" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220208 12:32:52.193" endtime="20220208 12:32:52.198"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:32:52.201" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:32:52.201" endtime="20220208 12:32:52.201"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:32:52.202" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:32:52.201" endtime="20220208 12:32:52.202"/>
</kw>
<status status="PASS" starttime="20220208 12:32:52.200" endtime="20220208 12:32:52.202"/>
</kw>
<msg timestamp="20220208 12:32:52.202" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:32:52.200" endtime="20220208 12:32:52.202"/>
</kw>
<status status="PASS" starttime="20220208 12:32:52.199" endtime="20220208 12:32:52.202"/>
</kw>
<msg timestamp="20220208 12:32:52.203" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-VLgEeA3i.txt</msg>
<status status="PASS" starttime="20220208 12:32:52.199" endtime="20220208 12:32:52.203"/>
</kw>
<msg timestamp="20220208 12:32:52.203" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-VLgEeA3i.txt</msg>
<status status="PASS" starttime="20220208 12:32:52.198" endtime="20220208 12:32:52.203"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:32:52.206" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-VLgEeA3i.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:33:26.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:33:26.463" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:32:52.204" endtime="20220208 12:33:26.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:33:26.464" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:32:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-02-08 12:32:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:32:54 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:32:54 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-08 12:32:54 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-08 12:32:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-08 12:32:55 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-02-08 12:32:56 INFO  JobSubmitter:198 - number of splits:3
2022-02-08 12:32:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1644323416934_0002
2022-02-08 12:32:56 INFO  YarnClientImpl:273 - Submitted application application_1644323416934_0002
2022-02-08 12:32:56 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1644323416934_0002/
2022-02-08 12:32:56 INFO  Job:1339 - Running job: job_1644323416934_0002
2022-02-08 12:33:04 INFO  Job:1360 - Job job_1644323416934_0002 running in uber mode : false
2022-02-08 12:33:04 INFO  Job:1367 -  map 0% reduce 0%
2022-02-08 12:33:10 INFO  Job:1367 -  map 33% reduce 0%
2022-02-08 12:33:15 INFO  Job:1367 -  map 67% reduce 0%
2022-02-08 12:33:20 INFO  Job:1367 -  map 100% reduce 0%
2022-02-08 12:33:24 INFO  Job:1367 -  map 100% reduce 100%
2022-02-08 12:33:25 INFO  Job:1378 - Job job_1644323416934_0002 completed successfully
2022-02-08 12:33:26 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=542711
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=12
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42960
		Total time spent by all reduces in occupied slots (ms)=15284
		Total time spent by all map tasks (ms)=10740
		Total time spent by all reduce tasks (ms)=3821
		Total vcore-milliseconds taken by all map tasks=10740
		Total vcore-milliseconds taken by all reduce tasks=3821
		Total megabyte-milliseconds taken by all map tasks=43991040
		Total megabyte-milliseconds taken by all reduce tasks=15650816
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=596
		CPU time spent (ms)=8170
		Physical memory (bytes) snapshot=1326911488
		Virtual memory (bytes) snapshot=15830654976
		Total committed heap usage (bytes)=1061683200
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220208 12:33:26.463" endtime="20220208 12:33:26.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:33:26.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:33:26.465" endtime="20220208 12:33:26.466"/>
</kw>
<status status="PASS" starttime="20220208 12:32:52.204" endtime="20220208 12:33:26.466"/>
</kw>
<msg timestamp="20220208 12:33:26.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:32:52.204" endtime="20220208 12:33:26.466"/>
</kw>
<msg timestamp="20220208 12:33:26.467" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:32:52.203" endtime="20220208 12:33:26.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:33:26.467" endtime="20220208 12:33:26.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:33:26.468" endtime="20220208 12:33:26.468"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:32:52.167" endtime="20220208 12:33:26.468"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220208 12:32:09.990" endtime="20220208 12:33:26.470"/>
</suite>
<suite id="s1-s1-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:33:31.358" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:33:31.358" endtime="20220208 12:33:31.358"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:33:31.359" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:33:31.358" endtime="20220208 12:33:31.359"/>
</kw>
<status status="PASS" starttime="20220208 12:33:31.357" endtime="20220208 12:33:31.359"/>
</kw>
<msg timestamp="20220208 12:33:31.359" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:33:31.357" endtime="20220208 12:33:31.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:33:31.360" endtime="20220208 12:33:31.360"/>
</kw>
<msg timestamp="20220208 12:33:31.360" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:33:31.359" endtime="20220208 12:33:31.360"/>
</kw>
<status status="PASS" starttime="20220208 12:33:31.356" endtime="20220208 12:33:31.361"/>
</kw>
<msg timestamp="20220208 12:33:31.361" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:33:31.355" endtime="20220208 12:33:31.361"/>
</kw>
<msg timestamp="20220208 12:33:31.361" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:33:31.354" endtime="20220208 12:33:31.361"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:33:31.361" level="INFO">${random} = 31943</msg>
<status status="PASS" starttime="20220208 12:33:31.361" endtime="20220208 12:33:31.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:33:31.367" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-31943 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:33:34.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:33:34.788" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:33:31.363" endtime="20220208 12:33:34.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:33:34.789" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:33:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:33:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-08 12:33:33 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-08 12:33:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220208 12:33:34.788" endtime="20220208 12:33:34.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:33:34.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:33:34.789" endtime="20220208 12:33:34.790"/>
</kw>
<status status="PASS" starttime="20220208 12:33:31.362" endtime="20220208 12:33:34.790"/>
</kw>
<msg timestamp="20220208 12:33:34.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:33:31.362" endtime="20220208 12:33:34.790"/>
</kw>
<msg timestamp="20220208 12:33:34.791" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:33:31.362" endtime="20220208 12:33:34.791"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:33:34.794" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:33:36.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:33:36.743" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:33:34.792" endtime="20220208 12:33:36.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:33:36.744" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2022-02-08 12:33 ofs://om/volume1/bucket1/ozone-31943
-rw-rw-rw-   3 hadoop hadoop      14978 2022-02-08 12:31 ofs://om/volume1/bucket1/ozone-42437
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:31 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:33 ofs://om/volume1/bucket1/wordcount-VLgEeA3i.txt</msg>
<status status="PASS" starttime="20220208 12:33:36.744" endtime="20220208 12:33:36.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:33:36.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:33:36.745" endtime="20220208 12:33:36.745"/>
</kw>
<status status="PASS" starttime="20220208 12:33:34.792" endtime="20220208 12:33:36.746"/>
</kw>
<msg timestamp="20220208 12:33:36.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:33:34.791" endtime="20220208 12:33:36.746"/>
</kw>
<msg timestamp="20220208 12:33:36.746" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:33:34.791" endtime="20220208 12:33:36.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:33:36.746" endtime="20220208 12:33:36.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:33:36.750" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-31943 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:33:39.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:33:39.986" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:33:36.748" endtime="20220208 12:33:39.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:33:39.988" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:33:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:33:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-08 12:33:38 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
org.fusesource.hawtjni:hawtjni-runtime (https://github.com/fusesource/hawtjni),
which has the following notices:
* This product includes software developed by FuseSource Corp.
  http://fusesource.com
* This product includes software developed at
  Progress Software Corporation and/or its  subsidiaries or affiliates.
* This product includes software developed by IBM Corporation and others.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
Jetty 6.1.26,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.</msg>
<status status="PASS" starttime="20220208 12:33:39.987" endtime="20220208 12:33:39.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:33:39.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:33:39.988" endtime="20220208 12:33:39.989"/>
</kw>
<status status="PASS" starttime="20220208 12:33:36.748" endtime="20220208 12:33:39.989"/>
</kw>
<msg timestamp="20220208 12:33:39.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:33:36.747" endtime="20220208 12:33:39.989"/>
</kw>
<msg timestamp="20220208 12:33:39.990" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:33:36.747" endtime="20220208 12:33:39.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:33:39.991" endtime="20220208 12:33:39.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220208 12:33:31.353" endtime="20220208 12:33:39.991"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220208 12:33:31.300" endtime="20220208 12:33:39.992"/>
</suite>
<suite id="s1-s1-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:33:44.785" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:33:44.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:33:44.792" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:33:44.781" endtime="20220208 12:33:44.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:33:44.793" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:33:44.793" endtime="20220208 12:33:44.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:33:44.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:33:44.794" endtime="20220208 12:33:44.794"/>
</kw>
<status status="PASS" starttime="20220208 12:33:44.781" endtime="20220208 12:33:44.795"/>
</kw>
<msg timestamp="20220208 12:33:44.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:33:44.780" endtime="20220208 12:33:44.795"/>
</kw>
<msg timestamp="20220208 12:33:44.795" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:33:44.780" endtime="20220208 12:33:44.795"/>
</kw>
<msg timestamp="20220208 12:33:44.795" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:33:44.780" endtime="20220208 12:33:44.795"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:33:44.800" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:33:44.800" endtime="20220208 12:33:44.800"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:33:44.801" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:33:44.800" endtime="20220208 12:33:44.801"/>
</kw>
<status status="PASS" starttime="20220208 12:33:44.799" endtime="20220208 12:33:44.801"/>
</kw>
<msg timestamp="20220208 12:33:44.801" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:33:44.799" endtime="20220208 12:33:44.801"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:33:44.802" endtime="20220208 12:33:44.802"/>
</kw>
<msg timestamp="20220208 12:33:44.802" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:33:44.801" endtime="20220208 12:33:44.802"/>
</kw>
<status status="PASS" starttime="20220208 12:33:44.798" endtime="20220208 12:33:44.803"/>
</kw>
<msg timestamp="20220208 12:33:44.803" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:33:44.797" endtime="20220208 12:33:44.803"/>
</kw>
<msg timestamp="20220208 12:33:44.803" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:33:44.795" endtime="20220208 12:33:44.803"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:33:44.807" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:34:19.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:34:19.442" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220208 12:33:44.805" endtime="20220208 12:34:19.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:34:19.443" level="INFO">Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:33:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:33:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-08 12:33:46 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-08 12:33:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-08 12:33:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-02-08 12:33:48 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:33:48 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-02-08 12:33:48 INFO  JobSubmitter:198 - number of splits:3
2022-02-08 12:33:49 INFO  JobSubmitter:287 - Submitting tokens for job: job_1644323416934_0003
2022-02-08 12:33:49 INFO  YarnClientImpl:273 - Submitted application application_1644323416934_0003
2022-02-08 12:33:49 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1644323416934_0003/
2022-02-08 12:33:49 INFO  Job:1339 - Running job: job_1644323416934_0003
2022-02-08 12:33:57 INFO  Job:1360 - Job job_1644323416934_0003 running in uber mode : false
2022-02-08 12:33:57 INFO  Job:1367 -  map 0% reduce 0%
2022-02-08 12:34:03 INFO  Job:1367 -  map 33% reduce 0%
2022-02-08 12:34:08 INFO  Job:1367 -  map 67% reduce 0%
2022-02-08 12:34:13 INFO  Job:1367 -  map 100% reduce 0%
2022-02-08 12:34:18 INFO  Job:1367 -  map 100% reduce 100%
2022-02-08 12:34:18 INFO  Job:1378 - Job job_1644323416934_0003 completed successfully
2022-02-08 12:34:18 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=479645
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=15
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41808
		Total time spent by all reduces in occupied slots (ms)=16216
		Total time spent by all map tasks (ms)=10452
		Total time spent by all reduce tasks (ms)=4054
		Total vcore-milliseconds taken by all map tasks=10452
		Total vcore-milliseconds taken by all reduce tasks=4054
		Total megabyte-milliseconds taken by all map tasks=42811392
		Total megabyte-milliseconds taken by all reduce tasks=16605184
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=612
		CPU time spent (ms)=8660
		Physical memory (bytes) snapshot=1301131264
		Virtual memory (bytes) snapshot=15811489792
		Total committed heap usage (bytes)=1063256064
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.607 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220208 12:34:19.443" endtime="20220208 12:34:19.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:34:19.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:34:19.444" endtime="20220208 12:34:19.444"/>
</kw>
<status status="PASS" starttime="20220208 12:33:44.804" endtime="20220208 12:34:19.445"/>
</kw>
<msg timestamp="20220208 12:34:19.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:33:44.804" endtime="20220208 12:34:19.445"/>
</kw>
<msg timestamp="20220208 12:34:19.445" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/im...</msg>
<status status="PASS" starttime="20220208 12:33:44.803" endtime="20220208 12:34:19.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:34:19.445" endtime="20220208 12:34:19.446"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:33:44.779" endtime="20220208 12:34:19.446"/>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:34:19.451" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:34:19.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:34:19.457" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:34:19.449" endtime="20220208 12:34:19.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:34:19.458" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:34:19.457" endtime="20220208 12:34:19.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:34:19.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:34:19.458" endtime="20220208 12:34:19.459"/>
</kw>
<status status="PASS" starttime="20220208 12:34:19.448" endtime="20220208 12:34:19.459"/>
</kw>
<msg timestamp="20220208 12:34:19.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:34:19.448" endtime="20220208 12:34:19.459"/>
</kw>
<msg timestamp="20220208 12:34:19.459" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:34:19.448" endtime="20220208 12:34:19.459"/>
</kw>
<msg timestamp="20220208 12:34:19.460" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20220208 12:34:19.447" endtime="20220208 12:34:19.460"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:34:19.460" level="INFO">${random} = KF3sz73v</msg>
<status status="PASS" starttime="20220208 12:34:19.460" endtime="20220208 12:34:19.460"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:34:19.464" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:34:19.463" endtime="20220208 12:34:19.464"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:34:19.464" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:34:19.464" endtime="20220208 12:34:19.465"/>
</kw>
<status status="PASS" starttime="20220208 12:34:19.463" endtime="20220208 12:34:19.465"/>
</kw>
<msg timestamp="20220208 12:34:19.465" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:34:19.463" endtime="20220208 12:34:19.465"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:34:19.466" endtime="20220208 12:34:19.466"/>
</kw>
<msg timestamp="20220208 12:34:19.466" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:34:19.465" endtime="20220208 12:34:19.466"/>
</kw>
<status status="PASS" starttime="20220208 12:34:19.462" endtime="20220208 12:34:19.466"/>
</kw>
<msg timestamp="20220208 12:34:19.466" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:34:19.461" endtime="20220208 12:34:19.467"/>
</kw>
<msg timestamp="20220208 12:34:19.467" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:34:19.460" endtime="20220208 12:34:19.467"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:34:19.470" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:34:19.470" endtime="20220208 12:34:19.470"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:34:19.471" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:34:19.470" endtime="20220208 12:34:19.471"/>
</kw>
<status status="PASS" starttime="20220208 12:34:19.469" endtime="20220208 12:34:19.471"/>
</kw>
<msg timestamp="20220208 12:34:19.471" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:34:19.469" endtime="20220208 12:34:19.472"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:34:19.473" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220208 12:34:19.473" endtime="20220208 12:34:19.473"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:34:19.474" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220208 12:34:19.473" endtime="20220208 12:34:19.474"/>
</kw>
<status status="PASS" starttime="20220208 12:34:19.472" endtime="20220208 12:34:19.474"/>
</kw>
<msg timestamp="20220208 12:34:19.474" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220208 12:34:19.472" endtime="20220208 12:34:19.474"/>
</kw>
<status status="PASS" starttime="20220208 12:34:19.468" endtime="20220208 12:34:19.474"/>
</kw>
<msg timestamp="20220208 12:34:19.475" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220208 12:34:19.468" endtime="20220208 12:34:19.475"/>
</kw>
<msg timestamp="20220208 12:34:19.475" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220208 12:34:19.467" endtime="20220208 12:34:19.475"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:34:19.478" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:34:19.478" endtime="20220208 12:34:19.478"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:34:19.479" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:34:19.479" endtime="20220208 12:34:19.479"/>
</kw>
<status status="PASS" starttime="20220208 12:34:19.477" endtime="20220208 12:34:19.479"/>
</kw>
<msg timestamp="20220208 12:34:19.479" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:34:19.477" endtime="20220208 12:34:19.479"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:34:19.481" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220208 12:34:19.481" endtime="20220208 12:34:19.481"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:34:19.482" level="INFO">${result} = /wordcount-KF3sz73v.txt</msg>
<status status="PASS" starttime="20220208 12:34:19.481" endtime="20220208 12:34:19.482"/>
</kw>
<status status="PASS" starttime="20220208 12:34:19.480" endtime="20220208 12:34:19.482"/>
</kw>
<msg timestamp="20220208 12:34:19.482" level="INFO">${path_with_leading} = /wordcount-KF3sz73v.txt</msg>
<status status="PASS" starttime="20220208 12:34:19.479" endtime="20220208 12:34:19.482"/>
</kw>
<status status="PASS" starttime="20220208 12:34:19.476" endtime="20220208 12:34:19.482"/>
</kw>
<msg timestamp="20220208 12:34:19.482" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-KF3sz73v.txt</msg>
<status status="PASS" starttime="20220208 12:34:19.476" endtime="20220208 12:34:19.482"/>
</kw>
<msg timestamp="20220208 12:34:19.483" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-KF3sz73v.txt</msg>
<status status="PASS" starttime="20220208 12:34:19.475" endtime="20220208 12:34:19.483"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:34:19.486" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-KF3sz73v.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:34:54.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:34:54.056" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:34:19.484" endtime="20220208 12:34:54.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:34:54.058" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop2-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:34:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.18.0.4:8032
2022-02-08 12:34:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:34:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:34:22 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2022-02-08 12:34:22 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2022-02-08 12:34:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-08 12:34:23 INFO  FileInputFormat:283 - Total input paths to process : 3
2022-02-08 12:34:23 INFO  JobSubmitter:198 - number of splits:3
2022-02-08 12:34:23 INFO  JobSubmitter:287 - Submitting tokens for job: job_1644323416934_0004
2022-02-08 12:34:24 INFO  YarnClientImpl:273 - Submitted application application_1644323416934_0004
2022-02-08 12:34:24 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1644323416934_0004/
2022-02-08 12:34:24 INFO  Job:1339 - Running job: job_1644323416934_0004
2022-02-08 12:34:32 INFO  Job:1360 - Job job_1644323416934_0004 running in uber mode : false
2022-02-08 12:34:32 INFO  Job:1367 -  map 0% reduce 0%
2022-02-08 12:34:38 INFO  Job:1367 -  map 33% reduce 0%
2022-02-08 12:34:43 INFO  Job:1367 -  map 67% reduce 0%
2022-02-08 12:34:48 INFO  Job:1367 -  map 100% reduce 0%
2022-02-08 12:34:53 INFO  Job:1367 -  map 100% reduce 100%
2022-02-08 12:34:53 INFO  Job:1378 - Job job_1644323416934_0004 completed successfully
2022-02-08 12:34:53 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=542627
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=12
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41876
		Total time spent by all reduces in occupied slots (ms)=15852
		Total time spent by all map tasks (ms)=10469
		Total time spent by all reduce tasks (ms)=3963
		Total vcore-milliseconds taken by all map tasks=10469
		Total vcore-milliseconds taken by all reduce tasks=3963
		Total megabyte-milliseconds taken by all map tasks=42881024
		Total megabyte-milliseconds taken by all reduce tasks=16232448
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=635
		CPU time spent (ms)=8540
		Physical memory (bytes) snapshot=1292587008
		Virtual memory (bytes) snapshot=15800291328
		Total committed heap usage (bytes)=1119879168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220208 12:34:54.057" endtime="20220208 12:34:54.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:34:54.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:34:54.058" endtime="20220208 12:34:54.059"/>
</kw>
<status status="PASS" starttime="20220208 12:34:19.484" endtime="20220208 12:34:54.059"/>
</kw>
<msg timestamp="20220208 12:34:54.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:34:19.484" endtime="20220208 12:34:54.059"/>
</kw>
<msg timestamp="20220208 12:34:54.060" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:34:19.483" endtime="20220208 12:34:54.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:34:54.060" endtime="20220208 12:34:54.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:34:54.060" endtime="20220208 12:34:54.061"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:34:19.447" endtime="20220208 12:34:54.061"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220208 12:33:44.726" endtime="20220208 12:34:54.063"/>
</suite>
<suite id="s1-s1-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:17.466" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:20.413" level="INFO">${rc} = 255</msg>
<msg timestamp="20220208 12:31:20.413" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:31:17.461" endtime="20220208 12:31:20.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:20.414" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:31:20.414" endtime="20220208 12:31:20.415"/>
</kw>
<msg timestamp="20220208 12:31:20.415" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:31:17.460" endtime="20220208 12:31:20.415"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:20.420" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:23.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:31:23.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:31:20.418" endtime="20220208 12:31:23.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:23.296" level="INFO"/>
<status status="PASS" starttime="20220208 12:31:23.296" endtime="20220208 12:31:23.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:31:23.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:31:23.297" endtime="20220208 12:31:23.297"/>
</kw>
<status status="PASS" starttime="20220208 12:31:20.417" endtime="20220208 12:31:23.298"/>
</kw>
<msg timestamp="20220208 12:31:23.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:20.417" endtime="20220208 12:31:23.299"/>
</kw>
<msg timestamp="20220208 12:31:23.300" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220208 12:31:20.416" endtime="20220208 12:31:23.300"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:31:23.300" endtime="20220208 12:31:23.300"/>
</kw>
<status status="PASS" starttime="20220208 12:31:20.416" endtime="20220208 12:31:23.300"/>
</kw>
<status status="PASS" starttime="20220208 12:31:20.415" endtime="20220208 12:31:23.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:23.305" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:25.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:31:25.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:31:23.303" endtime="20220208 12:31:25.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:25.862" level="INFO"/>
<status status="PASS" starttime="20220208 12:31:25.861" endtime="20220208 12:31:25.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:31:25.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:31:25.862" endtime="20220208 12:31:25.863"/>
</kw>
<status status="PASS" starttime="20220208 12:31:23.303" endtime="20220208 12:31:25.863"/>
</kw>
<msg timestamp="20220208 12:31:25.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:23.302" endtime="20220208 12:31:25.864"/>
</kw>
<status status="PASS" starttime="20220208 12:31:23.302" endtime="20220208 12:31:25.864"/>
</kw>
<status status="PASS" starttime="20220208 12:31:23.301" endtime="20220208 12:31:25.864"/>
</kw>
<status status="PASS" starttime="20220208 12:31:23.301" endtime="20220208 12:31:25.864"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220208 12:31:25.865" endtime="20220208 12:31:25.865"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:25.869" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:28.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:31:28.734" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:31...</msg>
<status status="PASS" starttime="20220208 12:31:25.867" endtime="20220208 12:31:28.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:28.735" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:31:25.812Z",
  "modificationTime" : "2022-02-08T12:31:25.812Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220208 12:31:28.735" endtime="20220208 12:31:28.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:31:28.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:31:28.736" endtime="20220208 12:31:28.736"/>
</kw>
<status status="PASS" starttime="20220208 12:31:25.866" endtime="20220208 12:31:28.737"/>
</kw>
<msg timestamp="20220208 12:31:28.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:25.866" endtime="20220208 12:31:28.737"/>
</kw>
<msg timestamp="20220208 12:31:28.737" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:31...</msg>
<status status="PASS" starttime="20220208 12:31:25.865" endtime="20220208 12:31:28.738"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:31:28.738" endtime="20220208 12:31:28.738"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:31:28.743" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:31:28.743" endtime="20220208 12:31:28.743"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:31:28.744" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:31:28.743" endtime="20220208 12:31:28.744"/>
</kw>
<status status="PASS" starttime="20220208 12:31:28.742" endtime="20220208 12:31:28.744"/>
</kw>
<msg timestamp="20220208 12:31:28.744" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:31:28.741" endtime="20220208 12:31:28.744"/>
</kw>
<status status="PASS" starttime="20220208 12:31:28.740" endtime="20220208 12:31:28.744"/>
</kw>
<msg timestamp="20220208 12:31:28.745" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220208 12:31:28.739" endtime="20220208 12:31:28.745"/>
</kw>
<msg timestamp="20220208 12:31:28.745" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220208 12:31:28.738" endtime="20220208 12:31:28.745"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:28.748" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:31.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:31:31.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:31:28.746" endtime="20220208 12:31:31.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:31.201" level="INFO"/>
<status status="PASS" starttime="20220208 12:31:31.200" endtime="20220208 12:31:31.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:31:31.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:31:31.201" endtime="20220208 12:31:31.202"/>
</kw>
<status status="PASS" starttime="20220208 12:31:28.746" endtime="20220208 12:31:31.202"/>
</kw>
<msg timestamp="20220208 12:31:31.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:28.746" endtime="20220208 12:31:31.203"/>
</kw>
<status status="PASS" starttime="20220208 12:31:28.745" endtime="20220208 12:31:31.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:31.208" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:36.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:31:36.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:31:31.205" endtime="20220208 12:31:36.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:36.722" level="INFO"/>
<status status="PASS" starttime="20220208 12:31:36.722" endtime="20220208 12:31:36.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:31:36.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:31:36.723" endtime="20220208 12:31:36.723"/>
</kw>
<status status="PASS" starttime="20220208 12:31:31.204" endtime="20220208 12:31:36.724"/>
</kw>
<msg timestamp="20220208 12:31:36.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:31.204" endtime="20220208 12:31:36.724"/>
</kw>
<status status="PASS" starttime="20220208 12:31:31.203" endtime="20220208 12:31:36.725"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:36.729" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:41.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:31:41.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:31:36.726" endtime="20220208 12:31:41.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:41.459" level="INFO"/>
<status status="PASS" starttime="20220208 12:31:41.458" endtime="20220208 12:31:41.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:31:41.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:31:41.459" endtime="20220208 12:31:41.460"/>
</kw>
<status status="PASS" starttime="20220208 12:31:36.726" endtime="20220208 12:31:41.460"/>
</kw>
<msg timestamp="20220208 12:31:41.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:36.725" endtime="20220208 12:31:41.461"/>
</kw>
<status status="PASS" starttime="20220208 12:31:36.725" endtime="20220208 12:31:41.461"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:41.465" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:46.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:31:46.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:31:41.463" endtime="20220208 12:31:46.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:46.121" level="INFO"/>
<status status="PASS" starttime="20220208 12:31:46.121" endtime="20220208 12:31:46.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:31:46.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:31:46.122" endtime="20220208 12:31:46.122"/>
</kw>
<status status="PASS" starttime="20220208 12:31:41.462" endtime="20220208 12:31:46.123"/>
</kw>
<msg timestamp="20220208 12:31:46.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:41.462" endtime="20220208 12:31:46.123"/>
</kw>
<status status="PASS" starttime="20220208 12:31:41.461" endtime="20220208 12:31:46.123"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220208 12:31:17.459" endtime="20220208 12:31:46.124"/>
</test>
<test id="s1-s1-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:31:46.130" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:31:46.130" endtime="20220208 12:31:46.130"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:31:46.131" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:31:46.130" endtime="20220208 12:31:46.131"/>
</kw>
<status status="PASS" starttime="20220208 12:31:46.129" endtime="20220208 12:31:46.131"/>
</kw>
<msg timestamp="20220208 12:31:46.131" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:31:46.128" endtime="20220208 12:31:46.131"/>
</kw>
<status status="PASS" starttime="20220208 12:31:46.127" endtime="20220208 12:31:46.132"/>
</kw>
<msg timestamp="20220208 12:31:46.132" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:31:46.127" endtime="20220208 12:31:46.132"/>
</kw>
<msg timestamp="20220208 12:31:46.132" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:31:46.126" endtime="20220208 12:31:46.132"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:46.136" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:48.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:31:48.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:31:46.134" endtime="20220208 12:31:48.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:48.757" level="INFO"/>
<status status="PASS" starttime="20220208 12:31:48.757" endtime="20220208 12:31:48.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:31:48.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:31:48.758" endtime="20220208 12:31:48.758"/>
</kw>
<status status="PASS" starttime="20220208 12:31:46.133" endtime="20220208 12:31:48.759"/>
</kw>
<msg timestamp="20220208 12:31:48.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:46.133" endtime="20220208 12:31:48.759"/>
</kw>
<status status="PASS" starttime="20220208 12:31:46.132" endtime="20220208 12:31:48.759"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:31:48.763" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:31:51.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:31:51.221" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:31:48.761" endtime="20220208 12:31:51.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:31:51.222" level="INFO"/>
<status status="PASS" starttime="20220208 12:31:51.221" endtime="20220208 12:31:51.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:31:51.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:31:51.222" endtime="20220208 12:31:51.223"/>
</kw>
<status status="PASS" starttime="20220208 12:31:48.761" endtime="20220208 12:31:51.223"/>
</kw>
<msg timestamp="20220208 12:31:51.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:31:48.760" endtime="20220208 12:31:51.224"/>
</kw>
<status status="PASS" starttime="20220208 12:31:48.760" endtime="20220208 12:31:51.224"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220208 12:31:46.125" endtime="20220208 12:31:51.224"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220208 12:31:17.399" endtime="20220208 12:31:51.226"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="197462"/>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite id="s1-s2-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:37:05.222" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:37:05.222" endtime="20220208 12:37:05.222"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:37:05.223" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:37:05.222" endtime="20220208 12:37:05.223"/>
</kw>
<status status="PASS" starttime="20220208 12:37:05.221" endtime="20220208 12:37:05.223"/>
</kw>
<msg timestamp="20220208 12:37:05.223" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:37:05.221" endtime="20220208 12:37:05.223"/>
</kw>
<status status="PASS" starttime="20220208 12:37:05.220" endtime="20220208 12:37:05.223"/>
</kw>
<msg timestamp="20220208 12:37:05.223" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:37:05.219" endtime="20220208 12:37:05.223"/>
</kw>
<msg timestamp="20220208 12:37:05.224" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:37:05.218" endtime="20220208 12:37:05.224"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:37:05.224" level="INFO">${random} = 46100</msg>
<status status="PASS" starttime="20220208 12:37:05.224" endtime="20220208 12:37:05.224"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:37:05.230" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-46100 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:37:09.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:37:09.437" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:37:05.226" endtime="20220208 12:37:09.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:37:09.438" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:37:06 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:37:07 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-08 12:37:07 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:37:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:37:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:37:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220208 12:37:09.437" endtime="20220208 12:37:09.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:37:09.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:37:09.439" endtime="20220208 12:37:09.439"/>
</kw>
<status status="PASS" starttime="20220208 12:37:05.225" endtime="20220208 12:37:09.439"/>
</kw>
<msg timestamp="20220208 12:37:09.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:37:05.225" endtime="20220208 12:37:09.440"/>
</kw>
<msg timestamp="20220208 12:37:09.440" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:37:05.224" endtime="20220208 12:37:09.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:37:09.444" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:37:11.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:37:11.601" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:37:09.441" endtime="20220208 12:37:11.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:37:11.602" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:37:10 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:36 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2022-02-08 12:37 o3fs://bucket1.volume1.om/ozone-46100
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:36 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:37:11.602" endtime="20220208 12:37:11.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:37:11.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:37:11.603" endtime="20220208 12:37:11.603"/>
</kw>
<status status="PASS" starttime="20220208 12:37:09.441" endtime="20220208 12:37:11.604"/>
</kw>
<msg timestamp="20220208 12:37:11.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:37:09.441" endtime="20220208 12:37:11.604"/>
</kw>
<msg timestamp="20220208 12:37:11.604" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:37:09.440" endtime="20220208 12:37:11.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:37:11.604" endtime="20220208 12:37:11.605"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:37:11.608" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-46100 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:37:15.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:37:15.124" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:37:11.606" endtime="20220208 12:37:15.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:37:15.125" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:37:12 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:37:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-08 12:37:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:37:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:37:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220208 12:37:15.124" endtime="20220208 12:37:15.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:37:15.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:37:15.126" endtime="20220208 12:37:15.127"/>
</kw>
<status status="PASS" starttime="20220208 12:37:11.606" endtime="20220208 12:37:15.127"/>
</kw>
<msg timestamp="20220208 12:37:15.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:37:11.606" endtime="20220208 12:37:15.127"/>
</kw>
<msg timestamp="20220208 12:37:15.129" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:37:11.605" endtime="20220208 12:37:15.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:37:15.129" endtime="20220208 12:37:15.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220208 12:37:05.218" endtime="20220208 12:37:15.130"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220208 12:37:05.164" endtime="20220208 12:37:15.131"/>
</suite>
<suite id="s1-s2-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:37:20.157" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:37:20.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:37:20.163" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:37:20.153" endtime="20220208 12:37:20.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:37:20.164" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:37:20.164" endtime="20220208 12:37:20.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:37:20.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:37:20.165" endtime="20220208 12:37:20.165"/>
</kw>
<status status="PASS" starttime="20220208 12:37:20.153" endtime="20220208 12:37:20.165"/>
</kw>
<msg timestamp="20220208 12:37:20.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:37:20.152" endtime="20220208 12:37:20.166"/>
</kw>
<msg timestamp="20220208 12:37:20.166" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:37:20.152" endtime="20220208 12:37:20.166"/>
</kw>
<msg timestamp="20220208 12:37:20.166" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:37:20.151" endtime="20220208 12:37:20.166"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:37:20.171" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:37:20.171" endtime="20220208 12:37:20.171"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:37:20.172" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:37:20.171" endtime="20220208 12:37:20.172"/>
</kw>
<status status="PASS" starttime="20220208 12:37:20.170" endtime="20220208 12:37:20.172"/>
</kw>
<msg timestamp="20220208 12:37:20.172" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:37:20.170" endtime="20220208 12:37:20.172"/>
</kw>
<status status="PASS" starttime="20220208 12:37:20.169" endtime="20220208 12:37:20.172"/>
</kw>
<msg timestamp="20220208 12:37:20.172" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:37:20.168" endtime="20220208 12:37:20.172"/>
</kw>
<msg timestamp="20220208 12:37:20.173" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:37:20.166" endtime="20220208 12:37:20.173"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:37:20.176" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:38:02.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:38:02.916" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:37:20.174" endtime="20220208 12:38:02.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:38:02.918" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-08 12:37:21 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:37:22 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-08 12:37:22 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:37:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:37:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:37:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-08 12:37:23 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2022-02-08 12:37:24 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:37:24 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:37:24 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-08 12:37:24 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:37:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644323740373_0001
2022-02-08 12:37:25 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:37:25 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:37:25 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:37:25 INFO  Configuration:2752 - resource-types.xml not found
2022-02-08 12:37:25 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-02-08 12:37:25 INFO  YarnClientImpl:324 - Submitted application application_1644323740373_0001
2022-02-08 12:37:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1644323740373_0001/
2022-02-08 12:37:25 INFO  Job:1619 - Running job: job_1644323740373_0001
2022-02-08 12:37:36 INFO  Job:1640 - Job job_1644323740373_0001 running in uber mode : false
2022-02-08 12:37:36 INFO  Job:1647 -  map 0% reduce 0%
2022-02-08 12:37:44 INFO  Job:1647 -  map 33% reduce 0%
2022-02-08 12:37:50 INFO  Job:1647 -  map 67% reduce 0%
2022-02-08 12:37:56 INFO  Job:1647 -  map 100% reduce 0%
2022-02-08 12:38:01 INFO  Job:1647 -  map 100% reduce 100%
2022-02-08 12:38:02 INFO  Job:1658 - Job job_1644323740373_0001 completed successfully
2022-02-08 12:38:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=867641
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45532
		Total time spent by all reduces in occupied slots (ms)=16076
		Total time spent by all map tasks (ms)=11383
		Total time spent by all reduce tasks (ms)=4019
		Total vcore-milliseconds taken by all map tasks=11383
		Total vcore-milliseconds taken by all reduce tasks=4019
		Total megabyte-milliseconds taken by all map tasks=46624768
		Total megabyte-milliseconds taken by all reduce tasks=16461824
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=942
		CPU time spent (ms)=7790
		Physical memory (bytes) snapshot=1760309248
		Virtual memory (bytes) snapshot=15823777792
		Total committed heap usage (bytes)=1606418432
		Peak Map Physical memory (bytes)=581783552
		Peak Map Virtual memory (bytes)=3954110464
		Peak Reduce Physical memory (bytes)=349347840
		Peak Reduce Virtual memory (bytes)=3972706304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.409 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220208 12:38:02.917" endtime="20220208 12:38:02.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:38:02.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:38:02.918" endtime="20220208 12:38:02.919"/>
</kw>
<status status="PASS" starttime="20220208 12:37:20.174" endtime="20220208 12:38:02.919"/>
</kw>
<msg timestamp="20220208 12:38:02.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:37:20.173" endtime="20220208 12:38:02.919"/>
</kw>
<msg timestamp="20220208 12:38:02.920" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:37:20.173" endtime="20220208 12:38:02.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:38:02.920" endtime="20220208 12:38:02.920"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:37:20.151" endtime="20220208 12:38:02.920"/>
</test>
<test id="s1-s2-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:38:02.926" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:38:02.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:38:02.932" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:38:02.924" endtime="20220208 12:38:02.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:38:02.933" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:38:02.932" endtime="20220208 12:38:02.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:38:02.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:38:02.933" endtime="20220208 12:38:02.934"/>
</kw>
<status status="PASS" starttime="20220208 12:38:02.923" endtime="20220208 12:38:02.934"/>
</kw>
<msg timestamp="20220208 12:38:02.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:38:02.923" endtime="20220208 12:38:02.935"/>
</kw>
<msg timestamp="20220208 12:38:02.935" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:38:02.923" endtime="20220208 12:38:02.935"/>
</kw>
<msg timestamp="20220208 12:38:02.935" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:38:02.922" endtime="20220208 12:38:02.935"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:38:02.936" level="INFO">${random} = mUuaqzO0</msg>
<status status="PASS" starttime="20220208 12:38:02.935" endtime="20220208 12:38:02.936"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:38:02.939" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:38:02.939" endtime="20220208 12:38:02.939"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:38:02.940" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:38:02.940" endtime="20220208 12:38:02.940"/>
</kw>
<status status="PASS" starttime="20220208 12:38:02.938" endtime="20220208 12:38:02.940"/>
</kw>
<msg timestamp="20220208 12:38:02.940" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:38:02.938" endtime="20220208 12:38:02.940"/>
</kw>
<status status="PASS" starttime="20220208 12:38:02.937" endtime="20220208 12:38:02.941"/>
</kw>
<msg timestamp="20220208 12:38:02.941" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:38:02.937" endtime="20220208 12:38:02.941"/>
</kw>
<msg timestamp="20220208 12:38:02.941" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:38:02.936" endtime="20220208 12:38:02.941"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:38:02.944" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:38:02.944" endtime="20220208 12:38:02.945"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:38:02.945" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:38:02.945" endtime="20220208 12:38:02.945"/>
</kw>
<status status="PASS" starttime="20220208 12:38:02.944" endtime="20220208 12:38:02.946"/>
</kw>
<msg timestamp="20220208 12:38:02.946" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:38:02.943" endtime="20220208 12:38:02.946"/>
</kw>
<status status="PASS" starttime="20220208 12:38:02.942" endtime="20220208 12:38:02.946"/>
</kw>
<msg timestamp="20220208 12:38:02.946" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220208 12:38:02.942" endtime="20220208 12:38:02.946"/>
</kw>
<msg timestamp="20220208 12:38:02.946" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220208 12:38:02.941" endtime="20220208 12:38:02.946"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:38:02.950" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:38:02.949" endtime="20220208 12:38:02.950"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:38:02.950" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:38:02.950" endtime="20220208 12:38:02.950"/>
</kw>
<status status="PASS" starttime="20220208 12:38:02.949" endtime="20220208 12:38:02.951"/>
</kw>
<msg timestamp="20220208 12:38:02.951" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:38:02.948" endtime="20220208 12:38:02.951"/>
</kw>
<status status="PASS" starttime="20220208 12:38:02.948" endtime="20220208 12:38:02.951"/>
</kw>
<msg timestamp="20220208 12:38:02.951" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-mUuaqzO0.txt</msg>
<status status="PASS" starttime="20220208 12:38:02.947" endtime="20220208 12:38:02.951"/>
</kw>
<msg timestamp="20220208 12:38:02.951" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-mUuaqzO0.txt</msg>
<status status="PASS" starttime="20220208 12:38:02.946" endtime="20220208 12:38:02.951"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:38:02.955" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-mUuaqzO0.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:38:40.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:38:40.620" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:38:02.953" endtime="20220208 12:38:40.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:38:40.621" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:38:04 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:38:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2022-02-08 12:38:05 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:38:05 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:38:05 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:38:05 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-08 12:38:05 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:38:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:38:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:38:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-08 12:38:06 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-08 12:38:07 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:38:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644323740373_0002
2022-02-08 12:38:07 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:38:07 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:38:07 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:38:07 INFO  Configuration:2752 - resource-types.xml not found
2022-02-08 12:38:07 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-02-08 12:38:07 INFO  YarnClientImpl:324 - Submitted application application_1644323740373_0002
2022-02-08 12:38:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1644323740373_0002/
2022-02-08 12:38:07 INFO  Job:1619 - Running job: job_1644323740373_0002
2022-02-08 12:38:15 INFO  Job:1640 - Job job_1644323740373_0002 running in uber mode : false
2022-02-08 12:38:15 INFO  Job:1647 -  map 0% reduce 0%
2022-02-08 12:38:21 INFO  Job:1647 -  map 33% reduce 0%
2022-02-08 12:38:28 INFO  Job:1647 -  map 67% reduce 0%
2022-02-08 12:38:34 INFO  Job:1647 -  map 100% reduce 0%
2022-02-08 12:38:39 INFO  Job:1647 -  map 100% reduce 100%
2022-02-08 12:38:40 INFO  Job:1658 - Job job_1644323740373_0002 completed successfully
2022-02-08 12:38:40 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=930399
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44612
		Total time spent by all reduces in occupied slots (ms)=15828
		Total time spent by all map tasks (ms)=11153
		Total time spent by all reduce tasks (ms)=3957
		Total vcore-milliseconds taken by all map tasks=11153
		Total vcore-milliseconds taken by all reduce tasks=3957
		Total megabyte-milliseconds taken by all map tasks=45682688
		Total megabyte-milliseconds taken by all reduce tasks=16207872
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=633
		CPU time spent (ms)=7820
		Physical memory (bytes) snapshot=1532080128
		Virtual memory (bytes) snapshot=15813885952
		Total committed heap usage (bytes)=1391460352
		Peak Map Physical memory (bytes)=397443072
		Peak Map Virtual memory (bytes)=3948109824
		Peak Reduce Physical memory (bytes)=345743360
		Peak Reduce Virtual memory (bytes)=3972562944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220208 12:38:40.620" endtime="20220208 12:38:40.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:38:40.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:38:40.622" endtime="20220208 12:38:40.622"/>
</kw>
<status status="PASS" starttime="20220208 12:38:02.953" endtime="20220208 12:38:40.622"/>
</kw>
<msg timestamp="20220208 12:38:40.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:38:02.952" endtime="20220208 12:38:40.623"/>
</kw>
<msg timestamp="20220208 12:38:40.623" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:38:02.952" endtime="20220208 12:38:40.623"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:38:40.623" endtime="20220208 12:38:40.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:38:40.624" endtime="20220208 12:38:40.624"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:38:02.921" endtime="20220208 12:38:40.625"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220208 12:37:20.097" endtime="20220208 12:38:40.626"/>
</suite>
<suite id="s1-s2-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:38:45.563" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:38:45.563" endtime="20220208 12:38:45.563"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:38:45.564" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:38:45.563" endtime="20220208 12:38:45.564"/>
</kw>
<status status="PASS" starttime="20220208 12:38:45.562" endtime="20220208 12:38:45.564"/>
</kw>
<msg timestamp="20220208 12:38:45.564" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:38:45.562" endtime="20220208 12:38:45.564"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:38:45.565" endtime="20220208 12:38:45.565"/>
</kw>
<msg timestamp="20220208 12:38:45.565" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:38:45.564" endtime="20220208 12:38:45.565"/>
</kw>
<status status="PASS" starttime="20220208 12:38:45.561" endtime="20220208 12:38:45.566"/>
</kw>
<msg timestamp="20220208 12:38:45.566" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:38:45.560" endtime="20220208 12:38:45.566"/>
</kw>
<msg timestamp="20220208 12:38:45.566" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:38:45.559" endtime="20220208 12:38:45.566"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:38:45.567" level="INFO">${random} = 27857</msg>
<status status="PASS" starttime="20220208 12:38:45.566" endtime="20220208 12:38:45.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:38:45.573" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-27857 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:38:49.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:38:49.400" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:38:45.568" endtime="20220208 12:38:49.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:38:49.402" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:38:46 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:38:47 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-08 12:38:47 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:38:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:38:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:38:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220208 12:38:49.401" endtime="20220208 12:38:49.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:38:49.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:38:49.402" endtime="20220208 12:38:49.403"/>
</kw>
<status status="PASS" starttime="20220208 12:38:45.568" endtime="20220208 12:38:49.403"/>
</kw>
<msg timestamp="20220208 12:38:49.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:38:45.567" endtime="20220208 12:38:49.403"/>
</kw>
<msg timestamp="20220208 12:38:49.404" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:38:45.567" endtime="20220208 12:38:49.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:38:49.407" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:38:51.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:38:51.473" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:38:49.405" endtime="20220208 12:38:51.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:38:51.474" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:38:50 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:36 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2022-02-08 12:38 ofs://om/volume1/bucket1/ozone-27857
-rw-rw-rw-   3 hadoop hadoop      21867 2022-02-08 12:37 ofs://om/volume1/bucket1/ozone-46100
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:36 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:38 ofs://om/volume1/bucket1/wordcount-mUuaqzO0.txt</msg>
<status status="PASS" starttime="20220208 12:38:51.473" endtime="20220208 12:38:51.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:38:51.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:38:51.474" endtime="20220208 12:38:51.475"/>
</kw>
<status status="PASS" starttime="20220208 12:38:49.405" endtime="20220208 12:38:51.475"/>
</kw>
<msg timestamp="20220208 12:38:51.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:38:49.404" endtime="20220208 12:38:51.475"/>
</kw>
<msg timestamp="20220208 12:38:51.476" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:38:49.404" endtime="20220208 12:38:51.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:38:51.476" endtime="20220208 12:38:51.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:38:51.480" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-27857 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:38:54.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:38:54.984" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:38:51.478" endtime="20220208 12:38:54.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:38:54.985" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:38:52 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:38:53 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-08 12:38:53 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:38:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:38:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.271,
AWS Java SDK for AWS KMS 1.11.271,
AWS Java SDK for Amazon S3 1.11.271,
AWS Java SDK for AWS STS 1.11.271,
JMES Path Query library 1.0,
which has the following notices:
 * This software includes third party software subject to the following
 copyrights: - XML parsing and utility functions from JetS3t - Copyright
 2006-2009 James Murty. - JSON parsing and utility functions from JSON.org -
 Copyright 2002 JSON.org. - PKCS#1 PEM encoded private key parsing and utility
 functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220208 12:38:54.985" endtime="20220208 12:38:54.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:38:54.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:38:54.986" endtime="20220208 12:38:54.987"/>
</kw>
<status status="PASS" starttime="20220208 12:38:51.477" endtime="20220208 12:38:54.987"/>
</kw>
<msg timestamp="20220208 12:38:54.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:38:51.477" endtime="20220208 12:38:54.987"/>
</kw>
<msg timestamp="20220208 12:38:54.989" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:38:51.477" endtime="20220208 12:38:54.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:38:54.989" endtime="20220208 12:38:54.990"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220208 12:38:45.558" endtime="20220208 12:38:54.990"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220208 12:38:45.503" endtime="20220208 12:38:54.991"/>
</suite>
<suite id="s1-s2-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:38:59.885" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:38:59.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:38:59.896" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:38:59.881" endtime="20220208 12:38:59.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:38:59.897" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:38:59.896" endtime="20220208 12:38:59.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:38:59.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:38:59.897" endtime="20220208 12:38:59.898"/>
</kw>
<status status="PASS" starttime="20220208 12:38:59.880" endtime="20220208 12:38:59.898"/>
</kw>
<msg timestamp="20220208 12:38:59.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:38:59.880" endtime="20220208 12:38:59.898"/>
</kw>
<msg timestamp="20220208 12:38:59.898" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:38:59.880" endtime="20220208 12:38:59.899"/>
</kw>
<msg timestamp="20220208 12:38:59.899" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:38:59.879" endtime="20220208 12:38:59.899"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:38:59.904" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:38:59.903" endtime="20220208 12:38:59.904"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:38:59.904" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:38:59.904" endtime="20220208 12:38:59.904"/>
</kw>
<status status="PASS" starttime="20220208 12:38:59.903" endtime="20220208 12:38:59.904"/>
</kw>
<msg timestamp="20220208 12:38:59.904" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:38:59.902" endtime="20220208 12:38:59.905"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:38:59.905" endtime="20220208 12:38:59.906"/>
</kw>
<msg timestamp="20220208 12:38:59.906" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:38:59.905" endtime="20220208 12:38:59.906"/>
</kw>
<status status="PASS" starttime="20220208 12:38:59.901" endtime="20220208 12:38:59.906"/>
</kw>
<msg timestamp="20220208 12:38:59.906" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:38:59.901" endtime="20220208 12:38:59.906"/>
</kw>
<msg timestamp="20220208 12:38:59.906" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:38:59.899" endtime="20220208 12:38:59.906"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:38:59.910" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:39:41.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:39:41.479" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:38:59.908" endtime="20220208 12:39:41.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:39:41.481" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-08 12:39:01 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:39:02 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-08 12:39:02 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:39:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:39:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:39:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-08 12:39:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2022-02-08 12:39:04 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:39:04 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:39:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:39:04 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-08 12:39:04 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:39:04 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644323740373_0003
2022-02-08 12:39:04 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:39:05 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:39:05 INFO  Configuration:2752 - resource-types.xml not found
2022-02-08 12:39:05 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-02-08 12:39:05 INFO  YarnClientImpl:324 - Submitted application application_1644323740373_0003
2022-02-08 12:39:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1644323740373_0003/
2022-02-08 12:39:05 INFO  Job:1619 - Running job: job_1644323740373_0003
2022-02-08 12:39:12 INFO  Job:1640 - Job job_1644323740373_0003 running in uber mode : false
2022-02-08 12:39:12 INFO  Job:1647 -  map 0% reduce 0%
2022-02-08 12:39:19 INFO  Job:1647 -  map 33% reduce 0%
2022-02-08 12:39:25 INFO  Job:1647 -  map 67% reduce 0%
2022-02-08 12:39:31 INFO  Job:1647 -  map 100% reduce 0%
2022-02-08 12:39:37 INFO  Job:1647 -  map 100% reduce 100%
2022-02-08 12:39:40 INFO  Job:1658 - Job job_1644323740373_0003 completed successfully
2022-02-08 12:39:40 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=867429
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45328
		Total time spent by all reduces in occupied slots (ms)=17108
		Total time spent by all map tasks (ms)=11332
		Total time spent by all reduce tasks (ms)=4277
		Total vcore-milliseconds taken by all map tasks=11332
		Total vcore-milliseconds taken by all reduce tasks=4277
		Total megabyte-milliseconds taken by all map tasks=46415872
		Total megabyte-milliseconds taken by all reduce tasks=17518592
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=958
		CPU time spent (ms)=8900
		Physical memory (bytes) snapshot=1658728448
		Virtual memory (bytes) snapshot=15822295040
		Total committed heap usage (bytes)=1477443584
		Peak Map Physical memory (bytes)=572248064
		Peak Map Virtual memory (bytes)=3955392512
		Peak Reduce Physical memory (bytes)=340049920
		Peak Reduce Virtual memory (bytes)=3967238144
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.869 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220208 12:39:41.480" endtime="20220208 12:39:41.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:39:41.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:39:41.481" endtime="20220208 12:39:41.482"/>
</kw>
<status status="PASS" starttime="20220208 12:38:59.907" endtime="20220208 12:39:41.482"/>
</kw>
<msg timestamp="20220208 12:39:41.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:38:59.907" endtime="20220208 12:39:41.482"/>
</kw>
<msg timestamp="20220208 12:39:41.483" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:38:59.907" endtime="20220208 12:39:41.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:39:41.483" endtime="20220208 12:39:41.483"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:38:59.878" endtime="20220208 12:39:41.484"/>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:39:41.489" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:39:41.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:39:41.496" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:39:41.487" endtime="20220208 12:39:41.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:39:41.497" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:39:41.496" endtime="20220208 12:39:41.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:39:41.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:39:41.497" endtime="20220208 12:39:41.498"/>
</kw>
<status status="PASS" starttime="20220208 12:39:41.486" endtime="20220208 12:39:41.498"/>
</kw>
<msg timestamp="20220208 12:39:41.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:39:41.486" endtime="20220208 12:39:41.498"/>
</kw>
<msg timestamp="20220208 12:39:41.498" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:39:41.486" endtime="20220208 12:39:41.498"/>
</kw>
<msg timestamp="20220208 12:39:41.499" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" starttime="20220208 12:39:41.485" endtime="20220208 12:39:41.499"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:39:41.499" level="INFO">${random} = rD3H9W4g</msg>
<status status="PASS" starttime="20220208 12:39:41.499" endtime="20220208 12:39:41.499"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:39:41.503" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:39:41.503" endtime="20220208 12:39:41.503"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:39:41.504" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:39:41.503" endtime="20220208 12:39:41.504"/>
</kw>
<status status="PASS" starttime="20220208 12:39:41.502" endtime="20220208 12:39:41.504"/>
</kw>
<msg timestamp="20220208 12:39:41.504" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:39:41.502" endtime="20220208 12:39:41.504"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:39:41.505" endtime="20220208 12:39:41.505"/>
</kw>
<msg timestamp="20220208 12:39:41.505" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:39:41.504" endtime="20220208 12:39:41.505"/>
</kw>
<status status="PASS" starttime="20220208 12:39:41.501" endtime="20220208 12:39:41.505"/>
</kw>
<msg timestamp="20220208 12:39:41.505" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:39:41.500" endtime="20220208 12:39:41.506"/>
</kw>
<msg timestamp="20220208 12:39:41.506" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:39:41.499" endtime="20220208 12:39:41.506"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:39:41.509" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:39:41.509" endtime="20220208 12:39:41.509"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:39:41.510" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:39:41.509" endtime="20220208 12:39:41.510"/>
</kw>
<status status="PASS" starttime="20220208 12:39:41.508" endtime="20220208 12:39:41.510"/>
</kw>
<msg timestamp="20220208 12:39:41.510" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:39:41.508" endtime="20220208 12:39:41.510"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:39:41.512" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220208 12:39:41.511" endtime="20220208 12:39:41.512"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:39:41.512" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220208 12:39:41.512" endtime="20220208 12:39:41.512"/>
</kw>
<status status="PASS" starttime="20220208 12:39:41.511" endtime="20220208 12:39:41.512"/>
</kw>
<msg timestamp="20220208 12:39:41.513" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220208 12:39:41.510" endtime="20220208 12:39:41.513"/>
</kw>
<status status="PASS" starttime="20220208 12:39:41.507" endtime="20220208 12:39:41.513"/>
</kw>
<msg timestamp="20220208 12:39:41.513" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220208 12:39:41.507" endtime="20220208 12:39:41.513"/>
</kw>
<msg timestamp="20220208 12:39:41.513" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220208 12:39:41.506" endtime="20220208 12:39:41.513"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:39:41.517" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:39:41.516" endtime="20220208 12:39:41.517"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:39:41.517" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:39:41.517" endtime="20220208 12:39:41.518"/>
</kw>
<status status="PASS" starttime="20220208 12:39:41.516" endtime="20220208 12:39:41.518"/>
</kw>
<msg timestamp="20220208 12:39:41.518" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:39:41.515" endtime="20220208 12:39:41.518"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:39:41.519" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220208 12:39:41.519" endtime="20220208 12:39:41.519"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:39:41.520" level="INFO">${result} = /wordcount-rD3H9W4g.txt</msg>
<status status="PASS" starttime="20220208 12:39:41.519" endtime="20220208 12:39:41.520"/>
</kw>
<status status="PASS" starttime="20220208 12:39:41.518" endtime="20220208 12:39:41.520"/>
</kw>
<msg timestamp="20220208 12:39:41.520" level="INFO">${path_with_leading} = /wordcount-rD3H9W4g.txt</msg>
<status status="PASS" starttime="20220208 12:39:41.518" endtime="20220208 12:39:41.520"/>
</kw>
<status status="PASS" starttime="20220208 12:39:41.515" endtime="20220208 12:39:41.521"/>
</kw>
<msg timestamp="20220208 12:39:41.521" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-rD3H9W4g.txt</msg>
<status status="PASS" starttime="20220208 12:39:41.514" endtime="20220208 12:39:41.521"/>
</kw>
<msg timestamp="20220208 12:39:41.521" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-rD3H9W4g.txt</msg>
<status status="PASS" starttime="20220208 12:39:41.514" endtime="20220208 12:39:41.521"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:39:41.525" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-rD3H9W4g.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:40:18.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:40:18.498" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:39:41.522" endtime="20220208 12:40:18.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:40:18.500" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:39:42 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:39:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.19.0.2:8032
2022-02-08 12:39:43 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:39:43 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:39:43 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:39:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2022-02-08 12:39:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2022-02-08 12:39:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:39:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:39:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-08 12:39:45 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-08 12:39:45 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:39:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644323740373_0004
2022-02-08 12:39:46 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:39:46 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:39:46 INFO  Configuration:3318 - Removed undeclared tags:
2022-02-08 12:39:46 INFO  Configuration:2752 - resource-types.xml not found
2022-02-08 12:39:46 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2022-02-08 12:39:46 INFO  YarnClientImpl:324 - Submitted application application_1644323740373_0004
2022-02-08 12:39:46 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1644323740373_0004/
2022-02-08 12:39:46 INFO  Job:1619 - Running job: job_1644323740373_0004
2022-02-08 12:39:53 INFO  Job:1640 - Job job_1644323740373_0004 running in uber mode : false
2022-02-08 12:39:53 INFO  Job:1647 -  map 0% reduce 0%
2022-02-08 12:39:59 INFO  Job:1647 -  map 33% reduce 0%
2022-02-08 12:40:05 INFO  Job:1647 -  map 67% reduce 0%
2022-02-08 12:40:11 INFO  Job:1647 -  map 100% reduce 0%
2022-02-08 12:40:17 INFO  Job:1647 -  map 100% reduce 100%
2022-02-08 12:40:18 INFO  Job:1658 - Job job_1644323740373_0004 completed successfully
2022-02-08 12:40:18 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=930315
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47316
		Total time spent by all reduces in occupied slots (ms)=16188
		Total time spent by all map tasks (ms)=11829
		Total time spent by all reduce tasks (ms)=4047
		Total vcore-milliseconds taken by all map tasks=11829
		Total vcore-milliseconds taken by all reduce tasks=4047
		Total megabyte-milliseconds taken by all map tasks=48451584
		Total megabyte-milliseconds taken by all reduce tasks=16576512
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1364
		CPU time spent (ms)=9900
		Physical memory (bytes) snapshot=2058084352
		Virtual memory (bytes) snapshot=15819247616
		Total committed heap usage (bytes)=2034761728
		Peak Map Physical memory (bytes)=579428352
		Peak Map Virtual memory (bytes)=3953479680
		Peak Reduce Physical memory (bytes)=340213760
		Peak Reduce Virtual memory (bytes)=3970162688
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220208 12:40:18.499" endtime="20220208 12:40:18.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:40:18.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:40:18.500" endtime="20220208 12:40:18.501"/>
</kw>
<status status="PASS" starttime="20220208 12:39:41.522" endtime="20220208 12:40:18.501"/>
</kw>
<msg timestamp="20220208 12:40:18.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:39:41.522" endtime="20220208 12:40:18.501"/>
</kw>
<msg timestamp="20220208 12:40:18.502" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:39:41.521" endtime="20220208 12:40:18.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:40:18.502" endtime="20220208 12:40:18.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:40:18.502" endtime="20220208 12:40:18.503"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:39:41.484" endtime="20220208 12:40:18.503"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220208 12:38:59.823" endtime="20220208 12:40:18.504"/>
</suite>
<suite id="s1-s2-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:36:27.064" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:36:29.796" level="INFO">${rc} = 255</msg>
<msg timestamp="20220208 12:36:29.796" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:36:27.058" endtime="20220208 12:36:29.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:36:29.799" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:36:29.796" endtime="20220208 12:36:29.799"/>
</kw>
<msg timestamp="20220208 12:36:29.799" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:36:27.057" endtime="20220208 12:36:29.799"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:36:29.807" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:36:32.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:36:32.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:36:29.802" endtime="20220208 12:36:32.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:36:32.378" level="INFO"/>
<status status="PASS" starttime="20220208 12:36:32.377" endtime="20220208 12:36:32.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:36:32.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:36:32.379" endtime="20220208 12:36:32.379"/>
</kw>
<status status="PASS" starttime="20220208 12:36:29.802" endtime="20220208 12:36:32.380"/>
</kw>
<msg timestamp="20220208 12:36:32.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:36:29.801" endtime="20220208 12:36:32.381"/>
</kw>
<msg timestamp="20220208 12:36:32.382" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220208 12:36:29.801" endtime="20220208 12:36:32.382"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:36:32.382" endtime="20220208 12:36:32.382"/>
</kw>
<status status="PASS" starttime="20220208 12:36:29.800" endtime="20220208 12:36:32.382"/>
</kw>
<status status="PASS" starttime="20220208 12:36:29.799" endtime="20220208 12:36:32.382"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:36:32.387" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:36:34.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:36:34.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:36:32.385" endtime="20220208 12:36:34.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:36:34.850" level="INFO"/>
<status status="PASS" starttime="20220208 12:36:34.849" endtime="20220208 12:36:34.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:36:34.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:36:34.850" endtime="20220208 12:36:34.851"/>
</kw>
<status status="PASS" starttime="20220208 12:36:32.385" endtime="20220208 12:36:34.851"/>
</kw>
<msg timestamp="20220208 12:36:34.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:36:32.384" endtime="20220208 12:36:34.852"/>
</kw>
<status status="PASS" starttime="20220208 12:36:32.384" endtime="20220208 12:36:34.852"/>
</kw>
<status status="PASS" starttime="20220208 12:36:32.383" endtime="20220208 12:36:34.852"/>
</kw>
<status status="PASS" starttime="20220208 12:36:32.383" endtime="20220208 12:36:34.853"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220208 12:36:34.853" endtime="20220208 12:36:34.853"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:36:34.857" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:36:37.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:36:37.519" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:36...</msg>
<status status="PASS" starttime="20220208 12:36:34.855" endtime="20220208 12:36:37.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:36:37.521" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:36:34.783Z",
  "modificationTime" : "2022-02-08T12:36:34.783Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220208 12:36:37.520" endtime="20220208 12:36:37.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:36:37.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:36:37.521" endtime="20220208 12:36:37.521"/>
</kw>
<status status="PASS" starttime="20220208 12:36:34.854" endtime="20220208 12:36:37.522"/>
</kw>
<msg timestamp="20220208 12:36:37.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:36:34.854" endtime="20220208 12:36:37.522"/>
</kw>
<msg timestamp="20220208 12:36:37.523" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:36...</msg>
<status status="PASS" starttime="20220208 12:36:34.853" endtime="20220208 12:36:37.523"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:36:37.523" endtime="20220208 12:36:37.523"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:36:37.528" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:36:37.527" endtime="20220208 12:36:37.528"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:36:37.529" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:36:37.528" endtime="20220208 12:36:37.529"/>
</kw>
<status status="PASS" starttime="20220208 12:36:37.527" endtime="20220208 12:36:37.529"/>
</kw>
<msg timestamp="20220208 12:36:37.529" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:36:37.526" endtime="20220208 12:36:37.529"/>
</kw>
<status status="PASS" starttime="20220208 12:36:37.525" endtime="20220208 12:36:37.529"/>
</kw>
<msg timestamp="20220208 12:36:37.530" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220208 12:36:37.524" endtime="20220208 12:36:37.530"/>
</kw>
<msg timestamp="20220208 12:36:37.530" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220208 12:36:37.523" endtime="20220208 12:36:37.530"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:36:37.534" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:36:40.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:36:40.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:36:37.531" endtime="20220208 12:36:40.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:36:40.273" level="INFO"/>
<status status="PASS" starttime="20220208 12:36:40.272" endtime="20220208 12:36:40.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:36:40.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:36:40.273" endtime="20220208 12:36:40.274"/>
</kw>
<status status="PASS" starttime="20220208 12:36:37.531" endtime="20220208 12:36:40.274"/>
</kw>
<msg timestamp="20220208 12:36:40.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:36:37.531" endtime="20220208 12:36:40.275"/>
</kw>
<status status="PASS" starttime="20220208 12:36:37.530" endtime="20220208 12:36:40.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:36:40.279" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:36:45.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:36:45.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:36:40.277" endtime="20220208 12:36:45.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:36:45.619" level="INFO"/>
<status status="PASS" starttime="20220208 12:36:45.618" endtime="20220208 12:36:45.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:36:45.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:36:45.619" endtime="20220208 12:36:45.620"/>
</kw>
<status status="PASS" starttime="20220208 12:36:40.276" endtime="20220208 12:36:45.620"/>
</kw>
<msg timestamp="20220208 12:36:45.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:36:40.276" endtime="20220208 12:36:45.621"/>
</kw>
<status status="PASS" starttime="20220208 12:36:40.275" endtime="20220208 12:36:45.621"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:36:45.625" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:36:50.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:36:50.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:36:45.623" endtime="20220208 12:36:50.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:36:50.350" level="INFO"/>
<status status="PASS" starttime="20220208 12:36:50.349" endtime="20220208 12:36:50.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:36:50.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:36:50.350" endtime="20220208 12:36:50.351"/>
</kw>
<status status="PASS" starttime="20220208 12:36:45.622" endtime="20220208 12:36:50.351"/>
</kw>
<msg timestamp="20220208 12:36:50.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:36:45.622" endtime="20220208 12:36:50.352"/>
</kw>
<status status="PASS" starttime="20220208 12:36:45.621" endtime="20220208 12:36:50.352"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:36:50.356" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:36:54.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:36:54.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:36:50.353" endtime="20220208 12:36:54.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:36:54.983" level="INFO"/>
<status status="PASS" starttime="20220208 12:36:54.983" endtime="20220208 12:36:54.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:36:54.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:36:54.984" endtime="20220208 12:36:54.984"/>
</kw>
<status status="PASS" starttime="20220208 12:36:50.353" endtime="20220208 12:36:54.984"/>
</kw>
<msg timestamp="20220208 12:36:54.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:36:50.353" endtime="20220208 12:36:54.985"/>
</kw>
<status status="PASS" starttime="20220208 12:36:50.352" endtime="20220208 12:36:54.985"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220208 12:36:27.055" endtime="20220208 12:36:54.986"/>
</test>
<test id="s1-s2-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:36:54.992" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:36:54.992" endtime="20220208 12:36:54.992"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:36:54.993" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:36:54.993" endtime="20220208 12:36:54.993"/>
</kw>
<status status="PASS" starttime="20220208 12:36:54.991" endtime="20220208 12:36:54.993"/>
</kw>
<msg timestamp="20220208 12:36:54.994" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:36:54.990" endtime="20220208 12:36:54.994"/>
</kw>
<status status="PASS" starttime="20220208 12:36:54.989" endtime="20220208 12:36:54.994"/>
</kw>
<msg timestamp="20220208 12:36:54.994" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:36:54.988" endtime="20220208 12:36:54.994"/>
</kw>
<msg timestamp="20220208 12:36:54.994" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:36:54.988" endtime="20220208 12:36:54.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:36:54.998" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:36:57.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:36:57.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:36:54.996" endtime="20220208 12:36:57.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:36:57.621" level="INFO"/>
<status status="PASS" starttime="20220208 12:36:57.620" endtime="20220208 12:36:57.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:36:57.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:36:57.621" endtime="20220208 12:36:57.622"/>
</kw>
<status status="PASS" starttime="20220208 12:36:54.995" endtime="20220208 12:36:57.622"/>
</kw>
<msg timestamp="20220208 12:36:57.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:36:54.995" endtime="20220208 12:36:57.623"/>
</kw>
<status status="PASS" starttime="20220208 12:36:54.995" endtime="20220208 12:36:57.623"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:36:57.627" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:37:00.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:37:00.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:36:57.625" endtime="20220208 12:37:00.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:37:00.232" level="INFO"/>
<status status="PASS" starttime="20220208 12:37:00.231" endtime="20220208 12:37:00.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:37:00.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:37:00.232" endtime="20220208 12:37:00.233"/>
</kw>
<status status="PASS" starttime="20220208 12:36:57.624" endtime="20220208 12:37:00.233"/>
</kw>
<msg timestamp="20220208 12:37:00.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:36:57.624" endtime="20220208 12:37:00.234"/>
</kw>
<status status="PASS" starttime="20220208 12:36:57.623" endtime="20220208 12:37:00.234"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220208 12:36:54.986" endtime="20220208 12:37:00.234"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220208 12:36:26.982" endtime="20220208 12:37:00.236"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="211919"/>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite id="s1-s3-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:42:48.614" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:42:48.613" endtime="20220208 12:42:48.614"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:42:48.614" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:42:48.614" endtime="20220208 12:42:48.615"/>
</kw>
<status status="PASS" starttime="20220208 12:42:48.613" endtime="20220208 12:42:48.615"/>
</kw>
<msg timestamp="20220208 12:42:48.615" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:42:48.612" endtime="20220208 12:42:48.615"/>
</kw>
<status status="PASS" starttime="20220208 12:42:48.611" endtime="20220208 12:42:48.615"/>
</kw>
<msg timestamp="20220208 12:42:48.615" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:42:48.611" endtime="20220208 12:42:48.615"/>
</kw>
<msg timestamp="20220208 12:42:48.616" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:42:48.609" endtime="20220208 12:42:48.616"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:42:48.616" level="INFO">${random} = 39339</msg>
<status status="PASS" starttime="20220208 12:42:48.616" endtime="20220208 12:42:48.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:48.622" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-39339 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:53.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:53.063" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:42:48.618" endtime="20220208 12:42:53.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:53.065" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:42:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:42:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:42:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:42:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220208 12:42:53.064" endtime="20220208 12:42:53.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:53.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:53.065" endtime="20220208 12:42:53.065"/>
</kw>
<status status="PASS" starttime="20220208 12:42:48.617" endtime="20220208 12:42:53.066"/>
</kw>
<msg timestamp="20220208 12:42:53.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:48.617" endtime="20220208 12:42:53.066"/>
</kw>
<msg timestamp="20220208 12:42:53.066" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:42:48.616" endtime="20220208 12:42:53.066"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:53.070" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:55.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:55.109" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:42:53.068" endtime="20220208 12:42:55.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:55.111" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-02-08 12:42 o3fs://bucket1.volume1.om/ozone-39339
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:42 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:42:55.110" endtime="20220208 12:42:55.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:55.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:55.111" endtime="20220208 12:42:55.111"/>
</kw>
<status status="PASS" starttime="20220208 12:42:53.067" endtime="20220208 12:42:55.112"/>
</kw>
<msg timestamp="20220208 12:42:55.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:53.067" endtime="20220208 12:42:55.112"/>
</kw>
<msg timestamp="20220208 12:42:55.112" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:42:53.066" endtime="20220208 12:42:55.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:42:55.112" endtime="20220208 12:42:55.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:55.117" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-39339 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:58.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:58.570" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:42:55.115" endtime="20220208 12:42:58.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:58.571" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:42:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:42:57 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:42:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220208 12:42:58.570" endtime="20220208 12:42:58.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:58.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:58.572" endtime="20220208 12:42:58.572"/>
</kw>
<status status="PASS" starttime="20220208 12:42:55.114" endtime="20220208 12:42:58.573"/>
</kw>
<msg timestamp="20220208 12:42:58.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:55.114" endtime="20220208 12:42:58.573"/>
</kw>
<msg timestamp="20220208 12:42:58.575" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:42:55.113" endtime="20220208 12:42:58.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:42:58.575" endtime="20220208 12:42:58.575"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220208 12:42:48.608" endtime="20220208 12:42:58.575"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220208 12:42:48.552" endtime="20220208 12:42:58.577"/>
</suite>
<suite id="s1-s3-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:43:03.484" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:43:03.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:43:03.491" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:43:03.480" endtime="20220208 12:43:03.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:43:03.492" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:43:03.491" endtime="20220208 12:43:03.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:43:03.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:43:03.492" endtime="20220208 12:43:03.493"/>
</kw>
<status status="PASS" starttime="20220208 12:43:03.479" endtime="20220208 12:43:03.493"/>
</kw>
<msg timestamp="20220208 12:43:03.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:43:03.479" endtime="20220208 12:43:03.493"/>
</kw>
<msg timestamp="20220208 12:43:03.494" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:43:03.478" endtime="20220208 12:43:03.495"/>
</kw>
<msg timestamp="20220208 12:43:03.495" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:43:03.478" endtime="20220208 12:43:03.495"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:43:03.499" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:43:03.498" endtime="20220208 12:43:03.499"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:43:03.499" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:43:03.499" endtime="20220208 12:43:03.499"/>
</kw>
<status status="PASS" starttime="20220208 12:43:03.498" endtime="20220208 12:43:03.500"/>
</kw>
<msg timestamp="20220208 12:43:03.500" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:43:03.497" endtime="20220208 12:43:03.500"/>
</kw>
<status status="PASS" starttime="20220208 12:43:03.497" endtime="20220208 12:43:03.500"/>
</kw>
<msg timestamp="20220208 12:43:03.500" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:43:03.496" endtime="20220208 12:43:03.500"/>
</kw>
<msg timestamp="20220208 12:43:03.500" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:43:03.495" endtime="20220208 12:43:03.500"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:43:03.504" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:43:46.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:43:46.799" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:43:03.502" endtime="20220208 12:43:46.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:43:46.800" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-08 12:43:05 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:43:05 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:43:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:43:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-08 12:43:07 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.7:8032
2022-02-08 12:43:08 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-08 12:43:08 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:43:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644324072519_0001
2022-02-08 12:43:08 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:43:09 INFO  Configuration:2795 - resource-types.xml not found
2022-02-08 12:43:09 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-02-08 12:43:09 INFO  YarnClientImpl:329 - Submitted application application_1644324072519_0001
2022-02-08 12:43:09 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1644324072519_0001/
2022-02-08 12:43:09 INFO  Job:1614 - Running job: job_1644324072519_0001
2022-02-08 12:43:20 INFO  Job:1635 - Job job_1644324072519_0001 running in uber mode : false
2022-02-08 12:43:20 INFO  Job:1642 -  map 0% reduce 0%
2022-02-08 12:43:27 INFO  Job:1642 -  map 33% reduce 0%
2022-02-08 12:43:33 INFO  Job:1642 -  map 67% reduce 0%
2022-02-08 12:43:39 INFO  Job:1642 -  map 100% reduce 0%
2022-02-08 12:43:45 INFO  Job:1642 -  map 100% reduce 100%
2022-02-08 12:43:46 INFO  Job:1653 - Job job_1644324072519_0001 completed successfully
2022-02-08 12:43:46 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=943025
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44732
		Total time spent by all reduces in occupied slots (ms)=16776
		Total time spent by all map tasks (ms)=11183
		Total time spent by all reduce tasks (ms)=4194
		Total vcore-milliseconds taken by all map tasks=11183
		Total vcore-milliseconds taken by all reduce tasks=4194
		Total megabyte-milliseconds taken by all map tasks=45805568
		Total megabyte-milliseconds taken by all reduce tasks=17178624
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=659
		CPU time spent (ms)=8220
		Physical memory (bytes) snapshot=1415856128
		Virtual memory (bytes) snapshot=15834120192
		Total committed heap usage (bytes)=1139277824
		Peak Map Physical memory (bytes)=384765952
		Peak Map Virtual memory (bytes)=3958079488
		Peak Reduce Physical memory (bytes)=343822336
		Peak Reduce Virtual memory (bytes)=3975364608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.638 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220208 12:43:46.799" endtime="20220208 12:43:46.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:43:46.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:43:46.801" endtime="20220208 12:43:46.801"/>
</kw>
<status status="PASS" starttime="20220208 12:43:03.501" endtime="20220208 12:43:46.802"/>
</kw>
<msg timestamp="20220208 12:43:46.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:43:03.501" endtime="20220208 12:43:46.802"/>
</kw>
<msg timestamp="20220208 12:43:46.802" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:43:03.500" endtime="20220208 12:43:46.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:43:46.802" endtime="20220208 12:43:46.803"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:43:03.477" endtime="20220208 12:43:46.803"/>
</test>
<test id="s1-s3-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:43:46.809" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:43:46.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:43:46.816" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:43:46.807" endtime="20220208 12:43:46.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:43:46.818" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:43:46.816" endtime="20220208 12:43:46.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:43:46.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:43:46.818" endtime="20220208 12:43:46.818"/>
</kw>
<status status="PASS" starttime="20220208 12:43:46.806" endtime="20220208 12:43:46.819"/>
</kw>
<msg timestamp="20220208 12:43:46.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:43:46.806" endtime="20220208 12:43:46.819"/>
</kw>
<msg timestamp="20220208 12:43:46.819" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:43:46.805" endtime="20220208 12:43:46.819"/>
</kw>
<msg timestamp="20220208 12:43:46.819" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:43:46.805" endtime="20220208 12:43:46.819"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:43:46.820" level="INFO">${random} = PQZbvBwD</msg>
<status status="PASS" starttime="20220208 12:43:46.820" endtime="20220208 12:43:46.820"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:43:46.824" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:43:46.823" endtime="20220208 12:43:46.824"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:43:46.824" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:43:46.824" endtime="20220208 12:43:46.824"/>
</kw>
<status status="PASS" starttime="20220208 12:43:46.823" endtime="20220208 12:43:46.825"/>
</kw>
<msg timestamp="20220208 12:43:46.825" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:43:46.822" endtime="20220208 12:43:46.825"/>
</kw>
<status status="PASS" starttime="20220208 12:43:46.822" endtime="20220208 12:43:46.825"/>
</kw>
<msg timestamp="20220208 12:43:46.825" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:43:46.821" endtime="20220208 12:43:46.825"/>
</kw>
<msg timestamp="20220208 12:43:46.825" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:43:46.820" endtime="20220208 12:43:46.825"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:43:46.829" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:43:46.829" endtime="20220208 12:43:46.829"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:43:46.830" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:43:46.829" endtime="20220208 12:43:46.830"/>
</kw>
<status status="PASS" starttime="20220208 12:43:46.828" endtime="20220208 12:43:46.830"/>
</kw>
<msg timestamp="20220208 12:43:46.830" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:43:46.828" endtime="20220208 12:43:46.830"/>
</kw>
<status status="PASS" starttime="20220208 12:43:46.827" endtime="20220208 12:43:46.830"/>
</kw>
<msg timestamp="20220208 12:43:46.830" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220208 12:43:46.826" endtime="20220208 12:43:46.830"/>
</kw>
<msg timestamp="20220208 12:43:46.831" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220208 12:43:46.826" endtime="20220208 12:43:46.831"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:43:46.834" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:43:46.834" endtime="20220208 12:43:46.834"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:43:46.835" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:43:46.834" endtime="20220208 12:43:46.835"/>
</kw>
<status status="PASS" starttime="20220208 12:43:46.833" endtime="20220208 12:43:46.835"/>
</kw>
<msg timestamp="20220208 12:43:46.835" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:43:46.833" endtime="20220208 12:43:46.835"/>
</kw>
<status status="PASS" starttime="20220208 12:43:46.832" endtime="20220208 12:43:46.835"/>
</kw>
<msg timestamp="20220208 12:43:46.836" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-PQZbvBwD.txt</msg>
<status status="PASS" starttime="20220208 12:43:46.832" endtime="20220208 12:43:46.836"/>
</kw>
<msg timestamp="20220208 12:43:46.836" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-PQZbvBwD.txt</msg>
<status status="PASS" starttime="20220208 12:43:46.831" endtime="20220208 12:43:46.836"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:43:46.840" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-PQZbvBwD.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:44:25.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:44:25.522" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:43:46.838" endtime="20220208 12:44:25.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:44:25.524" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:43:48 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.7:8032
2022-02-08 12:43:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:43:49 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:43:49 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:43:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:43:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-08 12:43:50 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-08 12:43:50 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:43:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644324072519_0002
2022-02-08 12:43:51 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:43:51 INFO  Configuration:2795 - resource-types.xml not found
2022-02-08 12:43:51 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-02-08 12:43:51 INFO  YarnClientImpl:329 - Submitted application application_1644324072519_0002
2022-02-08 12:43:51 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1644324072519_0002/
2022-02-08 12:43:51 INFO  Job:1614 - Running job: job_1644324072519_0002
2022-02-08 12:43:59 INFO  Job:1635 - Job job_1644324072519_0002 running in uber mode : false
2022-02-08 12:43:59 INFO  Job:1642 -  map 0% reduce 0%
2022-02-08 12:44:06 INFO  Job:1642 -  map 33% reduce 0%
2022-02-08 12:44:12 INFO  Job:1642 -  map 67% reduce 0%
2022-02-08 12:44:18 INFO  Job:1642 -  map 100% reduce 0%
2022-02-08 12:44:24 INFO  Job:1642 -  map 100% reduce 100%
2022-02-08 12:44:25 INFO  Job:1653 - Job job_1644324072519_0002 completed successfully
2022-02-08 12:44:25 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1005799
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47620
		Total time spent by all reduces in occupied slots (ms)=16300
		Total time spent by all map tasks (ms)=11905
		Total time spent by all reduce tasks (ms)=4075
		Total vcore-milliseconds taken by all map tasks=11905
		Total vcore-milliseconds taken by all reduce tasks=4075
		Total megabyte-milliseconds taken by all map tasks=48762880
		Total megabyte-milliseconds taken by all reduce tasks=16691200
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1312
		CPU time spent (ms)=9400
		Physical memory (bytes) snapshot=2014781440
		Virtual memory (bytes) snapshot=15830302720
		Total committed heap usage (bytes)=1945632768
		Peak Map Physical memory (bytes)=560070656
		Peak Map Virtual memory (bytes)=3953246208
		Peak Reduce Physical memory (bytes)=336789504
		Peak Reduce Virtual memory (bytes)=3973402624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220208 12:44:25.523" endtime="20220208 12:44:25.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:44:25.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:44:25.524" endtime="20220208 12:44:25.525"/>
</kw>
<status status="PASS" starttime="20220208 12:43:46.837" endtime="20220208 12:44:25.525"/>
</kw>
<msg timestamp="20220208 12:44:25.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:43:46.837" endtime="20220208 12:44:25.526"/>
</kw>
<msg timestamp="20220208 12:44:25.526" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:43:46.836" endtime="20220208 12:44:25.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:44:25.526" endtime="20220208 12:44:25.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:44:25.527" endtime="20220208 12:44:25.527"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:43:46.804" endtime="20220208 12:44:25.527"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220208 12:43:03.423" endtime="20220208 12:44:25.529"/>
</suite>
<suite id="s1-s3-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:44:30.488" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:44:30.487" endtime="20220208 12:44:30.488"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:44:30.488" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:44:30.488" endtime="20220208 12:44:30.488"/>
</kw>
<status status="PASS" starttime="20220208 12:44:30.487" endtime="20220208 12:44:30.489"/>
</kw>
<msg timestamp="20220208 12:44:30.489" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:44:30.486" endtime="20220208 12:44:30.489"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:44:30.489" endtime="20220208 12:44:30.490"/>
</kw>
<msg timestamp="20220208 12:44:30.490" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:44:30.489" endtime="20220208 12:44:30.490"/>
</kw>
<status status="PASS" starttime="20220208 12:44:30.486" endtime="20220208 12:44:30.490"/>
</kw>
<msg timestamp="20220208 12:44:30.490" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:44:30.485" endtime="20220208 12:44:30.490"/>
</kw>
<msg timestamp="20220208 12:44:30.490" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:44:30.484" endtime="20220208 12:44:30.490"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:44:30.491" level="INFO">${random} = 16863</msg>
<status status="PASS" starttime="20220208 12:44:30.491" endtime="20220208 12:44:30.491"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:44:30.497" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-16863 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:44:34.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:44:34.225" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:44:30.492" endtime="20220208 12:44:34.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:44:34.226" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:44:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:44:32 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:44:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:44:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220208 12:44:34.225" endtime="20220208 12:44:34.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:44:34.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:44:34.226" endtime="20220208 12:44:34.227"/>
</kw>
<status status="PASS" starttime="20220208 12:44:30.492" endtime="20220208 12:44:34.227"/>
</kw>
<msg timestamp="20220208 12:44:34.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:44:30.492" endtime="20220208 12:44:34.227"/>
</kw>
<msg timestamp="20220208 12:44:34.228" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:44:30.491" endtime="20220208 12:44:34.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:44:34.231" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:44:36.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:44:36.302" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:44:34.229" endtime="20220208 12:44:36.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:44:36.303" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2022-02-08 12:44 ofs://om/volume1/bucket1/ozone-16863
-rw-rw-rw-   3 hadoop hadoop      21943 2022-02-08 12:42 ofs://om/volume1/bucket1/ozone-39339
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:42 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:43 ofs://om/volume1/bucket1/wordcount-PQZbvBwD.txt</msg>
<status status="PASS" starttime="20220208 12:44:36.302" endtime="20220208 12:44:36.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:44:36.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:44:36.303" endtime="20220208 12:44:36.304"/>
</kw>
<status status="PASS" starttime="20220208 12:44:34.229" endtime="20220208 12:44:36.304"/>
</kw>
<msg timestamp="20220208 12:44:36.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:44:34.229" endtime="20220208 12:44:36.304"/>
</kw>
<msg timestamp="20220208 12:44:36.305" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:44:34.228" endtime="20220208 12:44:36.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:44:36.305" endtime="20220208 12:44:36.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:44:36.309" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-16863 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:44:39.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:44:39.718" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:44:36.307" endtime="20220208 12:44:39.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:44:39.719" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:44:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:44:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:44:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
This product includes software developed by The Apache Software
Foundation (http://www.apache.org/).

The binary distribution of this product bundles binaries of
org.iq80.leveldb:leveldb-api (https://github.com/dain/leveldb), which has the
following notices:
* Copyright 2011 Dain Sundstrom &lt;dain@iq80.com&gt;
* Copyright 2011 FuseSource Corp. http://fusesource.com

The binary distribution of this product bundles binaries of
AWS SDK for Java - Bundle 1.11.563 (https://github.com/aws/aws-sdk-java),
which has the following notices:

This software includes third party software subject to the following copyrights:
- XML parsing and utility functions from JetS3t - Copyright 2006-2009 James Murty.
- PKCS#1 PEM encoded private key parsing and utility functions from oauth.googlecode.com - Copyright 1998-2010 AOL Inc.

The binary distribution of this product bundles binaries of
Gson 2.2.4,
which has the following notices:

                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * http://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'ArrayDeque', written by Josh
Bloch of Google, Inc:

  * LICENSE:
    * license/LICENSE.deque.txt (Public Domain)

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified version of Roland Kuhn's ASL2
AbstractNodeQueue, which is based on Dmitriy Vyukov's non-intrusive MPSC queue.
It can be obtained at:

  * LICENSE:
    * license/LICENSE.abstractnodequeue.txt (Public Domain)
  * HOMEPAGE:
    * https://github.com/akka/akka/blob/wip-2.2.3-for-scala-2.11/akka-actor/src/main/java/akka/dispatch/AbstractNodeQueue.java

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/libdivsufsort/

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/protobuf/

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * http://code.google.com/p/snappy/

This product contains a modified portion of UnsignedBytes LexicographicalComparator
from Guava v21 project by Google Inc, which can be obtained at:

  * LICENSE:
    * license/COPYING (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/guava

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (GNU LGPL 2.1)
  * HOMEPAGE:
    * http://www.jboss.org/jbossmarshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://code.google.com/p/caliper/

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/

This product contains a modified portion of 'JDOM 1.1', which can be obtained at:

  * LICENSE:
    * https://github.com/hunterhacker/jdom/blob/jdom-1.1/core/LICENSE.txt
  * HOMEPAGE:
    * http://www.jdom.org/

The binary distribution of this product bundles binaries of
Commons Codec 1.4,
which has the following notices:
 * src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.javacontains test data from http://aspell.net/test/orig/batch0.tab.Copyright (C) 2002 Kevin Atkinson (kevina@gnu.org)
  ===============================================================================
  The content of package org.apache.commons.codec.language.bm has been translated
  from the original php source code available at http://stevemorse.org/phoneticinfo.htm
  with permission from the original authors.
  Original source copyright:Copyright (c) 2008 Alexander Beider &amp; Stephen P. Morse.

The binary distribution of this product bundles binaries of
Commons Lang 2.6,
which has the following notices:
 * This product includes software from the Spring Framework,under the Apache License 2.0 (see: StringUtils.containsWhitespace())

The binary distribution of this product bundles binaries of
Apache Log4j 1.2.17,
which has the following notices:
 * ResolverUtil.java
    Copyright 2005-2006 Tim Fennell
  Dumbster SMTP test server
    Copyright 2004 Jason Paul Kitchen
  TypeUtil.java
    Copyright 2002-2012 Ramnivas Laddad, Juergen Hoeller, Chris Beams

The binary distribution of this product bundles binaries of
"Java Concurrency in Practice" book annotations 1.0,
which has the following notices:
 * Copyright (c) 2005 Brian Goetz and Tim Peierls Released under the Creative
  Commons Attribution License (http://creativecommons.org/licenses/by/2.5)
  Official home: http://www.jcip.net Any republication or derived work
  distributed in source code form must include this copyright and license
  notice.

The binary distribution of this product bundles binaries of
Jetty :: Http Utility 9.3.19.,
Jetty :: IO Utility 9.3.19.,
Jetty :: Security 9.3.19.,
Jetty :: Server Core 9.3.19.,
Jetty :: Servlet Handling 9.3.19.,
Jetty :: Utilities 9.3.19.,
Jetty :: Utilities :: Ajax,
Jetty :: Webapp Application Support 9.3.19.,
Jetty :: XML utilities 9.3.19.,
which has the following notices:
 * ==============================================================
    Jetty Web Container
    Copyright 1995-2016 Mort Bay Consulting Pty Ltd.
   ==============================================================

   The Jetty Web Container is Copyright Mort Bay Consulting Pty Ltd
   unless otherwise noted.

   Jetty is dual licensed under both

     * The Apache 2.0 License
       http://www.apache.org/licenses/LICENSE-2.0.html

         and

     * The Eclipse Public 1.0 License
       http://www.eclipse.org/legal/epl-v10.html

   Jetty may be distributed under either license.

   ------
   Eclipse

   The following artifacts are EPL.
    * org.eclipse.jetty.orbit:org.eclipse.jdt.core

   The following artifacts are EPL and ASL2.
    * org.eclipse.jetty.orbit:javax.security.auth.message


   The following artifacts are EPL and CDDL 1.0.
    * org.eclipse.jetty.orbit:javax.mail.glassfish


   ------
   Oracle

   The following artifacts are CDDL + GPLv2 with classpath exception.
   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

    * javax.servlet:javax.servlet-api
    * javax.annotation:javax.annotation-api
    * javax.transaction:javax.transaction-api
    * javax.websocket:javax.websocket-api

   ------
   Oracle OpenJDK

   If ALPN is used to negotiate HTTP/2 connections, then the following
   artifacts may be included in the distribution or downloaded when ALPN
   module is selected.

    * java.sun.security.ssl

   These artifacts replace/modify OpenJDK classes.  The modififications
   are hosted at github and both modified and original are under GPL v2 with
   classpath exceptions.
   http://openjdk.java.net/legal/gplv2+ce.html


   ------
   OW2

   The following artifacts are licensed by the OW2 Foundation according to the
   terms of http://asm.ow2.org/license.html

   org.ow2.asm:asm-commons
   org.ow2.asm:asm


   ------
   Apache

   The following artifacts are ASL2 licensed.

   org.apache.taglibs:taglibs-standard-spec
   org.apache.taglibs:taglibs-standard-impl


   ------
   MortBay

   The following artifacts are ASL2 licensed.  Based on selected classes from
   following Apache Tomcat jars, all ASL2 licensed.

   org.mortbay.jasper:apache-jsp
     org.apache.tomcat:tomcat-jasper
     org.apache.tomcat:tomcat-juli
     org.apache.tomcat:tomcat-jsp-api
     org.apache.tomcat:tomcat-el-api
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-api
     org.apache.tomcat:tomcat-util-scan
     org.apache.tomcat:tomcat-util

   org.mortbay.jasper:apache-el
     org.apache.tomcat:tomcat-jasper-el
     org.apache.tomcat:tomcat-el-api


   ------
   Mortbay

   The following artifacts are CDDL + GPLv2 with classpath exception.

   https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html

   org.eclipse.jetty.toolchain:jetty-schemas

   ------
   Assorted

   The UnixCrypt.java code implements the one way cryptography used by
   Unix systems for simple password protection.  Copyright 1996 Aki Yoshida,
   modified April 2001  by Iris Van den Broeke, Daniel Deville.
   Permission to use, copy, modify and distribute UnixCrypt
   for non-commercial or commercial purposes and without fee is
   granted provided that the copyright notice appears in all copies./

The binary distribution of this product bundles binaries of
Snappy for Java 1.0.4.1,
which has the following notices:
 * This product includes software developed by Google
    Snappy: http://code.google.com/p/snappy/ (New BSD License)

   This product includes software developed by Apache
    PureJavaCrc32C from apache-hadoop-common http://hadoop.apache.org/
    (Apache 2.0 license)

   This library containd statically linked libstdc++. This inclusion is allowed by
   "GCC RUntime Library Exception"
   http://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html

   == Contributors ==
     * Tatu Saloranta
       * Providing benchmark suite
     * Alec Wysoker
       * Performance and memory usage improvement

The binary distribution of this product bundles binaries of
Xerces2 Java Parser 2.9.1,
which has the following notices:
 * =========================================================================
   ==  NOTICE file corresponding to section 4(d) of the Apache License,   ==
   ==  Version 2.0, in this case for the Apache Xerces Java distribution. ==
   =========================================================================

   Apache Xerces Java
   Copyright 1999-2007 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   Portions of this software were originally based on the following:
     - software copyright (c) 1999, IBM Corporation., http://www.ibm.com.
     - software copyright (c) 1999, Sun Microsystems., http://www.sun.com.
     - voluntary contributions made by Paul Eng on behalf of the
       Apache Software Foundation that were originally developed at iClick, Inc.,
       software copyright (c) 1999.

The binary distribution of this product bundles binaries of
Logback Classic Module 1.1.2,
Logback Core Module 1.1.2,
which has the following notices:
 * Logback: the reliable, generic, fast and flexible logging framework.
   Copyright (C) 1999-2012, QOS.ch. All rights reserved.

The binary distribution of this product bundles binaries of
Apache HBase - Annotations 1.2.6,
Apache HBase - Client 1.2.6,
Apache HBase - Common 1.2.6,
Apache HBase - Hadoop Compatibility 1.2.6,
Apache HBase - Hadoop Two Compatibility 1.2.6,
Apache HBase - Prefix Tree 1.2.6,
Apache HBase - Procedure 1.2.6,
Apache HBase - Protocol 1.2.6,
Apache HBase - Server 1.2.6,
which has the following notices:
 * Apache HBase
   Copyright 2007-2015 The Apache Software Foundation

   This product includes software developed at
   The Apache Software Foundation (http://www.apache.org/).

   --
   This product incorporates portions of the 'Hadoop' project

   Copyright 2007-2009 The Apache Software Foundation

   Licensed under the Apache License v2.0
   --
   Our Orca logo we got here: http://www.vectorfree.com/jumping-orca
   It is licensed Creative Commons Attribution 3.0.
   See https://creativecommons.org/licenses/by/3.0/us/
   We changed the logo by stripping the colored background, inverting
   it and then rotating it some.

   Later we found that vectorfree.com image is not properly licensed.
   The original is owned by vectorportal.com. The original was
   relicensed so we could use it as Creative Commons Attribution 3.0.
   The license is bundled with the download available here:
   http://www.vectorportal.com/subcategory/205/KILLER-WHALE-FREE-VECTOR.eps/ifile/9136/detailtest.asp
   --
   This product includes portions of the Bootstrap project v3.0.0

   Copyright 2013 Twitter, Inc.

   Licensed under the Apache License v2.0

   This product uses the Glyphicons Halflings icon set.

   http://glyphicons.com/

   Copyright Jan Kovařík

   Licensed under the Apache License v2.0 as a part of the Bootstrap project.

   --
   This product includes portions of the Guava project v14, specifically
   'hbase-common/src/main/java/org/apache/hadoop/hbase/io/LimitInputStream.java'

   Copyright (C) 2007 The Guava Authors

   Licensed under the Apache License, Version 2.0

The binary distribution of this product bundles binaries of
Phoenix Core 4.7.0,
which has the following notices:
   Apache Phoenix
   Copyright 2013-2016 The Apache Software Foundation

   This product includes software developed by The Apache Software
   Foundation (http://www.apache.org/).

   This also includes:

   The phoenix-spark module has been adapted from the phoenix-spark library
   distributed under the terms of the Apache 2 license. Original source copyright:
   Copyright 2014 Simply Measured, Inc.
   Copyright 2015 Interset Software Inc.

   The file bin/daemon.py is based on the file of the same name in python-daemon 2.0.5
   (https://pypi.python.org/pypi/python-daemon/). Original source copyright:
   # Copyright © 2008–2015 Ben Finney &lt;ben+python@benfinney.id.au&gt;
   # Copyright © 2007–2008 Robert Niederreiter, Jens Klein
   # Copyright © 2004–2005 Chad J. Schroeder
   # Copyright © 2003 Clark Evans
   # Copyright © 2002 Noah Spurrier
   # Copyright © 2001 Jürgen Hermann

The binary distribution of this product bundles binaries of
Plexus Cipher: encryption/decryption Component 1.4,
which has the following notices:
 * The code in this component contains a class - Base64 taken from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/Base64.java
   which is Apache license: http://www.apache.org/licenses/LICENSE-2.0

   The PBE key processing routine PBECipher.createCipher() is adopted from http://juliusdavies.ca/svn/not-yet-commons-ssl/tags/commons-ssl-0.3.10/src/java/org/apache/commons/ssl/OpenSSL.java
    which is also Apache APL-2.0 license: http://www.apache.org/licenses/LICENSE-2.0

The binary distribution of this product bundles binaries of
software.amazon.ion:ion-java 1.0.1,
which has the following notices:
 * Amazon Ion Java Copyright 2007-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.

The binary distribution of this product bundles binaries of
joda-time:joda-time:2.9.9
which has the following notices:
 * =============================================================================
   = NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
   =============================================================================
   This product includes software developed by
   Joda.org (http://www.joda.org/).

The binary distribution of this product bundles binaries of
Ehcache 3.3.1,
which has the following notices:
 * Ehcache V3 Copyright 2014-2016 Terracotta, Inc.

The binary distribution of this product bundles binaries of
snakeyaml (https://bitbucket.org/asomov/snakeyaml),
which has the following notices:
 * Copyright (c) 2008, http://www.snakeyaml.org

The binary distribution of this product bundles binaries of
swagger-annotations (https://github.com/swagger-api/swagger-core),
which has the following notices:
 * Copyright 2016 SmartBear Software

The binary distribution of this product bundles binaries of
metrics-core 3.2.4
which has the following notices:
 * Copyright 2010-2013 Coda Hale and Yammer, Inc.

   This product includes software developed by Coda Hale and Yammer, Inc.

   This product includes code derived from the JSR-166 project (ThreadLocalRandom, Striped64,
   LongAdder), which was released with the following comments:

   Written by Doug Lea with assistance from members of JCP JSR-166
   Expert Group and released to the public domain, as explained at
   http://creativecommons.org/publicdomain/zero/1.0/</msg>
<status status="PASS" starttime="20220208 12:44:39.719" endtime="20220208 12:44:39.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:44:39.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:44:39.720" endtime="20220208 12:44:39.721"/>
</kw>
<status status="PASS" starttime="20220208 12:44:36.306" endtime="20220208 12:44:39.721"/>
</kw>
<msg timestamp="20220208 12:44:39.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:44:36.306" endtime="20220208 12:44:39.721"/>
</kw>
<msg timestamp="20220208 12:44:39.723" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:44:36.305" endtime="20220208 12:44:39.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:44:39.724" endtime="20220208 12:44:39.724"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220208 12:44:30.483" endtime="20220208 12:44:39.724"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220208 12:44:30.430" endtime="20220208 12:44:39.726"/>
</suite>
<suite id="s1-s3-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:44:44.579" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:44:44.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:44:44.586" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:44:44.575" endtime="20220208 12:44:44.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:44:44.587" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:44:44.586" endtime="20220208 12:44:44.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:44:44.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:44:44.587" endtime="20220208 12:44:44.588"/>
</kw>
<status status="PASS" starttime="20220208 12:44:44.574" endtime="20220208 12:44:44.588"/>
</kw>
<msg timestamp="20220208 12:44:44.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:44:44.574" endtime="20220208 12:44:44.588"/>
</kw>
<msg timestamp="20220208 12:44:44.589" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:44:44.574" endtime="20220208 12:44:44.590"/>
</kw>
<msg timestamp="20220208 12:44:44.590" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:44:44.573" endtime="20220208 12:44:44.590"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:44:44.594" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:44:44.593" endtime="20220208 12:44:44.594"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:44:44.595" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:44:44.594" endtime="20220208 12:44:44.595"/>
</kw>
<status status="PASS" starttime="20220208 12:44:44.593" endtime="20220208 12:44:44.595"/>
</kw>
<msg timestamp="20220208 12:44:44.595" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:44:44.592" endtime="20220208 12:44:44.595"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:44:44.596" endtime="20220208 12:44:44.596"/>
</kw>
<msg timestamp="20220208 12:44:44.596" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:44:44.595" endtime="20220208 12:44:44.596"/>
</kw>
<status status="PASS" starttime="20220208 12:44:44.592" endtime="20220208 12:44:44.596"/>
</kw>
<msg timestamp="20220208 12:44:44.596" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:44:44.591" endtime="20220208 12:44:44.596"/>
</kw>
<msg timestamp="20220208 12:44:44.597" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:44:44.590" endtime="20220208 12:44:44.597"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:44:44.601" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:45:22.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:45:22.856" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:44:44.598" endtime="20220208 12:45:22.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:45:22.857" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-08 12:44:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:44:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:44:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:44:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-08 12:44:48 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.7:8032
2022-02-08 12:44:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:44:48 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-08 12:44:49 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:44:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644324072519_0003
2022-02-08 12:44:49 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:44:49 INFO  Configuration:2795 - resource-types.xml not found
2022-02-08 12:44:49 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-02-08 12:44:49 INFO  YarnClientImpl:329 - Submitted application application_1644324072519_0003
2022-02-08 12:44:49 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1644324072519_0003/
2022-02-08 12:44:49 INFO  Job:1614 - Running job: job_1644324072519_0003
2022-02-08 12:44:57 INFO  Job:1635 - Job job_1644324072519_0003 running in uber mode : false
2022-02-08 12:44:57 INFO  Job:1642 -  map 0% reduce 0%
2022-02-08 12:45:05 INFO  Job:1642 -  map 33% reduce 0%
2022-02-08 12:45:11 INFO  Job:1642 -  map 67% reduce 0%
2022-02-08 12:45:17 INFO  Job:1642 -  map 100% reduce 0%
2022-02-08 12:45:21 INFO  Job:1642 -  map 100% reduce 100%
2022-02-08 12:45:22 INFO  Job:1653 - Job job_1644324072519_0003 completed successfully
2022-02-08 12:45:22 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=942813
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43724
		Total time spent by all reduces in occupied slots (ms)=16256
		Total time spent by all map tasks (ms)=10931
		Total time spent by all reduce tasks (ms)=4064
		Total vcore-milliseconds taken by all map tasks=10931
		Total vcore-milliseconds taken by all reduce tasks=4064
		Total megabyte-milliseconds taken by all map tasks=44773376
		Total megabyte-milliseconds taken by all reduce tasks=16646144
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=657
		CPU time spent (ms)=8290
		Physical memory (bytes) snapshot=1367138304
		Virtual memory (bytes) snapshot=15819857920
		Total committed heap usage (bytes)=1150287872
		Peak Map Physical memory (bytes)=344432640
		Peak Map Virtual memory (bytes)=3949850624
		Peak Reduce Physical memory (bytes)=340656128
		Peak Reduce Virtual memory (bytes)=3972509696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.972 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220208 12:45:22.857" endtime="20220208 12:45:22.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:45:22.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:45:22.858" endtime="20220208 12:45:22.858"/>
</kw>
<status status="PASS" starttime="20220208 12:44:44.598" endtime="20220208 12:45:22.859"/>
</kw>
<msg timestamp="20220208 12:45:22.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:44:44.598" endtime="20220208 12:45:22.859"/>
</kw>
<msg timestamp="20220208 12:45:22.859" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:44:44.597" endtime="20220208 12:45:22.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:45:22.859" endtime="20220208 12:45:22.860"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:44:44.572" endtime="20220208 12:45:22.860"/>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:45:22.866" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:45:22.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:45:22.872" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:45:22.864" endtime="20220208 12:45:22.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:45:22.874" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:45:22.873" endtime="20220208 12:45:22.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:45:22.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:45:22.874" endtime="20220208 12:45:22.874"/>
</kw>
<status status="PASS" starttime="20220208 12:45:22.863" endtime="20220208 12:45:22.875"/>
</kw>
<msg timestamp="20220208 12:45:22.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:45:22.863" endtime="20220208 12:45:22.875"/>
</kw>
<msg timestamp="20220208 12:45:22.875" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:45:22.862" endtime="20220208 12:45:22.875"/>
</kw>
<msg timestamp="20220208 12:45:22.875" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20220208 12:45:22.862" endtime="20220208 12:45:22.875"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:45:22.876" level="INFO">${random} = bqIOGSzk</msg>
<status status="PASS" starttime="20220208 12:45:22.875" endtime="20220208 12:45:22.876"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:45:22.879" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:45:22.879" endtime="20220208 12:45:22.880"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:45:22.880" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:45:22.880" endtime="20220208 12:45:22.880"/>
</kw>
<status status="PASS" starttime="20220208 12:45:22.879" endtime="20220208 12:45:22.880"/>
</kw>
<msg timestamp="20220208 12:45:22.881" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:45:22.878" endtime="20220208 12:45:22.881"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:45:22.881" endtime="20220208 12:45:22.882"/>
</kw>
<msg timestamp="20220208 12:45:22.882" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:45:22.881" endtime="20220208 12:45:22.882"/>
</kw>
<status status="PASS" starttime="20220208 12:45:22.877" endtime="20220208 12:45:22.882"/>
</kw>
<msg timestamp="20220208 12:45:22.882" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:45:22.877" endtime="20220208 12:45:22.882"/>
</kw>
<msg timestamp="20220208 12:45:22.882" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:45:22.876" endtime="20220208 12:45:22.882"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:45:22.886" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:45:22.885" endtime="20220208 12:45:22.886"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:45:22.886" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:45:22.886" endtime="20220208 12:45:22.887"/>
</kw>
<status status="PASS" starttime="20220208 12:45:22.885" endtime="20220208 12:45:22.887"/>
</kw>
<msg timestamp="20220208 12:45:22.887" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:45:22.884" endtime="20220208 12:45:22.887"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:45:22.888" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220208 12:45:22.888" endtime="20220208 12:45:22.888"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:45:22.889" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220208 12:45:22.889" endtime="20220208 12:45:22.889"/>
</kw>
<status status="PASS" starttime="20220208 12:45:22.887" endtime="20220208 12:45:22.889"/>
</kw>
<msg timestamp="20220208 12:45:22.889" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220208 12:45:22.887" endtime="20220208 12:45:22.889"/>
</kw>
<status status="PASS" starttime="20220208 12:45:22.884" endtime="20220208 12:45:22.890"/>
</kw>
<msg timestamp="20220208 12:45:22.890" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220208 12:45:22.883" endtime="20220208 12:45:22.890"/>
</kw>
<msg timestamp="20220208 12:45:22.890" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220208 12:45:22.883" endtime="20220208 12:45:22.890"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:45:22.894" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:45:22.893" endtime="20220208 12:45:22.894"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:45:22.894" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:45:22.894" endtime="20220208 12:45:22.894"/>
</kw>
<status status="PASS" starttime="20220208 12:45:22.892" endtime="20220208 12:45:22.894"/>
</kw>
<msg timestamp="20220208 12:45:22.894" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:45:22.892" endtime="20220208 12:45:22.894"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:45:22.896" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220208 12:45:22.895" endtime="20220208 12:45:22.896"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:45:22.896" level="INFO">${result} = /wordcount-bqIOGSzk.txt</msg>
<status status="PASS" starttime="20220208 12:45:22.896" endtime="20220208 12:45:22.897"/>
</kw>
<status status="PASS" starttime="20220208 12:45:22.895" endtime="20220208 12:45:22.897"/>
</kw>
<msg timestamp="20220208 12:45:22.897" level="INFO">${path_with_leading} = /wordcount-bqIOGSzk.txt</msg>
<status status="PASS" starttime="20220208 12:45:22.895" endtime="20220208 12:45:22.897"/>
</kw>
<status status="PASS" starttime="20220208 12:45:22.891" endtime="20220208 12:45:22.897"/>
</kw>
<msg timestamp="20220208 12:45:22.897" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-bqIOGSzk.txt</msg>
<status status="PASS" starttime="20220208 12:45:22.891" endtime="20220208 12:45:22.897"/>
</kw>
<msg timestamp="20220208 12:45:22.898" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-bqIOGSzk.txt</msg>
<status status="PASS" starttime="20220208 12:45:22.890" endtime="20220208 12:45:22.898"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:45:22.902" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-bqIOGSzk.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:46:01.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:46:01.440" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:45:22.899" endtime="20220208 12:46:01.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:46:01.441" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:45:24 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.20.0.7:8032
2022-02-08 12:45:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:45:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:45:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:45:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:45:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-08 12:45:26 INFO  FileInputFormat:292 - Total input files to process : 3
2022-02-08 12:45:26 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:45:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644324072519_0004
2022-02-08 12:45:27 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:45:27 INFO  Configuration:2795 - resource-types.xml not found
2022-02-08 12:45:27 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2022-02-08 12:45:27 INFO  YarnClientImpl:329 - Submitted application application_1644324072519_0004
2022-02-08 12:45:27 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1644324072519_0004/
2022-02-08 12:45:27 INFO  Job:1614 - Running job: job_1644324072519_0004
2022-02-08 12:45:35 INFO  Job:1635 - Job job_1644324072519_0004 running in uber mode : false
2022-02-08 12:45:35 INFO  Job:1642 -  map 0% reduce 0%
2022-02-08 12:45:42 INFO  Job:1642 -  map 33% reduce 0%
2022-02-08 12:45:48 INFO  Job:1642 -  map 67% reduce 0%
2022-02-08 12:45:54 INFO  Job:1642 -  map 100% reduce 0%
2022-02-08 12:45:59 INFO  Job:1642 -  map 100% reduce 100%
2022-02-08 12:46:00 INFO  Job:1653 - Job job_1644324072519_0004 completed successfully
2022-02-08 12:46:01 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1005715
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44448
		Total time spent by all reduces in occupied slots (ms)=15808
		Total time spent by all map tasks (ms)=11112
		Total time spent by all reduce tasks (ms)=3952
		Total vcore-milliseconds taken by all map tasks=11112
		Total vcore-milliseconds taken by all reduce tasks=3952
		Total megabyte-milliseconds taken by all map tasks=45514752
		Total megabyte-milliseconds taken by all reduce tasks=16187392
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=842
		CPU time spent (ms)=8740
		Physical memory (bytes) snapshot=1559494656
		Virtual memory (bytes) snapshot=15807303680
		Total committed heap usage (bytes)=1374158848
		Peak Map Physical memory (bytes)=564109312
		Peak Map Virtual memory (bytes)=3952771072
		Peak Reduce Physical memory (bytes)=307806208
		Peak Reduce Virtual memory (bytes)=3954294784
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220208 12:46:01.441" endtime="20220208 12:46:01.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:46:01.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:46:01.442" endtime="20220208 12:46:01.442"/>
</kw>
<status status="PASS" starttime="20220208 12:45:22.899" endtime="20220208 12:46:01.443"/>
</kw>
<msg timestamp="20220208 12:46:01.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:45:22.899" endtime="20220208 12:46:01.443"/>
</kw>
<msg timestamp="20220208 12:46:01.443" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:45:22.898" endtime="20220208 12:46:01.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:46:01.444" endtime="20220208 12:46:01.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:46:01.444" endtime="20220208 12:46:01.444"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:45:22.861" endtime="20220208 12:46:01.445"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220208 12:44:44.519" endtime="20220208 12:46:01.446"/>
</suite>
<suite id="s1-s3-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s3-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:41:58.016" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:02.348" level="INFO">${rc} = 255</msg>
<msg timestamp="20220208 12:42:02.348" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:41:58.011" endtime="20220208 12:42:02.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:02.349" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:42:02.348" endtime="20220208 12:42:02.349"/>
</kw>
<msg timestamp="20220208 12:42:02.350" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:41:58.010" endtime="20220208 12:42:02.350"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:02.355" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:06.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:06.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:42:02.352" endtime="20220208 12:42:06.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:06.149" level="INFO"/>
<status status="PASS" starttime="20220208 12:42:06.149" endtime="20220208 12:42:06.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:06.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:06.150" endtime="20220208 12:42:06.150"/>
</kw>
<status status="PASS" starttime="20220208 12:42:02.352" endtime="20220208 12:42:06.151"/>
</kw>
<msg timestamp="20220208 12:42:06.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:02.352" endtime="20220208 12:42:06.152"/>
</kw>
<msg timestamp="20220208 12:42:06.152" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220208 12:42:02.351" endtime="20220208 12:42:06.152"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:42:06.153" endtime="20220208 12:42:06.153"/>
</kw>
<status status="PASS" starttime="20220208 12:42:02.350" endtime="20220208 12:42:06.153"/>
</kw>
<status status="PASS" starttime="20220208 12:42:02.350" endtime="20220208 12:42:06.153"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:06.158" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:09.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:09.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:42:06.156" endtime="20220208 12:42:09.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:09.884" level="INFO"/>
<status status="PASS" starttime="20220208 12:42:09.883" endtime="20220208 12:42:09.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:09.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:09.884" endtime="20220208 12:42:09.885"/>
</kw>
<status status="PASS" starttime="20220208 12:42:06.155" endtime="20220208 12:42:09.885"/>
</kw>
<msg timestamp="20220208 12:42:09.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:06.155" endtime="20220208 12:42:09.886"/>
</kw>
<status status="PASS" starttime="20220208 12:42:06.155" endtime="20220208 12:42:09.886"/>
</kw>
<status status="PASS" starttime="20220208 12:42:06.154" endtime="20220208 12:42:09.886"/>
</kw>
<status status="PASS" starttime="20220208 12:42:06.154" endtime="20220208 12:42:09.886"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220208 12:42:09.886" endtime="20220208 12:42:09.887"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:09.891" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:13.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:13.561" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:42...</msg>
<status status="PASS" starttime="20220208 12:42:09.888" endtime="20220208 12:42:13.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:13.562" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:42:09.777Z",
  "modificationTime" : "2022-02-08T12:42:09.777Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220208 12:42:13.561" endtime="20220208 12:42:13.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:13.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:13.563" endtime="20220208 12:42:13.563"/>
</kw>
<status status="PASS" starttime="20220208 12:42:09.888" endtime="20220208 12:42:13.563"/>
</kw>
<msg timestamp="20220208 12:42:13.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:09.888" endtime="20220208 12:42:13.564"/>
</kw>
<msg timestamp="20220208 12:42:13.564" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:42...</msg>
<status status="PASS" starttime="20220208 12:42:09.887" endtime="20220208 12:42:13.564"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:42:13.564" endtime="20220208 12:42:13.565"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:42:13.570" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:42:13.570" endtime="20220208 12:42:13.570"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:42:13.571" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:42:13.570" endtime="20220208 12:42:13.571"/>
</kw>
<status status="PASS" starttime="20220208 12:42:13.569" endtime="20220208 12:42:13.571"/>
</kw>
<msg timestamp="20220208 12:42:13.571" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:42:13.568" endtime="20220208 12:42:13.571"/>
</kw>
<status status="PASS" starttime="20220208 12:42:13.567" endtime="20220208 12:42:13.571"/>
</kw>
<msg timestamp="20220208 12:42:13.572" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220208 12:42:13.566" endtime="20220208 12:42:13.572"/>
</kw>
<msg timestamp="20220208 12:42:13.572" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220208 12:42:13.565" endtime="20220208 12:42:13.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:13.576" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:17.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:17.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:42:13.573" endtime="20220208 12:42:17.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:17.250" level="INFO"/>
<status status="PASS" starttime="20220208 12:42:17.249" endtime="20220208 12:42:17.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:17.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:17.250" endtime="20220208 12:42:17.251"/>
</kw>
<status status="PASS" starttime="20220208 12:42:13.573" endtime="20220208 12:42:17.251"/>
</kw>
<msg timestamp="20220208 12:42:17.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:13.573" endtime="20220208 12:42:17.252"/>
</kw>
<status status="PASS" starttime="20220208 12:42:13.572" endtime="20220208 12:42:17.252"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:17.256" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:24.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:24.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:42:17.254" endtime="20220208 12:42:24.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:24.462" level="INFO"/>
<status status="PASS" starttime="20220208 12:42:24.462" endtime="20220208 12:42:24.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:24.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:24.463" endtime="20220208 12:42:24.463"/>
</kw>
<status status="PASS" starttime="20220208 12:42:17.253" endtime="20220208 12:42:24.464"/>
</kw>
<msg timestamp="20220208 12:42:24.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:17.253" endtime="20220208 12:42:24.464"/>
</kw>
<status status="PASS" starttime="20220208 12:42:17.252" endtime="20220208 12:42:24.464"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:24.468" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:30.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:30.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:42:24.466" endtime="20220208 12:42:30.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:30.815" level="INFO"/>
<status status="PASS" starttime="20220208 12:42:30.815" endtime="20220208 12:42:30.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:30.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:30.816" endtime="20220208 12:42:30.816"/>
</kw>
<status status="PASS" starttime="20220208 12:42:24.466" endtime="20220208 12:42:30.816"/>
</kw>
<msg timestamp="20220208 12:42:30.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:24.465" endtime="20220208 12:42:30.817"/>
</kw>
<status status="PASS" starttime="20220208 12:42:24.465" endtime="20220208 12:42:30.817"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:30.821" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:36.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:36.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:42:30.819" endtime="20220208 12:42:36.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:36.785" level="INFO"/>
<status status="PASS" starttime="20220208 12:42:36.784" endtime="20220208 12:42:36.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:36.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:36.786" endtime="20220208 12:42:36.786"/>
</kw>
<status status="PASS" starttime="20220208 12:42:30.818" endtime="20220208 12:42:36.787"/>
</kw>
<msg timestamp="20220208 12:42:36.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:30.818" endtime="20220208 12:42:36.787"/>
</kw>
<status status="PASS" starttime="20220208 12:42:30.817" endtime="20220208 12:42:36.788"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220208 12:41:58.010" endtime="20220208 12:42:36.788"/>
</test>
<test id="s1-s3-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:42:36.794" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:42:36.794" endtime="20220208 12:42:36.794"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:42:36.795" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:42:36.794" endtime="20220208 12:42:36.795"/>
</kw>
<status status="PASS" starttime="20220208 12:42:36.793" endtime="20220208 12:42:36.795"/>
</kw>
<msg timestamp="20220208 12:42:36.795" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:42:36.792" endtime="20220208 12:42:36.795"/>
</kw>
<status status="PASS" starttime="20220208 12:42:36.791" endtime="20220208 12:42:36.796"/>
</kw>
<msg timestamp="20220208 12:42:36.796" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:42:36.790" endtime="20220208 12:42:36.796"/>
</kw>
<msg timestamp="20220208 12:42:36.796" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:42:36.790" endtime="20220208 12:42:36.796"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:36.800" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:40.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:40.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:42:36.798" endtime="20220208 12:42:40.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:40.310" level="INFO"/>
<status status="PASS" starttime="20220208 12:42:40.309" endtime="20220208 12:42:40.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:40.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:40.311" endtime="20220208 12:42:40.311"/>
</kw>
<status status="PASS" starttime="20220208 12:42:36.797" endtime="20220208 12:42:40.311"/>
</kw>
<msg timestamp="20220208 12:42:40.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:36.797" endtime="20220208 12:42:40.312"/>
</kw>
<status status="PASS" starttime="20220208 12:42:36.796" endtime="20220208 12:42:40.312"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:42:40.316" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:42:43.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:42:43.717" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:42:40.314" endtime="20220208 12:42:43.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:42:43.718" level="INFO"/>
<status status="PASS" starttime="20220208 12:42:43.718" endtime="20220208 12:42:43.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:42:43.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:42:43.719" endtime="20220208 12:42:43.719"/>
</kw>
<status status="PASS" starttime="20220208 12:42:40.313" endtime="20220208 12:42:43.720"/>
</kw>
<msg timestamp="20220208 12:42:43.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:42:40.313" endtime="20220208 12:42:43.720"/>
</kw>
<status status="PASS" starttime="20220208 12:42:40.312" endtime="20220208 12:42:43.720"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220208 12:42:36.788" endtime="20220208 12:42:43.721"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220208 12:41:57.950" endtime="20220208 12:42:43.722"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="224126"/>
</suite>
<suite id="s1-s4" name="hadoop33">
<suite id="s1-s4-s1" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s1-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:48:32.355" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:48:32.355" endtime="20220208 12:48:32.355"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:48:32.356" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:48:32.355" endtime="20220208 12:48:32.356"/>
</kw>
<status status="PASS" starttime="20220208 12:48:32.354" endtime="20220208 12:48:32.356"/>
</kw>
<msg timestamp="20220208 12:48:32.356" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:48:32.354" endtime="20220208 12:48:32.356"/>
</kw>
<status status="PASS" starttime="20220208 12:48:32.353" endtime="20220208 12:48:32.357"/>
</kw>
<msg timestamp="20220208 12:48:32.357" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:48:32.353" endtime="20220208 12:48:32.357"/>
</kw>
<msg timestamp="20220208 12:48:32.357" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:48:32.351" endtime="20220208 12:48:32.357"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:48:32.357" level="INFO">${random} = 90006</msg>
<status status="PASS" starttime="20220208 12:48:32.357" endtime="20220208 12:48:32.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:48:32.363" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-90006 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:48:36.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:48:36.628" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:48:32.359" endtime="20220208 12:48:36.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:48:36.630" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:48:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:48:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:48:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:48:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220208 12:48:36.629" endtime="20220208 12:48:36.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:48:36.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:48:36.630" endtime="20220208 12:48:36.630"/>
</kw>
<status status="PASS" starttime="20220208 12:48:32.358" endtime="20220208 12:48:36.631"/>
</kw>
<msg timestamp="20220208 12:48:36.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:48:32.358" endtime="20220208 12:48:36.631"/>
</kw>
<msg timestamp="20220208 12:48:36.631" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:48:32.358" endtime="20220208 12:48:36.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:48:36.635" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:48:38.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:48:38.734" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:48:36.633" endtime="20220208 12:48:38.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:48:38.736" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:48 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-02-08 12:48 o3fs://bucket1.volume1.om/ozone-90006
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:48 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:48:38.735" endtime="20220208 12:48:38.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:48:38.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:48:38.736" endtime="20220208 12:48:38.736"/>
</kw>
<status status="PASS" starttime="20220208 12:48:36.632" endtime="20220208 12:48:38.737"/>
</kw>
<msg timestamp="20220208 12:48:38.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:48:36.632" endtime="20220208 12:48:38.737"/>
</kw>
<msg timestamp="20220208 12:48:38.737" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:48:36.631" endtime="20220208 12:48:38.737"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:48:38.737" endtime="20220208 12:48:38.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:48:38.741" level="INFO">Running command 'hdfs dfs -cat o3fs://bucket1.volume1.om//ozone-90006 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:48:42.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:48:42.226" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:48:38.739" endtime="20220208 12:48:42.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:48:42.227" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:48:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:48:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:48:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20220208 12:48:42.226" endtime="20220208 12:48:42.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:48:42.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:48:42.227" endtime="20220208 12:48:42.228"/>
</kw>
<status status="PASS" starttime="20220208 12:48:38.739" endtime="20220208 12:48:42.228"/>
</kw>
<msg timestamp="20220208 12:48:42.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:48:38.739" endtime="20220208 12:48:42.229"/>
</kw>
<msg timestamp="20220208 12:48:42.229" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:48:38.738" endtime="20220208 12:48:42.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:48:42.229" endtime="20220208 12:48:42.229"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220208 12:48:32.350" endtime="20220208 12:48:42.230"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220208 12:48:32.297" endtime="20220208 12:48:42.231"/>
</suite>
<suite id="s1-s4-s2" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s2-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:48:47.132" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:48:47.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:48:47.143" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:48:47.128" endtime="20220208 12:48:47.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:48:47.144" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:48:47.143" endtime="20220208 12:48:47.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:48:47.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:48:47.144" endtime="20220208 12:48:47.145"/>
</kw>
<status status="PASS" starttime="20220208 12:48:47.127" endtime="20220208 12:48:47.145"/>
</kw>
<msg timestamp="20220208 12:48:47.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:48:47.127" endtime="20220208 12:48:47.145"/>
</kw>
<msg timestamp="20220208 12:48:47.145" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:48:47.126" endtime="20220208 12:48:47.147"/>
</kw>
<msg timestamp="20220208 12:48:47.147" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:48:47.126" endtime="20220208 12:48:47.147"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:48:47.151" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:48:47.150" endtime="20220208 12:48:47.151"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:48:47.151" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:48:47.151" endtime="20220208 12:48:47.152"/>
</kw>
<status status="PASS" starttime="20220208 12:48:47.150" endtime="20220208 12:48:47.152"/>
</kw>
<msg timestamp="20220208 12:48:47.152" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:48:47.149" endtime="20220208 12:48:47.152"/>
</kw>
<status status="PASS" starttime="20220208 12:48:47.148" endtime="20220208 12:48:47.152"/>
</kw>
<msg timestamp="20220208 12:48:47.152" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:48:47.148" endtime="20220208 12:48:47.152"/>
</kw>
<msg timestamp="20220208 12:48:47.153" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:48:47.147" endtime="20220208 12:48:47.153"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:48:47.156" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:49:33.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:49:33.495" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:48:47.154" endtime="20220208 12:49:33.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:49:33.496" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-08 12:48:49 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:48:49 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:48:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:48:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-08 12:48:53 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2022-02-08 12:48:54 INFO  FileInputFormat:300 - Total input files to process : 3
2022-02-08 12:48:54 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:48:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644324421942_0001
2022-02-08 12:48:54 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:48:54 INFO  Configuration:2824 - resource-types.xml not found
2022-02-08 12:48:54 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-02-08 12:48:55 INFO  YarnClientImpl:338 - Submitted application application_1644324421942_0001
2022-02-08 12:48:55 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1644324421942_0001/
2022-02-08 12:48:55 INFO  Job:1620 - Running job: job_1644324421942_0001
2022-02-08 12:49:07 INFO  Job:1641 - Job job_1644324421942_0001 running in uber mode : false
2022-02-08 12:49:07 INFO  Job:1648 -  map 0% reduce 0%
2022-02-08 12:49:14 INFO  Job:1648 -  map 33% reduce 0%
2022-02-08 12:49:20 INFO  Job:1648 -  map 67% reduce 0%
2022-02-08 12:49:25 INFO  Job:1648 -  map 100% reduce 0%
2022-02-08 12:49:31 INFO  Job:1648 -  map 100% reduce 100%
2022-02-08 12:49:32 INFO  Job:1659 - Job job_1644324421942_0001 completed successfully
2022-02-08 12:49:32 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1094985
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47888
		Total time spent by all reduces in occupied slots (ms)=19040
		Total time spent by all map tasks (ms)=11972
		Total time spent by all reduce tasks (ms)=4760
		Total vcore-milliseconds taken by all map tasks=11972
		Total vcore-milliseconds taken by all reduce tasks=4760
		Total megabyte-milliseconds taken by all map tasks=49037312
		Total megabyte-milliseconds taken by all reduce tasks=19496960
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=634
		CPU time spent (ms)=8470
		Physical memory (bytes) snapshot=1709445120
		Virtual memory (bytes) snapshot=15827001344
		Total committed heap usage (bytes)=1495793664
		Peak Map Physical memory (bytes)=444694528
		Peak Map Virtual memory (bytes)=3950473216
		Peak Reduce Physical memory (bytes)=382705664
		Peak Reduce Virtual memory (bytes)=3978571776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.483 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220208 12:49:33.495" endtime="20220208 12:49:33.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:49:33.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:49:33.497" endtime="20220208 12:49:33.497"/>
</kw>
<status status="PASS" starttime="20220208 12:48:47.154" endtime="20220208 12:49:33.498"/>
</kw>
<msg timestamp="20220208 12:49:33.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:48:47.153" endtime="20220208 12:49:33.498"/>
</kw>
<msg timestamp="20220208 12:49:33.498" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:48:47.153" endtime="20220208 12:49:33.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:49:33.498" endtime="20220208 12:49:33.499"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:48:47.125" endtime="20220208 12:49:33.499"/>
</test>
<test id="s1-s4-s2-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:49:33.505" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:49:33.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:49:33.511" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:49:33.502" endtime="20220208 12:49:33.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:49:33.513" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:49:33.512" endtime="20220208 12:49:33.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:49:33.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:49:33.513" endtime="20220208 12:49:33.514"/>
</kw>
<status status="PASS" starttime="20220208 12:49:33.502" endtime="20220208 12:49:33.514"/>
</kw>
<msg timestamp="20220208 12:49:33.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:49:33.502" endtime="20220208 12:49:33.515"/>
</kw>
<msg timestamp="20220208 12:49:33.515" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:49:33.501" endtime="20220208 12:49:33.515"/>
</kw>
<msg timestamp="20220208 12:49:33.515" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:49:33.501" endtime="20220208 12:49:33.515"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:49:33.516" level="INFO">${random} = bP8SDXRz</msg>
<status status="PASS" starttime="20220208 12:49:33.515" endtime="20220208 12:49:33.516"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:49:33.520" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:49:33.519" endtime="20220208 12:49:33.520"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:49:33.520" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:49:33.520" endtime="20220208 12:49:33.520"/>
</kw>
<status status="PASS" starttime="20220208 12:49:33.518" endtime="20220208 12:49:33.520"/>
</kw>
<msg timestamp="20220208 12:49:33.520" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:49:33.518" endtime="20220208 12:49:33.521"/>
</kw>
<status status="PASS" starttime="20220208 12:49:33.517" endtime="20220208 12:49:33.521"/>
</kw>
<msg timestamp="20220208 12:49:33.521" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:49:33.517" endtime="20220208 12:49:33.521"/>
</kw>
<msg timestamp="20220208 12:49:33.521" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20220208 12:49:33.516" endtime="20220208 12:49:33.521"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:49:33.525" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:49:33.524" endtime="20220208 12:49:33.525"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:49:33.525" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:49:33.525" endtime="20220208 12:49:33.525"/>
</kw>
<status status="PASS" starttime="20220208 12:49:33.524" endtime="20220208 12:49:33.526"/>
</kw>
<msg timestamp="20220208 12:49:33.526" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:49:33.523" endtime="20220208 12:49:33.526"/>
</kw>
<status status="PASS" starttime="20220208 12:49:33.523" endtime="20220208 12:49:33.526"/>
</kw>
<msg timestamp="20220208 12:49:33.526" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220208 12:49:33.522" endtime="20220208 12:49:33.526"/>
</kw>
<msg timestamp="20220208 12:49:33.526" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20220208 12:49:33.521" endtime="20220208 12:49:33.526"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:49:33.530" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:49:33.529" endtime="20220208 12:49:33.530"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:49:33.530" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:49:33.530" endtime="20220208 12:49:33.530"/>
</kw>
<status status="PASS" starttime="20220208 12:49:33.529" endtime="20220208 12:49:33.531"/>
</kw>
<msg timestamp="20220208 12:49:33.531" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:49:33.528" endtime="20220208 12:49:33.531"/>
</kw>
<status status="PASS" starttime="20220208 12:49:33.528" endtime="20220208 12:49:33.531"/>
</kw>
<msg timestamp="20220208 12:49:33.531" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-bP8SDXRz.txt</msg>
<status status="PASS" starttime="20220208 12:49:33.527" endtime="20220208 12:49:33.531"/>
</kw>
<msg timestamp="20220208 12:49:33.531" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-bP8SDXRz.txt</msg>
<status status="PASS" starttime="20220208 12:49:33.527" endtime="20220208 12:49:33.531"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:49:33.535" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-bP8SDXRz.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:50:12.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:50:12.616" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:49:33.533" endtime="20220208 12:50:12.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:50:12.617" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:49:35 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2022-02-08 12:49:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:49:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:49:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:49:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:49:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-08 12:49:37 INFO  FileInputFormat:300 - Total input files to process : 3
2022-02-08 12:49:38 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:49:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644324421942_0002
2022-02-08 12:49:38 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:49:38 INFO  Configuration:2824 - resource-types.xml not found
2022-02-08 12:49:38 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-02-08 12:49:38 INFO  YarnClientImpl:338 - Submitted application application_1644324421942_0002
2022-02-08 12:49:38 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1644324421942_0002/
2022-02-08 12:49:38 INFO  Job:1620 - Running job: job_1644324421942_0002
2022-02-08 12:49:46 INFO  Job:1641 - Job job_1644324421942_0002 running in uber mode : false
2022-02-08 12:49:46 INFO  Job:1648 -  map 0% reduce 0%
2022-02-08 12:49:54 INFO  Job:1648 -  map 33% reduce 0%
2022-02-08 12:50:00 INFO  Job:1648 -  map 67% reduce 0%
2022-02-08 12:50:06 INFO  Job:1648 -  map 100% reduce 0%
2022-02-08 12:50:11 INFO  Job:1648 -  map 100% reduce 100%
2022-02-08 12:50:12 INFO  Job:1659 - Job job_1644324421942_0002 completed successfully
2022-02-08 12:50:12 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1157743
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39848
		O3FS: Number of bytes written=22299
		O3FS: Number of read operations=14
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47016
		Total time spent by all reduces in occupied slots (ms)=17024
		Total time spent by all map tasks (ms)=11754
		Total time spent by all reduce tasks (ms)=4256
		Total vcore-milliseconds taken by all map tasks=11754
		Total vcore-milliseconds taken by all reduce tasks=4256
		Total megabyte-milliseconds taken by all map tasks=48144384
		Total megabyte-milliseconds taken by all reduce tasks=17432576
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=303
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=637
		CPU time spent (ms)=8620
		Physical memory (bytes) snapshot=1679536128
		Virtual memory (bytes) snapshot=15807250432
		Total committed heap usage (bytes)=1475870720
		Peak Map Physical memory (bytes)=449716224
		Peak Map Virtual memory (bytes)=3953537024
		Peak Reduce Physical memory (bytes)=370429952
		Peak Reduce Virtual memory (bytes)=3974893568
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220208 12:50:12.616" endtime="20220208 12:50:12.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:50:12.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:50:12.618" endtime="20220208 12:50:12.618"/>
</kw>
<status status="PASS" starttime="20220208 12:49:33.532" endtime="20220208 12:50:12.619"/>
</kw>
<msg timestamp="20220208 12:50:12.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:49:33.532" endtime="20220208 12:50:12.619"/>
</kw>
<msg timestamp="20220208 12:50:12.619" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:49:33.532" endtime="20220208 12:50:12.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:50:12.619" endtime="20220208 12:50:12.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:50:12.620" endtime="20220208 12:50:12.620"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:49:33.500" endtime="20220208 12:50:12.621"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220208 12:48:47.072" endtime="20220208 12:50:12.622"/>
</suite>
<suite id="s1-s4-s3" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s4-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:50:17.515" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:50:17.515" endtime="20220208 12:50:17.515"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:50:17.516" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:50:17.516" endtime="20220208 12:50:17.516"/>
</kw>
<status status="PASS" starttime="20220208 12:50:17.514" endtime="20220208 12:50:17.516"/>
</kw>
<msg timestamp="20220208 12:50:17.516" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:50:17.514" endtime="20220208 12:50:17.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:50:17.517" endtime="20220208 12:50:17.517"/>
</kw>
<msg timestamp="20220208 12:50:17.517" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:50:17.516" endtime="20220208 12:50:17.517"/>
</kw>
<status status="PASS" starttime="20220208 12:50:17.513" endtime="20220208 12:50:17.518"/>
</kw>
<msg timestamp="20220208 12:50:17.518" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:50:17.513" endtime="20220208 12:50:17.518"/>
</kw>
<msg timestamp="20220208 12:50:17.518" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:50:17.512" endtime="20220208 12:50:17.518"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:50:17.519" level="INFO">${random} = 91499</msg>
<status status="PASS" starttime="20220208 12:50:17.518" endtime="20220208 12:50:17.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:50:17.524" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-91499 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:50:21.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:50:21.459" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:50:17.520" endtime="20220208 12:50:21.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:50:21.460" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:50:19 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:50:19 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:50:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:50:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20220208 12:50:21.460" endtime="20220208 12:50:21.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:50:21.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:50:21.461" endtime="20220208 12:50:21.461"/>
</kw>
<status status="PASS" starttime="20220208 12:50:17.520" endtime="20220208 12:50:21.462"/>
</kw>
<msg timestamp="20220208 12:50:21.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:50:17.519" endtime="20220208 12:50:21.462"/>
</kw>
<msg timestamp="20220208 12:50:21.462" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:50:17.519" endtime="20220208 12:50:21.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:50:21.467" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:50:23.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:50:23.525" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:50:21.464" endtime="20220208 12:50:23.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:50:23.526" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:48 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop       1541 2022-02-08 12:48 ofs://om/volume1/bucket1/ozone-90006
-rw-rw-rw-   3 hadoop hadoop       1541 2022-02-08 12:50 ofs://om/volume1/bucket1/ozone-91499
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:48 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2022-02-08 12:49 ofs://om/volume1/bucket1/wordcount-bP8SDXRz.txt</msg>
<status status="PASS" starttime="20220208 12:50:23.525" endtime="20220208 12:50:23.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:50:23.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:50:23.526" endtime="20220208 12:50:23.527"/>
</kw>
<status status="PASS" starttime="20220208 12:50:21.464" endtime="20220208 12:50:23.527"/>
</kw>
<msg timestamp="20220208 12:50:23.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:50:21.463" endtime="20220208 12:50:23.528"/>
</kw>
<msg timestamp="20220208 12:50:23.528" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:50:21.463" endtime="20220208 12:50:23.528"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:50:23.528" endtime="20220208 12:50:23.529"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -cat ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:50:23.532" level="INFO">Running command 'hdfs dfs -cat ofs://om/volume1/bucket1/ozone-91499 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:50:27.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:50:27.065" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:50:23.530" endtime="20220208 12:50:27.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:50:27.066" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:50:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:50:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:50:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
Apache Hadoop
Copyright 2006 and onwards The Apache Software Foundation.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

The following provides more details on the included cryptographic software:

This software uses the SSL libraries from the Jetty project written
by mortbay.org.
Hadoop Yarn Server Web Proxy uses the BouncyCastle Java
cryptography APIs written by the Legion of the Bouncy Castle Inc.</msg>
<status status="PASS" starttime="20220208 12:50:27.065" endtime="20220208 12:50:27.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:50:27.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:50:27.067" endtime="20220208 12:50:27.067"/>
</kw>
<status status="PASS" starttime="20220208 12:50:23.530" endtime="20220208 12:50:27.067"/>
</kw>
<msg timestamp="20220208 12:50:27.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:50:23.529" endtime="20220208 12:50:27.068"/>
</kw>
<msg timestamp="20220208 12:50:27.068" level="INFO">${result} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:50:23.529" endtime="20220208 12:50:27.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>This product includes software developed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:50:27.068" endtime="20220208 12:50:27.068"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220208 12:50:17.511" endtime="20220208 12:50:27.069"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20220208 12:50:17.458" endtime="20220208 12:50:27.070"/>
</suite>
<suite id="s1-s4-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s4-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:50:32.028" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:50:32.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:50:32.034" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:50:32.024" endtime="20220208 12:50:32.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:50:32.035" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:50:32.034" endtime="20220208 12:50:32.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:50:32.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:50:32.035" endtime="20220208 12:50:32.036"/>
</kw>
<status status="PASS" starttime="20220208 12:50:32.024" endtime="20220208 12:50:32.036"/>
</kw>
<msg timestamp="20220208 12:50:32.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:50:32.023" endtime="20220208 12:50:32.036"/>
</kw>
<msg timestamp="20220208 12:50:32.037" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:50:32.023" endtime="20220208 12:50:32.038"/>
</kw>
<msg timestamp="20220208 12:50:32.038" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:50:32.022" endtime="20220208 12:50:32.038"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:50:32.042" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:50:32.041" endtime="20220208 12:50:32.042"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:50:32.042" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:50:32.042" endtime="20220208 12:50:32.042"/>
</kw>
<status status="PASS" starttime="20220208 12:50:32.041" endtime="20220208 12:50:32.043"/>
</kw>
<msg timestamp="20220208 12:50:32.043" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:50:32.040" endtime="20220208 12:50:32.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:50:32.043" endtime="20220208 12:50:32.044"/>
</kw>
<msg timestamp="20220208 12:50:32.044" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:50:32.043" endtime="20220208 12:50:32.044"/>
</kw>
<status status="PASS" starttime="20220208 12:50:32.040" endtime="20220208 12:50:32.044"/>
</kw>
<msg timestamp="20220208 12:50:32.044" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:50:32.039" endtime="20220208 12:50:32.044"/>
</kw>
<msg timestamp="20220208 12:50:32.045" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:50:32.038" endtime="20220208 12:50:32.045"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:50:32.049" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:51:12.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:51:12.386" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:50:32.046" endtime="20220208 12:51:12.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:51:12.387" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
Number of Maps  = 3
Samples per Map = 3
2022-02-08 12:50:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:50:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:50:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:50:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2022-02-08 12:50:35 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2022-02-08 12:50:36 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:50:36 INFO  FileInputFormat:300 - Total input files to process : 3
2022-02-08 12:50:36 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:50:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644324421942_0003
2022-02-08 12:50:36 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:50:37 INFO  Configuration:2824 - resource-types.xml not found
2022-02-08 12:50:37 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-02-08 12:50:37 INFO  YarnClientImpl:338 - Submitted application application_1644324421942_0003
2022-02-08 12:50:37 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1644324421942_0003/
2022-02-08 12:50:37 INFO  Job:1620 - Running job: job_1644324421942_0003
2022-02-08 12:50:46 INFO  Job:1641 - Job job_1644324421942_0003 running in uber mode : false
2022-02-08 12:50:46 INFO  Job:1648 -  map 0% reduce 0%
2022-02-08 12:50:53 INFO  Job:1648 -  map 33% reduce 0%
2022-02-08 12:50:59 INFO  Job:1648 -  map 67% reduce 0%
2022-02-08 12:51:05 INFO  Job:1648 -  map 100% reduce 0%
2022-02-08 12:51:10 INFO  Job:1648 -  map 100% reduce 100%
2022-02-08 12:51:11 INFO  Job:1659 - Job job_1644324421942_0003 completed successfully
2022-02-08 12:51:11 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1094781
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46960
		Total time spent by all reduces in occupied slots (ms)=17140
		Total time spent by all map tasks (ms)=11740
		Total time spent by all reduce tasks (ms)=4285
		Total vcore-milliseconds taken by all map tasks=11740
		Total vcore-milliseconds taken by all reduce tasks=4285
		Total megabyte-milliseconds taken by all map tasks=48087040
		Total megabyte-milliseconds taken by all reduce tasks=17551360
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=723
		CPU time spent (ms)=8770
		Physical memory (bytes) snapshot=1639858176
		Virtual memory (bytes) snapshot=15809908736
		Total committed heap usage (bytes)=1447559168
		Peak Map Physical memory (bytes)=442687488
		Peak Map Virtual memory (bytes)=3954683904
		Peak Reduce Physical memory (bytes)=373075968
		Peak Reduce Virtual memory (bytes)=3975667712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.006 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20220208 12:51:12.386" endtime="20220208 12:51:12.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:51:12.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:51:12.387" endtime="20220208 12:51:12.388"/>
</kw>
<status status="PASS" starttime="20220208 12:50:32.046" endtime="20220208 12:51:12.388"/>
</kw>
<msg timestamp="20220208 12:51:12.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:50:32.046" endtime="20220208 12:51:12.389"/>
</kw>
<msg timestamp="20220208 12:51:12.389" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:50:32.045" endtime="20220208 12:51:12.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:51:12.389" endtime="20220208 12:51:12.390"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:50:32.022" endtime="20220208 12:51:12.390"/>
</test>
<test id="s1-s4-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:51:12.395" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:51:12.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:51:12.401" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:51:12.393" endtime="20220208 12:51:12.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:51:12.402" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:51:12.401" endtime="20220208 12:51:12.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:51:12.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:51:12.402" endtime="20220208 12:51:12.403"/>
</kw>
<status status="PASS" starttime="20220208 12:51:12.392" endtime="20220208 12:51:12.403"/>
</kw>
<msg timestamp="20220208 12:51:12.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:51:12.392" endtime="20220208 12:51:12.403"/>
</kw>
<msg timestamp="20220208 12:51:12.404" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:51:12.392" endtime="20220208 12:51:12.404"/>
</kw>
<msg timestamp="20220208 12:51:12.404" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar</msg>
<status status="PASS" starttime="20220208 12:51:12.391" endtime="20220208 12:51:12.404"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220208 12:51:12.404" level="INFO">${random} = EVantbjg</msg>
<status status="PASS" starttime="20220208 12:51:12.404" endtime="20220208 12:51:12.404"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:51:12.408" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:51:12.408" endtime="20220208 12:51:12.408"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:51:12.409" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:51:12.408" endtime="20220208 12:51:12.409"/>
</kw>
<status status="PASS" starttime="20220208 12:51:12.407" endtime="20220208 12:51:12.409"/>
</kw>
<msg timestamp="20220208 12:51:12.409" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:51:12.407" endtime="20220208 12:51:12.409"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20220208 12:51:12.410" endtime="20220208 12:51:12.410"/>
</kw>
<msg timestamp="20220208 12:51:12.410" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20220208 12:51:12.409" endtime="20220208 12:51:12.410"/>
</kw>
<status status="PASS" starttime="20220208 12:51:12.406" endtime="20220208 12:51:12.411"/>
</kw>
<msg timestamp="20220208 12:51:12.411" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:51:12.405" endtime="20220208 12:51:12.411"/>
</kw>
<msg timestamp="20220208 12:51:12.411" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20220208 12:51:12.405" endtime="20220208 12:51:12.411"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:51:12.414" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:51:12.414" endtime="20220208 12:51:12.414"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:51:12.415" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:51:12.414" endtime="20220208 12:51:12.415"/>
</kw>
<status status="PASS" starttime="20220208 12:51:12.413" endtime="20220208 12:51:12.415"/>
</kw>
<msg timestamp="20220208 12:51:12.415" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:51:12.413" endtime="20220208 12:51:12.415"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:51:12.417" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20220208 12:51:12.416" endtime="20220208 12:51:12.417"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:51:12.418" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20220208 12:51:12.417" endtime="20220208 12:51:12.418"/>
</kw>
<status status="PASS" starttime="20220208 12:51:12.416" endtime="20220208 12:51:12.418"/>
</kw>
<msg timestamp="20220208 12:51:12.418" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20220208 12:51:12.415" endtime="20220208 12:51:12.418"/>
</kw>
<status status="PASS" starttime="20220208 12:51:12.412" endtime="20220208 12:51:12.418"/>
</kw>
<msg timestamp="20220208 12:51:12.418" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220208 12:51:12.412" endtime="20220208 12:51:12.418"/>
</kw>
<msg timestamp="20220208 12:51:12.419" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20220208 12:51:12.411" endtime="20220208 12:51:12.419"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:51:12.422" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20220208 12:51:12.422" endtime="20220208 12:51:12.422"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:51:12.423" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20220208 12:51:12.422" endtime="20220208 12:51:12.423"/>
</kw>
<status status="PASS" starttime="20220208 12:51:12.421" endtime="20220208 12:51:12.423"/>
</kw>
<msg timestamp="20220208 12:51:12.423" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20220208 12:51:12.421" endtime="20220208 12:51:12.423"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:51:12.425" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20220208 12:51:12.424" endtime="20220208 12:51:12.425"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:51:12.425" level="INFO">${result} = /wordcount-EVantbjg.txt</msg>
<status status="PASS" starttime="20220208 12:51:12.425" endtime="20220208 12:51:12.425"/>
</kw>
<status status="PASS" starttime="20220208 12:51:12.424" endtime="20220208 12:51:12.426"/>
</kw>
<msg timestamp="20220208 12:51:12.426" level="INFO">${path_with_leading} = /wordcount-EVantbjg.txt</msg>
<status status="PASS" starttime="20220208 12:51:12.423" endtime="20220208 12:51:12.426"/>
</kw>
<status status="PASS" starttime="20220208 12:51:12.420" endtime="20220208 12:51:12.426"/>
</kw>
<msg timestamp="20220208 12:51:12.426" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-EVantbjg.txt</msg>
<status status="PASS" starttime="20220208 12:51:12.419" endtime="20220208 12:51:12.426"/>
</kw>
<msg timestamp="20220208 12:51:12.426" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-EVantbjg.txt</msg>
<status status="PASS" starttime="20220208 12:51:12.419" endtime="20220208 12:51:12.426"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:51:12.430" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-EVantbjg.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:51:51.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:51:51.137" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:51:12.428" endtime="20220208 12:51:51.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:51:51.139" level="INFO">SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/opt/ozone/share/ozone/lib/ozone-filesystem-hadoop3-1.3.0-SNAPSHOT.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2022-02-08 12:51:14 INFO  DefaultNoHARMFailoverProxyProvider:64 - Connecting to ResourceManager at rm/172.21.0.3:8032
2022-02-08 12:51:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2022-02-08 12:51:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2022-02-08 12:51:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2022-02-08 12:51:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2022-02-08 12:51:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2022-02-08 12:51:16 INFO  FileInputFormat:300 - Total input files to process : 3
2022-02-08 12:51:16 INFO  JobSubmitter:202 - number of splits:3
2022-02-08 12:51:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1644324421942_0004
2022-02-08 12:51:16 INFO  JobSubmitter:299 - Executing with tokens: []
2022-02-08 12:51:17 INFO  Configuration:2824 - resource-types.xml not found
2022-02-08 12:51:17 INFO  ResourceUtils:476 - Unable to find 'resource-types.xml'.
2022-02-08 12:51:17 INFO  YarnClientImpl:338 - Submitted application application_1644324421942_0004
2022-02-08 12:51:17 INFO  Job:1575 - The url to track the job: http://rm:8088/proxy/application_1644324421942_0004/
2022-02-08 12:51:17 INFO  Job:1620 - Running job: job_1644324421942_0004
2022-02-08 12:51:25 INFO  Job:1641 - Job job_1644324421942_0004 running in uber mode : false
2022-02-08 12:51:25 INFO  Job:1648 -  map 0% reduce 0%
2022-02-08 12:51:32 INFO  Job:1648 -  map 33% reduce 0%
2022-02-08 12:51:37 INFO  Job:1648 -  map 67% reduce 0%
2022-02-08 12:51:43 INFO  Job:1648 -  map 100% reduce 0%
2022-02-08 12:51:49 INFO  Job:1648 -  map 100% reduce 100%
2022-02-08 12:51:50 INFO  Job:1659 - Job job_1644324421942_0004 completed successfully
2022-02-08 12:51:50 INFO  Job:1666 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32129
		FILE: Number of bytes written=1157659
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39845
		OFS: Number of bytes written=22299
		OFS: Number of read operations=14
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46504
		Total time spent by all reduces in occupied slots (ms)=16432
		Total time spent by all map tasks (ms)=11626
		Total time spent by all reduce tasks (ms)=4108
		Total vcore-milliseconds taken by all map tasks=11626
		Total vcore-milliseconds taken by all reduce tasks=4108
		Total megabyte-milliseconds taken by all map tasks=47620096
		Total megabyte-milliseconds taken by all reduce tasks=16826368
	Map-Reduce Framework
		Map input records=1060
		Map output records=4518
		Map output bytes=55212
		Map output materialized bytes=32141
		Input split bytes=300
		Combine input records=4518
		Combine output records=1806
		Reduce input groups=1542
		Reduce shuffle bytes=32141
		Reduce input records=1806
		Reduce output records=1542
		Spilled Records=3612
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=658
		CPU time spent (ms)=9320
		Physical memory (bytes) snapshot=1670447104
		Virtual memory (bytes) snapshot=15833948160
		Total committed heap usage (bytes)=1469054976
		Peak Map Physical memory (bytes)=448835584
		Peak Map Virtual memory (bytes)=3958157312
		Peak Reduce Physical memory (bytes)=371662848
		Peak Reduce Virtual memory (bytes)=3977121792
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39545
	File Output Format Counters 
		Bytes Written=22299</msg>
<status status="PASS" starttime="20220208 12:51:51.138" endtime="20220208 12:51:51.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:51:51.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:51:51.142" endtime="20220208 12:51:51.143"/>
</kw>
<status status="PASS" starttime="20220208 12:51:12.427" endtime="20220208 12:51:51.143"/>
</kw>
<msg timestamp="20220208 12:51:51.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:51:12.427" endtime="20220208 12:51:51.144"/>
</kw>
<msg timestamp="20220208 12:51:51.144" level="INFO">${output} = SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/opt/hadoop/share/hadoop/common/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Foun...</msg>
<status status="PASS" starttime="20220208 12:51:12.427" endtime="20220208 12:51:51.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:51:51.144" endtime="20220208 12:51:51.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:51:51.145" endtime="20220208 12:51:51.145"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20220208 12:51:12.391" endtime="20220208 12:51:51.145"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20220208 12:50:31.969" endtime="20220208 12:51:51.147"/>
</suite>
<suite id="s1-s4-s5" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s4-s5-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:47:41.045" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:47:46.131" level="INFO">${rc} = 255</msg>
<msg timestamp="20220208 12:47:46.131" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:47:41.041" endtime="20220208 12:47:46.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:47:46.133" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:47:46.132" endtime="20220208 12:47:46.133"/>
</kw>
<msg timestamp="20220208 12:47:46.133" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20220208 12:47:41.040" endtime="20220208 12:47:46.133"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:47:46.138" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:47:50.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:47:50.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:47:46.136" endtime="20220208 12:47:50.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:47:50.179" level="INFO"/>
<status status="PASS" starttime="20220208 12:47:50.178" endtime="20220208 12:47:50.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:47:50.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:47:50.179" endtime="20220208 12:47:50.180"/>
</kw>
<status status="PASS" starttime="20220208 12:47:46.135" endtime="20220208 12:47:50.180"/>
</kw>
<msg timestamp="20220208 12:47:50.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:47:46.135" endtime="20220208 12:47:50.182"/>
</kw>
<msg timestamp="20220208 12:47:50.182" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220208 12:47:46.135" endtime="20220208 12:47:50.182"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:47:50.182" endtime="20220208 12:47:50.183"/>
</kw>
<status status="PASS" starttime="20220208 12:47:46.134" endtime="20220208 12:47:50.183"/>
</kw>
<status status="PASS" starttime="20220208 12:47:46.134" endtime="20220208 12:47:50.183"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket} --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:47:50.190" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:47:53.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:47:53.811" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:47:50.186" endtime="20220208 12:47:53.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:47:53.813" level="INFO"/>
<status status="PASS" starttime="20220208 12:47:53.812" endtime="20220208 12:47:53.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:47:53.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:47:53.813" endtime="20220208 12:47:53.814"/>
</kw>
<status status="PASS" starttime="20220208 12:47:50.185" endtime="20220208 12:47:53.814"/>
</kw>
<msg timestamp="20220208 12:47:53.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:47:50.185" endtime="20220208 12:47:53.815"/>
</kw>
<status status="PASS" starttime="20220208 12:47:50.184" endtime="20220208 12:47:53.815"/>
</kw>
<status status="PASS" starttime="20220208 12:47:50.184" endtime="20220208 12:47:53.815"/>
</kw>
<status status="PASS" starttime="20220208 12:47:50.183" endtime="20220208 12:47:53.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220208 12:47:53.815" endtime="20220208 12:47:53.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:47:53.820" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:47:57.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:47:57.697" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:47...</msg>
<status status="PASS" starttime="20220208 12:47:53.818" endtime="20220208 12:47:57.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:47:57.698" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:47:53.679Z",
  "modificationTime" : "2022-02-08T12:47:53.679Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "link" : false
}</msg>
<status status="PASS" starttime="20220208 12:47:57.697" endtime="20220208 12:47:57.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:47:57.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:47:57.699" endtime="20220208 12:47:57.699"/>
</kw>
<status status="PASS" starttime="20220208 12:47:53.817" endtime="20220208 12:47:57.699"/>
</kw>
<msg timestamp="20220208 12:47:57.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:47:53.817" endtime="20220208 12:47:57.700"/>
</kw>
<msg timestamp="20220208 12:47:57.700" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-02-08T12:47...</msg>
<status status="PASS" starttime="20220208 12:47:53.816" endtime="20220208 12:47:57.700"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220208 12:47:57.700" endtime="20220208 12:47:57.701"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:47:57.706" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:47:57.705" endtime="20220208 12:47:57.706"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:47:57.706" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:47:57.706" endtime="20220208 12:47:57.706"/>
</kw>
<status status="PASS" starttime="20220208 12:47:57.705" endtime="20220208 12:47:57.707"/>
</kw>
<msg timestamp="20220208 12:47:57.707" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:47:57.703" endtime="20220208 12:47:57.707"/>
</kw>
<status status="PASS" starttime="20220208 12:47:57.702" endtime="20220208 12:47:57.707"/>
</kw>
<msg timestamp="20220208 12:47:57.707" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220208 12:47:57.702" endtime="20220208 12:47:57.707"/>
</kw>
<msg timestamp="20220208 12:47:57.708" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20220208 12:47:57.701" endtime="20220208 12:47:57.708"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:47:57.711" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:48:01.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:48:01.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:47:57.709" endtime="20220208 12:48:01.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:48:01.520" level="INFO"/>
<status status="PASS" starttime="20220208 12:48:01.520" endtime="20220208 12:48:01.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:48:01.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:48:01.521" endtime="20220208 12:48:01.522"/>
</kw>
<status status="PASS" starttime="20220208 12:47:57.708" endtime="20220208 12:48:01.522"/>
</kw>
<msg timestamp="20220208 12:48:01.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:47:57.708" endtime="20220208 12:48:01.522"/>
</kw>
<status status="PASS" starttime="20220208 12:47:57.708" endtime="20220208 12:48:01.523"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:48:01.527" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:48:08.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:48:08.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:48:01.524" endtime="20220208 12:48:08.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:48:08.674" level="INFO"/>
<status status="PASS" starttime="20220208 12:48:08.674" endtime="20220208 12:48:08.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:48:08.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:48:08.675" endtime="20220208 12:48:08.675"/>
</kw>
<status status="PASS" starttime="20220208 12:48:01.524" endtime="20220208 12:48:08.676"/>
</kw>
<msg timestamp="20220208 12:48:08.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:48:01.524" endtime="20220208 12:48:08.676"/>
</kw>
<status status="PASS" starttime="20220208 12:48:01.523" endtime="20220208 12:48:08.676"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:48:08.680" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:48:14.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:48:14.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:48:08.678" endtime="20220208 12:48:14.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:48:14.995" level="INFO"/>
<status status="PASS" starttime="20220208 12:48:14.994" endtime="20220208 12:48:14.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:48:14.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:48:14.995" endtime="20220208 12:48:14.995"/>
</kw>
<status status="PASS" starttime="20220208 12:48:08.678" endtime="20220208 12:48:14.996"/>
</kw>
<msg timestamp="20220208 12:48:14.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:48:08.677" endtime="20220208 12:48:14.996"/>
</kw>
<status status="PASS" starttime="20220208 12:48:08.677" endtime="20220208 12:48:14.997"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:48:15.001" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:48:20.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:48:20.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:48:14.998" endtime="20220208 12:48:20.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:48:20.708" level="INFO"/>
<status status="PASS" starttime="20220208 12:48:20.707" endtime="20220208 12:48:20.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:48:20.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:48:20.708" endtime="20220208 12:48:20.709"/>
</kw>
<status status="PASS" starttime="20220208 12:48:14.998" endtime="20220208 12:48:20.709"/>
</kw>
<msg timestamp="20220208 12:48:20.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:48:14.997" endtime="20220208 12:48:20.710"/>
</kw>
<status status="PASS" starttime="20220208 12:48:14.997" endtime="20220208 12:48:20.710"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220208 12:47:41.039" endtime="20220208 12:48:20.710"/>
</test>
<test id="s1-s4-s5-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20220208 12:48:20.716" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20220208 12:48:20.715" endtime="20220208 12:48:20.716"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20220208 12:48:20.717" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20220208 12:48:20.716" endtime="20220208 12:48:20.717"/>
</kw>
<status status="PASS" starttime="20220208 12:48:20.715" endtime="20220208 12:48:20.717"/>
</kw>
<msg timestamp="20220208 12:48:20.718" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20220208 12:48:20.714" endtime="20220208 12:48:20.718"/>
</kw>
<status status="PASS" starttime="20220208 12:48:20.713" endtime="20220208 12:48:20.718"/>
</kw>
<msg timestamp="20220208 12:48:20.718" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:48:20.712" endtime="20220208 12:48:20.718"/>
</kw>
<msg timestamp="20220208 12:48:20.718" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20220208 12:48:20.712" endtime="20220208 12:48:20.718"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:48:20.722" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:48:24.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:48:24.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:48:20.720" endtime="20220208 12:48:24.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:48:24.018" level="INFO"/>
<status status="PASS" starttime="20220208 12:48:24.017" endtime="20220208 12:48:24.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:48:24.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:48:24.018" endtime="20220208 12:48:24.019"/>
</kw>
<status status="PASS" starttime="20220208 12:48:20.719" endtime="20220208 12:48:24.019"/>
</kw>
<msg timestamp="20220208 12:48:24.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:48:20.719" endtime="20220208 12:48:24.019"/>
</kw>
<status status="PASS" starttime="20220208 12:48:20.718" endtime="20220208 12:48:24.020"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220208 12:48:24.023" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20220208 12:48:27.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20220208 12:48:27.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220208 12:48:24.021" endtime="20220208 12:48:27.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220208 12:48:27.438" level="INFO"/>
<status status="PASS" starttime="20220208 12:48:27.437" endtime="20220208 12:48:27.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220208 12:48:27.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220208 12:48:27.438" endtime="20220208 12:48:27.439"/>
</kw>
<status status="PASS" starttime="20220208 12:48:24.021" endtime="20220208 12:48:27.439"/>
</kw>
<msg timestamp="20220208 12:48:27.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220208 12:48:24.020" endtime="20220208 12:48:27.440"/>
</kw>
<status status="PASS" starttime="20220208 12:48:24.020" endtime="20220208 12:48:27.440"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220208 12:48:20.710" endtime="20220208 12:48:27.440"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20220208 12:47:40.981" endtime="20220208 12:48:27.441"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="230734"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="864241"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-mr">ozone-mr</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="hadoop27">ozone-mr.hadoop27</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="hadoopfs-o3fs">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="mapreduce-o3fs">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="hadoopfs-ofs">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="mapreduce-ofs">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Createmrenv">ozone-mr.hadoop27.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="hadoop31">ozone-mr.hadoop31</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="hadoopfs-o3fs">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="mapreduce-o3fs">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="hadoopfs-ofs">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="mapreduce-ofs">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="Createmrenv">ozone-mr.hadoop31.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s3" name="hadoop32">ozone-mr.hadoop32</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s1" name="hadoopfs-o3fs">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s2" name="mapreduce-o3fs">ozone-mr.hadoop32.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s3" name="hadoopfs-ofs">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s4" name="mapreduce-ofs">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="Createmrenv">ozone-mr.hadoop32.Createmrenv</stat>
<stat pass="8" fail="0" skip="0" id="s1-s4" name="hadoop33">ozone-mr.hadoop33</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s1" name="hadoopfs-o3fs">ozone-mr.hadoop33.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s2" name="mapreduce-o3fs">ozone-mr.hadoop33.mapreduce-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s3" name="hadoopfs-ofs">ozone-mr.hadoop33.hadoopfs-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s4" name="mapreduce-ofs">ozone-mr.hadoop33.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4-s5" name="Createmrenv">ozone-mr.hadoop33.Createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
