<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220224 17:44:18.256" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220224 17:35:55.278" level="INFO">${random} = 51175</msg>
<status status="PASS" starttime="20220224 17:35:55.277" endtime="20220224 17:35:55.278"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:35:55.284" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-51175 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:35:59.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:35:59.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:35:55.280" endtime="20220224 17:35:59.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:35:59.200" level="INFO"/>
<status status="PASS" starttime="20220224 17:35:59.199" endtime="20220224 17:35:59.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:35:59.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:35:59.200" endtime="20220224 17:35:59.200"/>
</kw>
<status status="PASS" starttime="20220224 17:35:55.279" endtime="20220224 17:35:59.201"/>
</kw>
<msg timestamp="20220224 17:35:59.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:35:55.279" endtime="20220224 17:35:59.201"/>
</kw>
<msg timestamp="20220224 17:35:59.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:35:55.278" endtime="20220224 17:35:59.201"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:35:59.201" endtime="20220224 17:35:59.202"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:35:55.276" endtime="20220224 17:35:59.202"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220224 17:35:55.228" endtime="20220224 17:35:59.203"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220224 17:39:38.519" level="INFO">${random} = 83734</msg>
<status status="PASS" starttime="20220224 17:39:38.519" endtime="20220224 17:39:38.519"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:39:38.525" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-83734 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:39:42.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:39:42.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:38.521" endtime="20220224 17:39:42.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:39:42.424" level="INFO"/>
<status status="PASS" starttime="20220224 17:39:42.423" endtime="20220224 17:39:42.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:39:42.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:39:42.424" endtime="20220224 17:39:42.425"/>
</kw>
<status status="PASS" starttime="20220224 17:39:38.520" endtime="20220224 17:39:42.425"/>
</kw>
<msg timestamp="20220224 17:39:42.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:39:38.520" endtime="20220224 17:39:42.425"/>
</kw>
<msg timestamp="20220224 17:39:42.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:38.519" endtime="20220224 17:39:42.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:39:42.426" endtime="20220224 17:39:42.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:39:38.518" endtime="20220224 17:39:42.427"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220224 17:39:38.470" endtime="20220224 17:39:42.428"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:39:45.874" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:39:48.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:39:48.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:45.871" endtime="20220224 17:39:48.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:39:48.079" level="INFO"/>
<status status="PASS" starttime="20220224 17:39:48.078" endtime="20220224 17:39:48.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:39:48.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:39:48.079" endtime="20220224 17:39:48.080"/>
</kw>
<status status="PASS" starttime="20220224 17:39:45.871" endtime="20220224 17:39:48.080"/>
</kw>
<msg timestamp="20220224 17:39:48.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:39:45.870" endtime="20220224 17:39:48.083"/>
</kw>
<msg timestamp="20220224 17:39:48.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:45.870" endtime="20220224 17:39:48.083"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:39:48.083" endtime="20220224 17:39:48.084"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:39:48.093" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:39:50.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:39:50.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:48.085" endtime="20220224 17:39:50.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:39:50.295" level="INFO"/>
<status status="PASS" starttime="20220224 17:39:50.294" endtime="20220224 17:39:50.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:39:50.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:39:50.295" endtime="20220224 17:39:50.296"/>
</kw>
<status status="PASS" starttime="20220224 17:39:48.085" endtime="20220224 17:39:50.296"/>
</kw>
<msg timestamp="20220224 17:39:50.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:39:48.084" endtime="20220224 17:39:50.296"/>
</kw>
<msg timestamp="20220224 17:39:50.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:48.084" endtime="20220224 17:39:50.296"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:39:50.297" endtime="20220224 17:39:50.297"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:39:50.301" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:39:54.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:39:54.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:50.299" endtime="20220224 17:39:54.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:39:54.955" level="INFO"/>
<status status="PASS" starttime="20220224 17:39:54.954" endtime="20220224 17:39:54.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:39:54.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:39:54.955" endtime="20220224 17:39:54.956"/>
</kw>
<status status="PASS" starttime="20220224 17:39:50.298" endtime="20220224 17:39:54.956"/>
</kw>
<msg timestamp="20220224 17:39:54.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:39:50.298" endtime="20220224 17:39:54.956"/>
</kw>
<msg timestamp="20220224 17:39:54.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:50.297" endtime="20220224 17:39:54.956"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:39:54.957" endtime="20220224 17:39:54.957"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:39:45.869" endtime="20220224 17:39:54.957"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220224 17:39:45.822" endtime="20220224 17:39:54.959"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220224 17:39:58.426" level="INFO">${random} = 52430</msg>
<status status="PASS" starttime="20220224 17:39:58.425" endtime="20220224 17:39:58.426"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:39:58.431" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-52430 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:40:02.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:40:02.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:58.427" endtime="20220224 17:40:02.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:40:02.269" level="INFO"/>
<status status="PASS" starttime="20220224 17:40:02.269" endtime="20220224 17:40:02.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:40:02.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:40:02.270" endtime="20220224 17:40:02.270"/>
</kw>
<status status="PASS" starttime="20220224 17:39:58.427" endtime="20220224 17:40:02.270"/>
</kw>
<msg timestamp="20220224 17:40:02.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:39:58.427" endtime="20220224 17:40:02.271"/>
</kw>
<msg timestamp="20220224 17:40:02.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:58.426" endtime="20220224 17:40:02.271"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:40:02.271" endtime="20220224 17:40:02.271"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:39:58.424" endtime="20220224 17:40:02.272"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220224 17:39:58.378" endtime="20220224 17:40:02.273"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220224 17:39:30.662" level="INFO">${random} = 09747</msg>
<status status="PASS" starttime="20220224 17:39:30.661" endtime="20220224 17:39:30.662"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:39:30.667" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-09747 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:39:35.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:39:35.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:30.663" endtime="20220224 17:39:35.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:39:35.026" level="INFO"/>
<status status="PASS" starttime="20220224 17:39:35.025" endtime="20220224 17:39:35.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:39:35.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:39:35.026" endtime="20220224 17:39:35.026"/>
</kw>
<status status="PASS" starttime="20220224 17:39:30.663" endtime="20220224 17:39:35.027"/>
</kw>
<msg timestamp="20220224 17:39:35.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:39:30.663" endtime="20220224 17:39:35.027"/>
</kw>
<msg timestamp="20220224 17:39:35.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:39:30.662" endtime="20220224 17:39:35.027"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:39:35.027" endtime="20220224 17:39:35.028"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:39:30.660" endtime="20220224 17:39:35.028"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220224 17:39:30.614" endtime="20220224 17:39:35.029"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:35:41.337" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:35:43.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:35:43.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:35:41.333" endtime="20220224 17:35:43.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:35:43.598" level="INFO"/>
<status status="PASS" starttime="20220224 17:35:43.597" endtime="20220224 17:35:43.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:35:43.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:35:43.599" endtime="20220224 17:35:43.599"/>
</kw>
<status status="PASS" starttime="20220224 17:35:41.333" endtime="20220224 17:35:43.600"/>
</kw>
<msg timestamp="20220224 17:35:43.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:35:41.333" endtime="20220224 17:35:43.600"/>
</kw>
<msg timestamp="20220224 17:35:43.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:35:41.332" endtime="20220224 17:35:43.600"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:35:43.600" endtime="20220224 17:35:43.601"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:35:43.609" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:35:45.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:35:45.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:35:43.602" endtime="20220224 17:35:45.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:35:45.964" level="INFO"/>
<status status="PASS" starttime="20220224 17:35:45.959" endtime="20220224 17:35:45.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:35:45.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:35:45.965" endtime="20220224 17:35:45.966"/>
</kw>
<status status="PASS" starttime="20220224 17:35:43.602" endtime="20220224 17:35:45.966"/>
</kw>
<msg timestamp="20220224 17:35:45.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:35:43.601" endtime="20220224 17:35:45.970"/>
</kw>
<msg timestamp="20220224 17:35:45.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:35:43.601" endtime="20220224 17:35:45.971"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:35:45.971" endtime="20220224 17:35:45.975"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:35:45.981" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:35:51.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:35:51.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:35:45.978" endtime="20220224 17:35:51.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:35:51.783" level="INFO"/>
<status status="PASS" starttime="20220224 17:35:51.783" endtime="20220224 17:35:51.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:35:51.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:35:51.784" endtime="20220224 17:35:51.785"/>
</kw>
<status status="PASS" starttime="20220224 17:35:45.977" endtime="20220224 17:35:51.785"/>
</kw>
<msg timestamp="20220224 17:35:51.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:35:45.977" endtime="20220224 17:35:51.785"/>
</kw>
<msg timestamp="20220224 17:35:51.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:35:45.976" endtime="20220224 17:35:51.785"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:35:51.786" endtime="20220224 17:35:51.786"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:35:41.331" endtime="20220224 17:35:51.786"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220224 17:35:41.282" endtime="20220224 17:35:51.788"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:42:58.239" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220224 17:42:58.239" endtime="20220224 17:42:58.239"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:42:58.240" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:42:58.239" endtime="20220224 17:42:58.240"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:42:58.240" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:42:58.240" endtime="20220224 17:42:58.240"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:42:58.241" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220224 17:42:58.241" endtime="20220224 17:42:58.241"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:42:58.242" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:42:58.242" level="INFO">${version_file_contents} = #Thu Feb 24 17:41:31 UTC 2022
cTime=1645724069736
clusterID=CID-05b6fb53-cac9-4b63-831c-a3b0286c1db9
nodeType=SCM
scmUuid=a9bf1b21-0dbd-41b7-9cb2-9760a2b1d38e
layoutVersion=2
</msg>
<status status="PASS" starttime="20220224 17:42:58.242" endtime="20220224 17:42:58.242"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:42:58.243" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220224 17:42:58.243" endtime="20220224 17:42:58.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:42:58.243" endtime="20220224 17:42:58.244"/>
</kw>
<status status="PASS" starttime="20220224 17:42:58.242" endtime="20220224 17:42:58.244"/>
</kw>
<status status="PASS" starttime="20220224 17:42:58.241" endtime="20220224 17:42:58.244"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:42:58.238" endtime="20220224 17:42:58.244"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:42:58.193" endtime="20220224 17:42:58.245"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220224 17:43:37.831" level="INFO">${random} = 62256</msg>
<status status="PASS" starttime="20220224 17:43:37.831" endtime="20220224 17:43:37.831"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:43:37.837" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-62256 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:43:41.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:43:41.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:37.833" endtime="20220224 17:43:41.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:43:41.781" level="INFO"/>
<status status="PASS" starttime="20220224 17:43:41.780" endtime="20220224 17:43:41.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:43:41.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:43:41.781" endtime="20220224 17:43:41.782"/>
</kw>
<status status="PASS" starttime="20220224 17:43:37.833" endtime="20220224 17:43:41.782"/>
</kw>
<msg timestamp="20220224 17:43:41.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:43:37.832" endtime="20220224 17:43:41.783"/>
</kw>
<msg timestamp="20220224 17:43:41.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:37.832" endtime="20220224 17:43:41.784"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:41.784" endtime="20220224 17:43:41.784"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:37.830" endtime="20220224 17:43:41.784"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220224 17:43:37.783" endtime="20220224 17:43:41.786"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:43:45.244" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:43:47.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:43:47.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:45.240" endtime="20220224 17:43:47.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:43:47.732" level="INFO"/>
<status status="PASS" starttime="20220224 17:43:47.731" endtime="20220224 17:43:47.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:43:47.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:43:47.732" endtime="20220224 17:43:47.733"/>
</kw>
<status status="PASS" starttime="20220224 17:43:45.239" endtime="20220224 17:43:47.733"/>
</kw>
<msg timestamp="20220224 17:43:47.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:43:45.239" endtime="20220224 17:43:47.735"/>
</kw>
<msg timestamp="20220224 17:43:47.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:45.238" endtime="20220224 17:43:47.735"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:47.735" endtime="20220224 17:43:47.735"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:43:47.740" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:43:50.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:43:50.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:47.737" endtime="20220224 17:43:50.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:43:50.179" level="INFO"/>
<status status="PASS" starttime="20220224 17:43:50.178" endtime="20220224 17:43:50.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:43:50.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:43:50.179" endtime="20220224 17:43:50.180"/>
</kw>
<status status="PASS" starttime="20220224 17:43:47.737" endtime="20220224 17:43:50.180"/>
</kw>
<msg timestamp="20220224 17:43:50.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:43:47.736" endtime="20220224 17:43:50.180"/>
</kw>
<msg timestamp="20220224 17:43:50.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:47.736" endtime="20220224 17:43:50.181"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:50.181" endtime="20220224 17:43:50.181"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:43:50.185" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:43:55.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:43:55.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:50.183" endtime="20220224 17:43:55.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:43:55.626" level="INFO"/>
<status status="PASS" starttime="20220224 17:43:55.625" endtime="20220224 17:43:55.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:43:55.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:43:55.626" endtime="20220224 17:43:55.627"/>
</kw>
<status status="PASS" starttime="20220224 17:43:50.182" endtime="20220224 17:43:55.627"/>
</kw>
<msg timestamp="20220224 17:43:55.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:43:50.182" endtime="20220224 17:43:55.628"/>
</kw>
<msg timestamp="20220224 17:43:55.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:50.181" endtime="20220224 17:43:55.629"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:55.629" endtime="20220224 17:43:55.629"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:45.237" endtime="20220224 17:43:55.630"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220224 17:43:45.192" endtime="20220224 17:43:55.632"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220224 17:43:59.087" level="INFO">${random} = 06237</msg>
<status status="PASS" starttime="20220224 17:43:59.086" endtime="20220224 17:43:59.087"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:43:59.092" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-06237 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:44:03.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:44:03.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:59.088" endtime="20220224 17:44:03.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:44:03.028" level="INFO"/>
<status status="PASS" starttime="20220224 17:44:03.027" endtime="20220224 17:44:03.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:44:03.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:44:03.028" endtime="20220224 17:44:03.029"/>
</kw>
<status status="PASS" starttime="20220224 17:43:59.088" endtime="20220224 17:44:03.029"/>
</kw>
<msg timestamp="20220224 17:44:03.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:43:59.088" endtime="20220224 17:44:03.030"/>
</kw>
<msg timestamp="20220224 17:44:03.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:59.087" endtime="20220224 17:44:03.030"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:44:03.031" endtime="20220224 17:44:03.031"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:59.085" endtime="20220224 17:44:03.031"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220224 17:43:59.040" endtime="20220224 17:44:03.033"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:01.732" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220224 17:43:01.731" endtime="20220224 17:43:01.732"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:01.732" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:43:01.732" endtime="20220224 17:43:01.732"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:43:01.733" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:43:01.733" endtime="20220224 17:43:01.733"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:43:01.733" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220224 17:43:01.733" endtime="20220224 17:43:01.734"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:43:01.735" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:43:01.735" level="INFO">${version_file_contents} = #Thu Feb 24 17:42:01 UTC 2022
cTime=1645724183486
clusterID=331a6638-21bd-4e6d-8cc9-65551ab010e1
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220224 17:43:01.734" endtime="20220224 17:43:01.735"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:43:01.736" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220224 17:43:01.735" endtime="20220224 17:43:01.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:01.736" endtime="20220224 17:43:01.736"/>
</kw>
<status status="PASS" starttime="20220224 17:43:01.734" endtime="20220224 17:43:01.736"/>
</kw>
<status status="PASS" starttime="20220224 17:43:01.734" endtime="20220224 17:43:01.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:01.730" endtime="20220224 17:43:01.737"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:43:01.683" endtime="20220224 17:43:01.737"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:05.255" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220224 17:43:05.255" endtime="20220224 17:43:05.255"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:05.256" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:43:05.256" endtime="20220224 17:43:05.256"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:43:05.256" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:43:05.256" endtime="20220224 17:43:05.257"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:43:05.257" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220224 17:43:05.257" endtime="20220224 17:43:05.257"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:43:05.258" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:43:05.259" level="INFO">${version_file_contents} = #Thu Feb 24 17:41:49 UTC 2022
cTime=1645724179986
clusterID=f39efc04-d66e-4b6f-a991-9590bc13fcc3
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220224 17:43:05.258" endtime="20220224 17:43:05.259"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:43:05.259" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220224 17:43:05.259" endtime="20220224 17:43:05.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:05.259" endtime="20220224 17:43:05.260"/>
</kw>
<status status="PASS" starttime="20220224 17:43:05.257" endtime="20220224 17:43:05.260"/>
</kw>
<status status="PASS" starttime="20220224 17:43:05.257" endtime="20220224 17:43:05.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:05.254" endtime="20220224 17:43:05.260"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:43:05.207" endtime="20220224 17:43:05.261"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:08.715" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220224 17:43:08.714" endtime="20220224 17:43:08.715"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:08.716" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:43:08.715" endtime="20220224 17:43:08.716"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:43:08.716" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:43:08.716" endtime="20220224 17:43:08.716"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:43:08.717" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220224 17:43:08.716" endtime="20220224 17:43:08.717"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:43:08.718" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:43:08.718" level="INFO">${version_file_contents} = #Thu Feb 24 17:41:44 UTC 2022
cTime=1645724183664
clusterID=0a61f6fb-793c-4a71-8c36-e8f2ac4a00ab
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220224 17:43:08.718" endtime="20220224 17:43:08.718"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:43:08.719" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220224 17:43:08.718" endtime="20220224 17:43:08.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:08.719" endtime="20220224 17:43:08.719"/>
</kw>
<status status="PASS" starttime="20220224 17:43:08.717" endtime="20220224 17:43:08.720"/>
</kw>
<status status="PASS" starttime="20220224 17:43:08.717" endtime="20220224 17:43:08.720"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:08.714" endtime="20220224 17:43:08.720"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:43:08.666" endtime="20220224 17:43:08.720"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:12.256" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220224 17:43:12.255" endtime="20220224 17:43:12.256"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:12.256" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:43:12.256" endtime="20220224 17:43:12.256"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:43:12.257" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:43:12.256" endtime="20220224 17:43:12.257"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:43:12.257" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220224 17:43:12.257" endtime="20220224 17:43:12.257"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:43:12.258" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:43:12.259" level="INFO">${version_file_contents} = #Thu Feb 24 17:35:06 UTC 2022
cTime=1645724088384
clusterID=CID-05b6fb53-cac9-4b63-831c-a3b0286c1db9
omUuid=d98bca28-f569-4757-8126-6f009be10cae
nodeType=OM
scmUuid=a9bf1b21-0dbd-41b7-9cb2-9760a2b1d38...</msg>
<status status="PASS" starttime="20220224 17:43:12.258" endtime="20220224 17:43:12.259"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:43:12.259" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220224 17:43:12.259" endtime="20220224 17:43:12.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:12.260" endtime="20220224 17:43:12.260"/>
</kw>
<status status="PASS" starttime="20220224 17:43:12.258" endtime="20220224 17:43:12.260"/>
</kw>
<status status="PASS" starttime="20220224 17:43:12.258" endtime="20220224 17:43:12.260"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:12.254" endtime="20220224 17:43:12.260"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:43:12.206" endtime="20220224 17:43:12.261"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:15.833" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220224 17:43:15.833" endtime="20220224 17:43:15.833"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:15.834" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:43:15.833" endtime="20220224 17:43:15.834"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:43:15.834" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:43:15.834" endtime="20220224 17:43:15.834"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:43:15.835" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220224 17:43:15.834" endtime="20220224 17:43:15.835"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:43:15.836" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:43:15.836" level="INFO">${version_file_contents} = #Thu Feb 24 17:35:04 UTC 2022
cTime=1645724087366
clusterID=CID-05b6fb53-cac9-4b63-831c-a3b0286c1db9
omUuid=258f7c46-9f41-4175-af48-6d03a171f44a
nodeType=OM
scmUuid=a9bf1b21-0dbd-41b7-9cb2-9760a2b1d38...</msg>
<status status="PASS" starttime="20220224 17:43:15.836" endtime="20220224 17:43:15.836"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:43:15.837" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220224 17:43:15.836" endtime="20220224 17:43:15.837"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:15.837" endtime="20220224 17:43:15.837"/>
</kw>
<status status="PASS" starttime="20220224 17:43:15.835" endtime="20220224 17:43:15.838"/>
</kw>
<status status="PASS" starttime="20220224 17:43:15.835" endtime="20220224 17:43:15.838"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:15.832" endtime="20220224 17:43:15.838"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:43:15.786" endtime="20220224 17:43:15.838"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:19.251" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220224 17:43:19.250" endtime="20220224 17:43:19.251"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:43:19.252" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:43:19.251" endtime="20220224 17:43:19.252"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:43:19.252" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:43:19.252" endtime="20220224 17:43:19.252"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:43:19.253" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220224 17:43:19.252" endtime="20220224 17:43:19.253"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:43:19.254" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:43:19.254" level="INFO">${version_file_contents} = #Thu Feb 24 17:35:04 UTC 2022
cTime=1645724086991
clusterID=CID-05b6fb53-cac9-4b63-831c-a3b0286c1db9
omUuid=4d788e5c-aa80-43da-b987-ff6cd6195d91
nodeType=OM
scmUuid=a9bf1b21-0dbd-41b7-9cb2-9760a2b1d38...</msg>
<status status="PASS" starttime="20220224 17:43:19.254" endtime="20220224 17:43:19.254"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:43:19.255" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220224 17:43:19.254" endtime="20220224 17:43:19.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:19.255" endtime="20220224 17:43:19.255"/>
</kw>
<status status="PASS" starttime="20220224 17:43:19.253" endtime="20220224 17:43:19.255"/>
</kw>
<status status="PASS" starttime="20220224 17:43:19.253" endtime="20220224 17:43:19.256"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:19.249" endtime="20220224 17:43:19.256"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:43:19.204" endtime="20220224 17:43:19.257"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220224 17:43:22.687" level="INFO">${random} = 36322</msg>
<status status="PASS" starttime="20220224 17:43:22.687" endtime="20220224 17:43:22.687"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:43:22.692" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-36322 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:43:27.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:43:27.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:22.689" endtime="20220224 17:43:27.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:43:27.045" level="INFO"/>
<status status="PASS" starttime="20220224 17:43:27.045" endtime="20220224 17:43:27.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:43:27.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:43:27.046" endtime="20220224 17:43:27.046"/>
</kw>
<status status="PASS" starttime="20220224 17:43:22.688" endtime="20220224 17:43:27.046"/>
</kw>
<msg timestamp="20220224 17:43:27.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:43:22.688" endtime="20220224 17:43:27.048"/>
</kw>
<msg timestamp="20220224 17:43:27.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:22.687" endtime="20220224 17:43:27.048"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:27.048" endtime="20220224 17:43:27.049"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:22.686" endtime="20220224 17:43:27.049"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220224 17:43:22.639" endtime="20220224 17:43:27.050"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220224 17:43:30.500" level="INFO">${random} = 96999</msg>
<status status="PASS" starttime="20220224 17:43:30.500" endtime="20220224 17:43:30.500"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:43:30.506" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-96999 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:43:34.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:43:34.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:30.502" endtime="20220224 17:43:34.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:43:34.411" level="INFO"/>
<status status="PASS" starttime="20220224 17:43:34.410" endtime="20220224 17:43:34.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:43:34.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:43:34.411" endtime="20220224 17:43:34.411"/>
</kw>
<status status="PASS" starttime="20220224 17:43:30.501" endtime="20220224 17:43:34.412"/>
</kw>
<msg timestamp="20220224 17:43:34.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:43:30.501" endtime="20220224 17:43:34.413"/>
</kw>
<msg timestamp="20220224 17:43:34.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:43:30.500" endtime="20220224 17:43:34.413"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:43:34.413" endtime="20220224 17:43:34.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:43:30.499" endtime="20220224 17:43:34.414"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220224 17:43:30.453" endtime="20220224 17:43:34.415"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220224 17:41:23.781" endtime="20220224 17:41:23.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:41:23.792" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:42:51.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:42:51.914" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220224 17:41:23.787" endtime="20220224 17:42:51.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:42:51.915" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220224 17:42:51.914" endtime="20220224 17:42:51.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:42:51.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:42:51.915" endtime="20220224 17:42:51.916"/>
</kw>
<status status="PASS" starttime="20220224 17:41:23.786" endtime="20220224 17:42:51.916"/>
</kw>
<msg timestamp="20220224 17:42:51.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:41:23.786" endtime="20220224 17:42:51.917"/>
</kw>
<msg timestamp="20220224 17:42:51.918" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220224 17:41:23.785" endtime="20220224 17:42:51.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:42:51.918" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220224 17:42:51.918" endtime="20220224 17:42:51.918"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:41:23.780" endtime="20220224 17:42:51.918"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220224 17:42:51.920" endtime="20220224 17:42:51.920"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:42:51.924" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:42:54.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:42:54.786" level="INFO">${output} = com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
...</msg>
<status status="PASS" starttime="20220224 17:42:51.922" endtime="20220224 17:42:54.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:42:54.788" level="INFO">com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:360)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:346)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:279)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:158)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220224 17:42:54.787" endtime="20220224 17:42:54.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:42:54.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:42:54.788" endtime="20220224 17:42:54.789"/>
</kw>
<status status="PASS" starttime="20220224 17:42:51.921" endtime="20220224 17:42:54.789"/>
</kw>
<msg timestamp="20220224 17:42:54.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:42:51.921" endtime="20220224 17:42:54.790"/>
</kw>
<msg timestamp="20220224 17:42:54.790" level="INFO">${result} = com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
...</msg>
<status status="PASS" starttime="20220224 17:42:51.920" endtime="20220224 17:42:54.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:42:54.791" level="INFO">com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:360)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:346)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:279)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:158)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:124)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220224 17:42:54.790" endtime="20220224 17:42:54.791"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:42:51.919" endtime="20220224 17:42:54.791"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20220224 17:41:23.732" endtime="20220224 17:42:54.793"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:24.444" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220224 17:37:24.443" endtime="20220224 17:37:24.444"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:24.445" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:37:24.444" endtime="20220224 17:37:24.445"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:37:24.445" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:37:24.445" endtime="20220224 17:37:24.445"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:37:24.446" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220224 17:37:24.445" endtime="20220224 17:37:24.446"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:37:24.447" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:37:24.447" level="INFO">${version_file_contents} = #Thu Feb 24 17:36:23 UTC 2022
cTime=1645724183486
clusterID=331a6638-21bd-4e6d-8cc9-65551ab010e1
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220224 17:37:24.446" endtime="20220224 17:37:24.447"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:37:24.448" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220224 17:37:24.447" endtime="20220224 17:37:24.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:37:24.448" endtime="20220224 17:37:24.448"/>
</kw>
<status status="PASS" starttime="20220224 17:37:24.446" endtime="20220224 17:37:24.448"/>
</kw>
<status status="PASS" starttime="20220224 17:37:24.446" endtime="20220224 17:37:24.448"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:37:24.443" endtime="20220224 17:37:24.449"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:37:24.396" endtime="20220224 17:37:24.449"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:27.914" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220224 17:37:27.913" endtime="20220224 17:37:27.914"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:27.914" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:37:27.914" endtime="20220224 17:37:27.914"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:37:27.915" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:37:27.914" endtime="20220224 17:37:27.915"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:37:27.915" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220224 17:37:27.915" endtime="20220224 17:37:27.915"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:37:27.917" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:37:27.917" level="INFO">${version_file_contents} = #Thu Feb 24 17:36:19 UTC 2022
cTime=1645724179986
clusterID=f39efc04-d66e-4b6f-a991-9590bc13fcc3
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220224 17:37:27.916" endtime="20220224 17:37:27.917"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:37:27.917" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220224 17:37:27.917" endtime="20220224 17:37:27.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:37:27.918" endtime="20220224 17:37:27.918"/>
</kw>
<status status="PASS" starttime="20220224 17:37:27.916" endtime="20220224 17:37:27.918"/>
</kw>
<status status="PASS" starttime="20220224 17:37:27.916" endtime="20220224 17:37:27.918"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:37:27.912" endtime="20220224 17:37:27.918"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:37:27.866" endtime="20220224 17:37:27.919"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:31.410" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220224 17:37:31.409" endtime="20220224 17:37:31.410"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:31.411" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:37:31.410" endtime="20220224 17:37:31.411"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:37:31.411" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:37:31.411" endtime="20220224 17:37:31.411"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:37:31.412" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220224 17:37:31.411" endtime="20220224 17:37:31.412"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:37:31.413" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:37:31.413" level="INFO">${version_file_contents} = #Thu Feb 24 17:36:23 UTC 2022
cTime=1645724183664
clusterID=0a61f6fb-793c-4a71-8c36-e8f2ac4a00ab
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220224 17:37:31.413" endtime="20220224 17:37:31.413"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:37:31.414" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220224 17:37:31.413" endtime="20220224 17:37:31.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:37:31.414" endtime="20220224 17:37:31.414"/>
</kw>
<status status="PASS" starttime="20220224 17:37:31.412" endtime="20220224 17:37:31.414"/>
</kw>
<status status="PASS" starttime="20220224 17:37:31.412" endtime="20220224 17:37:31.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:37:31.409" endtime="20220224 17:37:31.415"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:37:31.362" endtime="20220224 17:37:31.415"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:34.906" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220224 17:37:34.905" endtime="20220224 17:37:34.906"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:34.906" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:37:34.906" endtime="20220224 17:37:34.906"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:37:34.907" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:37:34.907" endtime="20220224 17:37:34.907"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:37:34.907" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220224 17:37:34.907" endtime="20220224 17:37:34.908"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:37:34.909" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:37:34.909" level="INFO">${version_file_contents} = #Thu Feb 24 17:35:06 UTC 2022
cTime=1645724088384
clusterID=CID-05b6fb53-cac9-4b63-831c-a3b0286c1db9
omUuid=d98bca28-f569-4757-8126-6f009be10cae
nodeType=OM
scmUuid=a9bf1b21-0dbd-41b7-9cb2-9760a2b1d38...</msg>
<status status="PASS" starttime="20220224 17:37:34.908" endtime="20220224 17:37:34.909"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:37:34.909" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220224 17:37:34.909" endtime="20220224 17:37:34.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:37:34.910" endtime="20220224 17:37:34.910"/>
</kw>
<status status="PASS" starttime="20220224 17:37:34.908" endtime="20220224 17:37:34.910"/>
</kw>
<status status="PASS" starttime="20220224 17:37:34.908" endtime="20220224 17:37:34.910"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:37:34.904" endtime="20220224 17:37:34.910"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:37:34.858" endtime="20220224 17:37:34.911"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:38.372" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220224 17:37:38.372" endtime="20220224 17:37:38.372"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:38.373" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:37:38.373" endtime="20220224 17:37:38.373"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:37:38.374" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:37:38.373" endtime="20220224 17:37:38.374"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:37:38.374" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220224 17:37:38.374" endtime="20220224 17:37:38.374"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:37:38.375" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:37:38.376" level="INFO">${version_file_contents} = #Thu Feb 24 17:35:04 UTC 2022
cTime=1645724087366
clusterID=CID-05b6fb53-cac9-4b63-831c-a3b0286c1db9
omUuid=258f7c46-9f41-4175-af48-6d03a171f44a
nodeType=OM
scmUuid=a9bf1b21-0dbd-41b7-9cb2-9760a2b1d38...</msg>
<status status="PASS" starttime="20220224 17:37:38.375" endtime="20220224 17:37:38.376"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:37:38.376" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220224 17:37:38.376" endtime="20220224 17:37:38.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:37:38.376" endtime="20220224 17:37:38.377"/>
</kw>
<status status="PASS" starttime="20220224 17:37:38.375" endtime="20220224 17:37:38.377"/>
</kw>
<status status="PASS" starttime="20220224 17:37:38.374" endtime="20220224 17:37:38.377"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:37:38.371" endtime="20220224 17:37:38.377"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:37:38.324" endtime="20220224 17:37:38.378"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:41.879" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220224 17:37:41.879" endtime="20220224 17:37:41.879"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:41.880" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:37:41.880" endtime="20220224 17:37:41.880"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:37:41.880" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:37:41.880" endtime="20220224 17:37:41.880"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:37:41.881" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220224 17:37:41.881" endtime="20220224 17:37:41.881"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:37:41.882" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:37:41.882" level="INFO">${version_file_contents} = #Thu Feb 24 17:35:04 UTC 2022
cTime=1645724086991
clusterID=CID-05b6fb53-cac9-4b63-831c-a3b0286c1db9
omUuid=4d788e5c-aa80-43da-b987-ff6cd6195d91
nodeType=OM
scmUuid=a9bf1b21-0dbd-41b7-9cb2-9760a2b1d38...</msg>
<status status="PASS" starttime="20220224 17:37:41.882" endtime="20220224 17:37:41.882"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:37:41.883" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220224 17:37:41.882" endtime="20220224 17:37:41.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:37:41.883" endtime="20220224 17:37:41.883"/>
</kw>
<status status="PASS" starttime="20220224 17:37:41.881" endtime="20220224 17:37:41.884"/>
</kw>
<status status="PASS" starttime="20220224 17:37:41.881" endtime="20220224 17:37:41.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:37:41.878" endtime="20220224 17:37:41.884"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:37:41.832" endtime="20220224 17:37:41.884"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220224 17:37:45.295" level="INFO">${random} = 00400</msg>
<status status="PASS" starttime="20220224 17:37:45.294" endtime="20220224 17:37:45.295"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:37:45.300" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-00400 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:37:49.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:37:49.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:37:45.296" endtime="20220224 17:37:49.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:37:49.600" level="INFO"/>
<status status="PASS" starttime="20220224 17:37:49.600" endtime="20220224 17:37:49.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:37:49.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:37:49.601" endtime="20220224 17:37:49.601"/>
</kw>
<status status="PASS" starttime="20220224 17:37:45.296" endtime="20220224 17:37:49.601"/>
</kw>
<msg timestamp="20220224 17:37:49.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:37:45.296" endtime="20220224 17:37:49.603"/>
</kw>
<msg timestamp="20220224 17:37:49.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:37:45.295" endtime="20220224 17:37:49.603"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:37:49.603" endtime="20220224 17:37:49.604"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:37:45.293" endtime="20220224 17:37:49.604"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220224 17:37:45.247" endtime="20220224 17:37:49.605"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:37:53.214" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:37:55.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:37:55.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:37:53.211" endtime="20220224 17:37:55.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:37:55.713" level="INFO"/>
<status status="PASS" starttime="20220224 17:37:55.712" endtime="20220224 17:37:55.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:37:55.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:37:55.714" endtime="20220224 17:37:55.714"/>
</kw>
<status status="PASS" starttime="20220224 17:37:53.210" endtime="20220224 17:37:55.714"/>
</kw>
<msg timestamp="20220224 17:37:55.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:37:53.210" endtime="20220224 17:37:55.716"/>
</kw>
<msg timestamp="20220224 17:37:55.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:37:53.209" endtime="20220224 17:37:55.716"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:37:55.716" endtime="20220224 17:37:55.717"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:37:55.733" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:37:58.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:37:58.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:37:55.728" endtime="20220224 17:37:58.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:37:58.192" level="INFO"/>
<status status="PASS" starttime="20220224 17:37:58.191" endtime="20220224 17:37:58.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:37:58.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:37:58.193" endtime="20220224 17:37:58.193"/>
</kw>
<status status="PASS" starttime="20220224 17:37:55.728" endtime="20220224 17:37:58.193"/>
</kw>
<msg timestamp="20220224 17:37:58.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:37:55.727" endtime="20220224 17:37:58.194"/>
</kw>
<msg timestamp="20220224 17:37:58.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:37:55.717" endtime="20220224 17:37:58.194"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:37:58.195" endtime="20220224 17:37:58.195"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:37:58.199" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:38:03.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:38:03.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:37:58.197" endtime="20220224 17:38:03.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:38:03.082" level="INFO"/>
<status status="PASS" starttime="20220224 17:38:03.082" endtime="20220224 17:38:03.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:38:03.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:38:03.083" endtime="20220224 17:38:03.083"/>
</kw>
<status status="PASS" starttime="20220224 17:37:58.196" endtime="20220224 17:38:03.083"/>
</kw>
<msg timestamp="20220224 17:38:03.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:37:58.196" endtime="20220224 17:38:03.084"/>
</kw>
<msg timestamp="20220224 17:38:03.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:37:58.195" endtime="20220224 17:38:03.084"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:38:03.084" endtime="20220224 17:38:03.085"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:37:53.209" endtime="20220224 17:38:03.085"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220224 17:37:53.163" endtime="20220224 17:38:03.086"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220224 17:38:06.516" level="INFO">${random} = 73962</msg>
<status status="PASS" starttime="20220224 17:38:06.516" endtime="20220224 17:38:06.516"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220224 17:38:06.522" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-73962 2&gt;&amp;1'.</msg>
<msg timestamp="20220224 17:38:10.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20220224 17:38:10.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:38:06.518" endtime="20220224 17:38:10.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220224 17:38:10.475" level="INFO"/>
<status status="PASS" starttime="20220224 17:38:10.475" endtime="20220224 17:38:10.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220224 17:38:10.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220224 17:38:10.476" endtime="20220224 17:38:10.476"/>
</kw>
<status status="PASS" starttime="20220224 17:38:06.517" endtime="20220224 17:38:10.476"/>
</kw>
<msg timestamp="20220224 17:38:10.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220224 17:38:06.517" endtime="20220224 17:38:10.478"/>
</kw>
<msg timestamp="20220224 17:38:10.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220224 17:38:06.516" endtime="20220224 17:38:10.478"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:38:10.478" endtime="20220224 17:38:10.479"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:38:06.515" endtime="20220224 17:38:10.479"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220224 17:38:06.469" endtime="20220224 17:38:10.480"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:20.980" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220224 17:37:20.980" endtime="20220224 17:37:20.980"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220224 17:37:20.981" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220224 17:37:20.981" endtime="20220224 17:37:20.981"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220224 17:37:20.981" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220224 17:37:20.981" endtime="20220224 17:37:20.982"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220224 17:37:20.982" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220224 17:37:20.982" endtime="20220224 17:37:20.982"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220224 17:37:20.983" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220224 17:37:20.983" level="INFO">${version_file_contents} = #Thu Feb 24 17:34:29 UTC 2022
cTime=1645724069736
clusterID=CID-05b6fb53-cac9-4b63-831c-a3b0286c1db9
nodeType=SCM
scmUuid=a9bf1b21-0dbd-41b7-9cb2-9760a2b1d38e
layoutVersion=0
</msg>
<status status="PASS" starttime="20220224 17:37:20.983" endtime="20220224 17:37:20.983"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220224 17:37:20.984" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220224 17:37:20.984" endtime="20220224 17:37:20.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220224 17:37:20.984" endtime="20220224 17:37:20.985"/>
</kw>
<status status="PASS" starttime="20220224 17:37:20.982" endtime="20220224 17:37:20.985"/>
</kw>
<status status="PASS" starttime="20220224 17:37:20.982" endtime="20220224 17:37:20.985"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220224 17:37:20.979" endtime="20220224 17:37:20.985"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220224 17:37:20.932" endtime="20220224 17:37:20.986"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="172794"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
