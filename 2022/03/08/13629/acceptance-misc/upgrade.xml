<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220308 16:44:15.702" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220308 16:35:51.355" level="INFO">${random} = 02854</msg>
<status status="PASS" starttime="20220308 16:35:51.354" endtime="20220308 16:35:51.355"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:35:51.361" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-02854 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:35:55.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:35:55.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:35:51.358" endtime="20220308 16:35:55.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:35:55.117" level="INFO"/>
<status status="PASS" starttime="20220308 16:35:55.116" endtime="20220308 16:35:55.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:35:55.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:35:55.117" endtime="20220308 16:35:55.118"/>
</kw>
<status status="PASS" starttime="20220308 16:35:51.357" endtime="20220308 16:35:55.118"/>
</kw>
<msg timestamp="20220308 16:35:55.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:35:51.357" endtime="20220308 16:35:55.118"/>
</kw>
<msg timestamp="20220308 16:35:55.119" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:35:51.355" endtime="20220308 16:35:55.119"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:35:55.119" endtime="20220308 16:35:55.119"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:35:51.353" endtime="20220308 16:35:55.119"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220308 16:35:51.293" endtime="20220308 16:35:55.121"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220308 16:39:41.676" level="INFO">${random} = 78727</msg>
<status status="PASS" starttime="20220308 16:39:41.676" endtime="20220308 16:39:41.677"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:39:41.682" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-78727 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:39:45.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:39:45.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:39:41.678" endtime="20220308 16:39:45.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:39:45.826" level="INFO"/>
<status status="PASS" starttime="20220308 16:39:45.826" endtime="20220308 16:39:45.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:39:45.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:39:45.827" endtime="20220308 16:39:45.827"/>
</kw>
<status status="PASS" starttime="20220308 16:39:41.678" endtime="20220308 16:39:45.827"/>
</kw>
<msg timestamp="20220308 16:39:45.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:39:41.677" endtime="20220308 16:39:45.828"/>
</kw>
<msg timestamp="20220308 16:39:45.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:39:41.677" endtime="20220308 16:39:45.828"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:39:45.828" endtime="20220308 16:39:45.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:39:41.675" endtime="20220308 16:39:45.829"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220308 16:39:41.612" endtime="20220308 16:39:45.831"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:39:49.337" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:39:51.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:39:51.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:39:49.332" endtime="20220308 16:39:51.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:39:51.523" level="INFO"/>
<status status="PASS" starttime="20220308 16:39:51.523" endtime="20220308 16:39:51.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:39:51.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:39:51.524" endtime="20220308 16:39:51.527"/>
</kw>
<status status="PASS" starttime="20220308 16:39:49.332" endtime="20220308 16:39:51.528"/>
</kw>
<msg timestamp="20220308 16:39:51.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:39:49.331" endtime="20220308 16:39:51.528"/>
</kw>
<msg timestamp="20220308 16:39:51.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:39:49.330" endtime="20220308 16:39:51.529"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:39:51.529" endtime="20220308 16:39:51.530"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:39:51.539" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:39:53.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:39:53.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:39:51.536" endtime="20220308 16:39:53.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:39:53.726" level="INFO"/>
<status status="PASS" starttime="20220308 16:39:53.724" endtime="20220308 16:39:53.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:39:53.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:39:53.726" endtime="20220308 16:39:53.727"/>
</kw>
<status status="PASS" starttime="20220308 16:39:51.534" endtime="20220308 16:39:53.727"/>
</kw>
<msg timestamp="20220308 16:39:53.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:39:51.534" endtime="20220308 16:39:53.728"/>
</kw>
<msg timestamp="20220308 16:39:53.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:39:51.530" endtime="20220308 16:39:53.728"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:39:53.728" endtime="20220308 16:39:53.729"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:39:53.739" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:39:58.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:39:58.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:39:53.735" endtime="20220308 16:39:58.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:39:58.712" level="INFO"/>
<status status="PASS" starttime="20220308 16:39:58.711" endtime="20220308 16:39:58.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:39:58.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:39:58.712" endtime="20220308 16:39:58.713"/>
</kw>
<status status="PASS" starttime="20220308 16:39:53.731" endtime="20220308 16:39:58.714"/>
</kw>
<msg timestamp="20220308 16:39:58.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:39:53.730" endtime="20220308 16:39:58.714"/>
</kw>
<msg timestamp="20220308 16:39:58.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:39:53.729" endtime="20220308 16:39:58.714"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:39:58.714" endtime="20220308 16:39:58.715"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:39:49.329" endtime="20220308 16:39:58.715"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220308 16:39:49.267" endtime="20220308 16:39:58.716"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220308 16:40:02.298" level="INFO">${random} = 08092</msg>
<status status="PASS" starttime="20220308 16:40:02.297" endtime="20220308 16:40:02.298"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:40:02.303" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-08092 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:40:06.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:40:06.672" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:40:02.300" endtime="20220308 16:40:06.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:40:06.673" level="INFO"/>
<status status="PASS" starttime="20220308 16:40:06.672" endtime="20220308 16:40:06.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:40:06.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:40:06.673" endtime="20220308 16:40:06.674"/>
</kw>
<status status="PASS" starttime="20220308 16:40:02.299" endtime="20220308 16:40:06.674"/>
</kw>
<msg timestamp="20220308 16:40:06.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:40:02.299" endtime="20220308 16:40:06.674"/>
</kw>
<msg timestamp="20220308 16:40:06.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:40:02.298" endtime="20220308 16:40:06.675"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:40:06.675" endtime="20220308 16:40:06.676"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:40:02.296" endtime="20220308 16:40:06.676"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220308 16:40:02.238" endtime="20220308 16:40:06.677"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220308 16:39:33.547" level="INFO">${random} = 82304</msg>
<status status="PASS" starttime="20220308 16:39:33.547" endtime="20220308 16:39:33.547"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:39:33.553" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-82304 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:39:37.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:39:37.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:39:33.550" endtime="20220308 16:39:37.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:39:37.933" level="INFO"/>
<status status="PASS" starttime="20220308 16:39:37.932" endtime="20220308 16:39:37.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:39:37.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:39:37.933" endtime="20220308 16:39:37.934"/>
</kw>
<status status="PASS" starttime="20220308 16:39:33.549" endtime="20220308 16:39:37.934"/>
</kw>
<msg timestamp="20220308 16:39:37.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:39:33.549" endtime="20220308 16:39:37.934"/>
</kw>
<msg timestamp="20220308 16:39:37.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:39:33.548" endtime="20220308 16:39:37.935"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:39:37.935" endtime="20220308 16:39:37.935"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:39:33.546" endtime="20220308 16:39:37.936"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220308 16:39:33.484" endtime="20220308 16:39:37.937"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:35:37.423" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:35:39.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:35:39.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:35:37.419" endtime="20220308 16:35:39.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:35:39.765" level="INFO"/>
<status status="PASS" starttime="20220308 16:35:39.765" endtime="20220308 16:35:39.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:35:39.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:35:39.766" endtime="20220308 16:35:39.766"/>
</kw>
<status status="PASS" starttime="20220308 16:35:37.419" endtime="20220308 16:35:39.767"/>
</kw>
<msg timestamp="20220308 16:35:39.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:35:37.418" endtime="20220308 16:35:39.767"/>
</kw>
<msg timestamp="20220308 16:35:39.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:35:37.417" endtime="20220308 16:35:39.767"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:35:39.767" endtime="20220308 16:35:39.770"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:35:39.778" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:35:42.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:35:42.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:35:39.774" endtime="20220308 16:35:42.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:35:42.010" level="INFO"/>
<status status="PASS" starttime="20220308 16:35:42.009" endtime="20220308 16:35:42.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:35:42.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:35:42.010" endtime="20220308 16:35:42.011"/>
</kw>
<status status="PASS" starttime="20220308 16:35:39.771" endtime="20220308 16:35:42.011"/>
</kw>
<msg timestamp="20220308 16:35:42.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:35:39.771" endtime="20220308 16:35:42.011"/>
</kw>
<msg timestamp="20220308 16:35:42.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:35:39.770" endtime="20220308 16:35:42.012"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:35:42.012" endtime="20220308 16:35:42.012"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:35:42.018" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:35:47.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:35:47.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:35:42.016" endtime="20220308 16:35:47.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:35:47.786" level="INFO"/>
<status status="PASS" starttime="20220308 16:35:47.785" endtime="20220308 16:35:47.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:35:47.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:35:47.786" endtime="20220308 16:35:47.787"/>
</kw>
<status status="PASS" starttime="20220308 16:35:42.015" endtime="20220308 16:35:47.787"/>
</kw>
<msg timestamp="20220308 16:35:47.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:35:42.014" endtime="20220308 16:35:47.787"/>
</kw>
<msg timestamp="20220308 16:35:47.788" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:35:42.013" endtime="20220308 16:35:47.788"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:35:47.788" endtime="20220308 16:35:47.788"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:35:37.416" endtime="20220308 16:35:47.789"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220308 16:35:37.353" endtime="20220308 16:35:47.790"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:42:54.169" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220308 16:42:54.169" endtime="20220308 16:42:54.169"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:42:54.170" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:42:54.169" endtime="20220308 16:42:54.170"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:42:54.171" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:42:54.170" endtime="20220308 16:42:54.171"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:42:54.171" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220308 16:42:54.171" endtime="20220308 16:42:54.172"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:42:54.173" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:42:54.173" level="INFO">${version_file_contents} = #Tue Mar 08 16:41:32 UTC 2022
cTime=1646757281724
clusterID=CID-4855249b-99ae-40da-89f7-ac8bd8c3ea33
nodeType=SCM
scmUuid=0e726464-fee3-40be-a394-c0900c1a41e6
layoutVersion=2
</msg>
<status status="PASS" starttime="20220308 16:42:54.173" endtime="20220308 16:42:54.173"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:42:54.174" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220308 16:42:54.173" endtime="20220308 16:42:54.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:42:54.174" endtime="20220308 16:42:54.174"/>
</kw>
<status status="PASS" starttime="20220308 16:42:54.172" endtime="20220308 16:42:54.175"/>
</kw>
<status status="PASS" starttime="20220308 16:42:54.172" endtime="20220308 16:42:54.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:42:54.168" endtime="20220308 16:42:54.175"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:42:54.111" endtime="20220308 16:42:54.176"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220308 16:43:34.575" level="INFO">${random} = 68378</msg>
<status status="PASS" starttime="20220308 16:43:34.574" endtime="20220308 16:43:34.575"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:43:34.582" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-68378 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:43:38.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:43:38.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:34.577" endtime="20220308 16:43:38.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:43:38.873" level="INFO"/>
<status status="PASS" starttime="20220308 16:43:38.872" endtime="20220308 16:43:38.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:43:38.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:43:38.873" endtime="20220308 16:43:38.873"/>
</kw>
<status status="PASS" starttime="20220308 16:43:34.576" endtime="20220308 16:43:38.874"/>
</kw>
<msg timestamp="20220308 16:43:38.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:43:34.576" endtime="20220308 16:43:38.875"/>
</kw>
<msg timestamp="20220308 16:43:38.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:34.575" endtime="20220308 16:43:38.875"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:38.876" endtime="20220308 16:43:38.876"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:43:34.573" endtime="20220308 16:43:38.876"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220308 16:43:34.507" endtime="20220308 16:43:38.878"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:43:42.501" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:43:44.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:43:44.904" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:42.497" endtime="20220308 16:43:44.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:43:44.907" level="INFO"/>
<status status="PASS" starttime="20220308 16:43:44.905" endtime="20220308 16:43:44.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:43:44.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:43:44.907" endtime="20220308 16:43:44.908"/>
</kw>
<status status="PASS" starttime="20220308 16:43:42.497" endtime="20220308 16:43:44.908"/>
</kw>
<msg timestamp="20220308 16:43:44.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:43:42.497" endtime="20220308 16:43:44.909"/>
</kw>
<msg timestamp="20220308 16:43:44.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:42.496" endtime="20220308 16:43:44.910"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:44.910" endtime="20220308 16:43:44.911"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:43:44.914" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:43:47.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:43:47.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:44.912" endtime="20220308 16:43:47.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:43:47.453" level="INFO"/>
<status status="PASS" starttime="20220308 16:43:47.452" endtime="20220308 16:43:47.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:43:47.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:43:47.453" endtime="20220308 16:43:47.453"/>
</kw>
<status status="PASS" starttime="20220308 16:43:44.912" endtime="20220308 16:43:47.454"/>
</kw>
<msg timestamp="20220308 16:43:47.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:43:44.911" endtime="20220308 16:43:47.454"/>
</kw>
<msg timestamp="20220308 16:43:47.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:44.911" endtime="20220308 16:43:47.455"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:47.455" endtime="20220308 16:43:47.455"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:43:47.459" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:43:52.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:43:52.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:47.457" endtime="20220308 16:43:52.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:43:52.714" level="INFO"/>
<status status="PASS" starttime="20220308 16:43:52.713" endtime="20220308 16:43:52.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:43:52.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:43:52.714" endtime="20220308 16:43:52.714"/>
</kw>
<status status="PASS" starttime="20220308 16:43:47.456" endtime="20220308 16:43:52.715"/>
</kw>
<msg timestamp="20220308 16:43:52.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:43:47.456" endtime="20220308 16:43:52.716"/>
</kw>
<msg timestamp="20220308 16:43:52.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:47.455" endtime="20220308 16:43:52.716"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:52.716" endtime="20220308 16:43:52.717"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:43:42.495" endtime="20220308 16:43:52.717"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220308 16:43:42.440" endtime="20220308 16:43:52.718"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220308 16:43:56.234" level="INFO">${random} = 57826</msg>
<status status="PASS" starttime="20220308 16:43:56.233" endtime="20220308 16:43:56.234"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:43:56.242" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-57826 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:44:00.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:44:00.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:56.237" endtime="20220308 16:44:00.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:44:00.368" level="INFO"/>
<status status="PASS" starttime="20220308 16:44:00.367" endtime="20220308 16:44:00.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:44:00.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:44:00.368" endtime="20220308 16:44:00.369"/>
</kw>
<status status="PASS" starttime="20220308 16:43:56.236" endtime="20220308 16:44:00.369"/>
</kw>
<msg timestamp="20220308 16:44:00.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:43:56.236" endtime="20220308 16:44:00.370"/>
</kw>
<msg timestamp="20220308 16:44:00.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:56.235" endtime="20220308 16:44:00.370"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:44:00.371" endtime="20220308 16:44:00.371"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:43:56.232" endtime="20220308 16:44:00.371"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220308 16:43:56.162" endtime="20220308 16:44:00.373"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:42:57.615" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220308 16:42:57.615" endtime="20220308 16:42:57.615"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:42:57.616" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:42:57.615" endtime="20220308 16:42:57.616"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:42:57.616" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:42:57.616" endtime="20220308 16:42:57.617"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:42:57.617" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220308 16:42:57.617" endtime="20220308 16:42:57.617"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:42:57.619" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:42:57.619" level="INFO">${version_file_contents} = #Tue Mar 08 16:41:48 UTC 2022
cTime=1646757377024
clusterID=d8fd008a-100b-4ed6-bf70-1832ce3ae88b
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220308 16:42:57.618" endtime="20220308 16:42:57.619"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:42:57.619" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220308 16:42:57.619" endtime="20220308 16:42:57.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:42:57.620" endtime="20220308 16:42:57.620"/>
</kw>
<status status="PASS" starttime="20220308 16:42:57.618" endtime="20220308 16:42:57.620"/>
</kw>
<status status="PASS" starttime="20220308 16:42:57.617" endtime="20220308 16:42:57.620"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:42:57.613" endtime="20220308 16:42:57.620"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:42:57.549" endtime="20220308 16:42:57.621"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:43:01.178" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220308 16:43:01.177" endtime="20220308 16:43:01.178"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:43:01.179" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:43:01.178" endtime="20220308 16:43:01.179"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:43:01.180" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:43:01.179" endtime="20220308 16:43:01.180"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:43:01.181" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220308 16:43:01.181" endtime="20220308 16:43:01.181"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:43:01.183" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:43:01.183" level="INFO">${version_file_contents} = #Tue Mar 08 16:41:58 UTC 2022
cTime=1646757378518
clusterID=426590f4-6f64-46a1-b2e5-799043adcc0f
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220308 16:43:01.182" endtime="20220308 16:43:01.183"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:43:01.184" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220308 16:43:01.183" endtime="20220308 16:43:01.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:01.184" endtime="20220308 16:43:01.184"/>
</kw>
<status status="PASS" starttime="20220308 16:43:01.182" endtime="20220308 16:43:01.184"/>
</kw>
<status status="PASS" starttime="20220308 16:43:01.181" endtime="20220308 16:43:01.185"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:43:01.177" endtime="20220308 16:43:01.185"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:43:01.114" endtime="20220308 16:43:01.185"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:43:04.873" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220308 16:43:04.873" endtime="20220308 16:43:04.873"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:43:04.874" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:43:04.873" endtime="20220308 16:43:04.874"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:43:04.874" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:43:04.874" endtime="20220308 16:43:04.875"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:43:04.875" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220308 16:43:04.875" endtime="20220308 16:43:04.875"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:43:04.876" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:43:04.877" level="INFO">${version_file_contents} = #Tue Mar 08 16:41:35 UTC 2022
cTime=1646757380412
clusterID=ef4a8f7f-eca6-408f-9e5d-77098b6395e5
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220308 16:43:04.876" endtime="20220308 16:43:04.877"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:43:04.878" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220308 16:43:04.878" endtime="20220308 16:43:04.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:04.878" endtime="20220308 16:43:04.880"/>
</kw>
<status status="PASS" starttime="20220308 16:43:04.876" endtime="20220308 16:43:04.881"/>
</kw>
<status status="PASS" starttime="20220308 16:43:04.875" endtime="20220308 16:43:04.881"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:43:04.872" endtime="20220308 16:43:04.881"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:43:04.811" endtime="20220308 16:43:04.881"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:43:08.599" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220308 16:43:08.598" endtime="20220308 16:43:08.599"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:43:08.600" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:43:08.599" endtime="20220308 16:43:08.600"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:43:08.600" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:43:08.600" endtime="20220308 16:43:08.600"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:43:08.601" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220308 16:43:08.600" endtime="20220308 16:43:08.601"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:43:08.602" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:43:08.603" level="INFO">${version_file_contents} = #Tue Mar 08 16:35:01 UTC 2022
cTime=1646757283154
clusterID=CID-4855249b-99ae-40da-89f7-ac8bd8c3ea33
omUuid=18679109-354a-42b4-9975-d9d37ef4412f
nodeType=OM
scmUuid=0e726464-fee3-40be-a394-c0900c1a41e...</msg>
<status status="PASS" starttime="20220308 16:43:08.602" endtime="20220308 16:43:08.603"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:43:08.603" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220308 16:43:08.603" endtime="20220308 16:43:08.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:08.603" endtime="20220308 16:43:08.604"/>
</kw>
<status status="PASS" starttime="20220308 16:43:08.601" endtime="20220308 16:43:08.604"/>
</kw>
<status status="PASS" starttime="20220308 16:43:08.601" endtime="20220308 16:43:08.604"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:43:08.598" endtime="20220308 16:43:08.604"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:43:08.534" endtime="20220308 16:43:08.605"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:43:12.177" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220308 16:43:12.176" endtime="20220308 16:43:12.177"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:43:12.177" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:43:12.177" endtime="20220308 16:43:12.177"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:43:12.178" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:43:12.177" endtime="20220308 16:43:12.178"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:43:12.178" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220308 16:43:12.178" endtime="20220308 16:43:12.178"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:43:12.180" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:43:12.180" level="INFO">${version_file_contents} = #Tue Mar 08 16:35:01 UTC 2022
cTime=1646757279819
clusterID=CID-4855249b-99ae-40da-89f7-ac8bd8c3ea33
omUuid=1ca5bbd2-785c-428d-bfe4-6aa75f172e76
nodeType=OM
scmUuid=0e726464-fee3-40be-a394-c0900c1a41e...</msg>
<status status="PASS" starttime="20220308 16:43:12.179" endtime="20220308 16:43:12.180"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:43:12.181" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220308 16:43:12.180" endtime="20220308 16:43:12.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:12.181" endtime="20220308 16:43:12.182"/>
</kw>
<status status="PASS" starttime="20220308 16:43:12.179" endtime="20220308 16:43:12.182"/>
</kw>
<status status="PASS" starttime="20220308 16:43:12.179" endtime="20220308 16:43:12.182"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:43:12.175" endtime="20220308 16:43:12.182"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:43:12.118" endtime="20220308 16:43:12.183"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:43:15.663" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220308 16:43:15.663" endtime="20220308 16:43:15.664"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:43:15.664" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:43:15.664" endtime="20220308 16:43:15.664"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:43:15.665" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:43:15.664" endtime="20220308 16:43:15.665"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:43:15.666" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220308 16:43:15.665" endtime="20220308 16:43:15.666"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:43:15.668" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:43:15.668" level="INFO">${version_file_contents} = #Tue Mar 08 16:35:01 UTC 2022
cTime=1646757281591
clusterID=CID-4855249b-99ae-40da-89f7-ac8bd8c3ea33
omUuid=0bf9af09-338d-4ad0-96ff-e1fda7a9a58f
nodeType=OM
scmUuid=0e726464-fee3-40be-a394-c0900c1a41e...</msg>
<status status="PASS" starttime="20220308 16:43:15.667" endtime="20220308 16:43:15.668"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:43:15.669" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220308 16:43:15.668" endtime="20220308 16:43:15.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:15.669" endtime="20220308 16:43:15.670"/>
</kw>
<status status="PASS" starttime="20220308 16:43:15.667" endtime="20220308 16:43:15.670"/>
</kw>
<status status="PASS" starttime="20220308 16:43:15.666" endtime="20220308 16:43:15.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:43:15.662" endtime="20220308 16:43:15.670"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:43:15.597" endtime="20220308 16:43:15.671"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220308 16:43:19.425" level="INFO">${random} = 99919</msg>
<status status="PASS" starttime="20220308 16:43:19.425" endtime="20220308 16:43:19.425"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:43:19.430" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-99919 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:43:23.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:43:23.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:19.427" endtime="20220308 16:43:23.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:43:23.637" level="INFO"/>
<status status="PASS" starttime="20220308 16:43:23.637" endtime="20220308 16:43:23.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:43:23.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:43:23.637" endtime="20220308 16:43:23.638"/>
</kw>
<status status="PASS" starttime="20220308 16:43:19.427" endtime="20220308 16:43:23.638"/>
</kw>
<msg timestamp="20220308 16:43:23.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:43:19.426" endtime="20220308 16:43:23.640"/>
</kw>
<msg timestamp="20220308 16:43:23.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:19.426" endtime="20220308 16:43:23.640"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:23.640" endtime="20220308 16:43:23.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:43:19.424" endtime="20220308 16:43:23.641"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220308 16:43:19.367" endtime="20220308 16:43:23.642"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220308 16:43:27.109" level="INFO">${random} = 10121</msg>
<status status="PASS" starttime="20220308 16:43:27.109" endtime="20220308 16:43:27.109"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:43:27.114" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-10121 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:43:31.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:43:31.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:27.111" endtime="20220308 16:43:31.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:43:31.111" level="INFO"/>
<status status="PASS" starttime="20220308 16:43:31.110" endtime="20220308 16:43:31.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:43:31.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:43:31.111" endtime="20220308 16:43:31.112"/>
</kw>
<status status="PASS" starttime="20220308 16:43:27.111" endtime="20220308 16:43:31.112"/>
</kw>
<msg timestamp="20220308 16:43:31.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:43:27.110" endtime="20220308 16:43:31.114"/>
</kw>
<msg timestamp="20220308 16:43:31.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:43:27.109" endtime="20220308 16:43:31.114"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:43:31.114" endtime="20220308 16:43:31.115"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:43:27.108" endtime="20220308 16:43:31.115"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220308 16:43:27.050" endtime="20220308 16:43:31.116"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220308 16:41:24.654" endtime="20220308 16:41:24.654"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:41:24.659" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:42:47.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:42:47.874" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220308 16:41:24.656" endtime="20220308 16:42:47.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:42:47.875" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220308 16:42:47.874" endtime="20220308 16:42:47.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:42:47.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:42:47.876" endtime="20220308 16:42:47.876"/>
</kw>
<status status="PASS" starttime="20220308 16:41:24.655" endtime="20220308 16:42:47.877"/>
</kw>
<msg timestamp="20220308 16:42:47.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:41:24.655" endtime="20220308 16:42:47.878"/>
</kw>
<msg timestamp="20220308 16:42:47.878" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220308 16:41:24.655" endtime="20220308 16:42:47.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:42:47.879" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220308 16:42:47.879" endtime="20220308 16:42:47.879"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:41:24.653" endtime="20220308 16:42:47.879"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220308 16:42:47.881" endtime="20220308 16:42:47.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:42:47.885" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:42:50.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:42:50.718" level="INFO">${output} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220308 16:42:47.883" endtime="20220308 16:42:50.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:42:50.719" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220308 16:42:50.719" endtime="20220308 16:42:50.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:42:50.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:42:50.720" endtime="20220308 16:42:50.721"/>
</kw>
<status status="PASS" starttime="20220308 16:42:47.882" endtime="20220308 16:42:50.721"/>
</kw>
<msg timestamp="20220308 16:42:50.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:42:47.882" endtime="20220308 16:42:50.721"/>
</kw>
<msg timestamp="20220308 16:42:50.722" level="INFO">${result} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220308 16:42:47.881" endtime="20220308 16:42:50.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:42:50.722" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220308 16:42:50.722" endtime="20220308 16:42:50.722"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:42:47.880" endtime="20220308 16:42:50.722"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20220308 16:41:24.590" endtime="20220308 16:42:50.724"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:20.320" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220308 16:37:20.319" endtime="20220308 16:37:20.320"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:20.320" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:37:20.320" endtime="20220308 16:37:20.320"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:37:20.321" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:37:20.321" endtime="20220308 16:37:20.321"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:37:20.322" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220308 16:37:20.321" endtime="20220308 16:37:20.322"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:37:20.323" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:37:20.323" level="INFO">${version_file_contents} = #Tue Mar 08 16:36:17 UTC 2022
cTime=1646757377024
clusterID=d8fd008a-100b-4ed6-bf70-1832ce3ae88b
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220308 16:37:20.322" endtime="20220308 16:37:20.323"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:37:20.324" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220308 16:37:20.323" endtime="20220308 16:37:20.324"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:37:20.324" endtime="20220308 16:37:20.325"/>
</kw>
<status status="PASS" starttime="20220308 16:37:20.322" endtime="20220308 16:37:20.325"/>
</kw>
<status status="PASS" starttime="20220308 16:37:20.322" endtime="20220308 16:37:20.325"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:37:20.318" endtime="20220308 16:37:20.325"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:37:20.258" endtime="20220308 16:37:20.326"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:23.851" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220308 16:37:23.850" endtime="20220308 16:37:23.851"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:23.852" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:37:23.851" endtime="20220308 16:37:23.852"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:37:23.852" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:37:23.852" endtime="20220308 16:37:23.852"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:37:23.853" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220308 16:37:23.853" endtime="20220308 16:37:23.853"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:37:23.855" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:37:23.855" level="INFO">${version_file_contents} = #Tue Mar 08 16:36:18 UTC 2022
cTime=1646757378518
clusterID=426590f4-6f64-46a1-b2e5-799043adcc0f
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220308 16:37:23.855" endtime="20220308 16:37:23.855"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:37:23.856" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220308 16:37:23.855" endtime="20220308 16:37:23.856"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:37:23.856" endtime="20220308 16:37:23.857"/>
</kw>
<status status="PASS" starttime="20220308 16:37:23.854" endtime="20220308 16:37:23.857"/>
</kw>
<status status="PASS" starttime="20220308 16:37:23.853" endtime="20220308 16:37:23.857"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:37:23.848" endtime="20220308 16:37:23.857"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:37:23.784" endtime="20220308 16:37:23.858"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:27.350" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220308 16:37:27.350" endtime="20220308 16:37:27.351"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:27.351" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:37:27.351" endtime="20220308 16:37:27.351"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:37:27.352" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:37:27.351" endtime="20220308 16:37:27.352"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:37:27.352" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220308 16:37:27.352" endtime="20220308 16:37:27.352"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:37:27.353" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:37:27.354" level="INFO">${version_file_contents} = #Tue Mar 08 16:36:20 UTC 2022
cTime=1646757380412
clusterID=ef4a8f7f-eca6-408f-9e5d-77098b6395e5
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220308 16:37:27.353" endtime="20220308 16:37:27.354"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:37:27.355" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220308 16:37:27.354" endtime="20220308 16:37:27.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:37:27.355" endtime="20220308 16:37:27.355"/>
</kw>
<status status="PASS" starttime="20220308 16:37:27.353" endtime="20220308 16:37:27.355"/>
</kw>
<status status="PASS" starttime="20220308 16:37:27.352" endtime="20220308 16:37:27.355"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:37:27.349" endtime="20220308 16:37:27.356"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:37:27.295" endtime="20220308 16:37:27.357"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:30.864" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220308 16:37:30.863" endtime="20220308 16:37:30.864"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:30.865" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:37:30.864" endtime="20220308 16:37:30.865"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:37:30.865" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:37:30.865" endtime="20220308 16:37:30.865"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:37:30.866" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220308 16:37:30.866" endtime="20220308 16:37:30.866"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:37:30.867" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:37:30.868" level="INFO">${version_file_contents} = #Tue Mar 08 16:35:01 UTC 2022
cTime=1646757283154
clusterID=CID-4855249b-99ae-40da-89f7-ac8bd8c3ea33
omUuid=18679109-354a-42b4-9975-d9d37ef4412f
nodeType=OM
scmUuid=0e726464-fee3-40be-a394-c0900c1a41e...</msg>
<status status="PASS" starttime="20220308 16:37:30.867" endtime="20220308 16:37:30.868"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:37:30.868" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220308 16:37:30.868" endtime="20220308 16:37:30.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:37:30.869" endtime="20220308 16:37:30.869"/>
</kw>
<status status="PASS" starttime="20220308 16:37:30.867" endtime="20220308 16:37:30.869"/>
</kw>
<status status="PASS" starttime="20220308 16:37:30.866" endtime="20220308 16:37:30.870"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:37:30.862" endtime="20220308 16:37:30.871"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:37:30.804" endtime="20220308 16:37:30.872"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:34.387" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220308 16:37:34.386" endtime="20220308 16:37:34.387"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:34.388" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:37:34.387" endtime="20220308 16:37:34.388"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:37:34.389" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:37:34.388" endtime="20220308 16:37:34.389"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:37:34.389" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220308 16:37:34.389" endtime="20220308 16:37:34.390"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:37:34.391" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:37:34.391" level="INFO">${version_file_contents} = #Tue Mar 08 16:35:01 UTC 2022
cTime=1646757279819
clusterID=CID-4855249b-99ae-40da-89f7-ac8bd8c3ea33
omUuid=1ca5bbd2-785c-428d-bfe4-6aa75f172e76
nodeType=OM
scmUuid=0e726464-fee3-40be-a394-c0900c1a41e...</msg>
<status status="PASS" starttime="20220308 16:37:34.390" endtime="20220308 16:37:34.391"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:37:34.392" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220308 16:37:34.391" endtime="20220308 16:37:34.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:37:34.392" endtime="20220308 16:37:34.392"/>
</kw>
<status status="PASS" starttime="20220308 16:37:34.390" endtime="20220308 16:37:34.393"/>
</kw>
<status status="PASS" starttime="20220308 16:37:34.390" endtime="20220308 16:37:34.393"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:37:34.386" endtime="20220308 16:37:34.393"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:37:34.321" endtime="20220308 16:37:34.394"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:37.882" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220308 16:37:37.881" endtime="20220308 16:37:37.882"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:37.883" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:37:37.882" endtime="20220308 16:37:37.883"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:37:37.883" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:37:37.883" endtime="20220308 16:37:37.884"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:37:37.884" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220308 16:37:37.884" endtime="20220308 16:37:37.884"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:37:37.886" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:37:37.886" level="INFO">${version_file_contents} = #Tue Mar 08 16:35:01 UTC 2022
cTime=1646757281591
clusterID=CID-4855249b-99ae-40da-89f7-ac8bd8c3ea33
omUuid=0bf9af09-338d-4ad0-96ff-e1fda7a9a58f
nodeType=OM
scmUuid=0e726464-fee3-40be-a394-c0900c1a41e...</msg>
<status status="PASS" starttime="20220308 16:37:37.885" endtime="20220308 16:37:37.886"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:37:37.887" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220308 16:37:37.886" endtime="20220308 16:37:37.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:37:37.887" endtime="20220308 16:37:37.887"/>
</kw>
<status status="PASS" starttime="20220308 16:37:37.885" endtime="20220308 16:37:37.888"/>
</kw>
<status status="PASS" starttime="20220308 16:37:37.885" endtime="20220308 16:37:37.888"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:37:37.880" endtime="20220308 16:37:37.888"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:37:37.824" endtime="20220308 16:37:37.889"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220308 16:37:41.383" level="INFO">${random} = 45619</msg>
<status status="PASS" starttime="20220308 16:37:41.382" endtime="20220308 16:37:41.383"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:37:41.388" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-45619 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:37:45.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:37:45.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:37:41.385" endtime="20220308 16:37:45.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:37:45.819" level="INFO"/>
<status status="PASS" starttime="20220308 16:37:45.818" endtime="20220308 16:37:45.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:37:45.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:37:45.820" endtime="20220308 16:37:45.820"/>
</kw>
<status status="PASS" starttime="20220308 16:37:41.384" endtime="20220308 16:37:45.821"/>
</kw>
<msg timestamp="20220308 16:37:45.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:37:41.384" endtime="20220308 16:37:45.822"/>
</kw>
<msg timestamp="20220308 16:37:45.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:37:41.383" endtime="20220308 16:37:45.823"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:37:45.823" endtime="20220308 16:37:45.823"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:37:41.381" endtime="20220308 16:37:45.824"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220308 16:37:41.323" endtime="20220308 16:37:45.825"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:37:49.779" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:37:52.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:37:52.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:37:49.775" endtime="20220308 16:37:52.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:37:52.458" level="INFO"/>
<status status="PASS" starttime="20220308 16:37:52.457" endtime="20220308 16:37:52.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:37:52.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:37:52.458" endtime="20220308 16:37:52.459"/>
</kw>
<status status="PASS" starttime="20220308 16:37:49.774" endtime="20220308 16:37:52.460"/>
</kw>
<msg timestamp="20220308 16:37:52.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:37:49.774" endtime="20220308 16:37:52.461"/>
</kw>
<msg timestamp="20220308 16:37:52.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:37:49.773" endtime="20220308 16:37:52.461"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:37:52.462" endtime="20220308 16:37:52.462"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:37:52.466" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:37:54.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:37:54.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:37:52.464" endtime="20220308 16:37:54.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:37:54.903" level="INFO"/>
<status status="PASS" starttime="20220308 16:37:54.902" endtime="20220308 16:37:54.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:37:54.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:37:54.903" endtime="20220308 16:37:54.904"/>
</kw>
<status status="PASS" starttime="20220308 16:37:52.463" endtime="20220308 16:37:54.904"/>
</kw>
<msg timestamp="20220308 16:37:54.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:37:52.463" endtime="20220308 16:37:54.905"/>
</kw>
<msg timestamp="20220308 16:37:54.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:37:52.462" endtime="20220308 16:37:54.905"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:37:54.905" endtime="20220308 16:37:54.906"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:37:54.910" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:38:00.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:38:00.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:37:54.907" endtime="20220308 16:38:00.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:38:00.053" level="INFO"/>
<status status="PASS" starttime="20220308 16:38:00.052" endtime="20220308 16:38:00.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:38:00.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:38:00.054" endtime="20220308 16:38:00.055"/>
</kw>
<status status="PASS" starttime="20220308 16:37:54.907" endtime="20220308 16:38:00.055"/>
</kw>
<msg timestamp="20220308 16:38:00.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:37:54.907" endtime="20220308 16:38:00.056"/>
</kw>
<msg timestamp="20220308 16:38:00.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:37:54.906" endtime="20220308 16:38:00.056"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:38:00.057" endtime="20220308 16:38:00.058"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:37:49.773" endtime="20220308 16:38:00.058"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220308 16:37:49.707" endtime="20220308 16:38:00.060"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220308 16:38:03.609" level="INFO">${random} = 92622</msg>
<status status="PASS" starttime="20220308 16:38:03.608" endtime="20220308 16:38:03.609"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220308 16:38:03.614" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-92622 2&gt;&amp;1'.</msg>
<msg timestamp="20220308 16:38:07.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20220308 16:38:07.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:38:03.611" endtime="20220308 16:38:07.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220308 16:38:07.714" level="INFO"/>
<status status="PASS" starttime="20220308 16:38:07.714" endtime="20220308 16:38:07.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220308 16:38:07.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220308 16:38:07.715" endtime="20220308 16:38:07.715"/>
</kw>
<status status="PASS" starttime="20220308 16:38:03.610" endtime="20220308 16:38:07.716"/>
</kw>
<msg timestamp="20220308 16:38:07.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220308 16:38:03.610" endtime="20220308 16:38:07.717"/>
</kw>
<msg timestamp="20220308 16:38:07.718" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220308 16:38:03.609" endtime="20220308 16:38:07.718"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:38:07.718" endtime="20220308 16:38:07.719"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:38:03.608" endtime="20220308 16:38:07.719"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220308 16:38:03.551" endtime="20220308 16:38:07.721"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:16.604" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220308 16:37:16.603" endtime="20220308 16:37:16.605"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220308 16:37:16.605" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220308 16:37:16.605" endtime="20220308 16:37:16.605"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220308 16:37:16.606" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220308 16:37:16.606" endtime="20220308 16:37:16.606"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220308 16:37:16.607" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220308 16:37:16.607" endtime="20220308 16:37:16.607"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220308 16:37:16.609" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220308 16:37:16.609" level="INFO">${version_file_contents} = #Tue Mar 08 16:34:41 UTC 2022
cTime=1646757281724
clusterID=CID-4855249b-99ae-40da-89f7-ac8bd8c3ea33
nodeType=SCM
scmUuid=0e726464-fee3-40be-a394-c0900c1a41e6
layoutVersion=0
</msg>
<status status="PASS" starttime="20220308 16:37:16.609" endtime="20220308 16:37:16.609"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220308 16:37:16.610" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220308 16:37:16.609" endtime="20220308 16:37:16.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220308 16:37:16.610" endtime="20220308 16:37:16.620"/>
</kw>
<status status="PASS" starttime="20220308 16:37:16.608" endtime="20220308 16:37:16.620"/>
</kw>
<status status="PASS" starttime="20220308 16:37:16.607" endtime="20220308 16:37:16.620"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220308 16:37:16.602" endtime="20220308 16:37:16.620"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220308 16:37:16.523" endtime="20220308 16:37:16.621"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="170181"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
