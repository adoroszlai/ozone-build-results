<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220307 11:23:41.788" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:38:02.421" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:38:02.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:38:02.427" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:38:02.411" endtime="20220307 10:38:02.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:38:02.429" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:38:02.428" endtime="20220307 10:38:02.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:38:02.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:38:02.429" endtime="20220307 10:38:02.430"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.410" endtime="20220307 10:38:02.431"/>
</kw>
<msg timestamp="20220307 10:38:02.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:38:02.410" endtime="20220307 10:38:02.434"/>
</kw>
<msg timestamp="20220307 10:38:02.435" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20220307 10:38:02.409" endtime="20220307 10:38:02.435"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:38:02.439" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:38:02.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:38:02.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:38:02.437" endtime="20220307 10:38:02.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:38:02.462" level="INFO"/>
<status status="PASS" starttime="20220307 10:38:02.461" endtime="20220307 10:38:02.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:38:02.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:38:02.462" endtime="20220307 10:38:02.463"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.436" endtime="20220307 10:38:02.464"/>
</kw>
<msg timestamp="20220307 10:38:02.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:38:02.436" endtime="20220307 10:38:02.464"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.435" endtime="20220307 10:38:02.465"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.435" endtime="20220307 10:38:02.465"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.409" endtime="20220307 10:38:02.465"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.408" endtime="20220307 10:38:02.465"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:38:02.475" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:38:02.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:38:02.856" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220307 10:38:02.470" endtime="20220307 10:38:02.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:38:02.857" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 07 Mar 2022 10:38:02 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCeO9Ck8iFnXiuySR+No0Op5n5zToQE/jJEsNbg3ROUT69sn6xR1zLoFj+M1ujZj38KJijKBLIRqIsIyBiC2VV1wHH
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1646685482842&amp;s=n63ErB+AeXtyAEXl3/XesA2qQ7lXAhInC/ebtT534iw="; Path=/; HttpOnly
Last-Modified: Mon, 07 Mar 2022 10:26:02 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220307 10:38:02.856" endtime="20220307 10:38:02.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:38:02.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:38:02.857" endtime="20220307 10:38:02.858"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.466" endtime="20220307 10:38:02.858"/>
</kw>
<msg timestamp="20220307 10:38:02.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:38:02.466" endtime="20220307 10:38:02.859"/>
</kw>
<msg timestamp="20220307 10:38:02.860" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220307 10:38:02.465" endtime="20220307 10:38:02.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:38:02.860" endtime="20220307 10:38:02.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220307 10:38:02.407" endtime="20220307 10:38:02.861"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:38:02.869" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:38:02.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:38:02.873" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:38:02.867" endtime="20220307 10:38:02.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:38:02.875" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:38:02.874" endtime="20220307 10:38:02.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:38:02.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:38:02.875" endtime="20220307 10:38:02.876"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.866" endtime="20220307 10:38:02.876"/>
</kw>
<msg timestamp="20220307 10:38:02.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:38:02.866" endtime="20220307 10:38:02.877"/>
</kw>
<msg timestamp="20220307 10:38:02.877" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:38:02.865" endtime="20220307 10:38:02.877"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:38:02.879" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:38:02.877" endtime="20220307 10:38:02.879"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:38:02.884" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:38:02.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:38:02.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:38:02.882" endtime="20220307 10:38:02.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:38:02.894" level="INFO"/>
<status status="PASS" starttime="20220307 10:38:02.893" endtime="20220307 10:38:02.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:38:02.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:38:02.894" endtime="20220307 10:38:02.895"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.881" endtime="20220307 10:38:02.895"/>
</kw>
<msg timestamp="20220307 10:38:02.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:38:02.881" endtime="20220307 10:38:02.896"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.880" endtime="20220307 10:38:02.896"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.880" endtime="20220307 10:38:02.896"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.865" endtime="20220307 10:38:02.897"/>
</kw>
<status status="PASS" starttime="20220307 10:38:02.864" endtime="20220307 10:38:02.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:38:02.901" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:02.865" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220307 10:38:02.899" endtime="20220307 10:43:02.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220307 10:43:02.866" endtime="20220307 10:43:02.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220307 10:43:02.866" endtime="20220307 10:43:02.866"/>
</kw>
<status status="FAIL" starttime="20220307 10:38:02.898" endtime="20220307 10:43:02.867"/>
</kw>
<msg timestamp="20220307 10:43:02.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220307 10:38:02.897" endtime="20220307 10:43:02.868"/>
</kw>
<status status="FAIL" starttime="20220307 10:38:02.897" endtime="20220307 10:43:02.868"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20220307 10:43:02.868" endtime="20220307 10:43:02.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 10:43:02.869" endtime="20220307 10:43:02.869"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220307 10:38:02.862" endtime="20220307 10:43:02.869">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20220307 10:38:02.370" endtime="20220307 10:43:02.871"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:02.888" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:06.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:43:06.065" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220307 10:43:02.884" endtime="20220307 10:43:06.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:06.066" level="INFO">om</msg>
<status status="PASS" starttime="20220307 10:43:06.065" endtime="20220307 10:43:06.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:06.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:06.067" endtime="20220307 10:43:06.068"/>
</kw>
<status status="PASS" starttime="20220307 10:43:02.884" endtime="20220307 10:43:06.068"/>
</kw>
<msg timestamp="20220307 10:43:06.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:43:02.883" endtime="20220307 10:43:06.068"/>
</kw>
<msg timestamp="20220307 10:43:06.069" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220307 10:43:02.882" endtime="20220307 10:43:06.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:43:06.069" endtime="20220307 10:43:06.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:06.075" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:09.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:43:09.319" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220307 10:43:06.072" endtime="20220307 10:43:09.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:09.320" level="INFO">om</msg>
<status status="PASS" starttime="20220307 10:43:09.320" endtime="20220307 10:43:09.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:09.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:09.321" endtime="20220307 10:43:09.322"/>
</kw>
<status status="PASS" starttime="20220307 10:43:06.071" endtime="20220307 10:43:09.323"/>
</kw>
<msg timestamp="20220307 10:43:09.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:43:06.070" endtime="20220307 10:43:09.324"/>
</kw>
<msg timestamp="20220307 10:43:09.325" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220307 10:43:06.070" endtime="20220307 10:43:09.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:43:09.325" endtime="20220307 10:43:09.327"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220307 10:43:02.880" endtime="20220307 10:43:09.327"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:09.337" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:12.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:43:12.745" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:43:09.334" endtime="20220307 10:43:12.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:12.746" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:43:12.745" endtime="20220307 10:43:12.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:12.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:12.746" endtime="20220307 10:43:12.747"/>
</kw>
<status status="PASS" starttime="20220307 10:43:09.333" endtime="20220307 10:43:12.747"/>
</kw>
<msg timestamp="20220307 10:43:12.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:43:09.332" endtime="20220307 10:43:12.748"/>
</kw>
<msg timestamp="20220307 10:43:12.748" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220307 10:43:09.329" endtime="20220307 10:43:12.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:43:12.748" endtime="20220307 10:43:12.749"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:12.754" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:15.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:43:15.789" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:43:12.751" endtime="20220307 10:43:15.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:15.790" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:43:15.789" endtime="20220307 10:43:15.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:15.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:15.790" endtime="20220307 10:43:15.791"/>
</kw>
<status status="PASS" starttime="20220307 10:43:12.750" endtime="20220307 10:43:15.791"/>
</kw>
<msg timestamp="20220307 10:43:15.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:43:12.750" endtime="20220307 10:43:15.792"/>
</kw>
<msg timestamp="20220307 10:43:15.792" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220307 10:43:12.749" endtime="20220307 10:43:15.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:43:15.792" endtime="20220307 10:43:15.793"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220307 10:43:09.328" endtime="20220307 10:43:15.793"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:15.802" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:18.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:43:18.660" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220307 10:43:15.798" endtime="20220307 10:43:18.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:18.662" level="INFO">om</msg>
<status status="PASS" starttime="20220307 10:43:18.661" endtime="20220307 10:43:18.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:18.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:18.662" endtime="20220307 10:43:18.663"/>
</kw>
<status status="PASS" starttime="20220307 10:43:15.797" endtime="20220307 10:43:18.664"/>
</kw>
<msg timestamp="20220307 10:43:18.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:43:15.796" endtime="20220307 10:43:18.664"/>
</kw>
<msg timestamp="20220307 10:43:18.665" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220307 10:43:15.795" endtime="20220307 10:43:18.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:43:18.665" endtime="20220307 10:43:18.666"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:43:18.666" endtime="20220307 10:43:18.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:18.671" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:21.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:43:21.464" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220307 10:43:18.669" endtime="20220307 10:43:21.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:21.465" level="INFO">om</msg>
<status status="PASS" starttime="20220307 10:43:21.464" endtime="20220307 10:43:21.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:21.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:21.465" endtime="20220307 10:43:21.466"/>
</kw>
<status status="PASS" starttime="20220307 10:43:18.668" endtime="20220307 10:43:21.471"/>
</kw>
<msg timestamp="20220307 10:43:21.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:43:18.667" endtime="20220307 10:43:21.472"/>
</kw>
<msg timestamp="20220307 10:43:21.473" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220307 10:43:18.667" endtime="20220307 10:43:21.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:43:21.473" endtime="20220307 10:43:21.474"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:43:21.474" endtime="20220307 10:43:21.474"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220307 10:43:15.794" endtime="20220307 10:43:21.475"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:21.482" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:24.508" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 10:43:24.508" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220307 10:43:21.479" endtime="20220307 10:43:24.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:24.510" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220307 10:43:24.509" endtime="20220307 10:43:24.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:24.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:24.510" endtime="20220307 10:43:24.511"/>
</kw>
<msg timestamp="20220307 10:43:24.511" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220307 10:43:21.478" endtime="20220307 10:43:24.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:43:24.511" endtime="20220307 10:43:24.512"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:24.515" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:27.291" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 10:43:27.292" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220307 10:43:24.513" endtime="20220307 10:43:27.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:27.293" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220307 10:43:27.292" endtime="20220307 10:43:27.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:27.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:27.293" endtime="20220307 10:43:27.294"/>
</kw>
<msg timestamp="20220307 10:43:27.295" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220307 10:43:24.512" endtime="20220307 10:43:27.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:43:27.295" endtime="20220307 10:43:27.295"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220307 10:43:21.476" endtime="20220307 10:43:27.296"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20220307 10:43:02.874" endtime="20220307 10:43:27.297"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220307 10:43:27.326" level="INFO">${random} = 85389</msg>
<status status="PASS" starttime="20220307 10:43:27.325" endtime="20220307 10:43:27.326"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:43:27.329" level="INFO">${source} = 85389-source</msg>
<status status="PASS" starttime="20220307 10:43:27.326" endtime="20220307 10:43:27.329"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:43:27.332" level="INFO">${target} = 85389-target</msg>
<status status="PASS" starttime="20220307 10:43:27.329" endtime="20220307 10:43:27.332"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:27.338" level="INFO">Running command 'ozone sh volume create 85389-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:33.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:43:33.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:43:27.333" endtime="20220307 10:43:33.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:33.604" level="INFO"/>
<status status="PASS" starttime="20220307 10:43:33.603" endtime="20220307 10:43:33.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:33.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:33.604" endtime="20220307 10:43:33.605"/>
</kw>
<status status="PASS" starttime="20220307 10:43:27.333" endtime="20220307 10:43:33.606"/>
</kw>
<msg timestamp="20220307 10:43:33.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:43:27.333" endtime="20220307 10:43:33.606"/>
</kw>
<status status="PASS" starttime="20220307 10:43:27.332" endtime="20220307 10:43:33.607"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:33.614" level="INFO">Running command 'ozone sh volume create 85389-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:42.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:43:42.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:43:33.610" endtime="20220307 10:43:42.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:42.525" level="INFO"/>
<status status="PASS" starttime="20220307 10:43:42.525" endtime="20220307 10:43:42.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:42.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:42.526" endtime="20220307 10:43:42.526"/>
</kw>
<status status="PASS" starttime="20220307 10:43:33.609" endtime="20220307 10:43:42.527"/>
</kw>
<msg timestamp="20220307 10:43:42.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:43:33.608" endtime="20220307 10:43:42.528"/>
</kw>
<status status="PASS" starttime="20220307 10:43:33.607" endtime="20220307 10:43:42.528"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:42.534" level="INFO">Running command 'ozone sh bucket create 85389-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:43:50.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:43:50.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:43:42.532" endtime="20220307 10:43:50.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:43:50.437" level="INFO"/>
<status status="PASS" starttime="20220307 10:43:50.437" endtime="20220307 10:43:50.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:43:50.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:43:50.438" endtime="20220307 10:43:50.439"/>
</kw>
<status status="PASS" starttime="20220307 10:43:42.531" endtime="20220307 10:43:50.440"/>
</kw>
<msg timestamp="20220307 10:43:50.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:43:42.531" endtime="20220307 10:43:50.446"/>
</kw>
<status status="PASS" starttime="20220307 10:43:42.530" endtime="20220307 10:43:50.446"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:43:50.452" level="INFO">Running command 'ozone sh key put 85389-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:47:03.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:47:03.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:43:50.450" endtime="20220307 10:47:03.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:47:03.108" level="INFO"/>
<status status="PASS" starttime="20220307 10:47:03.107" endtime="20220307 10:47:03.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:47:03.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:47:03.108" endtime="20220307 10:47:03.108"/>
</kw>
<status status="PASS" starttime="20220307 10:43:50.449" endtime="20220307 10:47:03.109"/>
</kw>
<msg timestamp="20220307 10:47:03.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:43:50.448" endtime="20220307 10:47:03.110"/>
</kw>
<status status="PASS" starttime="20220307 10:43:50.447" endtime="20220307 10:47:03.110"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:47:03.116" level="INFO">Running command 'ozone sh bucket create 85389-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:47:11.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:47:11.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:47:03.113" endtime="20220307 10:47:11.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:47:11.297" level="INFO"/>
<status status="PASS" starttime="20220307 10:47:11.297" endtime="20220307 10:47:11.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:47:11.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:47:11.298" endtime="20220307 10:47:11.298"/>
</kw>
<status status="PASS" starttime="20220307 10:47:03.112" endtime="20220307 10:47:11.299"/>
</kw>
<msg timestamp="20220307 10:47:11.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:47:03.112" endtime="20220307 10:47:11.300"/>
</kw>
<status status="PASS" starttime="20220307 10:47:03.111" endtime="20220307 10:47:11.301"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:47:11.308" level="INFO">Running command 'ozone sh bucket link 85389-source/readable-bucket 85389-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:47:19.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:47:19.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:47:11.305" endtime="20220307 10:47:19.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:47:19.613" level="INFO"/>
<status status="PASS" starttime="20220307 10:47:19.612" endtime="20220307 10:47:19.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:47:19.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:47:19.613" endtime="20220307 10:47:19.615"/>
</kw>
<status status="PASS" starttime="20220307 10:47:11.304" endtime="20220307 10:47:19.616"/>
</kw>
<msg timestamp="20220307 10:47:19.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:47:11.303" endtime="20220307 10:47:19.618"/>
</kw>
<status status="PASS" starttime="20220307 10:47:11.301" endtime="20220307 10:47:19.619"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:47:19.624" level="INFO">Running command 'ozone sh bucket link 85389-source/readable-bucket 85389-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:47:25.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:47:25.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:47:19.622" endtime="20220307 10:47:25.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:47:25.441" level="INFO"/>
<status status="PASS" starttime="20220307 10:47:25.440" endtime="20220307 10:47:25.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:47:25.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:47:25.441" endtime="20220307 10:47:25.442"/>
</kw>
<status status="PASS" starttime="20220307 10:47:19.621" endtime="20220307 10:47:25.442"/>
</kw>
<msg timestamp="20220307 10:47:25.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:47:19.620" endtime="20220307 10:47:25.443"/>
</kw>
<status status="PASS" starttime="20220307 10:47:19.619" endtime="20220307 10:47:25.443"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:47:25.449" level="INFO">Running command 'ozone sh bucket link 85389-source/unreadable-bucket 85389-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:47:33.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:47:33.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:47:25.445" endtime="20220307 10:47:33.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:47:33.774" level="INFO"/>
<status status="PASS" starttime="20220307 10:47:33.773" endtime="20220307 10:47:33.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:47:33.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:47:33.774" endtime="20220307 10:47:33.775"/>
</kw>
<status status="PASS" starttime="20220307 10:47:25.444" endtime="20220307 10:47:33.775"/>
</kw>
<msg timestamp="20220307 10:47:33.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:47:25.444" endtime="20220307 10:47:33.776"/>
</kw>
<status status="PASS" starttime="20220307 10:47:25.443" endtime="20220307 10:47:33.776"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:47:33.782" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 85389-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:47:41.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:47:41.719" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:47:33.778" endtime="20220307 10:47:41.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:47:41.720" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:47:41.720" endtime="20220307 10:47:41.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:47:41.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:47:41.720" endtime="20220307 10:47:41.722"/>
</kw>
<status status="PASS" starttime="20220307 10:47:33.777" endtime="20220307 10:47:41.722"/>
</kw>
<msg timestamp="20220307 10:47:41.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:47:33.777" endtime="20220307 10:47:41.723"/>
</kw>
<status status="PASS" starttime="20220307 10:47:33.776" endtime="20220307 10:47:41.723"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:47:41.727" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 85389-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:47:47.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:47:47.383" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:47:41.725" endtime="20220307 10:47:47.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:47:47.385" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:47:47.384" endtime="20220307 10:47:47.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:47:47.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:47:47.385" endtime="20220307 10:47:47.386"/>
</kw>
<status status="PASS" starttime="20220307 10:47:41.724" endtime="20220307 10:47:47.386"/>
</kw>
<msg timestamp="20220307 10:47:47.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:47:41.724" endtime="20220307 10:47:47.388"/>
</kw>
<status status="PASS" starttime="20220307 10:47:41.723" endtime="20220307 10:47:47.389"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:47:47.397" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 85389-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:47:55.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:47:55.116" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:47:47.393" endtime="20220307 10:47:55.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:47:55.117" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:47:55.117" endtime="20220307 10:47:55.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:47:55.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:47:55.117" endtime="20220307 10:47:55.118"/>
</kw>
<status status="PASS" starttime="20220307 10:47:47.392" endtime="20220307 10:47:55.118"/>
</kw>
<msg timestamp="20220307 10:47:55.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:47:47.392" endtime="20220307 10:47:55.119"/>
</kw>
<status status="PASS" starttime="20220307 10:47:47.390" endtime="20220307 10:47:55.119"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:47:55.126" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 85389-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:48:03.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:48:03.575" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:47:55.123" endtime="20220307 10:48:03.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:48:03.576" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:48:03.576" endtime="20220307 10:48:03.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:48:03.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:48:03.577" endtime="20220307 10:48:03.577"/>
</kw>
<status status="PASS" starttime="20220307 10:47:55.122" endtime="20220307 10:48:03.578"/>
</kw>
<msg timestamp="20220307 10:48:03.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:47:55.122" endtime="20220307 10:48:03.578"/>
</kw>
<status status="PASS" starttime="20220307 10:47:55.121" endtime="20220307 10:48:03.578"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:48:03.583" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 85389-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:48:09.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:48:09.741" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:48:03.581" endtime="20220307 10:48:09.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:48:09.743" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:48:09.742" endtime="20220307 10:48:09.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:48:09.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:48:09.743" endtime="20220307 10:48:09.744"/>
</kw>
<status status="PASS" starttime="20220307 10:48:03.580" endtime="20220307 10:48:09.744"/>
</kw>
<msg timestamp="20220307 10:48:09.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:48:03.579" endtime="20220307 10:48:09.745"/>
</kw>
<status status="PASS" starttime="20220307 10:48:03.579" endtime="20220307 10:48:09.745"/>
</kw>
<status status="PASS" starttime="20220307 10:43:42.529" endtime="20220307 10:48:09.746"/>
</kw>
<status status="PASS" starttime="20220307 10:43:42.529" endtime="20220307 10:48:09.746"/>
</kw>
<status status="PASS" starttime="20220307 10:43:27.324" endtime="20220307 10:48:09.746"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:48:09.759" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:48:09.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:48:09.765" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:48:09.753" endtime="20220307 10:48:09.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:48:09.768" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:48:09.767" endtime="20220307 10:48:09.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:48:09.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:48:09.768" endtime="20220307 10:48:09.770"/>
</kw>
<status status="PASS" starttime="20220307 10:48:09.752" endtime="20220307 10:48:09.770"/>
</kw>
<msg timestamp="20220307 10:48:09.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:48:09.751" endtime="20220307 10:48:09.772"/>
</kw>
<msg timestamp="20220307 10:48:09.772" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:48:09.750" endtime="20220307 10:48:09.773"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:48:09.776" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:48:09.773" endtime="20220307 10:48:09.776"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:48:09.783" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:48:09.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:48:09.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:48:09.780" endtime="20220307 10:48:09.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:48:09.834" level="INFO"/>
<status status="PASS" starttime="20220307 10:48:09.833" endtime="20220307 10:48:09.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:48:09.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:48:09.834" endtime="20220307 10:48:09.835"/>
</kw>
<status status="PASS" starttime="20220307 10:48:09.779" endtime="20220307 10:48:09.836"/>
</kw>
<msg timestamp="20220307 10:48:09.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:48:09.778" endtime="20220307 10:48:09.837"/>
</kw>
<status status="PASS" starttime="20220307 10:48:09.777" endtime="20220307 10:48:09.837"/>
</kw>
<status status="PASS" starttime="20220307 10:48:09.777" endtime="20220307 10:48:09.837"/>
</kw>
<status status="PASS" starttime="20220307 10:48:09.749" endtime="20220307 10:48:09.837"/>
</kw>
<status status="PASS" starttime="20220307 10:48:09.748" endtime="20220307 10:48:09.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:48:09.843" level="INFO">Running command 'ozone sh bucket link 85389-source/no-such-bucket 85389-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:48:15.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:48:15.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:48:09.840" endtime="20220307 10:48:15.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:48:15.973" level="INFO"/>
<status status="PASS" starttime="20220307 10:48:15.972" endtime="20220307 10:48:15.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:48:15.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:48:15.974" endtime="20220307 10:48:15.975"/>
</kw>
<status status="PASS" starttime="20220307 10:48:09.839" endtime="20220307 10:48:15.975"/>
</kw>
<msg timestamp="20220307 10:48:15.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:48:09.839" endtime="20220307 10:48:15.976"/>
</kw>
<status status="PASS" starttime="20220307 10:48:09.838" endtime="20220307 10:48:15.977"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:48:15.981" level="INFO">Running command 'ozone sh key list 85389-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:48:23.784" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 10:48:23.784" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220307 10:48:15.978" endtime="20220307 10:48:23.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:48:23.787" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220307 10:48:23.785" endtime="20220307 10:48:23.787"/>
</kw>
<msg timestamp="20220307 10:48:23.788" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220307 10:48:15.977" endtime="20220307 10:48:23.788"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:48:23.788" endtime="20220307 10:48:23.789"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:48:09.746" endtime="20220307 10:48:23.789"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:48:23.799" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:48:23.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:48:23.806" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:48:23.795" endtime="20220307 10:48:23.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:48:23.808" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:48:23.807" endtime="20220307 10:48:23.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:48:23.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:48:23.808" endtime="20220307 10:48:23.809"/>
</kw>
<status status="PASS" starttime="20220307 10:48:23.794" endtime="20220307 10:48:23.809"/>
</kw>
<msg timestamp="20220307 10:48:23.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:48:23.794" endtime="20220307 10:48:23.810"/>
</kw>
<msg timestamp="20220307 10:48:23.811" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:48:23.793" endtime="20220307 10:48:23.811"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:48:23.812" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:48:23.811" endtime="20220307 10:48:23.812"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:48:23.818" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:48:23.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:48:23.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:48:23.815" endtime="20220307 10:48:23.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:48:23.831" level="INFO"/>
<status status="PASS" starttime="20220307 10:48:23.829" endtime="20220307 10:48:23.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:48:23.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:48:23.831" endtime="20220307 10:48:23.832"/>
</kw>
<status status="PASS" starttime="20220307 10:48:23.814" endtime="20220307 10:48:23.832"/>
</kw>
<msg timestamp="20220307 10:48:23.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:48:23.814" endtime="20220307 10:48:23.833"/>
</kw>
<status status="PASS" starttime="20220307 10:48:23.813" endtime="20220307 10:48:23.833"/>
</kw>
<status status="PASS" starttime="20220307 10:48:23.812" endtime="20220307 10:48:23.833"/>
</kw>
<status status="PASS" starttime="20220307 10:48:23.792" endtime="20220307 10:48:23.833"/>
</kw>
<status status="PASS" starttime="20220307 10:48:23.791" endtime="20220307 10:48:23.833"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:48:23.842" level="INFO">Running command 'ozone sh bucket link 85389-source/bucket1 85389-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:48:31.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:48:31.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:48:23.836" endtime="20220307 10:48:31.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:48:31.477" level="INFO"/>
<status status="PASS" starttime="20220307 10:48:31.475" endtime="20220307 10:48:31.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:48:31.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:48:31.477" endtime="20220307 10:48:31.478"/>
</kw>
<status status="PASS" starttime="20220307 10:48:23.835" endtime="20220307 10:48:31.478"/>
</kw>
<msg timestamp="20220307 10:48:31.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:48:23.835" endtime="20220307 10:48:31.479"/>
</kw>
<status status="PASS" starttime="20220307 10:48:23.834" endtime="20220307 10:48:31.479"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:48:31.486" level="INFO">Running command 'ozone sh bucket create 85389-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:48:37.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:48:37.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:48:31.482" endtime="20220307 10:48:37.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:48:37.988" level="INFO"/>
<status status="PASS" starttime="20220307 10:48:37.987" endtime="20220307 10:48:37.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:48:37.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:48:37.989" endtime="20220307 10:48:37.991"/>
</kw>
<status status="PASS" starttime="20220307 10:48:31.481" endtime="20220307 10:48:37.991"/>
</kw>
<msg timestamp="20220307 10:48:37.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:48:31.480" endtime="20220307 10:48:37.993"/>
</kw>
<status status="PASS" starttime="20220307 10:48:31.479" endtime="20220307 10:48:37.993"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:48:38.001" level="INFO">Running command 'ozone sh key put 85389-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:50:23.791" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220307 10:48:37.997" endtime="20220307 10:50:23.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220307 10:50:23.791" endtime="20220307 10:50:23.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220307 10:50:23.792" endtime="20220307 10:50:23.792"/>
</kw>
<status status="FAIL" starttime="20220307 10:48:37.996" endtime="20220307 10:50:23.792"/>
</kw>
<msg timestamp="20220307 10:50:23.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220307 10:48:37.995" endtime="20220307 10:50:23.793"/>
</kw>
<status status="FAIL" starttime="20220307 10:48:37.994" endtime="20220307 10:50:23.793"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20220307 10:50:23.793" endtime="20220307 10:50:23.794"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220307 10:48:23.790" endtime="20220307 10:50:23.794">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:50:23.808" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:50:23.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:50:23.813" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:50:23.805" endtime="20220307 10:50:23.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:50:23.814" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:50:23.813" endtime="20220307 10:50:23.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:50:23.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:50:23.814" endtime="20220307 10:50:23.815"/>
</kw>
<status status="PASS" starttime="20220307 10:50:23.805" endtime="20220307 10:50:23.816"/>
</kw>
<msg timestamp="20220307 10:50:23.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:50:23.804" endtime="20220307 10:50:23.816"/>
</kw>
<msg timestamp="20220307 10:50:23.817" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:50:23.799" endtime="20220307 10:50:23.817"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:50:23.817" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:50:23.817" endtime="20220307 10:50:23.818"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:50:23.827" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:50:23.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:50:23.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:50:23.823" endtime="20220307 10:50:23.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:50:23.849" level="INFO"/>
<status status="PASS" starttime="20220307 10:50:23.844" endtime="20220307 10:50:23.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:50:23.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:50:23.850" endtime="20220307 10:50:23.851"/>
</kw>
<status status="PASS" starttime="20220307 10:50:23.823" endtime="20220307 10:50:23.852"/>
</kw>
<msg timestamp="20220307 10:50:23.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:50:23.822" endtime="20220307 10:50:23.852"/>
</kw>
<status status="PASS" starttime="20220307 10:50:23.818" endtime="20220307 10:50:23.853"/>
</kw>
<status status="PASS" starttime="20220307 10:50:23.818" endtime="20220307 10:50:23.853"/>
</kw>
<status status="PASS" starttime="20220307 10:50:23.797" endtime="20220307 10:50:23.853"/>
</kw>
<status status="PASS" starttime="20220307 10:50:23.796" endtime="20220307 10:50:23.853"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:50:23.857" level="INFO">Running command 'ozone sh key put 85389-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:23.796" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220307 10:50:23.855" endtime="20220307 10:52:23.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220307 10:52:23.797" endtime="20220307 10:52:23.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220307 10:52:23.797" endtime="20220307 10:52:23.798"/>
</kw>
<status status="FAIL" starttime="20220307 10:50:23.854" endtime="20220307 10:52:23.798"/>
</kw>
<msg timestamp="20220307 10:52:23.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220307 10:50:23.854" endtime="20220307 10:52:23.799"/>
</kw>
<status status="FAIL" starttime="20220307 10:50:23.853" endtime="20220307 10:52:23.799"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220307 10:52:23.800" endtime="20220307 10:52:23.800"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220307 10:50:23.795" endtime="20220307 10:52:23.800">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:23.807" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:23.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:23.812" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:52:23.804" endtime="20220307 10:52:23.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:23.814" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:52:23.813" endtime="20220307 10:52:23.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:23.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:23.815" endtime="20220307 10:52:23.816"/>
</kw>
<status status="PASS" starttime="20220307 10:52:23.804" endtime="20220307 10:52:23.816"/>
</kw>
<msg timestamp="20220307 10:52:23.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:23.804" endtime="20220307 10:52:23.817"/>
</kw>
<msg timestamp="20220307 10:52:23.818" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:52:23.803" endtime="20220307 10:52:23.818"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:52:23.819" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:52:23.818" endtime="20220307 10:52:23.819"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:23.826" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:23.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:23.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:52:23.824" endtime="20220307 10:52:23.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:23.840" level="INFO"/>
<status status="PASS" starttime="20220307 10:52:23.838" endtime="20220307 10:52:23.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:23.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:23.840" endtime="20220307 10:52:23.841"/>
</kw>
<status status="PASS" starttime="20220307 10:52:23.823" endtime="20220307 10:52:23.842"/>
</kw>
<msg timestamp="20220307 10:52:23.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:23.821" endtime="20220307 10:52:23.842"/>
</kw>
<status status="PASS" starttime="20220307 10:52:23.820" endtime="20220307 10:52:23.843"/>
</kw>
<status status="PASS" starttime="20220307 10:52:23.820" endtime="20220307 10:52:23.843"/>
</kw>
<status status="PASS" starttime="20220307 10:52:23.802" endtime="20220307 10:52:23.843"/>
</kw>
<status status="PASS" starttime="20220307 10:52:23.802" endtime="20220307 10:52:23.844"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:23.848" level="INFO">Running command 'ozone sh key list 85389-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:32.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:32.347" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220307 10:52:23.846" endtime="20220307 10:52:32.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:32.348" level="INFO">key1</msg>
<status status="PASS" starttime="20220307 10:52:32.347" endtime="20220307 10:52:32.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:32.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:32.349" endtime="20220307 10:52:32.350"/>
</kw>
<status status="PASS" starttime="20220307 10:52:23.845" endtime="20220307 10:52:32.350"/>
</kw>
<msg timestamp="20220307 10:52:32.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:23.845" endtime="20220307 10:52:32.351"/>
</kw>
<msg timestamp="20220307 10:52:32.352" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20220307 10:52:23.844" endtime="20220307 10:52:32.352"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:32.358" level="INFO">Running command 'ozone sh key list 85389-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:38.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:38.920" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220307 10:52:32.355" endtime="20220307 10:52:38.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:38.922" level="INFO">key1</msg>
<status status="PASS" starttime="20220307 10:52:38.921" endtime="20220307 10:52:38.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:38.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:38.922" endtime="20220307 10:52:38.923"/>
</kw>
<status status="PASS" starttime="20220307 10:52:32.354" endtime="20220307 10:52:38.924"/>
</kw>
<msg timestamp="20220307 10:52:38.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:32.353" endtime="20220307 10:52:38.924"/>
</kw>
<msg timestamp="20220307 10:52:38.925" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20220307 10:52:32.352" endtime="20220307 10:52:38.925"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:52:38.925" endtime="20220307 10:52:38.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:52:38.926" endtime="20220307 10:52:38.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220307 10:52:38.927" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20220307 10:52:38.926" endtime="20220307 10:52:38.927"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220307 10:52:23.801" endtime="20220307 10:52:38.928">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:38.936" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:38.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:38.942" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:52:38.933" endtime="20220307 10:52:38.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:38.944" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:52:38.943" endtime="20220307 10:52:38.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:38.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:38.944" endtime="20220307 10:52:38.945"/>
</kw>
<status status="PASS" starttime="20220307 10:52:38.933" endtime="20220307 10:52:38.945"/>
</kw>
<msg timestamp="20220307 10:52:38.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:38.933" endtime="20220307 10:52:38.946"/>
</kw>
<msg timestamp="20220307 10:52:38.947" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:52:38.932" endtime="20220307 10:52:38.947"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:52:38.947" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:52:38.947" endtime="20220307 10:52:38.948"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:38.957" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:38.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:38.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:52:38.950" endtime="20220307 10:52:38.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:38.968" level="INFO"/>
<status status="PASS" starttime="20220307 10:52:38.968" endtime="20220307 10:52:38.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:38.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:38.969" endtime="20220307 10:52:38.969"/>
</kw>
<status status="PASS" starttime="20220307 10:52:38.950" endtime="20220307 10:52:38.970"/>
</kw>
<msg timestamp="20220307 10:52:38.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:38.949" endtime="20220307 10:52:38.970"/>
</kw>
<status status="PASS" starttime="20220307 10:52:38.948" endtime="20220307 10:52:38.971"/>
</kw>
<status status="PASS" starttime="20220307 10:52:38.948" endtime="20220307 10:52:38.971"/>
</kw>
<status status="PASS" starttime="20220307 10:52:38.931" endtime="20220307 10:52:38.971"/>
</kw>
<status status="PASS" starttime="20220307 10:52:38.931" endtime="20220307 10:52:38.971"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:38.977" level="INFO">Running command 'ozone sh key delete 85389-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:45.433" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 10:52:45.434" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20220307 10:52:38.974" endtime="20220307 10:52:45.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:45.437" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20220307 10:52:45.435" endtime="20220307 10:52:45.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:45.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20220307 10:52:45.439" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20220307 10:52:45.437" endtime="20220307 10:52:45.439"/>
</kw>
<status status="FAIL" starttime="20220307 10:52:38.973" endtime="20220307 10:52:45.440"/>
</kw>
<msg timestamp="20220307 10:52:45.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220307 10:52:38.973" endtime="20220307 10:52:45.441"/>
</kw>
<status status="FAIL" starttime="20220307 10:52:38.971" endtime="20220307 10:52:45.441"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220307 10:52:45.442" endtime="20220307 10:52:45.442"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 10:52:45.442" endtime="20220307 10:52:45.442"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220307 10:52:38.929" endtime="20220307 10:52:45.443">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:45.450" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:45.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:45.454" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:52:45.448" endtime="20220307 10:52:45.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:45.455" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:52:45.454" endtime="20220307 10:52:45.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:45.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:45.456" endtime="20220307 10:52:45.456"/>
</kw>
<status status="PASS" starttime="20220307 10:52:45.447" endtime="20220307 10:52:45.457"/>
</kw>
<msg timestamp="20220307 10:52:45.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:45.447" endtime="20220307 10:52:45.457"/>
</kw>
<msg timestamp="20220307 10:52:45.458" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:52:45.446" endtime="20220307 10:52:45.458"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:52:45.458" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:52:45.458" endtime="20220307 10:52:45.458"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:45.462" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:45.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:45.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:52:45.460" endtime="20220307 10:52:45.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:45.477" level="INFO"/>
<status status="PASS" starttime="20220307 10:52:45.476" endtime="20220307 10:52:45.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:45.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:45.478" endtime="20220307 10:52:45.478"/>
</kw>
<status status="PASS" starttime="20220307 10:52:45.460" endtime="20220307 10:52:45.479"/>
</kw>
<msg timestamp="20220307 10:52:45.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:45.460" endtime="20220307 10:52:45.479"/>
</kw>
<status status="PASS" starttime="20220307 10:52:45.459" endtime="20220307 10:52:45.480"/>
</kw>
<status status="PASS" starttime="20220307 10:52:45.458" endtime="20220307 10:52:45.480"/>
</kw>
<status status="PASS" starttime="20220307 10:52:45.446" endtime="20220307 10:52:45.480"/>
</kw>
<status status="PASS" starttime="20220307 10:52:45.445" endtime="20220307 10:52:45.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:45.488" level="INFO">Running command 'ozone sh bucket list 85389-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:53.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:53.949" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220307 10:52:45.484" endtime="20220307 10:52:53.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:53.951" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:48:15.635Z",
  "modificationTime" : "2022-03-07T10:48:15.635Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:47:33.366Z",
  "modificationTime" : "2022-03-07T10:48:09.503Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:48:31.264Z",
  "modificationTime" : "2022-03-07T10:48:31.264Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:47:19.382Z",
  "modificationTime" : "2022-03-07T10:48:03.221Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:47:25.302Z",
  "modificationTime" : "2022-03-07T10:47:25.302Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220307 10:52:53.950" endtime="20220307 10:52:53.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:53.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:53.951" endtime="20220307 10:52:53.952"/>
</kw>
<status status="PASS" starttime="20220307 10:52:45.483" endtime="20220307 10:52:53.953"/>
</kw>
<msg timestamp="20220307 10:52:53.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:45.481" endtime="20220307 10:52:53.955"/>
</kw>
<msg timestamp="20220307 10:52:53.955" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220307 10:52:45.480" endtime="20220307 10:52:53.955"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:52:53.955" endtime="20220307 10:52:53.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:52:53.956" endtime="20220307 10:52:53.957"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:52:45.443" endtime="20220307 10:52:53.958"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:53.967" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:53.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:53.975" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:52:53.964" endtime="20220307 10:52:53.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:53.977" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:52:53.976" endtime="20220307 10:52:53.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:53.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:53.977" endtime="20220307 10:52:53.978"/>
</kw>
<status status="PASS" starttime="20220307 10:52:53.963" endtime="20220307 10:52:53.979"/>
</kw>
<msg timestamp="20220307 10:52:53.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:53.962" endtime="20220307 10:52:53.980"/>
</kw>
<msg timestamp="20220307 10:52:53.980" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:52:53.962" endtime="20220307 10:52:53.980"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:52:53.981" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:52:53.980" endtime="20220307 10:52:53.981"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:53.987" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:52:53.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:52:53.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:52:53.984" endtime="20220307 10:52:53.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:52:53.999" level="INFO"/>
<status status="PASS" starttime="20220307 10:52:53.998" endtime="20220307 10:52:53.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:52:54.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:52:53.999" endtime="20220307 10:52:54.000"/>
</kw>
<status status="PASS" starttime="20220307 10:52:53.983" endtime="20220307 10:52:54.001"/>
</kw>
<msg timestamp="20220307 10:52:54.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:53.983" endtime="20220307 10:52:54.001"/>
</kw>
<status status="PASS" starttime="20220307 10:52:53.982" endtime="20220307 10:52:54.002"/>
</kw>
<status status="PASS" starttime="20220307 10:52:53.981" endtime="20220307 10:52:54.002"/>
</kw>
<status status="PASS" starttime="20220307 10:52:53.961" endtime="20220307 10:52:54.002"/>
</kw>
<status status="PASS" starttime="20220307 10:52:53.960" endtime="20220307 10:52:54.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:52:54.008" level="INFO">Running command 'ozone sh bucket info 85389-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:02.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:02.257" level="INFO">${output} = {
  "volumeName" : "85389-target",
  "bucketName" : "link1",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-03-07T10:48:31.264Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220307 10:52:54.005" endtime="20220307 10:53:02.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:02.260" level="INFO">{
  "volumeName" : "85389-target",
  "bucketName" : "link1",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-03-07T10:48:31.264Z",
  "modificationTime" : "2022-03-07T10:48:31.264Z"
}</msg>
<status status="PASS" starttime="20220307 10:53:02.258" endtime="20220307 10:53:02.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:02.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:02.260" endtime="20220307 10:53:02.261"/>
</kw>
<status status="PASS" starttime="20220307 10:52:54.005" endtime="20220307 10:53:02.261"/>
</kw>
<msg timestamp="20220307 10:53:02.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:52:54.004" endtime="20220307 10:53:02.262"/>
</kw>
<msg timestamp="20220307 10:53:02.263" level="INFO">${result} = {
  "volumeName" : "85389-target",
  "bucketName" : "link1",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-03-07T10:48:31.264Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220307 10:52:54.003" endtime="20220307 10:53:02.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:53:02.263" endtime="20220307 10:53:02.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:53:02.264" endtime="20220307 10:53:02.265"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:53:02.265" endtime="20220307 10:53:02.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:53:02.266" endtime="20220307 10:53:02.267"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:53:02.267" endtime="20220307 10:53:02.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:53:02.268" endtime="20220307 10:53:02.268"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:53:02.269" endtime="20220307 10:53:02.269"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:52:53.959" endtime="20220307 10:53:02.270"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:02.279" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:02.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:02.287" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:53:02.276" endtime="20220307 10:53:02.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:02.288" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:53:02.288" endtime="20220307 10:53:02.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:02.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:02.289" endtime="20220307 10:53:02.290"/>
</kw>
<status status="PASS" starttime="20220307 10:53:02.275" endtime="20220307 10:53:02.290"/>
</kw>
<msg timestamp="20220307 10:53:02.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:02.275" endtime="20220307 10:53:02.292"/>
</kw>
<msg timestamp="20220307 10:53:02.292" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:53:02.274" endtime="20220307 10:53:02.292"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:53:02.295" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:53:02.294" endtime="20220307 10:53:02.295"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:02.302" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:02.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:02.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:53:02.299" endtime="20220307 10:53:02.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:02.317" level="INFO"/>
<status status="PASS" starttime="20220307 10:53:02.316" endtime="20220307 10:53:02.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:02.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:02.318" endtime="20220307 10:53:02.319"/>
</kw>
<status status="PASS" starttime="20220307 10:53:02.298" endtime="20220307 10:53:02.320"/>
</kw>
<msg timestamp="20220307 10:53:02.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:02.297" endtime="20220307 10:53:02.322"/>
</kw>
<status status="PASS" starttime="20220307 10:53:02.296" endtime="20220307 10:53:02.323"/>
</kw>
<status status="PASS" starttime="20220307 10:53:02.295" endtime="20220307 10:53:02.323"/>
</kw>
<status status="PASS" starttime="20220307 10:53:02.273" endtime="20220307 10:53:02.324"/>
</kw>
<status status="PASS" starttime="20220307 10:53:02.273" endtime="20220307 10:53:02.324"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:02.328" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 85389-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:11.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:11.100" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:53:02.326" endtime="20220307 10:53:11.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:11.105" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:53:11.100" endtime="20220307 10:53:11.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:11.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:11.105" endtime="20220307 10:53:11.106"/>
</kw>
<status status="PASS" starttime="20220307 10:53:02.325" endtime="20220307 10:53:11.106"/>
</kw>
<msg timestamp="20220307 10:53:11.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:02.325" endtime="20220307 10:53:11.107"/>
</kw>
<status status="PASS" starttime="20220307 10:53:02.324" endtime="20220307 10:53:11.107"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:11.117" level="INFO">Running command 'ozone sh bucket getacl 85389-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:19.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:19.647" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220307 10:53:11.115" endtime="20220307 10:53:19.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:19.649" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220307 10:53:19.648" endtime="20220307 10:53:19.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:19.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:19.650" endtime="20220307 10:53:19.652"/>
</kw>
<status status="PASS" starttime="20220307 10:53:11.114" endtime="20220307 10:53:19.653"/>
</kw>
<msg timestamp="20220307 10:53:19.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:11.113" endtime="20220307 10:53:19.655"/>
</kw>
<msg timestamp="20220307 10:53:19.656" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220307 10:53:11.108" endtime="20220307 10:53:19.656"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:53:19.656" endtime="20220307 10:53:19.657"/>
</kw>
<status status="PASS" starttime="20220307 10:53:11.107" endtime="20220307 10:53:19.658"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:19.672" level="INFO">Running command 'ozone sh bucket getacl 85389-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:26.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:26.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:53:19.667" endtime="20220307 10:53:26.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:26.245" level="INFO"/>
<status status="PASS" starttime="20220307 10:53:26.244" endtime="20220307 10:53:26.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:26.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:26.245" endtime="20220307 10:53:26.247"/>
</kw>
<status status="PASS" starttime="20220307 10:53:19.665" endtime="20220307 10:53:26.247"/>
</kw>
<msg timestamp="20220307 10:53:26.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:19.664" endtime="20220307 10:53:26.248"/>
</kw>
<msg timestamp="20220307 10:53:26.249" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220307 10:53:19.662" endtime="20220307 10:53:26.249"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:53:26.249" endtime="20220307 10:53:26.250"/>
</kw>
<status status="PASS" starttime="20220307 10:53:19.658" endtime="20220307 10:53:26.250"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:26.255" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 85389-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:32.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:32.910" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:53:26.253" endtime="20220307 10:53:32.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:32.911" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 10:53:32.911" endtime="20220307 10:53:32.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:32.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:32.912" endtime="20220307 10:53:32.913"/>
</kw>
<status status="PASS" starttime="20220307 10:53:26.252" endtime="20220307 10:53:32.913"/>
</kw>
<msg timestamp="20220307 10:53:32.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:26.252" endtime="20220307 10:53:32.914"/>
</kw>
<status status="PASS" starttime="20220307 10:53:26.250" endtime="20220307 10:53:32.914"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:32.921" level="INFO">Running command 'ozone sh bucket getacl 85389-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:41.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:41.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:53:32.917" endtime="20220307 10:53:41.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:41.810" level="INFO"/>
<status status="PASS" starttime="20220307 10:53:41.809" endtime="20220307 10:53:41.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:41.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:41.810" endtime="20220307 10:53:41.811"/>
</kw>
<status status="PASS" starttime="20220307 10:53:32.917" endtime="20220307 10:53:41.812"/>
</kw>
<msg timestamp="20220307 10:53:41.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:32.916" endtime="20220307 10:53:41.813"/>
</kw>
<msg timestamp="20220307 10:53:41.813" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220307 10:53:32.915" endtime="20220307 10:53:41.813"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:53:41.814" endtime="20220307 10:53:41.814"/>
</kw>
<status status="PASS" starttime="20220307 10:53:32.914" endtime="20220307 10:53:41.815"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:41.821" level="INFO">Running command 'ozone sh bucket getacl 85389-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:50.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:50.550" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20220307 10:53:41.818" endtime="20220307 10:53:50.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:50.553" level="INFO">READ</msg>
<status status="PASS" starttime="20220307 10:53:50.551" endtime="20220307 10:53:50.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:50.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:50.554" endtime="20220307 10:53:50.555"/>
</kw>
<status status="PASS" starttime="20220307 10:53:41.817" endtime="20220307 10:53:50.556"/>
</kw>
<msg timestamp="20220307 10:53:50.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:41.817" endtime="20220307 10:53:50.557"/>
</kw>
<msg timestamp="20220307 10:53:50.558" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20220307 10:53:41.816" endtime="20220307 10:53:50.558"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:53:50.558" endtime="20220307 10:53:50.560"/>
</kw>
<status status="PASS" starttime="20220307 10:53:41.815" endtime="20220307 10:53:50.560"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:53:02.271" endtime="20220307 10:53:50.561"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:50.575" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:50.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:50.580" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:53:50.571" endtime="20220307 10:53:50.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:50.582" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:53:50.580" endtime="20220307 10:53:50.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:50.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:50.582" endtime="20220307 10:53:50.583"/>
</kw>
<status status="PASS" starttime="20220307 10:53:50.570" endtime="20220307 10:53:50.583"/>
</kw>
<msg timestamp="20220307 10:53:50.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:50.569" endtime="20220307 10:53:50.584"/>
</kw>
<msg timestamp="20220307 10:53:50.585" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:53:50.568" endtime="20220307 10:53:50.585"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:53:50.586" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:53:50.585" endtime="20220307 10:53:50.586"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:50.593" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:50.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:50.645" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:53:50.590" endtime="20220307 10:53:50.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:50.647" level="INFO"/>
<status status="PASS" starttime="20220307 10:53:50.646" endtime="20220307 10:53:50.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:50.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:50.647" endtime="20220307 10:53:50.648"/>
</kw>
<status status="PASS" starttime="20220307 10:53:50.590" endtime="20220307 10:53:50.648"/>
</kw>
<msg timestamp="20220307 10:53:50.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:50.589" endtime="20220307 10:53:50.649"/>
</kw>
<status status="PASS" starttime="20220307 10:53:50.588" endtime="20220307 10:53:50.649"/>
</kw>
<status status="PASS" starttime="20220307 10:53:50.586" endtime="20220307 10:53:50.649"/>
</kw>
<status status="PASS" starttime="20220307 10:53:50.565" endtime="20220307 10:53:50.649"/>
</kw>
<status status="PASS" starttime="20220307 10:53:50.564" endtime="20220307 10:53:50.649"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:50.653" level="INFO">Running command 'ozone sh bucket link 85389-source/bucket2 85389-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:53:58.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:53:58.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:53:50.651" endtime="20220307 10:53:58.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:53:58.149" level="INFO"/>
<status status="PASS" starttime="20220307 10:53:58.148" endtime="20220307 10:53:58.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:53:58.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:53:58.150" endtime="20220307 10:53:58.150"/>
</kw>
<status status="PASS" starttime="20220307 10:53:50.651" endtime="20220307 10:53:58.151"/>
</kw>
<msg timestamp="20220307 10:53:58.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:53:50.650" endtime="20220307 10:53:58.151"/>
</kw>
<status status="PASS" starttime="20220307 10:53:50.650" endtime="20220307 10:53:58.152"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:53:58.155" level="INFO">Running command 'ozone sh bucket create 85389-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:06.365" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 10:54:06.365" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220307 10:53:58.152" endtime="20220307 10:54:06.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:06.367" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220307 10:54:06.366" endtime="20220307 10:54:06.367"/>
</kw>
<msg timestamp="20220307 10:54:06.367" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220307 10:53:58.152" endtime="20220307 10:54:06.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:54:06.368" endtime="20220307 10:54:06.368"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:06.375" level="INFO">Running command 'ozone sh bucket create 85389-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:14.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:14.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:06.370" endtime="20220307 10:54:14.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:14.591" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:14.590" endtime="20220307 10:54:14.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:14.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:14.591" endtime="20220307 10:54:14.591"/>
</kw>
<status status="PASS" starttime="20220307 10:54:06.370" endtime="20220307 10:54:14.592"/>
</kw>
<msg timestamp="20220307 10:54:14.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:06.369" endtime="20220307 10:54:14.593"/>
</kw>
<status status="PASS" starttime="20220307 10:54:06.368" endtime="20220307 10:54:14.594"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:14.601" level="INFO">Running command 'ozone sh bucket link 85389-source/bucket1 85389-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:21.990" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 10:54:21.990" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220307 10:54:14.596" endtime="20220307 10:54:21.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:21.991" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220307 10:54:21.991" endtime="20220307 10:54:21.992"/>
</kw>
<msg timestamp="20220307 10:54:21.992" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220307 10:54:14.595" endtime="20220307 10:54:21.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:54:21.992" endtime="20220307 10:54:21.993"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:53:50.562" endtime="20220307 10:54:21.993"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:22.001" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:22.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:22.005" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:54:21.998" endtime="20220307 10:54:22.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:22.006" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:54:22.005" endtime="20220307 10:54:22.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:22.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:22.006" endtime="20220307 10:54:22.007"/>
</kw>
<status status="PASS" starttime="20220307 10:54:21.998" endtime="20220307 10:54:22.008"/>
</kw>
<msg timestamp="20220307 10:54:22.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:21.997" endtime="20220307 10:54:22.009"/>
</kw>
<msg timestamp="20220307 10:54:22.009" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:54:21.997" endtime="20220307 10:54:22.009"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:54:22.010" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:54:22.009" endtime="20220307 10:54:22.010"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:22.015" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:22.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:22.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:22.013" endtime="20220307 10:54:22.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:22.040" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:22.039" endtime="20220307 10:54:22.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:22.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:22.040" endtime="20220307 10:54:22.041"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.012" endtime="20220307 10:54:22.041"/>
</kw>
<msg timestamp="20220307 10:54:22.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:22.012" endtime="20220307 10:54:22.042"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.011" endtime="20220307 10:54:22.042"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.010" endtime="20220307 10:54:22.042"/>
</kw>
<status status="PASS" starttime="20220307 10:54:21.996" endtime="20220307 10:54:22.042"/>
</kw>
<status status="PASS" starttime="20220307 10:54:21.995" endtime="20220307 10:54:22.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:22.048" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:22.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:22.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:22.045" endtime="20220307 10:54:22.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:22.055" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:22.054" endtime="20220307 10:54:22.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:22.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:22.056" endtime="20220307 10:54:22.057"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.045" endtime="20220307 10:54:22.057"/>
</kw>
<msg timestamp="20220307 10:54:22.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:22.044" endtime="20220307 10:54:22.058"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.044" endtime="20220307 10:54:22.058"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:22.062" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:22.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:22.066" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:54:22.060" endtime="20220307 10:54:22.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:22.068" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:54:22.067" endtime="20220307 10:54:22.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:22.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:22.068" endtime="20220307 10:54:22.069"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.060" endtime="20220307 10:54:22.070"/>
</kw>
<msg timestamp="20220307 10:54:22.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:22.059" endtime="20220307 10:54:22.071"/>
</kw>
<msg timestamp="20220307 10:54:22.071" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:54:22.059" endtime="20220307 10:54:22.071"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:54:22.072" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:54:22.071" endtime="20220307 10:54:22.072"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:22.077" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:22.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:22.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:22.075" endtime="20220307 10:54:22.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:22.088" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:22.088" endtime="20220307 10:54:22.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:22.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:22.089" endtime="20220307 10:54:22.089"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.074" endtime="20220307 10:54:22.090"/>
</kw>
<msg timestamp="20220307 10:54:22.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:22.074" endtime="20220307 10:54:22.091"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.073" endtime="20220307 10:54:22.091"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.072" endtime="20220307 10:54:22.091"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.058" endtime="20220307 10:54:22.091"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.058" endtime="20220307 10:54:22.091"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:22.094" level="INFO">Running command 'ozone sh key list 85389-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:28.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:28.595" level="INFO">${output} = [ {
  "volumeName" : "85389-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-03-07T10:43:58.414Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220307 10:54:22.092" endtime="20220307 10:54:28.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:28.597" level="INFO">[ {
  "volumeName" : "85389-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-03-07T10:43:58.414Z",
  "modificationTime" : "2022-03-07T10:47:02.620Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20220307 10:54:28.596" endtime="20220307 10:54:28.598"/>
</kw>
<msg timestamp="20220307 10:54:28.599" level="INFO">${result} = [ {
  "volumeName" : "85389-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-03-07T10:43:58.414Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220307 10:54:22.091" endtime="20220307 10:54:28.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:54:28.599" endtime="20220307 10:54:28.600"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.043" endtime="20220307 10:54:28.601"/>
</kw>
<status status="PASS" starttime="20220307 10:54:22.043" endtime="20220307 10:54:28.601"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:54:21.994" endtime="20220307 10:54:28.602"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:28.615" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:28.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:28.620" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:54:28.611" endtime="20220307 10:54:28.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:28.623" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:54:28.621" endtime="20220307 10:54:28.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:28.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:28.624" endtime="20220307 10:54:28.624"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.609" endtime="20220307 10:54:28.625"/>
</kw>
<msg timestamp="20220307 10:54:28.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:28.608" endtime="20220307 10:54:28.626"/>
</kw>
<msg timestamp="20220307 10:54:28.626" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:54:28.606" endtime="20220307 10:54:28.626"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:54:28.627" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:54:28.626" endtime="20220307 10:54:28.627"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:28.632" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:28.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:28.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:28.630" endtime="20220307 10:54:28.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:28.641" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:28.641" endtime="20220307 10:54:28.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:28.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:28.642" endtime="20220307 10:54:28.642"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.629" endtime="20220307 10:54:28.643"/>
</kw>
<msg timestamp="20220307 10:54:28.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:28.629" endtime="20220307 10:54:28.644"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.628" endtime="20220307 10:54:28.644"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.628" endtime="20220307 10:54:28.644"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.605" endtime="20220307 10:54:28.645"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.604" endtime="20220307 10:54:28.645"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:28.650" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:28.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:28.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:28.647" endtime="20220307 10:54:28.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:28.657" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:28.656" endtime="20220307 10:54:28.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:28.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:28.657" endtime="20220307 10:54:28.658"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.647" endtime="20220307 10:54:28.658"/>
</kw>
<msg timestamp="20220307 10:54:28.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:28.646" endtime="20220307 10:54:28.659"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.646" endtime="20220307 10:54:28.659"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:28.666" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:28.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:28.670" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:54:28.663" endtime="20220307 10:54:28.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:28.671" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:54:28.670" endtime="20220307 10:54:28.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:28.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:28.671" endtime="20220307 10:54:28.672"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.662" endtime="20220307 10:54:28.672"/>
</kw>
<msg timestamp="20220307 10:54:28.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:28.661" endtime="20220307 10:54:28.673"/>
</kw>
<msg timestamp="20220307 10:54:28.674" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:54:28.661" endtime="20220307 10:54:28.674"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:54:28.675" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:54:28.674" endtime="20220307 10:54:28.675"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:28.680" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:28.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:28.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:28.678" endtime="20220307 10:54:28.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:28.692" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:28.691" endtime="20220307 10:54:28.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:28.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:28.692" endtime="20220307 10:54:28.693"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.677" endtime="20220307 10:54:28.694"/>
</kw>
<msg timestamp="20220307 10:54:28.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:28.677" endtime="20220307 10:54:28.695"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.676" endtime="20220307 10:54:28.696"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.675" endtime="20220307 10:54:28.696"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.660" endtime="20220307 10:54:28.696"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.660" endtime="20220307 10:54:28.696"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:28.699" level="INFO">Running command 'ozone sh key list 85389-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:36.785" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 10:54:36.785" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:85389-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220307 10:54:28.697" endtime="20220307 10:54:36.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:36.788" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:85389-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220307 10:54:36.786" endtime="20220307 10:54:36.788"/>
</kw>
<msg timestamp="20220307 10:54:36.789" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:85389-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220307 10:54:28.696" endtime="20220307 10:54:36.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:54:36.789" endtime="20220307 10:54:36.790"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.645" endtime="20220307 10:54:36.790"/>
</kw>
<status status="PASS" starttime="20220307 10:54:28.645" endtime="20220307 10:54:36.791"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:54:28.603" endtime="20220307 10:54:36.791"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:36.804" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:36.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:36.810" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:54:36.800" endtime="20220307 10:54:36.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:36.813" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:54:36.811" endtime="20220307 10:54:36.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:36.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:36.813" endtime="20220307 10:54:36.815"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.800" endtime="20220307 10:54:36.815"/>
</kw>
<msg timestamp="20220307 10:54:36.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:36.799" endtime="20220307 10:54:36.816"/>
</kw>
<msg timestamp="20220307 10:54:36.817" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:54:36.798" endtime="20220307 10:54:36.817"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:54:36.822" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:54:36.817" endtime="20220307 10:54:36.823"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:36.831" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:36.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:36.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:36.828" endtime="20220307 10:54:36.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:36.846" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:36.844" endtime="20220307 10:54:36.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:36.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:36.846" endtime="20220307 10:54:36.848"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.826" endtime="20220307 10:54:36.848"/>
</kw>
<msg timestamp="20220307 10:54:36.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:36.825" endtime="20220307 10:54:36.850"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.824" endtime="20220307 10:54:36.850"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.823" endtime="20220307 10:54:36.851"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.797" endtime="20220307 10:54:36.851"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.795" endtime="20220307 10:54:36.852"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:36.859" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:36.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:36.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:36.856" endtime="20220307 10:54:36.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:36.868" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:36.867" endtime="20220307 10:54:36.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:36.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:36.868" endtime="20220307 10:54:36.869"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.855" endtime="20220307 10:54:36.869"/>
</kw>
<msg timestamp="20220307 10:54:36.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:36.854" endtime="20220307 10:54:36.870"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.854" endtime="20220307 10:54:36.870"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:36.877" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:36.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:36.883" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:54:36.874" endtime="20220307 10:54:36.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:36.884" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:54:36.883" endtime="20220307 10:54:36.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:36.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:36.884" endtime="20220307 10:54:36.885"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.873" endtime="20220307 10:54:36.885"/>
</kw>
<msg timestamp="20220307 10:54:36.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:36.873" endtime="20220307 10:54:36.886"/>
</kw>
<msg timestamp="20220307 10:54:36.886" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:54:36.872" endtime="20220307 10:54:36.886"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:54:36.888" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:54:36.887" endtime="20220307 10:54:36.888"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:36.894" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:36.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:36.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:36.891" endtime="20220307 10:54:36.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:36.904" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:36.904" endtime="20220307 10:54:36.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:36.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:36.905" endtime="20220307 10:54:36.906"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.890" endtime="20220307 10:54:36.906"/>
</kw>
<msg timestamp="20220307 10:54:36.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:36.889" endtime="20220307 10:54:36.907"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.888" endtime="20220307 10:54:36.907"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.888" endtime="20220307 10:54:36.908"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.871" endtime="20220307 10:54:36.908"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.870" endtime="20220307 10:54:36.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:36.914" level="INFO">Running command 'ozone sh bucket info 85389-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:45.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:45.909" level="INFO">${output} = {
  "volumeName" : "85389-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-03-07T10:47:33.366Z...</msg>
<status status="PASS" starttime="20220307 10:54:36.910" endtime="20220307 10:54:45.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:45.910" level="INFO">{
  "volumeName" : "85389-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-03-07T10:47:33.366Z",
  "modificationTime" : "2022-03-07T10:48:09.503Z"
}</msg>
<status status="PASS" starttime="20220307 10:54:45.909" endtime="20220307 10:54:45.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:45.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:45.911" endtime="20220307 10:54:45.912"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.909" endtime="20220307 10:54:45.913"/>
</kw>
<msg timestamp="20220307 10:54:45.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:36.909" endtime="20220307 10:54:45.915"/>
</kw>
<msg timestamp="20220307 10:54:45.916" level="INFO">${result} = {
  "volumeName" : "85389-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-03-07T10:47:33.366Z...</msg>
<status status="PASS" starttime="20220307 10:54:36.908" endtime="20220307 10:54:45.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:54:45.916" endtime="20220307 10:54:45.917"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:54:45.918" endtime="20220307 10:54:45.918"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:45.925" level="INFO">Running command 'ozone sh key list 85389-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:53.934" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 10:54:53.934" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:85389-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220307 10:54:45.922" endtime="20220307 10:54:53.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:53.937" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:85389-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220307 10:54:53.936" endtime="20220307 10:54:53.937"/>
</kw>
<msg timestamp="20220307 10:54:53.938" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:85389-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220307 10:54:45.919" endtime="20220307 10:54:53.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:54:53.938" endtime="20220307 10:54:53.939"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.853" endtime="20220307 10:54:53.939"/>
</kw>
<status status="PASS" starttime="20220307 10:54:36.852" endtime="20220307 10:54:53.939"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:54:36.793" endtime="20220307 10:54:53.940"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:53.950" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:53.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:53.957" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:54:53.947" endtime="20220307 10:54:53.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:53.959" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:54:53.958" endtime="20220307 10:54:53.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:53.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:53.959" endtime="20220307 10:54:53.960"/>
</kw>
<status status="PASS" starttime="20220307 10:54:53.946" endtime="20220307 10:54:53.960"/>
</kw>
<msg timestamp="20220307 10:54:53.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:53.946" endtime="20220307 10:54:53.961"/>
</kw>
<msg timestamp="20220307 10:54:53.961" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:54:53.945" endtime="20220307 10:54:53.961"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:54:53.962" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:54:53.962" endtime="20220307 10:54:53.962"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:53.969" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:54:53.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:54:53.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:53.966" endtime="20220307 10:54:53.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:54:53.982" level="INFO"/>
<status status="PASS" starttime="20220307 10:54:53.981" endtime="20220307 10:54:53.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:54:53.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:54:53.982" endtime="20220307 10:54:53.983"/>
</kw>
<status status="PASS" starttime="20220307 10:54:53.965" endtime="20220307 10:54:53.984"/>
</kw>
<msg timestamp="20220307 10:54:53.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:53.964" endtime="20220307 10:54:53.985"/>
</kw>
<status status="PASS" starttime="20220307 10:54:53.963" endtime="20220307 10:54:53.986"/>
</kw>
<status status="PASS" starttime="20220307 10:54:53.962" endtime="20220307 10:54:53.986"/>
</kw>
<status status="PASS" starttime="20220307 10:54:53.944" endtime="20220307 10:54:53.986"/>
</kw>
<status status="PASS" starttime="20220307 10:54:53.943" endtime="20220307 10:54:53.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:54:53.992" level="INFO">Running command 'ozone sh bucket link 85389-target/loop1 85389-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:55:02.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:55:02.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:54:53.989" endtime="20220307 10:55:02.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:55:02.076" level="INFO"/>
<status status="PASS" starttime="20220307 10:55:02.073" endtime="20220307 10:55:02.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:55:02.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:55:02.076" endtime="20220307 10:55:02.077"/>
</kw>
<status status="PASS" starttime="20220307 10:54:53.988" endtime="20220307 10:55:02.078"/>
</kw>
<msg timestamp="20220307 10:55:02.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:54:53.988" endtime="20220307 10:55:02.079"/>
</kw>
<status status="PASS" starttime="20220307 10:54:53.986" endtime="20220307 10:55:02.080"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:55:02.089" level="INFO">Running command 'ozone sh bucket link 85389-target/loop2 85389-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:55:10.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:55:10.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:55:02.084" endtime="20220307 10:55:10.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:55:10.470" level="INFO"/>
<status status="PASS" starttime="20220307 10:55:10.468" endtime="20220307 10:55:10.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:55:10.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:55:10.471" endtime="20220307 10:55:10.472"/>
</kw>
<status status="PASS" starttime="20220307 10:55:02.083" endtime="20220307 10:55:10.473"/>
</kw>
<msg timestamp="20220307 10:55:10.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:55:02.082" endtime="20220307 10:55:10.474"/>
</kw>
<status status="PASS" starttime="20220307 10:55:02.080" endtime="20220307 10:55:10.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:55:10.482" level="INFO">Running command 'ozone sh bucket link 85389-target/loop3 85389-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:55:18.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:55:18.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:55:10.479" endtime="20220307 10:55:18.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:55:18.342" level="INFO"/>
<status status="PASS" starttime="20220307 10:55:18.341" endtime="20220307 10:55:18.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:55:18.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:55:18.343" endtime="20220307 10:55:18.344"/>
</kw>
<status status="PASS" starttime="20220307 10:55:10.477" endtime="20220307 10:55:18.344"/>
</kw>
<msg timestamp="20220307 10:55:18.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:55:10.476" endtime="20220307 10:55:18.345"/>
</kw>
<status status="PASS" starttime="20220307 10:55:10.475" endtime="20220307 10:55:18.346"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:55:18.351" level="INFO">Running command 'ozone sh key list 85389-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:55:26.537" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 10:55:26.537" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 85389-target</msg>
<status status="PASS" starttime="20220307 10:55:18.348" endtime="20220307 10:55:26.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:55:26.544" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 85389-target</msg>
<status status="PASS" starttime="20220307 10:55:26.542" endtime="20220307 10:55:26.544"/>
</kw>
<msg timestamp="20220307 10:55:26.545" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 85389-target</msg>
<status status="PASS" starttime="20220307 10:55:18.346" endtime="20220307 10:55:26.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:55:26.545" endtime="20220307 10:55:26.546"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:54:53.941" endtime="20220307 10:55:26.546"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:55:26.558" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:55:26.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:55:26.563" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:55:26.555" endtime="20220307 10:55:26.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:55:26.564" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:55:26.563" endtime="20220307 10:55:26.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:55:26.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:55:26.565" endtime="20220307 10:55:26.566"/>
</kw>
<status status="PASS" starttime="20220307 10:55:26.554" endtime="20220307 10:55:26.566"/>
</kw>
<msg timestamp="20220307 10:55:26.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:55:26.553" endtime="20220307 10:55:26.567"/>
</kw>
<msg timestamp="20220307 10:55:26.568" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:55:26.550" endtime="20220307 10:55:26.568"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:55:26.569" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:55:26.568" endtime="20220307 10:55:26.570"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:55:26.575" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:55:26.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:55:26.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:55:26.573" endtime="20220307 10:55:26.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:55:26.590" level="INFO"/>
<status status="PASS" starttime="20220307 10:55:26.588" endtime="20220307 10:55:26.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:55:26.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:55:26.591" endtime="20220307 10:55:26.592"/>
</kw>
<status status="PASS" starttime="20220307 10:55:26.572" endtime="20220307 10:55:26.592"/>
</kw>
<msg timestamp="20220307 10:55:26.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:55:26.572" endtime="20220307 10:55:26.593"/>
</kw>
<status status="PASS" starttime="20220307 10:55:26.571" endtime="20220307 10:55:26.593"/>
</kw>
<status status="PASS" starttime="20220307 10:55:26.570" endtime="20220307 10:55:26.594"/>
</kw>
<status status="PASS" starttime="20220307 10:55:26.549" endtime="20220307 10:55:26.594"/>
</kw>
<status status="PASS" starttime="20220307 10:55:26.548" endtime="20220307 10:55:26.594"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:55:26.600" level="INFO">Running command 'ozone sh bucket link 85389-source/bucket1 85389-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:55:34.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:55:34.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:55:26.598" endtime="20220307 10:55:34.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:55:34.487" level="INFO"/>
<status status="PASS" starttime="20220307 10:55:34.486" endtime="20220307 10:55:34.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:55:34.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:55:34.487" endtime="20220307 10:55:34.488"/>
</kw>
<status status="PASS" starttime="20220307 10:55:26.595" endtime="20220307 10:55:34.488"/>
</kw>
<msg timestamp="20220307 10:55:34.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:55:26.595" endtime="20220307 10:55:34.488"/>
</kw>
<status status="PASS" starttime="20220307 10:55:26.594" endtime="20220307 10:55:34.489"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:55:34.494" level="INFO">Running command 'ozone sh key put 85389-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:57:26.548" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220307 10:55:34.491" endtime="20220307 10:57:26.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220307 10:57:26.549" endtime="20220307 10:57:26.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220307 10:57:26.549" endtime="20220307 10:57:26.549"/>
</kw>
<status status="FAIL" starttime="20220307 10:55:34.490" endtime="20220307 10:57:26.550"/>
</kw>
<msg timestamp="20220307 10:57:26.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220307 10:55:34.490" endtime="20220307 10:57:26.551"/>
</kw>
<status status="FAIL" starttime="20220307 10:55:34.489" endtime="20220307 10:57:26.551"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20220307 10:57:26.551" endtime="20220307 10:57:26.551"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220307 10:55:26.547" endtime="20220307 10:57:26.552">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:57:26.560" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:57:26.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:57:26.566" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:57:26.557" endtime="20220307 10:57:26.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:57:26.568" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:57:26.567" endtime="20220307 10:57:26.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:57:26.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:57:26.569" endtime="20220307 10:57:26.570"/>
</kw>
<status status="PASS" starttime="20220307 10:57:26.556" endtime="20220307 10:57:26.571"/>
</kw>
<msg timestamp="20220307 10:57:26.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:57:26.556" endtime="20220307 10:57:26.572"/>
</kw>
<msg timestamp="20220307 10:57:26.573" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:57:26.555" endtime="20220307 10:57:26.573"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:57:26.574" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:57:26.573" endtime="20220307 10:57:26.574"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:57:26.580" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:57:26.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:57:26.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:57:26.577" endtime="20220307 10:57:26.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:57:26.592" level="INFO"/>
<status status="PASS" starttime="20220307 10:57:26.591" endtime="20220307 10:57:26.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:57:26.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:57:26.592" endtime="20220307 10:57:26.593"/>
</kw>
<status status="PASS" starttime="20220307 10:57:26.576" endtime="20220307 10:57:26.594"/>
</kw>
<msg timestamp="20220307 10:57:26.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:57:26.576" endtime="20220307 10:57:26.595"/>
</kw>
<status status="PASS" starttime="20220307 10:57:26.575" endtime="20220307 10:57:26.595"/>
</kw>
<status status="PASS" starttime="20220307 10:57:26.574" endtime="20220307 10:57:26.595"/>
</kw>
<status status="PASS" starttime="20220307 10:57:26.554" endtime="20220307 10:57:26.595"/>
</kw>
<status status="PASS" starttime="20220307 10:57:26.553" endtime="20220307 10:57:26.597"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:57:26.602" level="INFO">Running command 'ozone sh bucket delete 85389-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:57:35.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:57:35.276" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:57:26.600" endtime="20220307 10:57:35.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:57:35.280" level="INFO"/>
<status status="PASS" starttime="20220307 10:57:35.278" endtime="20220307 10:57:35.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:57:35.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:57:35.281" endtime="20220307 10:57:35.282"/>
</kw>
<status status="PASS" starttime="20220307 10:57:26.599" endtime="20220307 10:57:35.282"/>
</kw>
<msg timestamp="20220307 10:57:35.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:57:26.599" endtime="20220307 10:57:35.283"/>
</kw>
<status status="PASS" starttime="20220307 10:57:26.597" endtime="20220307 10:57:35.283"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:57:35.289" level="INFO">Running command 'ozone sh bucket list 85389-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:57:42.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:57:42.192" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-0...</msg>
<status status="PASS" starttime="20220307 10:57:35.285" endtime="20220307 10:57:42.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:57:42.193" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:54:14.445Z",
  "modificationTime" : "2022-03-07T10:54:14.445Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:48:15.635Z",
  "modificationTime" : "2022-03-07T10:48:15.635Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:47:33.366Z",
  "modificationTime" : "2022-03-07T10:48:09.503Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:53:58.056Z",
  "modificationTime" : "2022-03-07T10:53:58.056Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:55:34.381Z",
  "modificationTime" : "2022-03-07T10:55:34.381Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:55:18.186Z",
  "modificationTime" : "2022-03-07T10:55:18.186Z",
  "sourceVolume" : "85389-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:55:01.982Z",
  "modificationTime" : "2022-03-07T10:55:01.982Z",
  "sourceVolume" : "85389-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:55:10.319Z",
  "modificationTime" : "2022-03-07T10:55:10.319Z",
  "sourceVolume" : "85389-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:47:19.382Z",
  "modificationTime" : "2022-03-07T10:48:03.221Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-07T10:47:25.302Z",
  "modificationTime" : "2022-03-07T10:47:25.302Z",
  "sourceVolume" : "85389-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220307 10:57:42.192" endtime="20220307 10:57:42.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:57:42.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:57:42.194" endtime="20220307 10:57:42.195"/>
</kw>
<status status="PASS" starttime="20220307 10:57:35.285" endtime="20220307 10:57:42.195"/>
</kw>
<msg timestamp="20220307 10:57:42.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:57:35.284" endtime="20220307 10:57:42.196"/>
</kw>
<msg timestamp="20220307 10:57:42.196" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "85389-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-0...</msg>
<status status="PASS" starttime="20220307 10:57:35.283" endtime="20220307 10:57:42.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:57:42.197" endtime="20220307 10:57:42.197"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:57:42.203" level="INFO">Running command 'ozone sh key list 85389-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:57:50.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:57:50.603" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220307 10:57:42.199" endtime="20220307 10:57:50.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:57:50.605" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220307 10:57:50.605" endtime="20220307 10:57:50.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:57:50.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:57:50.606" endtime="20220307 10:57:50.607"/>
</kw>
<status status="PASS" starttime="20220307 10:57:42.199" endtime="20220307 10:57:50.607"/>
</kw>
<msg timestamp="20220307 10:57:50.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:57:42.198" endtime="20220307 10:57:50.608"/>
</kw>
<msg timestamp="20220307 10:57:50.608" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20220307 10:57:42.197" endtime="20220307 10:57:50.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:57:50.608" endtime="20220307 10:57:50.609"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:57:26.553" endtime="20220307 10:57:50.609"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20220307 10:43:27.300" endtime="20220307 10:57:50.612"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220307 10:57:50.641" level="INFO">${random} = 00809</msg>
<status status="PASS" starttime="20220307 10:57:50.640" endtime="20220307 10:57:50.641"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:57:50.641" level="INFO">${prefix} = 00809</msg>
<status status="PASS" starttime="20220307 10:57:50.641" endtime="20220307 10:57:50.642"/>
</kw>
<status status="PASS" starttime="20220307 10:57:50.640" endtime="20220307 10:57:50.642"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:57:50.648" level="INFO">Running command 'ozone sh volume info /00809-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:57:57.364" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 10:57:57.364" level="INFO">${output} = VOLUME_NOT_FOUND Volume 00809-without-scheme is not found</msg>
<status status="PASS" starttime="20220307 10:57:50.645" endtime="20220307 10:57:57.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:57:57.365" level="INFO">VOLUME_NOT_FOUND Volume 00809-without-scheme is not found</msg>
<status status="PASS" starttime="20220307 10:57:57.365" endtime="20220307 10:57:57.365"/>
</kw>
<msg timestamp="20220307 10:57:57.366" level="INFO">${result} = VOLUME_NOT_FOUND Volume 00809-without-scheme is not found</msg>
<status status="PASS" starttime="20220307 10:57:50.645" endtime="20220307 10:57:57.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:57:57.366" endtime="20220307 10:57:57.367"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:57:57.372" level="INFO">Running command 'ozone sh volume create /00809-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:58:06.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:58:06.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:57:57.369" endtime="20220307 10:58:06.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:58:06.618" level="INFO"/>
<status status="PASS" starttime="20220307 10:58:06.617" endtime="20220307 10:58:06.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:58:06.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:58:06.619" endtime="20220307 10:58:06.620"/>
</kw>
<status status="PASS" starttime="20220307 10:57:57.368" endtime="20220307 10:58:06.620"/>
</kw>
<msg timestamp="20220307 10:58:06.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:57:57.368" endtime="20220307 10:58:06.622"/>
</kw>
<msg timestamp="20220307 10:58:06.622" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220307 10:57:57.367" endtime="20220307 10:58:06.622"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:58:06.623" endtime="20220307 10:58:06.624"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:58:06.632" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="00809-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:58:15.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:58:15.904" level="INFO">${output} = {
  "metadata": {},
  "name": "00809-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220307 10:58:06.629" endtime="20220307 10:58:15.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:58:15.906" level="INFO">{
  "metadata": {},
  "name": "00809-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-07T10:58:06.528Z",
  "modificationTime": "2022-03-07T10:58:06.528Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220307 10:58:15.905" endtime="20220307 10:58:15.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:58:15.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:58:15.906" endtime="20220307 10:58:15.907"/>
</kw>
<status status="PASS" starttime="20220307 10:58:06.627" endtime="20220307 10:58:15.907"/>
</kw>
<msg timestamp="20220307 10:58:15.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:58:06.626" endtime="20220307 10:58:15.908"/>
</kw>
<msg timestamp="20220307 10:58:15.908" level="INFO">${result} = {
  "metadata": {},
  "name": "00809-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220307 10:58:06.624" endtime="20220307 10:58:15.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:58:15.908" endtime="20220307 10:58:15.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:58:15.917" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="00809-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:58:24.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:58:24.720" level="INFO">${output} = {
  "metadata": {},
  "name": "00809-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220307 10:58:15.913" endtime="20220307 10:58:24.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:58:24.721" level="INFO">{
  "metadata": {},
  "name": "00809-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-07T10:58:06.528Z",
  "modificationTime": "2022-03-07T10:58:06.528Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220307 10:58:24.720" endtime="20220307 10:58:24.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:58:24.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:58:24.722" endtime="20220307 10:58:24.722"/>
</kw>
<status status="PASS" starttime="20220307 10:58:15.912" endtime="20220307 10:58:24.723"/>
</kw>
<msg timestamp="20220307 10:58:24.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:58:15.912" endtime="20220307 10:58:24.723"/>
</kw>
<msg timestamp="20220307 10:58:24.724" level="INFO">${result} = {
  "metadata": {},
  "name": "00809-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220307 10:58:15.909" endtime="20220307 10:58:24.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 10:58:24.724" endtime="20220307 10:58:24.724"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:58:24.730" level="INFO">Running command 'ozone sh volume setquota /00809-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:58:31.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:58:31.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:58:24.727" endtime="20220307 10:58:31.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:58:31.084" level="INFO"/>
<status status="PASS" starttime="20220307 10:58:31.082" endtime="20220307 10:58:31.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:58:31.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:58:31.084" endtime="20220307 10:58:31.086"/>
</kw>
<status status="PASS" starttime="20220307 10:58:24.727" endtime="20220307 10:58:31.087"/>
</kw>
<msg timestamp="20220307 10:58:31.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:58:24.726" endtime="20220307 10:58:31.088"/>
</kw>
<status status="PASS" starttime="20220307 10:58:24.725" endtime="20220307 10:58:31.088"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:58:31.096" level="INFO">Running command 'ozone sh volume info /00809-without-scheme | jq -r '. | select(.name=="00809-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:58:40.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:58:40.435" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220307 10:58:31.093" endtime="20220307 10:58:40.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:58:40.437" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220307 10:58:40.436" endtime="20220307 10:58:40.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:58:40.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:58:40.437" endtime="20220307 10:58:40.438"/>
</kw>
<status status="PASS" starttime="20220307 10:58:31.091" endtime="20220307 10:58:40.438"/>
</kw>
<msg timestamp="20220307 10:58:40.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:58:31.090" endtime="20220307 10:58:40.439"/>
</kw>
<msg timestamp="20220307 10:58:40.439" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220307 10:58:31.089" endtime="20220307 10:58:40.439"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:58:40.439" endtime="20220307 10:58:40.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:58:40.447" level="INFO">Running command 'ozone sh bucket create /00809-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:58:48.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:58:48.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:58:40.442" endtime="20220307 10:58:48.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:58:48.580" level="INFO"/>
<status status="PASS" starttime="20220307 10:58:48.579" endtime="20220307 10:58:48.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:58:48.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:58:48.581" endtime="20220307 10:58:48.582"/>
</kw>
<status status="PASS" starttime="20220307 10:58:40.442" endtime="20220307 10:58:48.582"/>
</kw>
<msg timestamp="20220307 10:58:48.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:58:40.441" endtime="20220307 10:58:48.583"/>
</kw>
<status status="PASS" starttime="20220307 10:58:40.440" endtime="20220307 10:58:48.583"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:58:48.590" level="INFO">Running command 'ozone sh bucket info /00809-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:58:57.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:58:57.168" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220307 10:58:48.587" endtime="20220307 10:58:57.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:58:57.171" level="INFO">DISK</msg>
<status status="PASS" starttime="20220307 10:58:57.169" endtime="20220307 10:58:57.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:58:57.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:58:57.172" endtime="20220307 10:58:57.173"/>
</kw>
<status status="PASS" starttime="20220307 10:58:48.586" endtime="20220307 10:58:57.173"/>
</kw>
<msg timestamp="20220307 10:58:57.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:58:48.585" endtime="20220307 10:58:57.175"/>
</kw>
<msg timestamp="20220307 10:58:57.176" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220307 10:58:48.584" endtime="20220307 10:58:57.176"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:58:57.176" endtime="20220307 10:58:57.178"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:58:57.184" level="INFO">Running command 'ozone sh bucket info /00809-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:59:05.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:59:05.978" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220307 10:58:57.181" endtime="20220307 10:59:05.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:59:05.979" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220307 10:59:05.978" endtime="20220307 10:59:05.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:59:05.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:59:05.980" endtime="20220307 10:59:05.981"/>
</kw>
<status status="PASS" starttime="20220307 10:58:57.180" endtime="20220307 10:59:05.982"/>
</kw>
<msg timestamp="20220307 10:59:05.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:58:57.180" endtime="20220307 10:59:05.983"/>
</kw>
<msg timestamp="20220307 10:59:05.983" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220307 10:58:57.178" endtime="20220307 10:59:05.984"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:59:05.984" endtime="20220307 10:59:05.985"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:59:05.991" level="INFO">Running command 'ozone sh bucket info /00809-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:59:14.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:59:14.449" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220307 10:59:05.988" endtime="20220307 10:59:14.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:59:14.451" level="INFO">100</msg>
<status status="PASS" starttime="20220307 10:59:14.450" endtime="20220307 10:59:14.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:59:14.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:59:14.452" endtime="20220307 10:59:14.453"/>
</kw>
<status status="PASS" starttime="20220307 10:59:05.988" endtime="20220307 10:59:14.453"/>
</kw>
<msg timestamp="20220307 10:59:14.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:59:05.987" endtime="20220307 10:59:14.454"/>
</kw>
<msg timestamp="20220307 10:59:14.455" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220307 10:59:05.985" endtime="20220307 10:59:14.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:59:14.455" endtime="20220307 10:59:14.456"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:59:14.461" level="INFO">Running command 'ozone sh bucket setquota /00809-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:59:20.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:59:20.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:59:14.458" endtime="20220307 10:59:20.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:59:20.648" level="INFO"/>
<status status="PASS" starttime="20220307 10:59:20.647" endtime="20220307 10:59:20.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:59:20.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:59:20.648" endtime="20220307 10:59:20.649"/>
</kw>
<status status="PASS" starttime="20220307 10:59:14.457" endtime="20220307 10:59:20.649"/>
</kw>
<msg timestamp="20220307 10:59:20.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:59:14.457" endtime="20220307 10:59:20.650"/>
</kw>
<status status="PASS" starttime="20220307 10:59:14.456" endtime="20220307 10:59:20.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:59:20.656" level="INFO">Running command 'ozone sh bucket info /00809-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:59:29.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:59:29.489" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220307 10:59:20.653" endtime="20220307 10:59:29.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:59:29.490" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220307 10:59:29.489" endtime="20220307 10:59:29.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:59:29.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:59:29.491" endtime="20220307 10:59:29.492"/>
</kw>
<status status="PASS" starttime="20220307 10:59:20.653" endtime="20220307 10:59:29.492"/>
</kw>
<msg timestamp="20220307 10:59:29.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:59:20.652" endtime="20220307 10:59:29.493"/>
</kw>
<msg timestamp="20220307 10:59:29.493" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220307 10:59:20.651" endtime="20220307 10:59:29.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:59:29.494" endtime="20220307 10:59:29.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:59:29.499" level="INFO">Running command 'ozone sh bucket info /00809-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:59:38.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:59:38.292" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220307 10:59:29.497" endtime="20220307 10:59:38.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:59:38.295" level="INFO">1000</msg>
<status status="PASS" starttime="20220307 10:59:38.293" endtime="20220307 10:59:38.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:59:38.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:59:38.296" endtime="20220307 10:59:38.297"/>
</kw>
<status status="PASS" starttime="20220307 10:59:29.496" endtime="20220307 10:59:38.298"/>
</kw>
<msg timestamp="20220307 10:59:38.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:59:29.496" endtime="20220307 10:59:38.300"/>
</kw>
<msg timestamp="20220307 10:59:38.301" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220307 10:59:29.494" endtime="20220307 10:59:38.301"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:59:38.301" endtime="20220307 10:59:38.302"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:59:38.309" level="INFO">Running command 'ozone sh bucket list /00809-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:59:47.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:59:47.458" level="INFO">${output} = 00809-without-scheme</msg>
<status status="PASS" starttime="20220307 10:59:38.306" endtime="20220307 10:59:47.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:59:47.460" level="INFO">00809-without-scheme</msg>
<status status="PASS" starttime="20220307 10:59:47.459" endtime="20220307 10:59:47.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:59:47.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:59:47.460" endtime="20220307 10:59:47.461"/>
</kw>
<status status="PASS" starttime="20220307 10:59:38.305" endtime="20220307 10:59:47.461"/>
</kw>
<msg timestamp="20220307 10:59:47.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:59:38.305" endtime="20220307 10:59:47.462"/>
</kw>
<msg timestamp="20220307 10:59:47.462" level="INFO">${result} = 00809-without-scheme</msg>
<status status="PASS" starttime="20220307 10:59:38.303" endtime="20220307 10:59:47.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 10:59:47.462" endtime="20220307 10:59:47.465"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:59:47.471" level="INFO">Running command 'ozone sh key put /00809-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:02:50.644" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220307 10:59:47.468" endtime="20220307 11:02:50.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.645" endtime="20220307 11:02:50.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.645" endtime="20220307 11:02:50.645"/>
</kw>
<status status="FAIL" starttime="20220307 10:59:47.468" endtime="20220307 11:02:50.646"/>
</kw>
<msg timestamp="20220307 11:02:50.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220307 10:59:47.467" endtime="20220307 11:02:50.647"/>
</kw>
<status status="FAIL" starttime="20220307 10:59:47.467" endtime="20220307 11:02:50.648"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.648" endtime="20220307 11:02:50.648"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.648" endtime="20220307 11:02:50.648"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.649" endtime="20220307 11:02:50.649"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.649" endtime="20220307 11:02:50.649"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.649" endtime="20220307 11:02:50.649"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.649" endtime="20220307 11:02:50.649"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.650" endtime="20220307 11:02:50.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.650" endtime="20220307 11:02:50.650"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.650" endtime="20220307 11:02:50.650"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.650" endtime="20220307 11:02:50.650"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.651" endtime="20220307 11:02:50.651"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.651" endtime="20220307 11:02:50.651"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.651" endtime="20220307 11:02:50.651"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.652" endtime="20220307 11:02:50.652"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.652" endtime="20220307 11:02:50.652"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.652" endtime="20220307 11:02:50.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.653" endtime="20220307 11:02:50.653"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.653" endtime="20220307 11:02:50.653"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.654" endtime="20220307 11:02:50.654"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.654" endtime="20220307 11:02:50.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.654" endtime="20220307 11:02:50.654"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.654" endtime="20220307 11:02:50.654"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.655" endtime="20220307 11:02:50.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.655" endtime="20220307 11:02:50.655"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.655" endtime="20220307 11:02:50.655"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.656" endtime="20220307 11:02:50.656"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.656" endtime="20220307 11:02:50.656"/>
</kw>
<status status="FAIL" starttime="20220307 10:59:47.465" endtime="20220307 11:02:50.656"/>
</kw>
<status status="FAIL" starttime="20220307 10:59:47.465" endtime="20220307 11:02:50.657"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.657" endtime="20220307 11:02:50.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.658" endtime="20220307 11:02:50.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.659" endtime="20220307 11:02:50.659"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.659" endtime="20220307 11:02:50.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.662" endtime="20220307 11:02:50.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.662" endtime="20220307 11:02:50.662"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.671" endtime="20220307 11:02:50.671"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.671" endtime="20220307 11:02:50.671"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.671" endtime="20220307 11:02:50.672"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.672" endtime="20220307 11:02:50.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.672" endtime="20220307 11:02:50.672"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.672" endtime="20220307 11:02:50.672"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.673" endtime="20220307 11:02:50.673"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.673" endtime="20220307 11:02:50.673"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.673" endtime="20220307 11:02:50.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.673" endtime="20220307 11:02:50.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.674" endtime="20220307 11:02:50.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.674" endtime="20220307 11:02:50.674"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.674" endtime="20220307 11:02:50.674"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.674" endtime="20220307 11:02:50.674"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.675" endtime="20220307 11:02:50.675"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.675" endtime="20220307 11:02:50.675"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.675" endtime="20220307 11:02:50.676"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:02:50.676" endtime="20220307 11:02:50.676"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.676" endtime="20220307 11:02:50.676"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:02:50.676" endtime="20220307 11:02:50.676"/>
</kw>
<status status="FAIL" starttime="20220307 10:57:50.643" endtime="20220307 11:02:50.677"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220307 10:57:50.642" endtime="20220307 11:02:50.678">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20220307 10:57:50.617" endtime="20220307 11:02:50.681"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220307 11:02:50.698" level="INFO">${random} = 11217</msg>
<status status="PASS" starttime="20220307 11:02:50.697" endtime="20220307 11:02:50.698"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 11:02:50.698" level="INFO">${prefix} = 11217</msg>
<status status="PASS" starttime="20220307 11:02:50.698" endtime="20220307 11:02:50.699"/>
</kw>
<status status="PASS" starttime="20220307 11:02:50.696" endtime="20220307 11:02:50.699"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:02:50.705" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:02:50.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:02:50.710" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 11:02:50.703" endtime="20220307 11:02:50.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:02:50.712" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 11:02:50.711" endtime="20220307 11:02:50.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:02:50.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:02:50.712" endtime="20220307 11:02:50.713"/>
</kw>
<status status="PASS" starttime="20220307 11:02:50.702" endtime="20220307 11:02:50.714"/>
</kw>
<msg timestamp="20220307 11:02:50.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:02:50.702" endtime="20220307 11:02:50.715"/>
</kw>
<msg timestamp="20220307 11:02:50.715" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 11:02:50.701" endtime="20220307 11:02:50.715"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 11:02:50.717" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 11:02:50.715" endtime="20220307 11:02:50.717"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:02:50.723" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:02:50.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:02:50.784" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:02:50.721" endtime="20220307 11:02:50.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:02:50.786" level="INFO"/>
<status status="PASS" starttime="20220307 11:02:50.785" endtime="20220307 11:02:50.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:02:50.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:02:50.786" endtime="20220307 11:02:50.787"/>
</kw>
<status status="PASS" starttime="20220307 11:02:50.720" endtime="20220307 11:02:50.788"/>
</kw>
<msg timestamp="20220307 11:02:50.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:02:50.720" endtime="20220307 11:02:50.788"/>
</kw>
<status status="PASS" starttime="20220307 11:02:50.718" endtime="20220307 11:02:50.789"/>
</kw>
<status status="PASS" starttime="20220307 11:02:50.718" endtime="20220307 11:02:50.789"/>
</kw>
<status status="PASS" starttime="20220307 11:02:50.701" endtime="20220307 11:02:50.789"/>
</kw>
<status status="PASS" starttime="20220307 11:02:50.700" endtime="20220307 11:02:50.789"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:02:50.793" level="INFO">Running command 'ozone sh volume info o3://om:9862/11217-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:02:57.698" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 11:02:57.698" level="INFO">${output} = VOLUME_NOT_FOUND Volume 11217-with-host is not found</msg>
<status status="PASS" starttime="20220307 11:02:50.791" endtime="20220307 11:02:57.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:02:57.700" level="INFO">VOLUME_NOT_FOUND Volume 11217-with-host is not found</msg>
<status status="PASS" starttime="20220307 11:02:57.699" endtime="20220307 11:02:57.700"/>
</kw>
<msg timestamp="20220307 11:02:57.700" level="INFO">${result} = VOLUME_NOT_FOUND Volume 11217-with-host is not found</msg>
<status status="PASS" starttime="20220307 11:02:50.790" endtime="20220307 11:02:57.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 11:02:57.701" endtime="20220307 11:02:57.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:02:57.706" level="INFO">Running command 'ozone sh volume create o3://om:9862/11217-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:03:05.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:03:05.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:02:57.704" endtime="20220307 11:03:05.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:03:05.798" level="INFO"/>
<status status="PASS" starttime="20220307 11:03:05.797" endtime="20220307 11:03:05.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:03:05.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:03:05.798" endtime="20220307 11:03:05.799"/>
</kw>
<status status="PASS" starttime="20220307 11:02:57.703" endtime="20220307 11:03:05.800"/>
</kw>
<msg timestamp="20220307 11:03:05.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:02:57.702" endtime="20220307 11:03:05.803"/>
</kw>
<msg timestamp="20220307 11:03:05.803" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220307 11:02:57.701" endtime="20220307 11:03:05.803"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 11:03:05.804" endtime="20220307 11:03:05.805"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:03:05.814" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="11217-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:03:12.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:03:12.930" level="INFO">${output} = {
  "metadata": {},
  "name": "11217-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220307 11:03:05.810" endtime="20220307 11:03:12.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:03:12.932" level="INFO">{
  "metadata": {},
  "name": "11217-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-07T11:03:05.695Z",
  "modificationTime": "2022-03-07T11:03:05.695Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220307 11:03:12.931" endtime="20220307 11:03:12.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:03:12.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:03:12.932" endtime="20220307 11:03:12.933"/>
</kw>
<status status="PASS" starttime="20220307 11:03:05.809" endtime="20220307 11:03:12.933"/>
</kw>
<msg timestamp="20220307 11:03:12.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:03:05.808" endtime="20220307 11:03:12.934"/>
</kw>
<msg timestamp="20220307 11:03:12.934" level="INFO">${result} = {
  "metadata": {},
  "name": "11217-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220307 11:03:05.806" endtime="20220307 11:03:12.934"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 11:03:12.935" endtime="20220307 11:03:12.935"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:03:12.940" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="11217-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:03:21.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:03:21.703" level="INFO">${output} = {
  "metadata": {},
  "name": "11217-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220307 11:03:12.937" endtime="20220307 11:03:21.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:03:21.706" level="INFO">{
  "metadata": {},
  "name": "11217-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-07T11:03:05.695Z",
  "modificationTime": "2022-03-07T11:03:05.695Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220307 11:03:21.704" endtime="20220307 11:03:21.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:03:21.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:03:21.706" endtime="20220307 11:03:21.707"/>
</kw>
<status status="PASS" starttime="20220307 11:03:12.937" endtime="20220307 11:03:21.708"/>
</kw>
<msg timestamp="20220307 11:03:21.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:03:12.936" endtime="20220307 11:03:21.710"/>
</kw>
<msg timestamp="20220307 11:03:21.710" level="INFO">${result} = {
  "metadata": {},
  "name": "11217-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220307 11:03:12.935" endtime="20220307 11:03:21.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 11:03:21.711" endtime="20220307 11:03:21.712"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:03:21.721" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/11217-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:03:29.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:03:29.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:03:21.718" endtime="20220307 11:03:29.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:03:29.567" level="INFO"/>
<status status="PASS" starttime="20220307 11:03:29.566" endtime="20220307 11:03:29.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:03:29.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:03:29.567" endtime="20220307 11:03:29.568"/>
</kw>
<status status="PASS" starttime="20220307 11:03:21.716" endtime="20220307 11:03:29.569"/>
</kw>
<msg timestamp="20220307 11:03:29.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:03:21.715" endtime="20220307 11:03:29.570"/>
</kw>
<status status="PASS" starttime="20220307 11:03:21.712" endtime="20220307 11:03:29.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:03:29.577" level="INFO">Running command 'ozone sh volume info o3://om:9862/11217-with-host | jq -r '. | select(.name=="11217-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:03:36.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:03:36.967" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220307 11:03:29.574" endtime="20220307 11:03:36.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:03:36.969" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220307 11:03:36.968" endtime="20220307 11:03:36.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:03:36.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:03:36.969" endtime="20220307 11:03:36.970"/>
</kw>
<status status="PASS" starttime="20220307 11:03:29.573" endtime="20220307 11:03:36.970"/>
</kw>
<msg timestamp="20220307 11:03:36.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:03:29.572" endtime="20220307 11:03:36.972"/>
</kw>
<msg timestamp="20220307 11:03:36.972" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220307 11:03:29.571" endtime="20220307 11:03:36.972"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:03:36.972" endtime="20220307 11:03:36.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:03:36.979" level="INFO">Running command 'ozone sh bucket create o3://om:9862/11217-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:03:45.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:03:45.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:03:36.976" endtime="20220307 11:03:45.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:03:45.950" level="INFO"/>
<status status="PASS" starttime="20220307 11:03:45.949" endtime="20220307 11:03:45.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:03:45.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:03:45.950" endtime="20220307 11:03:45.951"/>
</kw>
<status status="PASS" starttime="20220307 11:03:36.975" endtime="20220307 11:03:45.951"/>
</kw>
<msg timestamp="20220307 11:03:45.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:03:36.974" endtime="20220307 11:03:45.952"/>
</kw>
<status status="PASS" starttime="20220307 11:03:36.973" endtime="20220307 11:03:45.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:03:45.964" level="INFO">Running command 'ozone sh bucket info o3://om:9862/11217-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:03:53.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:03:53.561" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220307 11:03:45.962" endtime="20220307 11:03:53.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:03:53.564" level="INFO">DISK</msg>
<status status="PASS" starttime="20220307 11:03:53.563" endtime="20220307 11:03:53.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:03:53.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:03:53.565" endtime="20220307 11:03:53.567"/>
</kw>
<status status="PASS" starttime="20220307 11:03:45.961" endtime="20220307 11:03:53.568"/>
</kw>
<msg timestamp="20220307 11:03:53.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:03:45.961" endtime="20220307 11:03:53.568"/>
</kw>
<msg timestamp="20220307 11:03:53.569" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220307 11:03:45.959" endtime="20220307 11:03:53.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:03:53.570" endtime="20220307 11:03:53.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:03:53.583" level="INFO">Running command 'ozone sh bucket info o3://om:9862/11217-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:04:00.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:04:00.319" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220307 11:03:53.577" endtime="20220307 11:04:00.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:04:00.322" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220307 11:04:00.320" endtime="20220307 11:04:00.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:04:00.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:04:00.323" endtime="20220307 11:04:00.324"/>
</kw>
<status status="PASS" starttime="20220307 11:03:53.576" endtime="20220307 11:04:00.326"/>
</kw>
<msg timestamp="20220307 11:04:00.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:03:53.575" endtime="20220307 11:04:00.327"/>
</kw>
<msg timestamp="20220307 11:04:00.328" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220307 11:03:53.573" endtime="20220307 11:04:00.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:04:00.328" endtime="20220307 11:04:00.330"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:04:00.339" level="INFO">Running command 'ozone sh bucket info o3://om:9862/11217-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:04:08.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:04:08.874" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220307 11:04:00.335" endtime="20220307 11:04:08.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:04:08.878" level="INFO">100</msg>
<status status="PASS" starttime="20220307 11:04:08.876" endtime="20220307 11:04:08.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:04:08.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:04:08.879" endtime="20220307 11:04:08.883"/>
</kw>
<status status="PASS" starttime="20220307 11:04:00.334" endtime="20220307 11:04:08.884"/>
</kw>
<msg timestamp="20220307 11:04:08.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:04:00.333" endtime="20220307 11:04:08.886"/>
</kw>
<msg timestamp="20220307 11:04:08.886" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220307 11:04:00.330" endtime="20220307 11:04:08.886"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:04:08.886" endtime="20220307 11:04:08.887"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:04:08.892" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/11217-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:04:16.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:04:16.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:04:08.890" endtime="20220307 11:04:16.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:04:16.684" level="INFO"/>
<status status="PASS" starttime="20220307 11:04:16.683" endtime="20220307 11:04:16.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:04:16.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:04:16.685" endtime="20220307 11:04:16.686"/>
</kw>
<status status="PASS" starttime="20220307 11:04:08.889" endtime="20220307 11:04:16.686"/>
</kw>
<msg timestamp="20220307 11:04:16.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:04:08.888" endtime="20220307 11:04:16.687"/>
</kw>
<status status="PASS" starttime="20220307 11:04:08.887" endtime="20220307 11:04:16.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:04:16.694" level="INFO">Running command 'ozone sh bucket info o3://om:9862/11217-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:04:24.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:04:25.000" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220307 11:04:16.691" endtime="20220307 11:04:25.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:04:25.001" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220307 11:04:25.000" endtime="20220307 11:04:25.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:04:25.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:04:25.001" endtime="20220307 11:04:25.002"/>
</kw>
<status status="PASS" starttime="20220307 11:04:16.690" endtime="20220307 11:04:25.002"/>
</kw>
<msg timestamp="20220307 11:04:25.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:04:16.690" endtime="20220307 11:04:25.003"/>
</kw>
<msg timestamp="20220307 11:04:25.003" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220307 11:04:16.688" endtime="20220307 11:04:25.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:04:25.004" endtime="20220307 11:04:25.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:04:25.011" level="INFO">Running command 'ozone sh bucket info o3://om:9862/11217-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:04:33.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:04:33.695" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220307 11:04:25.007" endtime="20220307 11:04:33.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:04:33.697" level="INFO">1000</msg>
<status status="PASS" starttime="20220307 11:04:33.695" endtime="20220307 11:04:33.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:04:33.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:04:33.697" endtime="20220307 11:04:33.699"/>
</kw>
<status status="PASS" starttime="20220307 11:04:25.006" endtime="20220307 11:04:33.700"/>
</kw>
<msg timestamp="20220307 11:04:33.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:04:25.006" endtime="20220307 11:04:33.702"/>
</kw>
<msg timestamp="20220307 11:04:33.703" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220307 11:04:25.005" endtime="20220307 11:04:33.703"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:04:33.703" endtime="20220307 11:04:33.703"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:04:33.713" level="INFO">Running command 'ozone sh bucket list o3://om:9862/11217-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:04:42.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:04:42.308" level="INFO">${output} = 11217-with-host</msg>
<status status="PASS" starttime="20220307 11:04:33.709" endtime="20220307 11:04:42.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:04:42.310" level="INFO">11217-with-host</msg>
<status status="PASS" starttime="20220307 11:04:42.309" endtime="20220307 11:04:42.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:04:42.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:04:42.310" endtime="20220307 11:04:42.311"/>
</kw>
<status status="PASS" starttime="20220307 11:04:33.708" endtime="20220307 11:04:42.311"/>
</kw>
<msg timestamp="20220307 11:04:42.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:04:33.707" endtime="20220307 11:04:42.312"/>
</kw>
<msg timestamp="20220307 11:04:42.313" level="INFO">${result} = 11217-with-host</msg>
<status status="PASS" starttime="20220307 11:04:33.704" endtime="20220307 11:04:42.313"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:04:42.313" endtime="20220307 11:04:42.314"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:04:42.335" level="INFO">Running command 'ozone sh key put o3://om:9862/11217-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:07:50.700" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220307 11:04:42.333" endtime="20220307 11:07:50.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.701" endtime="20220307 11:07:50.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.701" endtime="20220307 11:07:50.701"/>
</kw>
<status status="FAIL" starttime="20220307 11:04:42.332" endtime="20220307 11:07:50.701"/>
</kw>
<msg timestamp="20220307 11:07:50.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220307 11:04:42.332" endtime="20220307 11:07:50.702"/>
</kw>
<status status="FAIL" starttime="20220307 11:04:42.331" endtime="20220307 11:07:50.703"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.703" endtime="20220307 11:07:50.703"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.703" endtime="20220307 11:07:50.703"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.704" endtime="20220307 11:07:50.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.704" endtime="20220307 11:07:50.704"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.704" endtime="20220307 11:07:50.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.704" endtime="20220307 11:07:50.704"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.704" endtime="20220307 11:07:50.704"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.705" endtime="20220307 11:07:50.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.705" endtime="20220307 11:07:50.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.705" endtime="20220307 11:07:50.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.705" endtime="20220307 11:07:50.706"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.706" endtime="20220307 11:07:50.706"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.706" endtime="20220307 11:07:50.706"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.707" endtime="20220307 11:07:50.707"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.707" endtime="20220307 11:07:50.707"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.707" endtime="20220307 11:07:50.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.707" endtime="20220307 11:07:50.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.708" endtime="20220307 11:07:50.708"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.708" endtime="20220307 11:07:50.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.708" endtime="20220307 11:07:50.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.708" endtime="20220307 11:07:50.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.709" endtime="20220307 11:07:50.709"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.709" endtime="20220307 11:07:50.709"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.709" endtime="20220307 11:07:50.709"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.709" endtime="20220307 11:07:50.710"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.710" endtime="20220307 11:07:50.710"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.710" endtime="20220307 11:07:50.710"/>
</kw>
<status status="FAIL" starttime="20220307 11:04:42.314" endtime="20220307 11:07:50.710"/>
</kw>
<status status="FAIL" starttime="20220307 11:04:42.314" endtime="20220307 11:07:50.710"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.711" endtime="20220307 11:07:50.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.711" endtime="20220307 11:07:50.711"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.711" endtime="20220307 11:07:50.711"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.711" endtime="20220307 11:07:50.711"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.711" endtime="20220307 11:07:50.712"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.712" endtime="20220307 11:07:50.712"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.712" endtime="20220307 11:07:50.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.712" endtime="20220307 11:07:50.712"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.712" endtime="20220307 11:07:50.712"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.713" endtime="20220307 11:07:50.713"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.713" endtime="20220307 11:07:50.713"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.713" endtime="20220307 11:07:50.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.713" endtime="20220307 11:07:50.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.713" endtime="20220307 11:07:50.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.714" endtime="20220307 11:07:50.714"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.714" endtime="20220307 11:07:50.714"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.714" endtime="20220307 11:07:50.714"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.714" endtime="20220307 11:07:50.714"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.714" endtime="20220307 11:07:50.715"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.715" endtime="20220307 11:07:50.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.715" endtime="20220307 11:07:50.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.715" endtime="20220307 11:07:50.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.716" endtime="20220307 11:07:50.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:07:50.716" endtime="20220307 11:07:50.716"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.716" endtime="20220307 11:07:50.716"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:07:50.716" endtime="20220307 11:07:50.716"/>
</kw>
<status status="FAIL" starttime="20220307 11:02:50.789" endtime="20220307 11:07:50.717"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220307 11:02:50.699" endtime="20220307 11:07:50.717">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:07:50.724" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:07:50.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:07:50.728" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 11:07:50.722" endtime="20220307 11:07:50.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:07:50.729" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 11:07:50.729" endtime="20220307 11:07:50.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:07:50.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:07:50.730" endtime="20220307 11:07:50.730"/>
</kw>
<status status="PASS" starttime="20220307 11:07:50.721" endtime="20220307 11:07:50.731"/>
</kw>
<msg timestamp="20220307 11:07:50.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:07:50.721" endtime="20220307 11:07:50.731"/>
</kw>
<msg timestamp="20220307 11:07:50.732" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 11:07:50.720" endtime="20220307 11:07:50.732"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 11:07:50.733" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 11:07:50.732" endtime="20220307 11:07:50.733"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:07:50.737" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:07:50.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:07:50.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:07:50.735" endtime="20220307 11:07:50.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:07:50.748" level="INFO"/>
<status status="PASS" starttime="20220307 11:07:50.748" endtime="20220307 11:07:50.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:07:50.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:07:50.749" endtime="20220307 11:07:50.749"/>
</kw>
<status status="PASS" starttime="20220307 11:07:50.734" endtime="20220307 11:07:50.750"/>
</kw>
<msg timestamp="20220307 11:07:50.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:07:50.734" endtime="20220307 11:07:50.751"/>
</kw>
<status status="PASS" starttime="20220307 11:07:50.733" endtime="20220307 11:07:50.751"/>
</kw>
<status status="PASS" starttime="20220307 11:07:50.733" endtime="20220307 11:07:50.751"/>
</kw>
<status status="PASS" starttime="20220307 11:07:50.720" endtime="20220307 11:07:50.751"/>
</kw>
<status status="PASS" starttime="20220307 11:07:50.719" endtime="20220307 11:07:50.751"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:07:50.757" level="INFO">Running command 'ozone sh volume create o3://om:9862/11217-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:07:58.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:07:58.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:07:50.754" endtime="20220307 11:07:58.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:07:58.173" level="INFO"/>
<status status="PASS" starttime="20220307 11:07:58.172" endtime="20220307 11:07:58.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:07:58.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:07:58.173" endtime="20220307 11:07:58.175"/>
</kw>
<status status="PASS" starttime="20220307 11:07:50.753" endtime="20220307 11:07:58.175"/>
</kw>
<msg timestamp="20220307 11:07:58.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:07:50.753" endtime="20220307 11:07:58.176"/>
</kw>
<status status="PASS" starttime="20220307 11:07:50.752" endtime="20220307 11:07:58.176"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:07:58.182" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/11217-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:08:04.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:08:04.414" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:07:58.179" endtime="20220307 11:08:04.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:08:04.416" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:08:04.415" endtime="20220307 11:08:04.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:08:04.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:08:04.417" endtime="20220307 11:08:04.417"/>
</kw>
<status status="PASS" starttime="20220307 11:07:58.178" endtime="20220307 11:08:04.418"/>
</kw>
<msg timestamp="20220307 11:08:04.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:07:58.178" endtime="20220307 11:08:04.419"/>
</kw>
<msg timestamp="20220307 11:08:04.420" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:07:58.176" endtime="20220307 11:08:04.420"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:08:04.420" endtime="20220307 11:08:04.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:08:04.427" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/11217-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:08:11.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:08:11.844" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220307 11:08:04.424" endtime="20220307 11:08:11.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:08:11.845" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220307 11:08:11.844" endtime="20220307 11:08:11.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:08:11.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:08:11.845" endtime="20220307 11:08:11.846"/>
</kw>
<status status="PASS" starttime="20220307 11:08:04.423" endtime="20220307 11:08:11.846"/>
</kw>
<msg timestamp="20220307 11:08:11.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:08:04.422" endtime="20220307 11:08:11.847"/>
</kw>
<msg timestamp="20220307 11:08:11.847" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220307 11:08:04.421" endtime="20220307 11:08:11.847"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:08:11.853" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/11217-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:08:19.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:08:19.432" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220307 11:08:11.849" endtime="20220307 11:08:19.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:08:19.434" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:08:19.433" endtime="20220307 11:08:19.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:08:19.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:08:19.435" endtime="20220307 11:08:19.436"/>
</kw>
<status status="PASS" starttime="20220307 11:08:11.848" endtime="20220307 11:08:19.437"/>
</kw>
<msg timestamp="20220307 11:08:19.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:08:11.848" endtime="20220307 11:08:19.439"/>
</kw>
<msg timestamp="20220307 11:08:19.440" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220307 11:08:11.847" endtime="20220307 11:08:19.440"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:08:19.440" endtime="20220307 11:08:19.441"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:08:19.446" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/11217-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:08:27.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:08:27.330" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220307 11:08:19.443" endtime="20220307 11:08:27.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:08:27.331" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220307 11:08:27.330" endtime="20220307 11:08:27.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:08:27.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:08:27.332" endtime="20220307 11:08:27.332"/>
</kw>
<status status="PASS" starttime="20220307 11:08:19.442" endtime="20220307 11:08:27.333"/>
</kw>
<msg timestamp="20220307 11:08:27.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:08:19.442" endtime="20220307 11:08:27.334"/>
</kw>
<msg timestamp="20220307 11:08:27.334" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220307 11:08:19.441" endtime="20220307 11:08:27.334"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:08:27.342" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/11217-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:08:36.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:08:36.148" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220307 11:08:27.338" endtime="20220307 11:08:36.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:08:36.149" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:08:36.148" endtime="20220307 11:08:36.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:08:36.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:08:36.149" endtime="20220307 11:08:36.150"/>
</kw>
<status status="PASS" starttime="20220307 11:08:27.337" endtime="20220307 11:08:36.151"/>
</kw>
<msg timestamp="20220307 11:08:36.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:08:27.336" endtime="20220307 11:08:36.152"/>
</kw>
<msg timestamp="20220307 11:08:36.153" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220307 11:08:27.335" endtime="20220307 11:08:36.153"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:08:36.153" endtime="20220307 11:08:36.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:08:36.162" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/11217-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:08:44.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:08:44.388" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:08:36.159" endtime="20220307 11:08:44.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:08:44.389" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:08:44.388" endtime="20220307 11:08:44.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:08:44.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:08:44.390" endtime="20220307 11:08:44.391"/>
</kw>
<status status="PASS" starttime="20220307 11:08:36.158" endtime="20220307 11:08:44.391"/>
</kw>
<msg timestamp="20220307 11:08:44.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:08:36.157" endtime="20220307 11:08:44.392"/>
</kw>
<msg timestamp="20220307 11:08:44.392" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:08:36.155" endtime="20220307 11:08:44.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:08:44.400" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/11217-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:08:53.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:08:53.202" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220307 11:08:44.396" endtime="20220307 11:08:53.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:08:53.212" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:08:53.211" endtime="20220307 11:08:53.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:08:53.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:08:53.212" endtime="20220307 11:08:53.212"/>
</kw>
<status status="PASS" starttime="20220307 11:08:44.395" endtime="20220307 11:08:53.213"/>
</kw>
<msg timestamp="20220307 11:08:53.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:08:44.394" endtime="20220307 11:08:53.214"/>
</kw>
<msg timestamp="20220307 11:08:53.214" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220307 11:08:44.392" endtime="20220307 11:08:53.214"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:08:53.214" endtime="20220307 11:08:53.227"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:08:53.227" endtime="20220307 11:08:53.228"/>
</kw>
<status status="PASS" starttime="20220307 11:07:50.751" endtime="20220307 11:08:53.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220307 11:07:50.718" endtime="20220307 11:08:53.228"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:08:53.253" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:08:53.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:08:53.259" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 11:08:53.241" endtime="20220307 11:08:53.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:08:53.260" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 11:08:53.260" endtime="20220307 11:08:53.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:08:53.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:08:53.261" endtime="20220307 11:08:53.261"/>
</kw>
<status status="PASS" starttime="20220307 11:08:53.240" endtime="20220307 11:08:53.262"/>
</kw>
<msg timestamp="20220307 11:08:53.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:08:53.240" endtime="20220307 11:08:53.263"/>
</kw>
<msg timestamp="20220307 11:08:53.263" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 11:08:53.239" endtime="20220307 11:08:53.263"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 11:08:53.264" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 11:08:53.263" endtime="20220307 11:08:53.264"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:08:53.274" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:08:53.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:08:53.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:08:53.271" endtime="20220307 11:08:53.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:08:53.326" level="INFO"/>
<status status="PASS" starttime="20220307 11:08:53.325" endtime="20220307 11:08:53.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:08:53.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:08:53.326" endtime="20220307 11:08:53.327"/>
</kw>
<status status="PASS" starttime="20220307 11:08:53.266" endtime="20220307 11:08:53.327"/>
</kw>
<msg timestamp="20220307 11:08:53.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:08:53.266" endtime="20220307 11:08:53.328"/>
</kw>
<status status="PASS" starttime="20220307 11:08:53.265" endtime="20220307 11:08:53.328"/>
</kw>
<status status="PASS" starttime="20220307 11:08:53.264" endtime="20220307 11:08:53.328"/>
</kw>
<status status="PASS" starttime="20220307 11:08:53.230" endtime="20220307 11:08:53.329"/>
</kw>
<status status="PASS" starttime="20220307 11:08:53.230" endtime="20220307 11:08:53.329"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:08:53.334" level="INFO">Running command 'ozone sh bucket create o3://om:9862/11217-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:09:01.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:09:01.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:08:53.332" endtime="20220307 11:09:01.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:09:01.479" level="INFO"/>
<status status="PASS" starttime="20220307 11:09:01.478" endtime="20220307 11:09:01.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:09:01.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:09:01.480" endtime="20220307 11:09:01.480"/>
</kw>
<status status="PASS" starttime="20220307 11:08:53.331" endtime="20220307 11:09:01.481"/>
</kw>
<msg timestamp="20220307 11:09:01.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:08:53.331" endtime="20220307 11:09:01.482"/>
</kw>
<status status="PASS" starttime="20220307 11:08:53.330" endtime="20220307 11:09:01.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:09:01.490" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/11217-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:09:10.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:09:10.021" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220307 11:09:01.485" endtime="20220307 11:09:10.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:09:10.023" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:09:10.022" endtime="20220307 11:09:10.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:09:10.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:09:10.023" endtime="20220307 11:09:10.024"/>
</kw>
<status status="PASS" starttime="20220307 11:09:01.485" endtime="20220307 11:09:10.025"/>
</kw>
<msg timestamp="20220307 11:09:10.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:09:01.484" endtime="20220307 11:09:10.026"/>
</kw>
<msg timestamp="20220307 11:09:10.027" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220307 11:09:01.483" endtime="20220307 11:09:10.027"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:09:10.028" endtime="20220307 11:09:10.029"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:09:10.036" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/11217-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:09:17.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:09:17.868" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220307 11:09:10.033" endtime="20220307 11:09:17.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:09:17.872" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220307 11:09:17.869" endtime="20220307 11:09:17.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:09:17.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:09:17.872" endtime="20220307 11:09:17.874"/>
</kw>
<status status="PASS" starttime="20220307 11:09:10.032" endtime="20220307 11:09:17.875"/>
</kw>
<msg timestamp="20220307 11:09:17.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:09:10.031" endtime="20220307 11:09:17.876"/>
</kw>
<msg timestamp="20220307 11:09:17.877" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220307 11:09:10.029" endtime="20220307 11:09:17.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:09:17.886" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/11217-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:09:25.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:09:25.374" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220307 11:09:17.881" endtime="20220307 11:09:25.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:09:25.376" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:09:25.375" endtime="20220307 11:09:25.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:09:25.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:09:25.376" endtime="20220307 11:09:25.377"/>
</kw>
<status status="PASS" starttime="20220307 11:09:17.880" endtime="20220307 11:09:25.377"/>
</kw>
<msg timestamp="20220307 11:09:25.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:09:17.879" endtime="20220307 11:09:25.378"/>
</kw>
<msg timestamp="20220307 11:09:25.378" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220307 11:09:17.878" endtime="20220307 11:09:25.378"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:09:25.378" endtime="20220307 11:09:25.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:09:25.388" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/11217-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:09:33.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:09:33.864" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220307 11:09:25.382" endtime="20220307 11:09:33.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:09:33.866" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220307 11:09:33.865" endtime="20220307 11:09:33.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:09:33.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:09:33.866" endtime="20220307 11:09:33.868"/>
</kw>
<status status="PASS" starttime="20220307 11:09:25.381" endtime="20220307 11:09:33.869"/>
</kw>
<msg timestamp="20220307 11:09:33.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:09:25.380" endtime="20220307 11:09:33.871"/>
</kw>
<msg timestamp="20220307 11:09:33.871" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220307 11:09:25.379" endtime="20220307 11:09:33.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:09:33.879" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/11217-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:09:41.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:09:41.826" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220307 11:09:33.876" endtime="20220307 11:09:41.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:09:41.830" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:09:41.829" endtime="20220307 11:09:41.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:09:41.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:09:41.830" endtime="20220307 11:09:41.831"/>
</kw>
<status status="PASS" starttime="20220307 11:09:33.875" endtime="20220307 11:09:41.831"/>
</kw>
<msg timestamp="20220307 11:09:41.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:09:33.874" endtime="20220307 11:09:41.832"/>
</kw>
<msg timestamp="20220307 11:09:41.833" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220307 11:09:33.872" endtime="20220307 11:09:41.833"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:09:41.833" endtime="20220307 11:09:41.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:09:41.841" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/11217-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:09:50.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:09:50.265" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:09:41.838" endtime="20220307 11:09:50.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:09:50.267" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:09:50.266" endtime="20220307 11:09:50.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:09:50.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:09:50.267" endtime="20220307 11:09:50.268"/>
</kw>
<status status="PASS" starttime="20220307 11:09:41.837" endtime="20220307 11:09:50.268"/>
</kw>
<msg timestamp="20220307 11:09:50.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:09:41.837" endtime="20220307 11:09:50.269"/>
</kw>
<msg timestamp="20220307 11:09:50.269" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:09:41.835" endtime="20220307 11:09:50.269"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:09:50.274" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/11217-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:09:58.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:09:58.633" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220307 11:09:50.271" endtime="20220307 11:09:58.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:09:58.634" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:09:58.634" endtime="20220307 11:09:58.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:09:58.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:09:58.635" endtime="20220307 11:09:58.636"/>
</kw>
<status status="PASS" starttime="20220307 11:09:50.271" endtime="20220307 11:09:58.636"/>
</kw>
<msg timestamp="20220307 11:09:58.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:09:50.270" endtime="20220307 11:09:58.637"/>
</kw>
<msg timestamp="20220307 11:09:58.637" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220307 11:09:50.270" endtime="20220307 11:09:58.637"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:09:58.637" endtime="20220307 11:09:58.638"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:09:58.638" endtime="20220307 11:09:58.638"/>
</kw>
<status status="PASS" starttime="20220307 11:08:53.329" endtime="20220307 11:09:58.639"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220307 11:08:53.229" endtime="20220307 11:09:58.640"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:09:58.650" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:09:58.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:09:58.658" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 11:09:58.646" endtime="20220307 11:09:58.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:09:58.660" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 11:09:58.659" endtime="20220307 11:09:58.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:09:58.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:09:58.661" endtime="20220307 11:09:58.661"/>
</kw>
<status status="PASS" starttime="20220307 11:09:58.645" endtime="20220307 11:09:58.662"/>
</kw>
<msg timestamp="20220307 11:09:58.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:09:58.644" endtime="20220307 11:09:58.663"/>
</kw>
<msg timestamp="20220307 11:09:58.664" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 11:09:58.644" endtime="20220307 11:09:58.664"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 11:09:58.666" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 11:09:58.665" endtime="20220307 11:09:58.666"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:09:58.674" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:09:58.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:09:58.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:09:58.671" endtime="20220307 11:09:58.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:09:58.685" level="INFO"/>
<status status="PASS" starttime="20220307 11:09:58.684" endtime="20220307 11:09:58.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:09:58.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:09:58.685" endtime="20220307 11:09:58.686"/>
</kw>
<status status="PASS" starttime="20220307 11:09:58.669" endtime="20220307 11:09:58.687"/>
</kw>
<msg timestamp="20220307 11:09:58.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:09:58.668" endtime="20220307 11:09:58.687"/>
</kw>
<status status="PASS" starttime="20220307 11:09:58.667" endtime="20220307 11:09:58.687"/>
</kw>
<status status="PASS" starttime="20220307 11:09:58.666" endtime="20220307 11:09:58.687"/>
</kw>
<status status="PASS" starttime="20220307 11:09:58.642" endtime="20220307 11:09:58.688"/>
</kw>
<status status="PASS" starttime="20220307 11:09:58.641" endtime="20220307 11:09:58.688"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:09:58.695" level="INFO">Running command 'ozone sh key put o3://om:9862/11217-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:13:11.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:13:11.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:09:58.691" endtime="20220307 11:13:11.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:13:11.040" level="INFO"/>
<status status="PASS" starttime="20220307 11:13:11.039" endtime="20220307 11:13:11.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:13:11.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:13:11.040" endtime="20220307 11:13:11.041"/>
</kw>
<status status="PASS" starttime="20220307 11:09:58.690" endtime="20220307 11:13:11.042"/>
</kw>
<msg timestamp="20220307 11:13:11.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:09:58.690" endtime="20220307 11:13:11.043"/>
</kw>
<status status="PASS" starttime="20220307 11:09:58.689" endtime="20220307 11:13:11.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:13:11.051" level="INFO">Running command 'ozone sh key getacl o3://om:9862/11217-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:13:19.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:13:19.150" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220307 11:13:11.048" endtime="20220307 11:13:19.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:13:19.152" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:13:19.150" endtime="20220307 11:13:19.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:13:19.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:13:19.152" endtime="20220307 11:13:19.153"/>
</kw>
<status status="PASS" starttime="20220307 11:13:11.047" endtime="20220307 11:13:19.153"/>
</kw>
<msg timestamp="20220307 11:13:19.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:13:11.046" endtime="20220307 11:13:19.154"/>
</kw>
<msg timestamp="20220307 11:13:19.154" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220307 11:13:11.044" endtime="20220307 11:13:19.154"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:13:19.154" endtime="20220307 11:13:19.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:13:19.163" level="INFO">Running command 'ozone sh key addacl o3://om:9862/11217-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:13:25.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:13:25.897" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 11:13:19.158" endtime="20220307 11:13:25.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:13:25.898" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 11:13:25.898" endtime="20220307 11:13:25.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:13:25.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:13:25.899" endtime="20220307 11:13:25.899"/>
</kw>
<status status="PASS" starttime="20220307 11:13:19.157" endtime="20220307 11:13:25.900"/>
</kw>
<msg timestamp="20220307 11:13:25.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:13:19.157" endtime="20220307 11:13:25.901"/>
</kw>
<msg timestamp="20220307 11:13:25.901" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220307 11:13:19.155" endtime="20220307 11:13:25.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:13:25.905" level="INFO">Running command 'ozone sh key getacl o3://om:9862/11217-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:13:32.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:13:32.972" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220307 11:13:25.903" endtime="20220307 11:13:32.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:13:32.973" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:13:32.973" endtime="20220307 11:13:32.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:13:32.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:13:32.974" endtime="20220307 11:13:32.974"/>
</kw>
<status status="PASS" starttime="20220307 11:13:25.902" endtime="20220307 11:13:32.975"/>
</kw>
<msg timestamp="20220307 11:13:32.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:13:25.902" endtime="20220307 11:13:32.976"/>
</kw>
<msg timestamp="20220307 11:13:32.977" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220307 11:13:25.901" endtime="20220307 11:13:32.977"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:13:32.977" endtime="20220307 11:13:32.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:13:32.985" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/11217-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:13:41.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:13:41.688" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220307 11:13:32.982" endtime="20220307 11:13:41.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:13:41.689" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220307 11:13:41.688" endtime="20220307 11:13:41.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:13:41.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:13:41.690" endtime="20220307 11:13:41.691"/>
</kw>
<status status="PASS" starttime="20220307 11:13:32.982" endtime="20220307 11:13:41.692"/>
</kw>
<msg timestamp="20220307 11:13:41.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:13:32.981" endtime="20220307 11:13:41.694"/>
</kw>
<msg timestamp="20220307 11:13:41.694" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220307 11:13:32.980" endtime="20220307 11:13:41.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:13:41.701" level="INFO">Running command 'ozone sh key getacl o3://om:9862/11217-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:13:50.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:13:50.554" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220307 11:13:41.698" endtime="20220307 11:13:50.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:13:50.556" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:13:50.555" endtime="20220307 11:13:50.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:13:50.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:13:50.556" endtime="20220307 11:13:50.557"/>
</kw>
<status status="PASS" starttime="20220307 11:13:41.697" endtime="20220307 11:13:50.557"/>
</kw>
<msg timestamp="20220307 11:13:50.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:13:41.696" endtime="20220307 11:13:50.558"/>
</kw>
<msg timestamp="20220307 11:13:50.558" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220307 11:13:41.694" endtime="20220307 11:13:50.558"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:13:50.558" endtime="20220307 11:13:50.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:13:50.565" level="INFO">Running command 'ozone sh key setacl o3://om:9862/11217-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:13:58.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:13:58.646" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:13:50.562" endtime="20220307 11:13:58.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:13:58.647" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:13:58.647" endtime="20220307 11:13:58.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:13:58.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:13:58.648" endtime="20220307 11:13:58.648"/>
</kw>
<status status="PASS" starttime="20220307 11:13:50.561" endtime="20220307 11:13:58.649"/>
</kw>
<msg timestamp="20220307 11:13:58.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:13:50.561" endtime="20220307 11:13:58.649"/>
</kw>
<msg timestamp="20220307 11:13:58.650" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:13:50.560" endtime="20220307 11:13:58.650"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:13:58.655" level="INFO">Running command 'ozone sh key getacl o3://om:9862/11217-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:14:07.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:14:07.009" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220307 11:13:58.652" endtime="20220307 11:14:07.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:14:07.014" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:14:07.012" endtime="20220307 11:14:07.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:14:07.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:14:07.015" endtime="20220307 11:14:07.016"/>
</kw>
<status status="PASS" starttime="20220307 11:13:58.652" endtime="20220307 11:14:07.017"/>
</kw>
<msg timestamp="20220307 11:14:07.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:13:58.651" endtime="20220307 11:14:07.018"/>
</kw>
<msg timestamp="20220307 11:14:07.019" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220307 11:13:58.650" endtime="20220307 11:14:07.019"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:14:07.019" endtime="20220307 11:14:07.020"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:14:07.021" endtime="20220307 11:14:07.022"/>
</kw>
<status status="PASS" starttime="20220307 11:09:58.688" endtime="20220307 11:14:07.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220307 11:09:58.640" endtime="20220307 11:14:07.023"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:14:07.032" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:14:07.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:14:07.037" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 11:14:07.029" endtime="20220307 11:14:07.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:14:07.039" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 11:14:07.038" endtime="20220307 11:14:07.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:14:07.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:14:07.040" endtime="20220307 11:14:07.041"/>
</kw>
<status status="PASS" starttime="20220307 11:14:07.028" endtime="20220307 11:14:07.042"/>
</kw>
<msg timestamp="20220307 11:14:07.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:14:07.028" endtime="20220307 11:14:07.043"/>
</kw>
<msg timestamp="20220307 11:14:07.043" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 11:14:07.027" endtime="20220307 11:14:07.043"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 11:14:07.044" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 11:14:07.043" endtime="20220307 11:14:07.044"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:14:07.052" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:14:07.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:14:07.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:14:07.047" endtime="20220307 11:14:07.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:14:07.110" level="INFO"/>
<status status="PASS" starttime="20220307 11:14:07.109" endtime="20220307 11:14:07.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:14:07.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:14:07.110" endtime="20220307 11:14:07.111"/>
</kw>
<status status="PASS" starttime="20220307 11:14:07.046" endtime="20220307 11:14:07.112"/>
</kw>
<msg timestamp="20220307 11:14:07.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:14:07.046" endtime="20220307 11:14:07.112"/>
</kw>
<status status="PASS" starttime="20220307 11:14:07.045" endtime="20220307 11:14:07.113"/>
</kw>
<status status="PASS" starttime="20220307 11:14:07.044" endtime="20220307 11:14:07.113"/>
</kw>
<status status="PASS" starttime="20220307 11:14:07.027" endtime="20220307 11:14:07.113"/>
</kw>
<status status="PASS" starttime="20220307 11:14:07.026" endtime="20220307 11:14:07.113"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:14:07.119" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/11217-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:14:12.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:14:12.438" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220307 11:14:07.116" endtime="20220307 11:14:12.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:14:12.440" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220307 11:14:12.439" endtime="20220307 11:14:12.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:14:12.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:14:12.440" endtime="20220307 11:14:12.441"/>
</kw>
<status status="PASS" starttime="20220307 11:14:07.115" endtime="20220307 11:14:12.441"/>
</kw>
<msg timestamp="20220307 11:14:12.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:14:07.115" endtime="20220307 11:14:12.442"/>
</kw>
<status status="PASS" starttime="20220307 11:14:07.114" endtime="20220307 11:14:12.442"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:14:12.447" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/11217-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:14:19.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:14:19.203" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220307 11:14:12.445" endtime="20220307 11:14:19.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:14:19.205" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:14:19.204" endtime="20220307 11:14:19.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:14:19.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:14:19.205" endtime="20220307 11:14:19.206"/>
</kw>
<status status="PASS" starttime="20220307 11:14:12.444" endtime="20220307 11:14:19.206"/>
</kw>
<msg timestamp="20220307 11:14:19.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:14:12.444" endtime="20220307 11:14:19.207"/>
</kw>
<msg timestamp="20220307 11:14:19.208" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220307 11:14:12.443" endtime="20220307 11:14:19.208"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:14:19.208" endtime="20220307 11:14:19.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:14:19.220" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/11217-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:14:26.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:14:26.702" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220307 11:14:19.217" endtime="20220307 11:14:26.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:14:26.703" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220307 11:14:26.703" endtime="20220307 11:14:26.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:14:26.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:14:26.704" endtime="20220307 11:14:26.704"/>
</kw>
<status status="PASS" starttime="20220307 11:14:19.216" endtime="20220307 11:14:26.705"/>
</kw>
<msg timestamp="20220307 11:14:26.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:14:19.215" endtime="20220307 11:14:26.705"/>
</kw>
<msg timestamp="20220307 11:14:26.706" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220307 11:14:19.212" endtime="20220307 11:14:26.706"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:14:26.711" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/11217-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:14:35.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:14:35.240" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220307 11:14:26.708" endtime="20220307 11:14:35.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:14:35.242" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:14:35.241" endtime="20220307 11:14:35.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:14:35.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:14:35.243" endtime="20220307 11:14:35.244"/>
</kw>
<status status="PASS" starttime="20220307 11:14:26.708" endtime="20220307 11:14:35.244"/>
</kw>
<msg timestamp="20220307 11:14:35.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:14:26.707" endtime="20220307 11:14:35.245"/>
</kw>
<msg timestamp="20220307 11:14:35.246" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220307 11:14:26.706" endtime="20220307 11:14:35.246"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:14:35.246" endtime="20220307 11:14:35.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:14:35.255" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/11217-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:14:42.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:14:42.720" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:14:35.252" endtime="20220307 11:14:42.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:14:42.723" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:14:42.721" endtime="20220307 11:14:42.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:14:42.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:14:42.724" endtime="20220307 11:14:42.727"/>
</kw>
<status status="PASS" starttime="20220307 11:14:35.250" endtime="20220307 11:14:42.727"/>
</kw>
<msg timestamp="20220307 11:14:42.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:14:35.250" endtime="20220307 11:14:42.729"/>
</kw>
<msg timestamp="20220307 11:14:42.730" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220307 11:14:35.249" endtime="20220307 11:14:42.730"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:14:42.738" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/11217-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:14:50.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:14:50.470" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220307 11:14:42.735" endtime="20220307 11:14:50.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:14:50.472" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:14:50.470" endtime="20220307 11:14:50.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:14:50.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:14:50.472" endtime="20220307 11:14:50.473"/>
</kw>
<status status="PASS" starttime="20220307 11:14:42.733" endtime="20220307 11:14:50.473"/>
</kw>
<msg timestamp="20220307 11:14:50.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:14:42.732" endtime="20220307 11:14:50.474"/>
</kw>
<msg timestamp="20220307 11:14:50.474" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220307 11:14:42.730" endtime="20220307 11:14:50.474"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:14:50.475" endtime="20220307 11:14:50.475"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:14:50.475" endtime="20220307 11:14:50.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:14:50.480" level="INFO">Running command 'ozone sh key put o3://om:9862/11217-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:18:01.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:18:01.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:14:50.478" endtime="20220307 11:18:01.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:18:01.095" level="INFO"/>
<status status="PASS" starttime="20220307 11:18:01.093" endtime="20220307 11:18:01.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:18:01.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:18:01.095" endtime="20220307 11:18:01.096"/>
</kw>
<status status="PASS" starttime="20220307 11:14:50.477" endtime="20220307 11:18:01.097"/>
</kw>
<msg timestamp="20220307 11:18:01.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:14:50.477" endtime="20220307 11:18:01.097"/>
</kw>
<status status="PASS" starttime="20220307 11:14:50.476" endtime="20220307 11:18:01.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:18:01.105" level="INFO">Running command 'ozone sh key getacl o3://om:9862/11217-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:18:08.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:18:08.273" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220307 11:18:01.102" endtime="20220307 11:18:08.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:18:08.275" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220307 11:18:08.274" endtime="20220307 11:18:08.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:18:08.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:18:08.275" endtime="20220307 11:18:08.276"/>
</kw>
<status status="PASS" starttime="20220307 11:18:01.101" endtime="20220307 11:18:08.276"/>
</kw>
<msg timestamp="20220307 11:18:08.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:18:01.100" endtime="20220307 11:18:08.277"/>
</kw>
<msg timestamp="20220307 11:18:08.277" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220307 11:18:01.098" endtime="20220307 11:18:08.277"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:18:08.278" endtime="20220307 11:18:08.278"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220307 11:18:08.278" endtime="20220307 11:18:08.279"/>
</kw>
<status status="PASS" starttime="20220307 11:14:07.113" endtime="20220307 11:18:08.279"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220307 11:14:07.024" endtime="20220307 11:18:08.279"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:18:08.287" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:18:08.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:18:08.292" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 11:18:08.285" endtime="20220307 11:18:08.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:18:08.293" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 11:18:08.292" endtime="20220307 11:18:08.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:18:08.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:18:08.293" endtime="20220307 11:18:08.294"/>
</kw>
<status status="PASS" starttime="20220307 11:18:08.283" endtime="20220307 11:18:08.294"/>
</kw>
<msg timestamp="20220307 11:18:08.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:18:08.283" endtime="20220307 11:18:08.295"/>
</kw>
<msg timestamp="20220307 11:18:08.295" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 11:18:08.283" endtime="20220307 11:18:08.295"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 11:18:08.296" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 11:18:08.295" endtime="20220307 11:18:08.296"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:18:08.301" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:18:08.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:18:08.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:18:08.299" endtime="20220307 11:18:08.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:18:08.311" level="INFO"/>
<status status="PASS" starttime="20220307 11:18:08.310" endtime="20220307 11:18:08.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:18:08.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:18:08.311" endtime="20220307 11:18:08.312"/>
</kw>
<status status="PASS" starttime="20220307 11:18:08.298" endtime="20220307 11:18:08.312"/>
</kw>
<msg timestamp="20220307 11:18:08.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:18:08.298" endtime="20220307 11:18:08.313"/>
</kw>
<status status="PASS" starttime="20220307 11:18:08.297" endtime="20220307 11:18:08.313"/>
</kw>
<status status="PASS" starttime="20220307 11:18:08.296" endtime="20220307 11:18:08.313"/>
</kw>
<status status="PASS" starttime="20220307 11:18:08.282" endtime="20220307 11:18:08.313"/>
</kw>
<status status="PASS" starttime="20220307 11:18:08.281" endtime="20220307 11:18:08.313"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:18:08.318" level="INFO">Running command 'ozone sh volume info o3:///11217-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:18:16.880" level="INFO">${rc} = 255</msg>
<msg timestamp="20220307 11:18:16.880" level="INFO">${output} = VOLUME_NOT_FOUND Volume 11217-without-host is not found</msg>
<status status="PASS" starttime="20220307 11:18:08.316" endtime="20220307 11:18:16.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:18:16.882" level="INFO">VOLUME_NOT_FOUND Volume 11217-without-host is not found</msg>
<status status="PASS" starttime="20220307 11:18:16.881" endtime="20220307 11:18:16.882"/>
</kw>
<msg timestamp="20220307 11:18:16.883" level="INFO">${result} = VOLUME_NOT_FOUND Volume 11217-without-host is not found</msg>
<status status="PASS" starttime="20220307 11:18:08.315" endtime="20220307 11:18:16.883"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 11:18:16.883" endtime="20220307 11:18:16.883"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:18:16.889" level="INFO">Running command 'ozone sh volume create o3:///11217-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:18:24.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:18:24.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:18:16.886" endtime="20220307 11:18:24.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:18:24.558" level="INFO"/>
<status status="PASS" starttime="20220307 11:18:24.557" endtime="20220307 11:18:24.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:18:24.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:18:24.558" endtime="20220307 11:18:24.559"/>
</kw>
<status status="PASS" starttime="20220307 11:18:16.885" endtime="20220307 11:18:24.559"/>
</kw>
<msg timestamp="20220307 11:18:24.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:18:16.885" endtime="20220307 11:18:24.560"/>
</kw>
<msg timestamp="20220307 11:18:24.560" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220307 11:18:16.884" endtime="20220307 11:18:24.560"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 11:18:24.560" endtime="20220307 11:18:24.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:18:24.565" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="11217-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:18:31.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:18:31.838" level="INFO">${output} = {
  "metadata": {},
  "name": "11217-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220307 11:18:24.563" endtime="20220307 11:18:31.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:18:31.840" level="INFO">{
  "metadata": {},
  "name": "11217-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-07T11:18:24.332Z",
  "modificationTime": "2022-03-07T11:18:24.332Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220307 11:18:31.839" endtime="20220307 11:18:31.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:18:31.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:18:31.841" endtime="20220307 11:18:31.842"/>
</kw>
<status status="PASS" starttime="20220307 11:18:24.562" endtime="20220307 11:18:31.842"/>
</kw>
<msg timestamp="20220307 11:18:31.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:18:24.562" endtime="20220307 11:18:31.844"/>
</kw>
<msg timestamp="20220307 11:18:31.845" level="INFO">${result} = {
  "metadata": {},
  "name": "11217-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220307 11:18:24.561" endtime="20220307 11:18:31.845"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 11:18:31.846" endtime="20220307 11:18:31.848"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:18:31.854" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="11217-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:18:41.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:18:41.041" level="INFO">${output} = {
  "metadata": {},
  "name": "11217-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220307 11:18:31.851" endtime="20220307 11:18:41.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:18:41.045" level="INFO">{
  "metadata": {},
  "name": "11217-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-07T11:18:24.332Z",
  "modificationTime": "2022-03-07T11:18:24.332Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220307 11:18:41.041" endtime="20220307 11:18:41.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:18:41.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:18:41.045" endtime="20220307 11:18:41.050"/>
</kw>
<status status="PASS" starttime="20220307 11:18:31.850" endtime="20220307 11:18:41.050"/>
</kw>
<msg timestamp="20220307 11:18:41.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:18:31.850" endtime="20220307 11:18:41.051"/>
</kw>
<msg timestamp="20220307 11:18:41.051" level="INFO">${result} = {
  "metadata": {},
  "name": "11217-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220307 11:18:31.848" endtime="20220307 11:18:41.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220307 11:18:41.057" endtime="20220307 11:18:41.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:18:41.070" level="INFO">Running command 'ozone sh volume setquota o3:///11217-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:18:49.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:18:49.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:18:41.060" endtime="20220307 11:18:49.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:18:49.889" level="INFO"/>
<status status="PASS" starttime="20220307 11:18:49.888" endtime="20220307 11:18:49.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:18:49.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:18:49.890" endtime="20220307 11:18:49.890"/>
</kw>
<status status="PASS" starttime="20220307 11:18:41.060" endtime="20220307 11:18:49.890"/>
</kw>
<msg timestamp="20220307 11:18:49.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:18:41.059" endtime="20220307 11:18:49.892"/>
</kw>
<status status="PASS" starttime="20220307 11:18:41.058" endtime="20220307 11:18:49.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:18:49.900" level="INFO">Running command 'ozone sh volume info o3:///11217-without-host | jq -r '. | select(.name=="11217-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:18:58.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:18:58.290" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220307 11:18:49.897" endtime="20220307 11:18:58.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:18:58.291" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220307 11:18:58.290" endtime="20220307 11:18:58.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:18:58.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:18:58.292" endtime="20220307 11:18:58.293"/>
</kw>
<status status="PASS" starttime="20220307 11:18:49.896" endtime="20220307 11:18:58.293"/>
</kw>
<msg timestamp="20220307 11:18:58.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:18:49.895" endtime="20220307 11:18:58.294"/>
</kw>
<msg timestamp="20220307 11:18:58.294" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220307 11:18:49.892" endtime="20220307 11:18:58.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:18:58.295" endtime="20220307 11:18:58.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:18:58.300" level="INFO">Running command 'ozone sh bucket create o3:///11217-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:19:06.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:19:06.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:18:58.297" endtime="20220307 11:19:06.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:19:06.650" level="INFO"/>
<status status="PASS" starttime="20220307 11:19:06.648" endtime="20220307 11:19:06.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:19:06.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:19:06.650" endtime="20220307 11:19:06.652"/>
</kw>
<status status="PASS" starttime="20220307 11:18:58.296" endtime="20220307 11:19:06.653"/>
</kw>
<msg timestamp="20220307 11:19:06.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:18:58.296" endtime="20220307 11:19:06.654"/>
</kw>
<status status="PASS" starttime="20220307 11:18:58.295" endtime="20220307 11:19:06.655"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:19:06.665" level="INFO">Running command 'ozone sh bucket info o3:///11217-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:19:13.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:19:13.837" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220307 11:19:06.661" endtime="20220307 11:19:13.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:19:13.838" level="INFO">DISK</msg>
<status status="PASS" starttime="20220307 11:19:13.837" endtime="20220307 11:19:13.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:19:13.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:19:13.839" endtime="20220307 11:19:13.840"/>
</kw>
<status status="PASS" starttime="20220307 11:19:06.659" endtime="20220307 11:19:13.840"/>
</kw>
<msg timestamp="20220307 11:19:13.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:19:06.658" endtime="20220307 11:19:13.841"/>
</kw>
<msg timestamp="20220307 11:19:13.841" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220307 11:19:06.656" endtime="20220307 11:19:13.841"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:19:13.842" endtime="20220307 11:19:13.842"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:19:13.847" level="INFO">Running command 'ozone sh bucket info o3:///11217-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:19:20.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:19:20.418" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220307 11:19:13.844" endtime="20220307 11:19:20.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:19:20.420" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220307 11:19:20.418" endtime="20220307 11:19:20.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:19:20.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:19:20.420" endtime="20220307 11:19:20.421"/>
</kw>
<status status="PASS" starttime="20220307 11:19:13.844" endtime="20220307 11:19:20.421"/>
</kw>
<msg timestamp="20220307 11:19:20.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:19:13.843" endtime="20220307 11:19:20.422"/>
</kw>
<msg timestamp="20220307 11:19:20.422" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220307 11:19:13.842" endtime="20220307 11:19:20.422"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:19:20.422" endtime="20220307 11:19:20.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:19:20.428" level="INFO">Running command 'ozone sh bucket info o3:///11217-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:19:29.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:19:29.371" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220307 11:19:20.426" endtime="20220307 11:19:29.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:19:29.373" level="INFO">100</msg>
<status status="PASS" starttime="20220307 11:19:29.372" endtime="20220307 11:19:29.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:19:29.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:19:29.374" endtime="20220307 11:19:29.375"/>
</kw>
<status status="PASS" starttime="20220307 11:19:20.425" endtime="20220307 11:19:29.375"/>
</kw>
<msg timestamp="20220307 11:19:29.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:19:20.424" endtime="20220307 11:19:29.376"/>
</kw>
<msg timestamp="20220307 11:19:29.376" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220307 11:19:20.423" endtime="20220307 11:19:29.376"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:19:29.377" endtime="20220307 11:19:29.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:19:29.384" level="INFO">Running command 'ozone sh bucket setquota o3:///11217-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:19:37.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:19:37.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 11:19:29.381" endtime="20220307 11:19:37.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:19:37.686" level="INFO"/>
<status status="PASS" starttime="20220307 11:19:37.685" endtime="20220307 11:19:37.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:19:37.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:19:37.686" endtime="20220307 11:19:37.687"/>
</kw>
<status status="PASS" starttime="20220307 11:19:29.380" endtime="20220307 11:19:37.687"/>
</kw>
<msg timestamp="20220307 11:19:37.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:19:29.380" endtime="20220307 11:19:37.688"/>
</kw>
<status status="PASS" starttime="20220307 11:19:29.378" endtime="20220307 11:19:37.688"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:19:37.693" level="INFO">Running command 'ozone sh bucket info o3:///11217-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:19:45.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:19:45.864" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220307 11:19:37.690" endtime="20220307 11:19:45.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:19:45.866" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220307 11:19:45.865" endtime="20220307 11:19:45.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:19:45.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:19:45.866" endtime="20220307 11:19:45.867"/>
</kw>
<status status="PASS" starttime="20220307 11:19:37.690" endtime="20220307 11:19:45.868"/>
</kw>
<msg timestamp="20220307 11:19:45.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:19:37.690" endtime="20220307 11:19:45.869"/>
</kw>
<msg timestamp="20220307 11:19:45.869" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220307 11:19:37.688" endtime="20220307 11:19:45.869"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:19:45.869" endtime="20220307 11:19:45.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:19:45.875" level="INFO">Running command 'ozone sh bucket info o3:///11217-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:19:53.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:19:53.859" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220307 11:19:45.872" endtime="20220307 11:19:53.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:19:53.860" level="INFO">1000</msg>
<status status="PASS" starttime="20220307 11:19:53.859" endtime="20220307 11:19:53.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:19:53.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:19:53.860" endtime="20220307 11:19:53.861"/>
</kw>
<status status="PASS" starttime="20220307 11:19:45.871" endtime="20220307 11:19:53.861"/>
</kw>
<msg timestamp="20220307 11:19:53.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:19:45.871" endtime="20220307 11:19:53.862"/>
</kw>
<msg timestamp="20220307 11:19:53.862" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220307 11:19:45.870" endtime="20220307 11:19:53.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:19:53.863" endtime="20220307 11:19:53.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:19:53.872" level="INFO">Running command 'ozone sh bucket list o3:///11217-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:20:02.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 11:20:02.380" level="INFO">${output} = 11217-without-host</msg>
<status status="PASS" starttime="20220307 11:19:53.869" endtime="20220307 11:20:02.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 11:20:02.383" level="INFO">11217-without-host</msg>
<status status="PASS" starttime="20220307 11:20:02.381" endtime="20220307 11:20:02.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 11:20:02.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 11:20:02.383" endtime="20220307 11:20:02.385"/>
</kw>
<status status="PASS" starttime="20220307 11:19:53.867" endtime="20220307 11:20:02.385"/>
</kw>
<msg timestamp="20220307 11:20:02.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 11:19:53.867" endtime="20220307 11:20:02.387"/>
</kw>
<msg timestamp="20220307 11:20:02.387" level="INFO">${result} = 11217-without-host</msg>
<status status="PASS" starttime="20220307 11:19:53.864" endtime="20220307 11:20:02.387"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220307 11:20:02.387" endtime="20220307 11:20:02.389"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 11:20:02.397" level="INFO">Running command 'ozone sh key put o3:///11217-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 11:23:08.281" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220307 11:20:02.394" endtime="20220307 11:23:08.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.282" endtime="20220307 11:23:08.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.283" endtime="20220307 11:23:08.283"/>
</kw>
<status status="FAIL" starttime="20220307 11:20:02.393" endtime="20220307 11:23:08.284"/>
</kw>
<msg timestamp="20220307 11:23:08.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220307 11:20:02.393" endtime="20220307 11:23:08.284"/>
</kw>
<status status="FAIL" starttime="20220307 11:20:02.391" endtime="20220307 11:23:08.285"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.285" endtime="20220307 11:23:08.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.285" endtime="20220307 11:23:08.285"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.285" endtime="20220307 11:23:08.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.286" endtime="20220307 11:23:08.286"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.286" endtime="20220307 11:23:08.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.286" endtime="20220307 11:23:08.286"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.286" endtime="20220307 11:23:08.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.287" endtime="20220307 11:23:08.287"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.287" endtime="20220307 11:23:08.287"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.287" endtime="20220307 11:23:08.287"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.287" endtime="20220307 11:23:08.287"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.288" endtime="20220307 11:23:08.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.288" endtime="20220307 11:23:08.288"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.288" endtime="20220307 11:23:08.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.288" endtime="20220307 11:23:08.288"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.289" endtime="20220307 11:23:08.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.289" endtime="20220307 11:23:08.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.289" endtime="20220307 11:23:08.289"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.289" endtime="20220307 11:23:08.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.290" endtime="20220307 11:23:08.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.290" endtime="20220307 11:23:08.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.290" endtime="20220307 11:23:08.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.290" endtime="20220307 11:23:08.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.291" endtime="20220307 11:23:08.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.291" endtime="20220307 11:23:08.291"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.291" endtime="20220307 11:23:08.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.291" endtime="20220307 11:23:08.291"/>
</kw>
<status status="FAIL" starttime="20220307 11:20:02.389" endtime="20220307 11:23:08.291"/>
</kw>
<status status="FAIL" starttime="20220307 11:20:02.389" endtime="20220307 11:23:08.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.292" endtime="20220307 11:23:08.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.292" endtime="20220307 11:23:08.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.292" endtime="20220307 11:23:08.292"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.292" endtime="20220307 11:23:08.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.293" endtime="20220307 11:23:08.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.293" endtime="20220307 11:23:08.293"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.293" endtime="20220307 11:23:08.293"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.293" endtime="20220307 11:23:08.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.294" endtime="20220307 11:23:08.294"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.294" endtime="20220307 11:23:08.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.294" endtime="20220307 11:23:08.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.294" endtime="20220307 11:23:08.294"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.295" endtime="20220307 11:23:08.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.295" endtime="20220307 11:23:08.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.295" endtime="20220307 11:23:08.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.295" endtime="20220307 11:23:08.295"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.296" endtime="20220307 11:23:08.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.296" endtime="20220307 11:23:08.296"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.296" endtime="20220307 11:23:08.296"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.296" endtime="20220307 11:23:08.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.296" endtime="20220307 11:23:08.296"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.297" endtime="20220307 11:23:08.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.297" endtime="20220307 11:23:08.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220307 11:23:08.297" endtime="20220307 11:23:08.297"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.297" endtime="20220307 11:23:08.297"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220307 11:23:08.298" endtime="20220307 11:23:08.298"/>
</kw>
<status status="FAIL" starttime="20220307 11:18:08.313" endtime="20220307 11:23:08.298"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220307 11:18:08.280" endtime="20220307 11:23:08.299">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20220307 11:02:50.684" endtime="20220307 11:23:08.301"/>
</suite>
<status status="FAIL" starttime="20220307 10:38:02.302" endtime="20220307 11:23:08.308"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:37:55.469" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:37:55.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:37:55.473" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220307 10:37:55.465" endtime="20220307 10:37:55.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:37:55.475" level="INFO">scm</msg>
<status status="PASS" starttime="20220307 10:37:55.474" endtime="20220307 10:37:55.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:37:55.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:37:55.475" endtime="20220307 10:37:55.476"/>
</kw>
<status status="PASS" starttime="20220307 10:37:55.465" endtime="20220307 10:37:55.476"/>
</kw>
<msg timestamp="20220307 10:37:55.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:37:55.464" endtime="20220307 10:37:55.478"/>
</kw>
<msg timestamp="20220307 10:37:55.478" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220307 10:37:55.464" endtime="20220307 10:37:55.478"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220307 10:37:55.479" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220307 10:37:55.478" endtime="20220307 10:37:55.479"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220307 10:37:55.484" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220307 10:37:55.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20220307 10:37:55.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220307 10:37:55.481" endtime="20220307 10:37:55.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220307 10:37:55.493" level="INFO"/>
<status status="PASS" starttime="20220307 10:37:55.492" endtime="20220307 10:37:55.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220307 10:37:55.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220307 10:37:55.493" endtime="20220307 10:37:55.495"/>
</kw>
<status status="PASS" starttime="20220307 10:37:55.481" endtime="20220307 10:37:55.495"/>
</kw>
<msg timestamp="20220307 10:37:55.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220307 10:37:55.480" endtime="20220307 10:37:55.496"/>
</kw>
<status status="PASS" starttime="20220307 10:37:55.480" endtime="20220307 10:37:55.496"/>
</kw>
<status status="PASS" starttime="20220307 10:37:55.479" endtime="20220307 10:37:55.496"/>
</kw>
<status status="PASS" starttime="20220307 10:37:55.463" endtime="20220307 10:37:55.496"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220307 10:37:55.461" endtime="20220307 10:37:55.497"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220307 10:37:55.391" endtime="20220307 10:37:55.498"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2706113"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="9" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="9" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="9" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="2" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
