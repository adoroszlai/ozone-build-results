<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220302 18:53:50.730" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:08:36.690" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:08:36.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:08:36.694" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:08:36.686" endtime="20220302 18:08:36.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:08:36.695" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:08:36.694" endtime="20220302 18:08:36.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:08:36.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:08:36.695" endtime="20220302 18:08:36.696"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.685" endtime="20220302 18:08:36.696"/>
</kw>
<msg timestamp="20220302 18:08:36.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:08:36.685" endtime="20220302 18:08:36.698"/>
</kw>
<msg timestamp="20220302 18:08:36.699" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20220302 18:08:36.685" endtime="20220302 18:08:36.699"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:08:36.704" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:08:36.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:08:36.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:08:36.701" endtime="20220302 18:08:36.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:08:36.715" level="INFO"/>
<status status="PASS" starttime="20220302 18:08:36.714" endtime="20220302 18:08:36.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:08:36.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:08:36.716" endtime="20220302 18:08:36.716"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.701" endtime="20220302 18:08:36.717"/>
</kw>
<msg timestamp="20220302 18:08:36.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:08:36.700" endtime="20220302 18:08:36.717"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.699" endtime="20220302 18:08:36.718"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.699" endtime="20220302 18:08:36.718"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.684" endtime="20220302 18:08:36.718"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.683" endtime="20220302 18:08:36.718"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:08:36.724" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:08:36.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:08:36.884" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220302 18:08:36.720" endtime="20220302 18:08:36.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:08:36.886" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Wed, 02 Mar 2022 18:08:36 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCI09ZiXLOGHsHVSTVlRS+VPGVk090stx/ysTGjX4QHF9qesPjS7EXBix3SVJh9KJ1Ep9ohluFBRkCecb00jnhQfAi
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1646280516871&amp;s=owHZZMG/87TkEj8aGgfGjZF2eBZ2wGU3/XzEPi/OKVY="; Path=/; HttpOnly
Last-Modified: Wed, 02 Mar 2022 17:51:50 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20220302 18:08:36.885" endtime="20220302 18:08:36.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:08:36.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:08:36.886" endtime="20220302 18:08:36.887"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.719" endtime="20220302 18:08:36.887"/>
</kw>
<msg timestamp="20220302 18:08:36.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:08:36.719" endtime="20220302 18:08:36.888"/>
</kw>
<msg timestamp="20220302 18:08:36.889" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20220302 18:08:36.718" endtime="20220302 18:08:36.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:08:36.889" endtime="20220302 18:08:36.889"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220302 18:08:36.682" endtime="20220302 18:08:36.890"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:08:36.898" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:08:36.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:08:36.902" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:08:36.895" endtime="20220302 18:08:36.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:08:36.904" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:08:36.903" endtime="20220302 18:08:36.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:08:36.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:08:36.904" endtime="20220302 18:08:36.905"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.895" endtime="20220302 18:08:36.905"/>
</kw>
<msg timestamp="20220302 18:08:36.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:08:36.894" endtime="20220302 18:08:36.906"/>
</kw>
<msg timestamp="20220302 18:08:36.906" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:08:36.893" endtime="20220302 18:08:36.906"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:08:36.908" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:08:36.907" endtime="20220302 18:08:36.908"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:08:36.913" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:08:36.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:08:36.923" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:08:36.911" endtime="20220302 18:08:36.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:08:36.925" level="INFO"/>
<status status="PASS" starttime="20220302 18:08:36.924" endtime="20220302 18:08:36.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:08:36.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:08:36.925" endtime="20220302 18:08:36.926"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.910" endtime="20220302 18:08:36.926"/>
</kw>
<msg timestamp="20220302 18:08:36.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:08:36.910" endtime="20220302 18:08:36.927"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.909" endtime="20220302 18:08:36.927"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.909" endtime="20220302 18:08:36.927"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.892" endtime="20220302 18:08:36.927"/>
</kw>
<status status="PASS" starttime="20220302 18:08:36.892" endtime="20220302 18:08:36.928"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:08:36.932" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:13:36.892" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220302 18:08:36.929" endtime="20220302 18:13:36.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220302 18:13:36.892" endtime="20220302 18:13:36.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220302 18:13:36.893" endtime="20220302 18:13:36.893"/>
</kw>
<status status="FAIL" starttime="20220302 18:08:36.929" endtime="20220302 18:13:36.893"/>
</kw>
<msg timestamp="20220302 18:13:36.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220302 18:08:36.928" endtime="20220302 18:13:36.894"/>
</kw>
<status status="FAIL" starttime="20220302 18:08:36.928" endtime="20220302 18:13:36.894"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20220302 18:13:36.895" endtime="20220302 18:13:36.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:13:36.895" endtime="20220302 18:13:36.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220302 18:08:36.891" endtime="20220302 18:13:36.895">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20220302 18:08:36.650" endtime="20220302 18:13:36.898"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:13:36.930" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:13:39.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:13:39.845" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220302 18:13:36.921" endtime="20220302 18:13:39.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:13:39.846" level="INFO">om</msg>
<status status="PASS" starttime="20220302 18:13:39.846" endtime="20220302 18:13:39.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:13:39.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:13:39.847" endtime="20220302 18:13:39.847"/>
</kw>
<status status="PASS" starttime="20220302 18:13:36.920" endtime="20220302 18:13:39.848"/>
</kw>
<msg timestamp="20220302 18:13:39.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:13:36.920" endtime="20220302 18:13:39.848"/>
</kw>
<msg timestamp="20220302 18:13:39.849" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220302 18:13:36.917" endtime="20220302 18:13:39.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:13:39.849" endtime="20220302 18:13:39.849"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:13:39.855" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:13:43.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:13:43.284" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220302 18:13:39.851" endtime="20220302 18:13:43.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:13:43.286" level="INFO">om</msg>
<status status="PASS" starttime="20220302 18:13:43.284" endtime="20220302 18:13:43.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:13:43.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:13:43.286" endtime="20220302 18:13:43.287"/>
</kw>
<status status="PASS" starttime="20220302 18:13:39.850" endtime="20220302 18:13:43.288"/>
</kw>
<msg timestamp="20220302 18:13:43.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:13:39.850" endtime="20220302 18:13:43.289"/>
</kw>
<msg timestamp="20220302 18:13:43.289" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220302 18:13:39.850" endtime="20220302 18:13:43.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:13:43.290" endtime="20220302 18:13:43.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220302 18:13:36.916" endtime="20220302 18:13:43.290"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:13:43.304" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:13:46.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:13:46.512" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:13:43.298" endtime="20220302 18:13:46.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:13:46.515" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:13:46.514" endtime="20220302 18:13:46.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:13:46.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:13:46.515" endtime="20220302 18:13:46.516"/>
</kw>
<status status="PASS" starttime="20220302 18:13:43.298" endtime="20220302 18:13:46.517"/>
</kw>
<msg timestamp="20220302 18:13:46.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:13:43.297" endtime="20220302 18:13:46.518"/>
</kw>
<msg timestamp="20220302 18:13:46.518" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220302 18:13:43.294" endtime="20220302 18:13:46.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:13:46.518" endtime="20220302 18:13:46.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:13:46.526" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:13:49.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:13:49.625" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:13:46.522" endtime="20220302 18:13:49.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:13:49.626" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:13:49.626" endtime="20220302 18:13:49.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:13:49.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:13:49.627" endtime="20220302 18:13:49.627"/>
</kw>
<status status="PASS" starttime="20220302 18:13:46.521" endtime="20220302 18:13:49.628"/>
</kw>
<msg timestamp="20220302 18:13:49.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:13:46.520" endtime="20220302 18:13:49.628"/>
</kw>
<msg timestamp="20220302 18:13:49.629" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20220302 18:13:46.519" endtime="20220302 18:13:49.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:13:49.629" endtime="20220302 18:13:49.630"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220302 18:13:43.292" endtime="20220302 18:13:49.630"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:13:49.635" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:13:51.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:13:51.038" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220302 18:13:49.633" endtime="20220302 18:13:51.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:13:51.039" level="INFO">om</msg>
<status status="PASS" starttime="20220302 18:13:51.039" endtime="20220302 18:13:51.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:13:51.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:13:51.040" endtime="20220302 18:13:51.040"/>
</kw>
<status status="PASS" starttime="20220302 18:13:49.632" endtime="20220302 18:13:51.041"/>
</kw>
<msg timestamp="20220302 18:13:51.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:13:49.632" endtime="20220302 18:13:51.041"/>
</kw>
<msg timestamp="20220302 18:13:51.042" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220302 18:13:49.631" endtime="20220302 18:13:51.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:13:51.042" endtime="20220302 18:13:51.042"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:13:51.042" endtime="20220302 18:13:51.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:13:51.047" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:13:53.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:13:53.434" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20220302 18:13:51.045" endtime="20220302 18:13:53.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:13:53.436" level="INFO">om</msg>
<status status="PASS" starttime="20220302 18:13:53.435" endtime="20220302 18:13:53.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:13:53.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:13:53.436" endtime="20220302 18:13:53.437"/>
</kw>
<status status="PASS" starttime="20220302 18:13:51.044" endtime="20220302 18:13:53.437"/>
</kw>
<msg timestamp="20220302 18:13:53.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:13:51.044" endtime="20220302 18:13:53.438"/>
</kw>
<msg timestamp="20220302 18:13:53.439" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20220302 18:13:51.043" endtime="20220302 18:13:53.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:13:53.439" endtime="20220302 18:13:53.439"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:13:53.440" endtime="20220302 18:13:53.440"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220302 18:13:49.630" endtime="20220302 18:13:53.440"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:13:53.449" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:13:56.230" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:13:56.230" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220302 18:13:53.445" endtime="20220302 18:13:56.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:13:56.231" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220302 18:13:56.230" endtime="20220302 18:13:56.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:13:56.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:13:56.232" endtime="20220302 18:13:56.232"/>
</kw>
<msg timestamp="20220302 18:13:56.233" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220302 18:13:53.444" endtime="20220302 18:13:56.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:13:56.233" endtime="20220302 18:13:56.233"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:13:56.237" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:13:59.168" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:13:59.168" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220302 18:13:56.234" endtime="20220302 18:13:59.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:13:59.170" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220302 18:13:59.169" endtime="20220302 18:13:59.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:13:59.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:13:59.170" endtime="20220302 18:13:59.171"/>
</kw>
<msg timestamp="20220302 18:13:59.171" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20220302 18:13:56.234" endtime="20220302 18:13:59.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:13:59.171" endtime="20220302 18:13:59.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220302 18:13:53.442" endtime="20220302 18:13:59.172"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20220302 18:13:36.903" endtime="20220302 18:13:59.174"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220302 18:13:59.196" level="INFO">${random} = 69919</msg>
<status status="PASS" starttime="20220302 18:13:59.196" endtime="20220302 18:13:59.196"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:13:59.200" level="INFO">${source} = 69919-source</msg>
<status status="PASS" starttime="20220302 18:13:59.196" endtime="20220302 18:13:59.200"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:13:59.202" level="INFO">${target} = 69919-target</msg>
<status status="PASS" starttime="20220302 18:13:59.200" endtime="20220302 18:13:59.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:13:59.206" level="INFO">Running command 'ozone sh volume create 69919-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:14:05.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:14:05.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:13:59.204" endtime="20220302 18:14:05.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:14:05.583" level="INFO"/>
<status status="PASS" starttime="20220302 18:14:05.582" endtime="20220302 18:14:05.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:14:05.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:14:05.583" endtime="20220302 18:14:05.584"/>
</kw>
<status status="PASS" starttime="20220302 18:13:59.203" endtime="20220302 18:14:05.584"/>
</kw>
<msg timestamp="20220302 18:14:05.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:13:59.202" endtime="20220302 18:14:05.585"/>
</kw>
<status status="PASS" starttime="20220302 18:13:59.202" endtime="20220302 18:14:05.585"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:14:05.589" level="INFO">Running command 'ozone sh volume create 69919-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:14:12.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:14:12.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:14:05.587" endtime="20220302 18:14:12.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:14:12.133" level="INFO"/>
<status status="PASS" starttime="20220302 18:14:12.132" endtime="20220302 18:14:12.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:14:12.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:14:12.133" endtime="20220302 18:14:12.134"/>
</kw>
<status status="PASS" starttime="20220302 18:14:05.586" endtime="20220302 18:14:12.134"/>
</kw>
<msg timestamp="20220302 18:14:12.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:14:05.586" endtime="20220302 18:14:12.135"/>
</kw>
<status status="PASS" starttime="20220302 18:14:05.585" endtime="20220302 18:14:12.135"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:14:12.140" level="INFO">Running command 'ozone sh bucket create 69919-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:14:20.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:14:20.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:14:12.138" endtime="20220302 18:14:20.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:14:20.599" level="INFO"/>
<status status="PASS" starttime="20220302 18:14:20.598" endtime="20220302 18:14:20.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:14:20.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:14:20.599" endtime="20220302 18:14:20.600"/>
</kw>
<status status="PASS" starttime="20220302 18:14:12.137" endtime="20220302 18:14:20.600"/>
</kw>
<msg timestamp="20220302 18:14:20.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:14:12.137" endtime="20220302 18:14:20.601"/>
</kw>
<status status="PASS" starttime="20220302 18:14:12.137" endtime="20220302 18:14:20.601"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:14:20.605" level="INFO">Running command 'ozone sh key put 69919-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:17:30.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:17:30.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:14:20.603" endtime="20220302 18:17:30.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:17:30.982" level="INFO"/>
<status status="PASS" starttime="20220302 18:17:30.981" endtime="20220302 18:17:30.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:17:30.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:17:30.983" endtime="20220302 18:17:30.984"/>
</kw>
<status status="PASS" starttime="20220302 18:14:20.602" endtime="20220302 18:17:30.985"/>
</kw>
<msg timestamp="20220302 18:17:30.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:14:20.602" endtime="20220302 18:17:30.986"/>
</kw>
<status status="PASS" starttime="20220302 18:14:20.601" endtime="20220302 18:17:30.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:17:30.991" level="INFO">Running command 'ozone sh bucket create 69919-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:17:38.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:17:38.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:17:30.989" endtime="20220302 18:17:38.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:17:38.793" level="INFO"/>
<status status="PASS" starttime="20220302 18:17:38.792" endtime="20220302 18:17:38.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:17:38.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:17:38.793" endtime="20220302 18:17:38.794"/>
</kw>
<status status="PASS" starttime="20220302 18:17:30.988" endtime="20220302 18:17:38.794"/>
</kw>
<msg timestamp="20220302 18:17:38.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:17:30.988" endtime="20220302 18:17:38.795"/>
</kw>
<status status="PASS" starttime="20220302 18:17:30.987" endtime="20220302 18:17:38.795"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:17:38.801" level="INFO">Running command 'ozone sh bucket link 69919-source/readable-bucket 69919-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:17:44.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:17:44.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:17:38.798" endtime="20220302 18:17:44.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:17:44.904" level="INFO"/>
<status status="PASS" starttime="20220302 18:17:44.903" endtime="20220302 18:17:44.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:17:44.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:17:44.905" endtime="20220302 18:17:44.906"/>
</kw>
<status status="PASS" starttime="20220302 18:17:38.797" endtime="20220302 18:17:44.906"/>
</kw>
<msg timestamp="20220302 18:17:44.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:17:38.796" endtime="20220302 18:17:44.907"/>
</kw>
<status status="PASS" starttime="20220302 18:17:38.795" endtime="20220302 18:17:44.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:17:44.915" level="INFO">Running command 'ozone sh bucket link 69919-source/readable-bucket 69919-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:17:51.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:17:51.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:17:44.911" endtime="20220302 18:17:51.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:17:51.333" level="INFO"/>
<status status="PASS" starttime="20220302 18:17:51.333" endtime="20220302 18:17:51.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:17:51.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:17:51.334" endtime="20220302 18:17:51.334"/>
</kw>
<status status="PASS" starttime="20220302 18:17:44.910" endtime="20220302 18:17:51.336"/>
</kw>
<msg timestamp="20220302 18:17:51.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:17:44.910" endtime="20220302 18:17:51.336"/>
</kw>
<status status="PASS" starttime="20220302 18:17:44.909" endtime="20220302 18:17:51.337"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:17:51.340" level="INFO">Running command 'ozone sh bucket link 69919-source/unreadable-bucket 69919-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:17:59.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:17:59.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:17:51.338" endtime="20220302 18:17:59.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:17:59.444" level="INFO"/>
<status status="PASS" starttime="20220302 18:17:59.443" endtime="20220302 18:17:59.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:17:59.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:17:59.445" endtime="20220302 18:17:59.446"/>
</kw>
<status status="PASS" starttime="20220302 18:17:51.338" endtime="20220302 18:17:59.446"/>
</kw>
<msg timestamp="20220302 18:17:59.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:17:51.337" endtime="20220302 18:17:59.447"/>
</kw>
<status status="PASS" starttime="20220302 18:17:51.337" endtime="20220302 18:17:59.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:17:59.457" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 69919-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:07.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:18:07.621" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:17:59.450" endtime="20220302 18:18:07.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:07.622" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:18:07.621" endtime="20220302 18:18:07.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:18:07.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:18:07.622" endtime="20220302 18:18:07.623"/>
</kw>
<status status="PASS" starttime="20220302 18:17:59.449" endtime="20220302 18:18:07.623"/>
</kw>
<msg timestamp="20220302 18:18:07.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:17:59.448" endtime="20220302 18:18:07.624"/>
</kw>
<status status="PASS" starttime="20220302 18:17:59.447" endtime="20220302 18:18:07.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:07.636" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 69919-source 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:14.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:18:14.858" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:18:07.633" endtime="20220302 18:18:14.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:14.859" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:18:14.859" endtime="20220302 18:18:14.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:18:14.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:18:14.860" endtime="20220302 18:18:14.860"/>
</kw>
<status status="PASS" starttime="20220302 18:18:07.631" endtime="20220302 18:18:14.861"/>
</kw>
<msg timestamp="20220302 18:18:14.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:18:07.628" endtime="20220302 18:18:14.862"/>
</kw>
<status status="PASS" starttime="20220302 18:18:07.625" endtime="20220302 18:18:14.862"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:14.866" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 69919-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:22.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:18:22.154" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:18:14.864" endtime="20220302 18:18:22.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:22.156" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:18:22.155" endtime="20220302 18:18:22.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:18:22.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:18:22.157" endtime="20220302 18:18:22.158"/>
</kw>
<status status="PASS" starttime="20220302 18:18:14.863" endtime="20220302 18:18:22.159"/>
</kw>
<msg timestamp="20220302 18:18:22.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:18:14.863" endtime="20220302 18:18:22.160"/>
</kw>
<status status="PASS" starttime="20220302 18:18:14.862" endtime="20220302 18:18:22.161"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:22.167" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 69919-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:30.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:18:30.161" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:18:22.164" endtime="20220302 18:18:30.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:30.162" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:18:30.162" endtime="20220302 18:18:30.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:18:30.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:18:30.162" endtime="20220302 18:18:30.163"/>
</kw>
<status status="PASS" starttime="20220302 18:18:22.163" endtime="20220302 18:18:30.163"/>
</kw>
<msg timestamp="20220302 18:18:30.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:18:22.162" endtime="20220302 18:18:30.164"/>
</kw>
<status status="PASS" starttime="20220302 18:18:22.161" endtime="20220302 18:18:30.164"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:30.168" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 69919-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:38.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:18:38.026" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:18:30.166" endtime="20220302 18:18:38.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:38.027" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:18:38.027" endtime="20220302 18:18:38.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:18:38.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:18:38.028" endtime="20220302 18:18:38.028"/>
</kw>
<status status="PASS" starttime="20220302 18:18:30.166" endtime="20220302 18:18:38.028"/>
</kw>
<msg timestamp="20220302 18:18:38.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:18:30.165" endtime="20220302 18:18:38.029"/>
</kw>
<status status="PASS" starttime="20220302 18:18:30.165" endtime="20220302 18:18:38.030"/>
</kw>
<status status="PASS" starttime="20220302 18:14:12.136" endtime="20220302 18:18:38.030"/>
</kw>
<status status="PASS" starttime="20220302 18:14:12.136" endtime="20220302 18:18:38.030"/>
</kw>
<status status="PASS" starttime="20220302 18:13:59.195" endtime="20220302 18:18:38.030"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:38.037" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:38.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:18:38.042" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:18:38.034" endtime="20220302 18:18:38.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:38.043" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:18:38.042" endtime="20220302 18:18:38.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:18:38.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:18:38.043" endtime="20220302 18:18:38.044"/>
</kw>
<status status="PASS" starttime="20220302 18:18:38.034" endtime="20220302 18:18:38.044"/>
</kw>
<msg timestamp="20220302 18:18:38.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:18:38.034" endtime="20220302 18:18:38.045"/>
</kw>
<msg timestamp="20220302 18:18:38.045" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:18:38.033" endtime="20220302 18:18:38.045"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:18:38.047" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:18:38.045" endtime="20220302 18:18:38.047"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:38.052" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:38.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:18:38.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:18:38.050" endtime="20220302 18:18:38.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:38.087" level="INFO"/>
<status status="PASS" starttime="20220302 18:18:38.086" endtime="20220302 18:18:38.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:18:38.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:18:38.087" endtime="20220302 18:18:38.088"/>
</kw>
<status status="PASS" starttime="20220302 18:18:38.049" endtime="20220302 18:18:38.088"/>
</kw>
<msg timestamp="20220302 18:18:38.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:18:38.048" endtime="20220302 18:18:38.089"/>
</kw>
<status status="PASS" starttime="20220302 18:18:38.048" endtime="20220302 18:18:38.089"/>
</kw>
<status status="PASS" starttime="20220302 18:18:38.047" endtime="20220302 18:18:38.089"/>
</kw>
<status status="PASS" starttime="20220302 18:18:38.032" endtime="20220302 18:18:38.090"/>
</kw>
<status status="PASS" starttime="20220302 18:18:38.032" endtime="20220302 18:18:38.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:38.094" level="INFO">Running command 'ozone sh bucket link 69919-source/no-such-bucket 69919-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:44.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:18:44.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:18:38.092" endtime="20220302 18:18:44.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:44.088" level="INFO"/>
<status status="PASS" starttime="20220302 18:18:44.087" endtime="20220302 18:18:44.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:18:44.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:18:44.088" endtime="20220302 18:18:44.089"/>
</kw>
<status status="PASS" starttime="20220302 18:18:38.091" endtime="20220302 18:18:44.089"/>
</kw>
<msg timestamp="20220302 18:18:44.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:18:38.091" endtime="20220302 18:18:44.090"/>
</kw>
<status status="PASS" starttime="20220302 18:18:38.090" endtime="20220302 18:18:44.090"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:44.093" level="INFO">Running command 'ozone sh key list 69919-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:52.015" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:18:52.016" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220302 18:18:44.091" endtime="20220302 18:18:52.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:52.018" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220302 18:18:52.017" endtime="20220302 18:18:52.018"/>
</kw>
<msg timestamp="20220302 18:18:52.019" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20220302 18:18:44.090" endtime="20220302 18:18:52.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:18:52.020" endtime="20220302 18:18:52.020"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:18:38.031" endtime="20220302 18:18:52.020"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:52.030" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:52.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:18:52.035" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:18:52.026" endtime="20220302 18:18:52.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:52.037" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:18:52.036" endtime="20220302 18:18:52.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:18:52.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:18:52.038" endtime="20220302 18:18:52.039"/>
</kw>
<status status="PASS" starttime="20220302 18:18:52.026" endtime="20220302 18:18:52.039"/>
</kw>
<msg timestamp="20220302 18:18:52.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:18:52.025" endtime="20220302 18:18:52.040"/>
</kw>
<msg timestamp="20220302 18:18:52.040" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:18:52.025" endtime="20220302 18:18:52.040"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:18:52.041" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:18:52.040" endtime="20220302 18:18:52.041"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:52.046" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:18:52.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:18:52.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:18:52.044" endtime="20220302 18:18:52.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:18:52.056" level="INFO"/>
<status status="PASS" starttime="20220302 18:18:52.055" endtime="20220302 18:18:52.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:18:52.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:18:52.057" endtime="20220302 18:18:52.058"/>
</kw>
<status status="PASS" starttime="20220302 18:18:52.043" endtime="20220302 18:18:52.058"/>
</kw>
<msg timestamp="20220302 18:18:52.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:18:52.043" endtime="20220302 18:18:52.059"/>
</kw>
<status status="PASS" starttime="20220302 18:18:52.042" endtime="20220302 18:18:52.060"/>
</kw>
<status status="PASS" starttime="20220302 18:18:52.041" endtime="20220302 18:18:52.060"/>
</kw>
<status status="PASS" starttime="20220302 18:18:52.024" endtime="20220302 18:18:52.060"/>
</kw>
<status status="PASS" starttime="20220302 18:18:52.023" endtime="20220302 18:18:52.060"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:18:52.065" level="INFO">Running command 'ozone sh bucket link 69919-source/bucket1 69919-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:19:00.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:19:00.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:18:52.062" endtime="20220302 18:19:00.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:19:00.048" level="INFO"/>
<status status="PASS" starttime="20220302 18:19:00.046" endtime="20220302 18:19:00.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:19:00.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:19:00.048" endtime="20220302 18:19:00.050"/>
</kw>
<status status="PASS" starttime="20220302 18:18:52.062" endtime="20220302 18:19:00.050"/>
</kw>
<msg timestamp="20220302 18:19:00.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:18:52.061" endtime="20220302 18:19:00.051"/>
</kw>
<status status="PASS" starttime="20220302 18:18:52.060" endtime="20220302 18:19:00.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:19:00.059" level="INFO">Running command 'ozone sh bucket create 69919-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:19:07.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:19:07.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:19:00.055" endtime="20220302 18:19:07.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:19:07.651" level="INFO"/>
<status status="PASS" starttime="20220302 18:19:07.650" endtime="20220302 18:19:07.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:19:07.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:19:07.651" endtime="20220302 18:19:07.652"/>
</kw>
<status status="PASS" starttime="20220302 18:19:00.054" endtime="20220302 18:19:07.652"/>
</kw>
<msg timestamp="20220302 18:19:07.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:19:00.053" endtime="20220302 18:19:07.653"/>
</kw>
<status status="PASS" starttime="20220302 18:19:00.052" endtime="20220302 18:19:07.653"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:19:07.658" level="INFO">Running command 'ozone sh key put 69919-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:20:52.023" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220302 18:19:07.655" endtime="20220302 18:20:52.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220302 18:20:52.024" endtime="20220302 18:20:52.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220302 18:20:52.024" endtime="20220302 18:20:52.024"/>
</kw>
<status status="FAIL" starttime="20220302 18:19:07.654" endtime="20220302 18:20:52.025"/>
</kw>
<msg timestamp="20220302 18:20:52.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220302 18:19:07.654" endtime="20220302 18:20:52.026"/>
</kw>
<status status="FAIL" starttime="20220302 18:19:07.653" endtime="20220302 18:20:52.026"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20220302 18:20:52.026" endtime="20220302 18:20:52.026"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220302 18:18:52.022" endtime="20220302 18:20:52.027">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:20:52.039" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:20:52.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:20:52.042" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:20:52.034" endtime="20220302 18:20:52.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:20:52.044" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:20:52.043" endtime="20220302 18:20:52.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:20:52.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:20:52.044" endtime="20220302 18:20:52.045"/>
</kw>
<status status="PASS" starttime="20220302 18:20:52.033" endtime="20220302 18:20:52.045"/>
</kw>
<msg timestamp="20220302 18:20:52.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:20:52.033" endtime="20220302 18:20:52.046"/>
</kw>
<msg timestamp="20220302 18:20:52.046" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:20:52.032" endtime="20220302 18:20:52.046"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:20:52.047" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:20:52.046" endtime="20220302 18:20:52.047"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:20:52.052" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:20:52.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:20:52.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:20:52.050" endtime="20220302 18:20:52.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:20:52.065" level="INFO"/>
<status status="PASS" starttime="20220302 18:20:52.063" endtime="20220302 18:20:52.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:20:52.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:20:52.065" endtime="20220302 18:20:52.067"/>
</kw>
<status status="PASS" starttime="20220302 18:20:52.049" endtime="20220302 18:20:52.067"/>
</kw>
<msg timestamp="20220302 18:20:52.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:20:52.048" endtime="20220302 18:20:52.068"/>
</kw>
<status status="PASS" starttime="20220302 18:20:52.048" endtime="20220302 18:20:52.069"/>
</kw>
<status status="PASS" starttime="20220302 18:20:52.047" endtime="20220302 18:20:52.069"/>
</kw>
<status status="PASS" starttime="20220302 18:20:52.031" endtime="20220302 18:20:52.070"/>
</kw>
<status status="PASS" starttime="20220302 18:20:52.030" endtime="20220302 18:20:52.070"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:20:52.076" level="INFO">Running command 'ozone sh key put 69919-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:22:52.029" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220302 18:20:52.073" endtime="20220302 18:22:52.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220302 18:22:52.030" endtime="20220302 18:22:52.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220302 18:22:52.030" endtime="20220302 18:22:52.030"/>
</kw>
<status status="FAIL" starttime="20220302 18:20:52.071" endtime="20220302 18:22:52.031"/>
</kw>
<msg timestamp="20220302 18:22:52.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220302 18:20:52.071" endtime="20220302 18:22:52.032"/>
</kw>
<status status="FAIL" starttime="20220302 18:20:52.070" endtime="20220302 18:22:52.032"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220302 18:22:52.032" endtime="20220302 18:22:52.033"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220302 18:20:52.028" endtime="20220302 18:22:52.033">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:22:52.041" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:22:52.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:22:52.044" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:22:52.037" endtime="20220302 18:22:52.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:22:52.045" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:22:52.045" endtime="20220302 18:22:52.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:22:52.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:22:52.046" endtime="20220302 18:22:52.047"/>
</kw>
<status status="PASS" starttime="20220302 18:22:52.037" endtime="20220302 18:22:52.047"/>
</kw>
<msg timestamp="20220302 18:22:52.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:22:52.037" endtime="20220302 18:22:52.049"/>
</kw>
<msg timestamp="20220302 18:22:52.049" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:22:52.036" endtime="20220302 18:22:52.050"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:22:52.051" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:22:52.050" endtime="20220302 18:22:52.051"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:22:52.057" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:22:52.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:22:52.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:22:52.055" endtime="20220302 18:22:52.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:22:52.067" level="INFO"/>
<status status="PASS" starttime="20220302 18:22:52.067" endtime="20220302 18:22:52.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:22:52.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:22:52.068" endtime="20220302 18:22:52.069"/>
</kw>
<status status="PASS" starttime="20220302 18:22:52.054" endtime="20220302 18:22:52.069"/>
</kw>
<msg timestamp="20220302 18:22:52.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:22:52.053" endtime="20220302 18:22:52.071"/>
</kw>
<status status="PASS" starttime="20220302 18:22:52.052" endtime="20220302 18:22:52.071"/>
</kw>
<status status="PASS" starttime="20220302 18:22:52.051" endtime="20220302 18:22:52.071"/>
</kw>
<status status="PASS" starttime="20220302 18:22:52.035" endtime="20220302 18:22:52.072"/>
</kw>
<status status="PASS" starttime="20220302 18:22:52.035" endtime="20220302 18:22:52.072"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:22:52.077" level="INFO">Running command 'ozone sh key list 69919-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:00.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:00.338" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220302 18:22:52.075" endtime="20220302 18:23:00.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:00.339" level="INFO">key1</msg>
<status status="PASS" starttime="20220302 18:23:00.339" endtime="20220302 18:23:00.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:00.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:00.340" endtime="20220302 18:23:00.340"/>
</kw>
<status status="PASS" starttime="20220302 18:22:52.074" endtime="20220302 18:23:00.341"/>
</kw>
<msg timestamp="20220302 18:23:00.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:22:52.073" endtime="20220302 18:23:00.341"/>
</kw>
<msg timestamp="20220302 18:23:00.342" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20220302 18:22:52.072" endtime="20220302 18:23:00.342"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:00.346" level="INFO">Running command 'ozone sh key list 69919-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:07.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:07.752" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20220302 18:23:00.344" endtime="20220302 18:23:07.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:07.755" level="INFO">key1</msg>
<status status="PASS" starttime="20220302 18:23:07.754" endtime="20220302 18:23:07.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:07.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:07.756" endtime="20220302 18:23:07.757"/>
</kw>
<status status="PASS" starttime="20220302 18:23:00.343" endtime="20220302 18:23:07.758"/>
</kw>
<msg timestamp="20220302 18:23:07.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:00.343" endtime="20220302 18:23:07.760"/>
</kw>
<msg timestamp="20220302 18:23:07.760" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20220302 18:23:00.342" endtime="20220302 18:23:07.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:23:07.760" endtime="20220302 18:23:07.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:23:07.762" endtime="20220302 18:23:07.763"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220302 18:23:07.765" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20220302 18:23:07.764" endtime="20220302 18:23:07.766"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220302 18:22:52.034" endtime="20220302 18:23:07.767">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:07.779" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:07.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:07.784" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:23:07.776" endtime="20220302 18:23:07.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:07.787" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:23:07.785" endtime="20220302 18:23:07.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:07.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:07.788" endtime="20220302 18:23:07.789"/>
</kw>
<status status="PASS" starttime="20220302 18:23:07.775" endtime="20220302 18:23:07.790"/>
</kw>
<msg timestamp="20220302 18:23:07.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:07.774" endtime="20220302 18:23:07.792"/>
</kw>
<msg timestamp="20220302 18:23:07.793" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:23:07.772" endtime="20220302 18:23:07.793"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:23:07.794" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:23:07.793" endtime="20220302 18:23:07.794"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:07.801" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:07.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:07.808" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:23:07.796" endtime="20220302 18:23:07.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:07.812" level="INFO"/>
<status status="PASS" starttime="20220302 18:23:07.811" endtime="20220302 18:23:07.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:07.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:07.813" endtime="20220302 18:23:07.814"/>
</kw>
<status status="PASS" starttime="20220302 18:23:07.796" endtime="20220302 18:23:07.815"/>
</kw>
<msg timestamp="20220302 18:23:07.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:07.795" endtime="20220302 18:23:07.817"/>
</kw>
<status status="PASS" starttime="20220302 18:23:07.795" endtime="20220302 18:23:07.818"/>
</kw>
<status status="PASS" starttime="20220302 18:23:07.794" endtime="20220302 18:23:07.818"/>
</kw>
<status status="PASS" starttime="20220302 18:23:07.771" endtime="20220302 18:23:07.819"/>
</kw>
<status status="PASS" starttime="20220302 18:23:07.770" endtime="20220302 18:23:07.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:07.827" level="INFO">Running command 'ozone sh key delete 69919-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:14.324" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:23:14.324" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20220302 18:23:07.823" endtime="20220302 18:23:14.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:14.326" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20220302 18:23:14.325" endtime="20220302 18:23:14.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:14.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20220302 18:23:14.327" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20220302 18:23:14.326" endtime="20220302 18:23:14.328"/>
</kw>
<status status="FAIL" starttime="20220302 18:23:07.822" endtime="20220302 18:23:14.329"/>
</kw>
<msg timestamp="20220302 18:23:14.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220302 18:23:07.821" endtime="20220302 18:23:14.330"/>
</kw>
<status status="FAIL" starttime="20220302 18:23:07.820" endtime="20220302 18:23:14.331"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220302 18:23:14.331" endtime="20220302 18:23:14.331"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:23:14.331" endtime="20220302 18:23:14.331"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220302 18:23:07.769" endtime="20220302 18:23:14.332">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:14.338" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:14.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:14.342" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:23:14.336" endtime="20220302 18:23:14.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:14.344" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:23:14.343" endtime="20220302 18:23:14.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:14.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:14.344" endtime="20220302 18:23:14.345"/>
</kw>
<status status="PASS" starttime="20220302 18:23:14.335" endtime="20220302 18:23:14.345"/>
</kw>
<msg timestamp="20220302 18:23:14.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:14.335" endtime="20220302 18:23:14.346"/>
</kw>
<msg timestamp="20220302 18:23:14.346" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:23:14.335" endtime="20220302 18:23:14.346"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:23:14.347" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:23:14.346" endtime="20220302 18:23:14.347"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:14.351" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:14.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:14.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:23:14.349" endtime="20220302 18:23:14.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:14.360" level="INFO"/>
<status status="PASS" starttime="20220302 18:23:14.359" endtime="20220302 18:23:14.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:14.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:14.360" endtime="20220302 18:23:14.361"/>
</kw>
<status status="PASS" starttime="20220302 18:23:14.349" endtime="20220302 18:23:14.361"/>
</kw>
<msg timestamp="20220302 18:23:14.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:14.348" endtime="20220302 18:23:14.361"/>
</kw>
<status status="PASS" starttime="20220302 18:23:14.348" endtime="20220302 18:23:14.362"/>
</kw>
<status status="PASS" starttime="20220302 18:23:14.347" endtime="20220302 18:23:14.362"/>
</kw>
<status status="PASS" starttime="20220302 18:23:14.334" endtime="20220302 18:23:14.362"/>
</kw>
<status status="PASS" starttime="20220302 18:23:14.333" endtime="20220302 18:23:14.362"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:14.367" level="INFO">Running command 'ozone sh bucket list 69919-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:23.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:23.049" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220302 18:23:14.365" endtime="20220302 18:23:23.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:23.053" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:18:43.959Z",
  "modificationTime" : "2022-03-02T18:18:43.959Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:17:58.976Z",
  "modificationTime" : "2022-03-02T18:18:37.964Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:18:59.821Z",
  "modificationTime" : "2022-03-02T18:18:59.821Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:17:44.802Z",
  "modificationTime" : "2022-03-02T18:18:29.692Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:17:51.017Z",
  "modificationTime" : "2022-03-02T18:17:51.017Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220302 18:23:23.050" endtime="20220302 18:23:23.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:23.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:23.054" endtime="20220302 18:23:23.054"/>
</kw>
<status status="PASS" starttime="20220302 18:23:14.365" endtime="20220302 18:23:23.055"/>
</kw>
<msg timestamp="20220302 18:23:23.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:14.363" endtime="20220302 18:23:23.056"/>
</kw>
<msg timestamp="20220302 18:23:23.056" level="INFO">${result} = [ {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "202...</msg>
<status status="PASS" starttime="20220302 18:23:14.362" endtime="20220302 18:23:23.056"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:23:23.057" endtime="20220302 18:23:23.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:23:23.057" endtime="20220302 18:23:23.058"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:23:14.332" endtime="20220302 18:23:23.059"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:23.070" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:23.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:23.076" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:23:23.067" endtime="20220302 18:23:23.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:23.078" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:23:23.077" endtime="20220302 18:23:23.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:23.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:23.079" endtime="20220302 18:23:23.080"/>
</kw>
<status status="PASS" starttime="20220302 18:23:23.065" endtime="20220302 18:23:23.082"/>
</kw>
<msg timestamp="20220302 18:23:23.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:23.064" endtime="20220302 18:23:23.083"/>
</kw>
<msg timestamp="20220302 18:23:23.083" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:23:23.064" endtime="20220302 18:23:23.083"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:23:23.085" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:23:23.084" endtime="20220302 18:23:23.085"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:23.092" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:23.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:23.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:23:23.089" endtime="20220302 18:23:23.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:23.105" level="INFO"/>
<status status="PASS" starttime="20220302 18:23:23.104" endtime="20220302 18:23:23.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:23.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:23.105" endtime="20220302 18:23:23.106"/>
</kw>
<status status="PASS" starttime="20220302 18:23:23.088" endtime="20220302 18:23:23.107"/>
</kw>
<msg timestamp="20220302 18:23:23.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:23.087" endtime="20220302 18:23:23.108"/>
</kw>
<status status="PASS" starttime="20220302 18:23:23.086" endtime="20220302 18:23:23.108"/>
</kw>
<status status="PASS" starttime="20220302 18:23:23.085" endtime="20220302 18:23:23.108"/>
</kw>
<status status="PASS" starttime="20220302 18:23:23.063" endtime="20220302 18:23:23.108"/>
</kw>
<status status="PASS" starttime="20220302 18:23:23.062" endtime="20220302 18:23:23.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:23.113" level="INFO">Running command 'ozone sh bucket info 69919-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:32.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:32.000" level="INFO">${output} = {
  "volumeName" : "69919-target",
  "bucketName" : "link1",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-03-02T18:18:59.821Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220302 18:23:23.111" endtime="20220302 18:23:32.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:32.002" level="INFO">{
  "volumeName" : "69919-target",
  "bucketName" : "link1",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-03-02T18:18:59.821Z",
  "modificationTime" : "2022-03-02T18:18:59.821Z"
}</msg>
<status status="PASS" starttime="20220302 18:23:32.001" endtime="20220302 18:23:32.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:32.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:32.002" endtime="20220302 18:23:32.003"/>
</kw>
<status status="PASS" starttime="20220302 18:23:23.110" endtime="20220302 18:23:32.004"/>
</kw>
<msg timestamp="20220302 18:23:32.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:23.110" endtime="20220302 18:23:32.006"/>
</kw>
<msg timestamp="20220302 18:23:32.007" level="INFO">${result} = {
  "volumeName" : "69919-target",
  "bucketName" : "link1",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2022-03-02T18:18:59.821Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20220302 18:23:23.109" endtime="20220302 18:23:32.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:23:32.007" endtime="20220302 18:23:32.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:23:32.008" endtime="20220302 18:23:32.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:23:32.009" endtime="20220302 18:23:32.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:23:32.010" endtime="20220302 18:23:32.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:23:32.011" endtime="20220302 18:23:32.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:23:32.011" endtime="20220302 18:23:32.012"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:23:32.012" endtime="20220302 18:23:32.012"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:23:23.061" endtime="20220302 18:23:32.013"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:32.021" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:32.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:32.027" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:23:32.018" endtime="20220302 18:23:32.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:32.029" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:23:32.028" endtime="20220302 18:23:32.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:32.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:32.029" endtime="20220302 18:23:32.031"/>
</kw>
<status status="PASS" starttime="20220302 18:23:32.018" endtime="20220302 18:23:32.031"/>
</kw>
<msg timestamp="20220302 18:23:32.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:32.017" endtime="20220302 18:23:32.033"/>
</kw>
<msg timestamp="20220302 18:23:32.033" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:23:32.016" endtime="20220302 18:23:32.033"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:23:32.034" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:23:32.033" endtime="20220302 18:23:32.034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:32.041" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:32.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:32.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:23:32.039" endtime="20220302 18:23:32.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:32.056" level="INFO"/>
<status status="PASS" starttime="20220302 18:23:32.055" endtime="20220302 18:23:32.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:32.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:32.057" endtime="20220302 18:23:32.058"/>
</kw>
<status status="PASS" starttime="20220302 18:23:32.038" endtime="20220302 18:23:32.058"/>
</kw>
<msg timestamp="20220302 18:23:32.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:32.036" endtime="20220302 18:23:32.059"/>
</kw>
<status status="PASS" starttime="20220302 18:23:32.035" endtime="20220302 18:23:32.059"/>
</kw>
<status status="PASS" starttime="20220302 18:23:32.035" endtime="20220302 18:23:32.059"/>
</kw>
<status status="PASS" starttime="20220302 18:23:32.016" endtime="20220302 18:23:32.059"/>
</kw>
<status status="PASS" starttime="20220302 18:23:32.015" endtime="20220302 18:23:32.059"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:32.065" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 69919-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:38.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:38.515" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:23:32.062" endtime="20220302 18:23:38.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:38.516" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:23:38.515" endtime="20220302 18:23:38.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:38.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:38.517" endtime="20220302 18:23:38.518"/>
</kw>
<status status="PASS" starttime="20220302 18:23:32.061" endtime="20220302 18:23:38.519"/>
</kw>
<msg timestamp="20220302 18:23:38.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:32.060" endtime="20220302 18:23:38.520"/>
</kw>
<status status="PASS" starttime="20220302 18:23:32.060" endtime="20220302 18:23:38.520"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:38.532" level="INFO">Running command 'ozone sh bucket getacl 69919-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:47.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:47.407" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220302 18:23:38.528" endtime="20220302 18:23:47.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:47.408" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220302 18:23:47.407" endtime="20220302 18:23:47.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:47.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:47.408" endtime="20220302 18:23:47.409"/>
</kw>
<status status="PASS" starttime="20220302 18:23:38.525" endtime="20220302 18:23:47.410"/>
</kw>
<msg timestamp="20220302 18:23:47.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:38.525" endtime="20220302 18:23:47.411"/>
</kw>
<msg timestamp="20220302 18:23:47.411" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20220302 18:23:38.522" endtime="20220302 18:23:47.411"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:23:47.411" endtime="20220302 18:23:47.412"/>
</kw>
<status status="PASS" starttime="20220302 18:23:38.521" endtime="20220302 18:23:47.412"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:47.419" level="INFO">Running command 'ozone sh bucket getacl 69919-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:23:55.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:23:55.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:23:47.417" endtime="20220302 18:23:55.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:23:55.782" level="INFO"/>
<status status="PASS" starttime="20220302 18:23:55.781" endtime="20220302 18:23:55.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:23:55.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:23:55.783" endtime="20220302 18:23:55.785"/>
</kw>
<status status="PASS" starttime="20220302 18:23:47.416" endtime="20220302 18:23:55.786"/>
</kw>
<msg timestamp="20220302 18:23:55.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:47.415" endtime="20220302 18:23:55.787"/>
</kw>
<msg timestamp="20220302 18:23:55.788" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220302 18:23:47.414" endtime="20220302 18:23:55.788"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:23:55.788" endtime="20220302 18:23:55.789"/>
</kw>
<status status="PASS" starttime="20220302 18:23:47.412" endtime="20220302 18:23:55.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:23:55.797" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 69919-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:04.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:04.358" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:23:55.793" endtime="20220302 18:24:04.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:04.361" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:24:04.359" endtime="20220302 18:24:04.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:04.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:04.361" endtime="20220302 18:24:04.362"/>
</kw>
<status status="PASS" starttime="20220302 18:23:55.792" endtime="20220302 18:24:04.363"/>
</kw>
<msg timestamp="20220302 18:24:04.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:23:55.791" endtime="20220302 18:24:04.364"/>
</kw>
<status status="PASS" starttime="20220302 18:23:55.790" endtime="20220302 18:24:04.365"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:04.375" level="INFO">Running command 'ozone sh bucket getacl 69919-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:12.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:12.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:24:04.372" endtime="20220302 18:24:12.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:12.908" level="INFO"/>
<status status="PASS" starttime="20220302 18:24:12.907" endtime="20220302 18:24:12.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:12.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:12.908" endtime="20220302 18:24:12.909"/>
</kw>
<status status="PASS" starttime="20220302 18:24:04.371" endtime="20220302 18:24:12.909"/>
</kw>
<msg timestamp="20220302 18:24:12.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:04.370" endtime="20220302 18:24:12.910"/>
</kw>
<msg timestamp="20220302 18:24:12.910" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20220302 18:24:04.368" endtime="20220302 18:24:12.910"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:24:12.910" endtime="20220302 18:24:12.911"/>
</kw>
<status status="PASS" starttime="20220302 18:24:04.365" endtime="20220302 18:24:12.911"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:12.918" level="INFO">Running command 'ozone sh bucket getacl 69919-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:20.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:20.669" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20220302 18:24:12.915" endtime="20220302 18:24:20.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:20.672" level="INFO">READ</msg>
<status status="PASS" starttime="20220302 18:24:20.670" endtime="20220302 18:24:20.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:20.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:20.672" endtime="20220302 18:24:20.673"/>
</kw>
<status status="PASS" starttime="20220302 18:24:12.915" endtime="20220302 18:24:20.674"/>
</kw>
<msg timestamp="20220302 18:24:20.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:12.914" endtime="20220302 18:24:20.675"/>
</kw>
<msg timestamp="20220302 18:24:20.676" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20220302 18:24:12.912" endtime="20220302 18:24:20.676"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:24:20.676" endtime="20220302 18:24:20.678"/>
</kw>
<status status="PASS" starttime="20220302 18:24:12.911" endtime="20220302 18:24:20.678"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:23:32.013" endtime="20220302 18:24:20.679"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:20.691" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:20.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:20.696" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:24:20.687" endtime="20220302 18:24:20.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:20.698" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:24:20.697" endtime="20220302 18:24:20.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:20.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:20.698" endtime="20220302 18:24:20.699"/>
</kw>
<status status="PASS" starttime="20220302 18:24:20.686" endtime="20220302 18:24:20.700"/>
</kw>
<msg timestamp="20220302 18:24:20.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:20.685" endtime="20220302 18:24:20.701"/>
</kw>
<msg timestamp="20220302 18:24:20.701" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:24:20.684" endtime="20220302 18:24:20.701"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:24:20.703" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:24:20.702" endtime="20220302 18:24:20.703"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:20.710" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:20.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:20.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:24:20.707" endtime="20220302 18:24:20.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:20.761" level="INFO"/>
<status status="PASS" starttime="20220302 18:24:20.760" endtime="20220302 18:24:20.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:20.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:20.761" endtime="20220302 18:24:20.762"/>
</kw>
<status status="PASS" starttime="20220302 18:24:20.706" endtime="20220302 18:24:20.762"/>
</kw>
<msg timestamp="20220302 18:24:20.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:20.705" endtime="20220302 18:24:20.763"/>
</kw>
<status status="PASS" starttime="20220302 18:24:20.704" endtime="20220302 18:24:20.763"/>
</kw>
<status status="PASS" starttime="20220302 18:24:20.703" endtime="20220302 18:24:20.763"/>
</kw>
<status status="PASS" starttime="20220302 18:24:20.683" endtime="20220302 18:24:20.763"/>
</kw>
<status status="PASS" starttime="20220302 18:24:20.682" endtime="20220302 18:24:20.763"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:20.769" level="INFO">Running command 'ozone sh bucket link 69919-source/bucket2 69919-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:29.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:29.251" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:24:20.766" endtime="20220302 18:24:29.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:29.253" level="INFO"/>
<status status="PASS" starttime="20220302 18:24:29.252" endtime="20220302 18:24:29.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:29.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:29.254" endtime="20220302 18:24:29.255"/>
</kw>
<status status="PASS" starttime="20220302 18:24:20.765" endtime="20220302 18:24:29.255"/>
</kw>
<msg timestamp="20220302 18:24:29.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:20.764" endtime="20220302 18:24:29.256"/>
</kw>
<status status="PASS" starttime="20220302 18:24:20.764" endtime="20220302 18:24:29.256"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:29.260" level="INFO">Running command 'ozone sh bucket create 69919-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:37.013" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:24:37.013" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220302 18:24:29.257" endtime="20220302 18:24:37.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:37.016" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220302 18:24:37.014" endtime="20220302 18:24:37.016"/>
</kw>
<msg timestamp="20220302 18:24:37.017" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220302 18:24:29.256" endtime="20220302 18:24:37.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:24:37.018" endtime="20220302 18:24:37.018"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:37.026" level="INFO">Running command 'ozone sh bucket create 69919-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:45.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:45.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:24:37.022" endtime="20220302 18:24:45.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:45.177" level="INFO"/>
<status status="PASS" starttime="20220302 18:24:45.176" endtime="20220302 18:24:45.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:45.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:45.178" endtime="20220302 18:24:45.179"/>
</kw>
<status status="PASS" starttime="20220302 18:24:37.020" endtime="20220302 18:24:45.179"/>
</kw>
<msg timestamp="20220302 18:24:45.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:37.020" endtime="20220302 18:24:45.180"/>
</kw>
<status status="PASS" starttime="20220302 18:24:37.019" endtime="20220302 18:24:45.180"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:45.184" level="INFO">Running command 'ozone sh bucket link 69919-source/bucket1 69919-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:52.800" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:24:52.800" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220302 18:24:45.182" endtime="20220302 18:24:52.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:52.802" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220302 18:24:52.801" endtime="20220302 18:24:52.802"/>
</kw>
<msg timestamp="20220302 18:24:52.802" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20220302 18:24:45.181" endtime="20220302 18:24:52.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:24:52.802" endtime="20220302 18:24:52.803"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:24:20.680" endtime="20220302 18:24:52.803"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:52.813" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:52.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:52.817" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:24:52.810" endtime="20220302 18:24:52.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:52.818" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:24:52.817" endtime="20220302 18:24:52.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:52.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:52.819" endtime="20220302 18:24:52.820"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.809" endtime="20220302 18:24:52.820"/>
</kw>
<msg timestamp="20220302 18:24:52.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:52.809" endtime="20220302 18:24:52.821"/>
</kw>
<msg timestamp="20220302 18:24:52.821" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:24:52.808" endtime="20220302 18:24:52.822"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:24:52.823" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:24:52.822" endtime="20220302 18:24:52.823"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:52.830" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:52.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:52.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:24:52.826" endtime="20220302 18:24:52.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:52.843" level="INFO"/>
<status status="PASS" starttime="20220302 18:24:52.841" endtime="20220302 18:24:52.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:52.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:52.843" endtime="20220302 18:24:52.844"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.825" endtime="20220302 18:24:52.845"/>
</kw>
<msg timestamp="20220302 18:24:52.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:52.824" endtime="20220302 18:24:52.846"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.824" endtime="20220302 18:24:52.847"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.823" endtime="20220302 18:24:52.847"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.806" endtime="20220302 18:24:52.847"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.805" endtime="20220302 18:24:52.847"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:52.855" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:52.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:52.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:24:52.852" endtime="20220302 18:24:52.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:52.862" level="INFO"/>
<status status="PASS" starttime="20220302 18:24:52.861" endtime="20220302 18:24:52.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:52.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:52.862" endtime="20220302 18:24:52.863"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.851" endtime="20220302 18:24:52.863"/>
</kw>
<msg timestamp="20220302 18:24:52.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:52.850" endtime="20220302 18:24:52.865"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.849" endtime="20220302 18:24:52.865"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:52.870" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:52.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:52.876" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:24:52.868" endtime="20220302 18:24:52.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:52.878" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:24:52.877" endtime="20220302 18:24:52.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:52.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:52.879" endtime="20220302 18:24:52.880"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.867" endtime="20220302 18:24:52.881"/>
</kw>
<msg timestamp="20220302 18:24:52.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:52.867" endtime="20220302 18:24:52.882"/>
</kw>
<msg timestamp="20220302 18:24:52.882" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:24:52.866" endtime="20220302 18:24:52.882"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:24:52.883" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:24:52.882" endtime="20220302 18:24:52.883"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:52.888" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:24:52.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:24:52.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:24:52.886" endtime="20220302 18:24:52.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:24:52.899" level="INFO"/>
<status status="PASS" starttime="20220302 18:24:52.898" endtime="20220302 18:24:52.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:24:52.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:24:52.899" endtime="20220302 18:24:52.900"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.885" endtime="20220302 18:24:52.900"/>
</kw>
<msg timestamp="20220302 18:24:52.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:24:52.884" endtime="20220302 18:24:52.901"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.884" endtime="20220302 18:24:52.902"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.883" endtime="20220302 18:24:52.902"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.866" endtime="20220302 18:24:52.902"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.865" endtime="20220302 18:24:52.902"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:24:52.906" level="INFO">Running command 'ozone sh key list 69919-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:01.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:01.558" level="INFO">${output} = [ {
  "volumeName" : "69919-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-03-02T18:14:26.595Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220302 18:24:52.903" endtime="20220302 18:25:01.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:01.561" level="INFO">[ {
  "volumeName" : "69919-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-03-02T18:14:26.595Z",
  "modificationTime" : "2022-03-02T18:17:30.427Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
} ]</msg>
<status status="PASS" starttime="20220302 18:25:01.559" endtime="20220302 18:25:01.561"/>
</kw>
<msg timestamp="20220302 18:25:01.562" level="INFO">${result} = [ {
  "volumeName" : "69919-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2022-03-02T18:14:26.595Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20220302 18:24:52.903" endtime="20220302 18:25:01.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:25:01.562" endtime="20220302 18:25:01.563"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.849" endtime="20220302 18:25:01.563"/>
</kw>
<status status="PASS" starttime="20220302 18:24:52.848" endtime="20220302 18:25:01.563"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:24:52.804" endtime="20220302 18:25:01.564"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:01.576" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:01.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:01.581" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:25:01.573" endtime="20220302 18:25:01.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:01.584" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:25:01.582" endtime="20220302 18:25:01.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:01.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:01.584" endtime="20220302 18:25:01.585"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.573" endtime="20220302 18:25:01.586"/>
</kw>
<msg timestamp="20220302 18:25:01.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:01.572" endtime="20220302 18:25:01.587"/>
</kw>
<msg timestamp="20220302 18:25:01.588" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:25:01.570" endtime="20220302 18:25:01.588"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:25:01.589" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:25:01.588" endtime="20220302 18:25:01.589"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:01.596" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:01.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:01.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:01.593" endtime="20220302 18:25:01.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:01.607" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:01.606" endtime="20220302 18:25:01.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:01.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:01.607" endtime="20220302 18:25:01.610"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.592" endtime="20220302 18:25:01.611"/>
</kw>
<msg timestamp="20220302 18:25:01.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:01.592" endtime="20220302 18:25:01.611"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.590" endtime="20220302 18:25:01.612"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.590" endtime="20220302 18:25:01.612"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.569" endtime="20220302 18:25:01.612"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.568" endtime="20220302 18:25:01.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:01.619" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:01.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:01.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:01.616" endtime="20220302 18:25:01.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:01.624" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:01.624" endtime="20220302 18:25:01.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:01.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:01.625" endtime="20220302 18:25:01.626"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.615" endtime="20220302 18:25:01.626"/>
</kw>
<msg timestamp="20220302 18:25:01.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:01.615" endtime="20220302 18:25:01.627"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.615" endtime="20220302 18:25:01.627"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:01.633" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:01.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:01.638" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:25:01.630" endtime="20220302 18:25:01.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:01.640" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:25:01.639" endtime="20220302 18:25:01.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:01.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:01.640" endtime="20220302 18:25:01.641"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.629" endtime="20220302 18:25:01.641"/>
</kw>
<msg timestamp="20220302 18:25:01.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:01.629" endtime="20220302 18:25:01.642"/>
</kw>
<msg timestamp="20220302 18:25:01.643" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:25:01.628" endtime="20220302 18:25:01.643"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:25:01.644" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:25:01.643" endtime="20220302 18:25:01.644"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:01.651" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:01.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:01.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:01.648" endtime="20220302 18:25:01.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:01.662" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:01.661" endtime="20220302 18:25:01.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:01.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:01.663" endtime="20220302 18:25:01.664"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.647" endtime="20220302 18:25:01.664"/>
</kw>
<msg timestamp="20220302 18:25:01.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:01.646" endtime="20220302 18:25:01.666"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.645" endtime="20220302 18:25:01.666"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.645" endtime="20220302 18:25:01.666"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.628" endtime="20220302 18:25:01.667"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.627" endtime="20220302 18:25:01.667"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:01.671" level="INFO">Running command 'ozone sh key list 69919-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:09.357" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:25:09.357" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:69919-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220302 18:25:01.668" endtime="20220302 18:25:09.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:09.360" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:69919-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220302 18:25:09.358" endtime="20220302 18:25:09.360"/>
</kw>
<msg timestamp="20220302 18:25:09.361" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket Volume:69919-target Bucket:unreadable-link </msg>
<status status="PASS" starttime="20220302 18:25:01.667" endtime="20220302 18:25:09.361"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:25:09.361" endtime="20220302 18:25:09.362"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.614" endtime="20220302 18:25:09.362"/>
</kw>
<status status="PASS" starttime="20220302 18:25:01.613" endtime="20220302 18:25:09.362"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:25:01.567" endtime="20220302 18:25:09.363"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:09.373" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:09.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:09.378" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:25:09.370" endtime="20220302 18:25:09.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:09.380" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:25:09.379" endtime="20220302 18:25:09.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:09.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:09.380" endtime="20220302 18:25:09.381"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.369" endtime="20220302 18:25:09.381"/>
</kw>
<msg timestamp="20220302 18:25:09.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:09.368" endtime="20220302 18:25:09.382"/>
</kw>
<msg timestamp="20220302 18:25:09.383" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:25:09.368" endtime="20220302 18:25:09.383"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:25:09.384" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:25:09.383" endtime="20220302 18:25:09.384"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:09.393" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:09.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:09.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:09.388" endtime="20220302 18:25:09.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:09.405" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:09.404" endtime="20220302 18:25:09.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:09.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:09.405" endtime="20220302 18:25:09.406"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.387" endtime="20220302 18:25:09.406"/>
</kw>
<msg timestamp="20220302 18:25:09.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:09.386" endtime="20220302 18:25:09.407"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.385" endtime="20220302 18:25:09.407"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.384" endtime="20220302 18:25:09.408"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.367" endtime="20220302 18:25:09.408"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.366" endtime="20220302 18:25:09.408"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:09.414" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:09.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:09.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:09.412" endtime="20220302 18:25:09.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:09.420" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:09.419" endtime="20220302 18:25:09.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:09.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:09.420" endtime="20220302 18:25:09.421"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.411" endtime="20220302 18:25:09.421"/>
</kw>
<msg timestamp="20220302 18:25:09.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:09.410" endtime="20220302 18:25:09.422"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.410" endtime="20220302 18:25:09.422"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:09.428" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:09.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:09.432" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:25:09.426" endtime="20220302 18:25:09.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:09.433" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:25:09.433" endtime="20220302 18:25:09.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:09.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:09.434" endtime="20220302 18:25:09.434"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.425" endtime="20220302 18:25:09.435"/>
</kw>
<msg timestamp="20220302 18:25:09.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:09.424" endtime="20220302 18:25:09.435"/>
</kw>
<msg timestamp="20220302 18:25:09.436" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:25:09.424" endtime="20220302 18:25:09.436"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:25:09.436" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:25:09.436" endtime="20220302 18:25:09.437"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:09.443" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:09.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:09.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:09.440" endtime="20220302 18:25:09.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:09.455" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:09.454" endtime="20220302 18:25:09.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:09.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:09.455" endtime="20220302 18:25:09.456"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.439" endtime="20220302 18:25:09.456"/>
</kw>
<msg timestamp="20220302 18:25:09.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:09.439" endtime="20220302 18:25:09.457"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.438" endtime="20220302 18:25:09.458"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.437" endtime="20220302 18:25:09.458"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.423" endtime="20220302 18:25:09.458"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.422" endtime="20220302 18:25:09.458"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:09.464" level="INFO">Running command 'ozone sh bucket info 69919-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:17.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:17.639" level="INFO">${output} = {
  "volumeName" : "69919-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-03-02T18:17:58.976Z...</msg>
<status status="PASS" starttime="20220302 18:25:09.461" endtime="20220302 18:25:17.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:17.642" level="INFO">{
  "volumeName" : "69919-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-03-02T18:17:58.976Z",
  "modificationTime" : "2022-03-02T18:18:37.964Z"
}</msg>
<status status="PASS" starttime="20220302 18:25:17.640" endtime="20220302 18:25:17.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:17.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:17.643" endtime="20220302 18:25:17.644"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.460" endtime="20220302 18:25:17.644"/>
</kw>
<msg timestamp="20220302 18:25:17.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:09.459" endtime="20220302 18:25:17.645"/>
</kw>
<msg timestamp="20220302 18:25:17.646" level="INFO">${result} = {
  "volumeName" : "69919-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2022-03-02T18:17:58.976Z...</msg>
<status status="PASS" starttime="20220302 18:25:09.459" endtime="20220302 18:25:17.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:25:17.646" endtime="20220302 18:25:17.647"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:25:17.647" endtime="20220302 18:25:17.647"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:17.651" level="INFO">Running command 'ozone sh key list 69919-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:26.156" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:25:26.156" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:69919-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220302 18:25:17.648" endtime="20220302 18:25:26.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:26.158" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:69919-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220302 18:25:26.156" endtime="20220302 18:25:26.158"/>
</kw>
<msg timestamp="20220302 18:25:26.158" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket Volume:69919-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20220302 18:25:17.647" endtime="20220302 18:25:26.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:25:26.159" endtime="20220302 18:25:26.159"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.409" endtime="20220302 18:25:26.160"/>
</kw>
<status status="PASS" starttime="20220302 18:25:09.409" endtime="20220302 18:25:26.160"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:25:09.364" endtime="20220302 18:25:26.161"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:26.169" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:26.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:26.178" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:25:26.166" endtime="20220302 18:25:26.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:26.181" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:25:26.179" endtime="20220302 18:25:26.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:26.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:26.181" endtime="20220302 18:25:26.182"/>
</kw>
<status status="PASS" starttime="20220302 18:25:26.165" endtime="20220302 18:25:26.183"/>
</kw>
<msg timestamp="20220302 18:25:26.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:26.165" endtime="20220302 18:25:26.183"/>
</kw>
<msg timestamp="20220302 18:25:26.184" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:25:26.164" endtime="20220302 18:25:26.184"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:25:26.185" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:25:26.184" endtime="20220302 18:25:26.185"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:26.192" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:26.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:26.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:26.188" endtime="20220302 18:25:26.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:26.207" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:26.206" endtime="20220302 18:25:26.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:26.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:26.208" endtime="20220302 18:25:26.208"/>
</kw>
<status status="PASS" starttime="20220302 18:25:26.187" endtime="20220302 18:25:26.209"/>
</kw>
<msg timestamp="20220302 18:25:26.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:26.187" endtime="20220302 18:25:26.210"/>
</kw>
<status status="PASS" starttime="20220302 18:25:26.186" endtime="20220302 18:25:26.210"/>
</kw>
<status status="PASS" starttime="20220302 18:25:26.185" endtime="20220302 18:25:26.210"/>
</kw>
<status status="PASS" starttime="20220302 18:25:26.163" endtime="20220302 18:25:26.211"/>
</kw>
<status status="PASS" starttime="20220302 18:25:26.163" endtime="20220302 18:25:26.211"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:26.217" level="INFO">Running command 'ozone sh bucket link 69919-target/loop1 69919-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:33.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:33.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:26.214" endtime="20220302 18:25:33.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:33.931" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:33.929" endtime="20220302 18:25:33.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:33.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:33.931" endtime="20220302 18:25:33.933"/>
</kw>
<status status="PASS" starttime="20220302 18:25:26.213" endtime="20220302 18:25:33.933"/>
</kw>
<msg timestamp="20220302 18:25:33.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:26.213" endtime="20220302 18:25:33.935"/>
</kw>
<status status="PASS" starttime="20220302 18:25:26.212" endtime="20220302 18:25:33.935"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:33.941" level="INFO">Running command 'ozone sh bucket link 69919-target/loop2 69919-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:39.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:39.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:33.938" endtime="20220302 18:25:39.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:39.685" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:39.684" endtime="20220302 18:25:39.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:39.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:39.686" endtime="20220302 18:25:39.686"/>
</kw>
<status status="PASS" starttime="20220302 18:25:33.937" endtime="20220302 18:25:39.687"/>
</kw>
<msg timestamp="20220302 18:25:39.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:33.936" endtime="20220302 18:25:39.687"/>
</kw>
<status status="PASS" starttime="20220302 18:25:33.935" endtime="20220302 18:25:39.688"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:39.692" level="INFO">Running command 'ozone sh bucket link 69919-target/loop3 69919-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:47.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:47.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:39.690" endtime="20220302 18:25:47.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:47.328" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:47.326" endtime="20220302 18:25:47.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:47.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:47.328" endtime="20220302 18:25:47.330"/>
</kw>
<status status="PASS" starttime="20220302 18:25:39.689" endtime="20220302 18:25:47.330"/>
</kw>
<msg timestamp="20220302 18:25:47.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:39.689" endtime="20220302 18:25:47.332"/>
</kw>
<status status="PASS" starttime="20220302 18:25:39.688" endtime="20220302 18:25:47.332"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:47.337" level="INFO">Running command 'ozone sh key list 69919-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:55.427" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:25:55.427" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 69919-target</msg>
<status status="PASS" starttime="20220302 18:25:47.334" endtime="20220302 18:25:55.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:55.429" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 69919-target</msg>
<status status="PASS" starttime="20220302 18:25:55.428" endtime="20220302 18:25:55.429"/>
</kw>
<msg timestamp="20220302 18:25:55.430" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 69919-target</msg>
<status status="PASS" starttime="20220302 18:25:47.333" endtime="20220302 18:25:55.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:25:55.430" endtime="20220302 18:25:55.431"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:25:26.161" endtime="20220302 18:25:55.431"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:55.444" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:55.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:55.449" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:25:55.439" endtime="20220302 18:25:55.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:55.452" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:25:55.450" endtime="20220302 18:25:55.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:55.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:55.452" endtime="20220302 18:25:55.453"/>
</kw>
<status status="PASS" starttime="20220302 18:25:55.438" endtime="20220302 18:25:55.454"/>
</kw>
<msg timestamp="20220302 18:25:55.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:55.437" endtime="20220302 18:25:55.454"/>
</kw>
<msg timestamp="20220302 18:25:55.455" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:25:55.435" endtime="20220302 18:25:55.455"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:25:55.456" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:25:55.455" endtime="20220302 18:25:55.456"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:55.463" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:25:55.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:25:55.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:55.459" endtime="20220302 18:25:55.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:25:55.472" level="INFO"/>
<status status="PASS" starttime="20220302 18:25:55.471" endtime="20220302 18:25:55.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:25:55.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:25:55.473" endtime="20220302 18:25:55.474"/>
</kw>
<status status="PASS" starttime="20220302 18:25:55.458" endtime="20220302 18:25:55.474"/>
</kw>
<msg timestamp="20220302 18:25:55.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:55.457" endtime="20220302 18:25:55.475"/>
</kw>
<status status="PASS" starttime="20220302 18:25:55.457" endtime="20220302 18:25:55.475"/>
</kw>
<status status="PASS" starttime="20220302 18:25:55.456" endtime="20220302 18:25:55.475"/>
</kw>
<status status="PASS" starttime="20220302 18:25:55.434" endtime="20220302 18:25:55.475"/>
</kw>
<status status="PASS" starttime="20220302 18:25:55.434" endtime="20220302 18:25:55.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:25:55.483" level="INFO">Running command 'ozone sh bucket link 69919-source/bucket1 69919-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:26:02.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:26:02.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:25:55.478" endtime="20220302 18:26:02.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:26:02.867" level="INFO"/>
<status status="PASS" starttime="20220302 18:26:02.866" endtime="20220302 18:26:02.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:26:02.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:26:02.868" endtime="20220302 18:26:02.869"/>
</kw>
<status status="PASS" starttime="20220302 18:25:55.477" endtime="20220302 18:26:02.869"/>
</kw>
<msg timestamp="20220302 18:26:02.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:25:55.477" endtime="20220302 18:26:02.871"/>
</kw>
<status status="PASS" starttime="20220302 18:25:55.476" endtime="20220302 18:26:02.872"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:26:02.878" level="INFO">Running command 'ozone sh key put 69919-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:27:55.434" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20220302 18:26:02.875" endtime="20220302 18:27:55.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220302 18:27:55.435" endtime="20220302 18:27:55.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220302 18:27:55.435" endtime="20220302 18:27:55.435"/>
</kw>
<status status="FAIL" starttime="20220302 18:26:02.873" endtime="20220302 18:27:55.435"/>
</kw>
<msg timestamp="20220302 18:27:55.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220302 18:26:02.873" endtime="20220302 18:27:55.436"/>
</kw>
<status status="FAIL" starttime="20220302 18:26:02.872" endtime="20220302 18:27:55.436"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20220302 18:27:55.437" endtime="20220302 18:27:55.437"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20220302 18:25:55.433" endtime="20220302 18:27:55.437">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:27:55.449" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:27:55.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:27:55.456" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:27:55.444" endtime="20220302 18:27:55.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:27:55.458" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:27:55.457" endtime="20220302 18:27:55.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:27:55.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:27:55.458" endtime="20220302 18:27:55.459"/>
</kw>
<status status="PASS" starttime="20220302 18:27:55.443" endtime="20220302 18:27:55.459"/>
</kw>
<msg timestamp="20220302 18:27:55.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:27:55.442" endtime="20220302 18:27:55.460"/>
</kw>
<msg timestamp="20220302 18:27:55.460" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:27:55.441" endtime="20220302 18:27:55.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:27:55.461" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:27:55.460" endtime="20220302 18:27:55.461"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:27:55.465" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:27:55.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:27:55.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:27:55.463" endtime="20220302 18:27:55.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:27:55.495" level="INFO"/>
<status status="PASS" starttime="20220302 18:27:55.494" endtime="20220302 18:27:55.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:27:55.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:27:55.496" endtime="20220302 18:27:55.497"/>
</kw>
<status status="PASS" starttime="20220302 18:27:55.463" endtime="20220302 18:27:55.497"/>
</kw>
<msg timestamp="20220302 18:27:55.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:27:55.463" endtime="20220302 18:27:55.498"/>
</kw>
<status status="PASS" starttime="20220302 18:27:55.462" endtime="20220302 18:27:55.498"/>
</kw>
<status status="PASS" starttime="20220302 18:27:55.461" endtime="20220302 18:27:55.499"/>
</kw>
<status status="PASS" starttime="20220302 18:27:55.440" endtime="20220302 18:27:55.501"/>
</kw>
<status status="PASS" starttime="20220302 18:27:55.440" endtime="20220302 18:27:55.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:27:55.506" level="INFO">Running command 'ozone sh bucket delete 69919-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:28:01.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:28:01.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:27:55.503" endtime="20220302 18:28:01.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:28:01.723" level="INFO"/>
<status status="PASS" starttime="20220302 18:28:01.722" endtime="20220302 18:28:01.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:28:01.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:28:01.723" endtime="20220302 18:28:01.724"/>
</kw>
<status status="PASS" starttime="20220302 18:27:55.502" endtime="20220302 18:28:01.724"/>
</kw>
<msg timestamp="20220302 18:28:01.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:27:55.502" endtime="20220302 18:28:01.725"/>
</kw>
<status status="PASS" starttime="20220302 18:27:55.501" endtime="20220302 18:28:01.725"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:28:01.730" level="INFO">Running command 'ozone sh bucket list 69919-target 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:28:10.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:28:10.465" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-0...</msg>
<status status="PASS" starttime="20220302 18:28:01.727" endtime="20220302 18:28:10.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:28:10.467" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:24:45.039Z",
  "modificationTime" : "2022-03-02T18:24:45.039Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : false
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:18:43.959Z",
  "modificationTime" : "2022-03-02T18:18:43.959Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:17:58.976Z",
  "modificationTime" : "2022-03-02T18:18:37.964Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:24:28.872Z",
  "modificationTime" : "2022-03-02T18:24:28.872Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:26:02.797Z",
  "modificationTime" : "2022-03-02T18:26:02.797Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:25:47.176Z",
  "modificationTime" : "2022-03-02T18:25:47.176Z",
  "sourceVolume" : "69919-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:25:33.831Z",
  "modificationTime" : "2022-03-02T18:25:33.831Z",
  "sourceVolume" : "69919-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:25:39.603Z",
  "modificationTime" : "2022-03-02T18:25:39.603Z",
  "sourceVolume" : "69919-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:17:44.802Z",
  "modificationTime" : "2022-03-02T18:18:29.692Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
}, {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-02T18:17:51.017Z",
  "modificationTime" : "2022-03-02T18:17:51.017Z",
  "sourceVolume" : "69919-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "OBJECT_STORE",
  "owner" : "testuser",
  "link" : true
} ]</msg>
<status status="PASS" starttime="20220302 18:28:10.466" endtime="20220302 18:28:10.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:28:10.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:28:10.468" endtime="20220302 18:28:10.469"/>
</kw>
<status status="PASS" starttime="20220302 18:28:01.727" endtime="20220302 18:28:10.469"/>
</kw>
<msg timestamp="20220302 18:28:10.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:28:01.726" endtime="20220302 18:28:10.470"/>
</kw>
<msg timestamp="20220302 18:28:10.471" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "69919-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2022-03-0...</msg>
<status status="PASS" starttime="20220302 18:28:01.726" endtime="20220302 18:28:10.471"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:28:10.471" endtime="20220302 18:28:10.472"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:28:10.479" level="INFO">Running command 'ozone sh key list 69919-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:28:19.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:28:19.218" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20220302 18:28:10.476" endtime="20220302 18:28:19.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:28:19.219" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20220302 18:28:19.218" endtime="20220302 18:28:19.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:28:19.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:28:19.220" endtime="20220302 18:28:19.221"/>
</kw>
<status status="PASS" starttime="20220302 18:28:10.475" endtime="20220302 18:28:19.221"/>
</kw>
<msg timestamp="20220302 18:28:19.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:28:10.474" endtime="20220302 18:28:19.222"/>
</kw>
<msg timestamp="20220302 18:28:19.222" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20220302 18:28:10.472" endtime="20220302 18:28:19.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:28:19.223" endtime="20220302 18:28:19.223"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:27:55.439" endtime="20220302 18:28:19.224"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20220302 18:13:59.178" endtime="20220302 18:28:19.227"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220302 18:28:19.257" level="INFO">${random} = 32139</msg>
<status status="PASS" starttime="20220302 18:28:19.256" endtime="20220302 18:28:19.257"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:28:19.257" level="INFO">${prefix} = 32139</msg>
<status status="PASS" starttime="20220302 18:28:19.257" endtime="20220302 18:28:19.257"/>
</kw>
<status status="PASS" starttime="20220302 18:28:19.256" endtime="20220302 18:28:19.258"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-scheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:28:19.265" level="INFO">Running command 'ozone sh volume info /32139-without-scheme 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:28:27.670" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:28:27.670" level="INFO">${output} = VOLUME_NOT_FOUND Volume 32139-without-scheme is not found</msg>
<status status="PASS" starttime="20220302 18:28:19.262" endtime="20220302 18:28:27.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:28:27.672" level="INFO">VOLUME_NOT_FOUND Volume 32139-without-scheme is not found</msg>
<status status="PASS" starttime="20220302 18:28:27.671" endtime="20220302 18:28:27.672"/>
</kw>
<msg timestamp="20220302 18:28:27.673" level="INFO">${result} = VOLUME_NOT_FOUND Volume 32139-without-scheme is not found</msg>
<status status="PASS" starttime="20220302 18:28:19.262" endtime="20220302 18:28:27.673"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:28:27.674" endtime="20220302 18:28:27.675"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:28:27.682" level="INFO">Running command 'ozone sh volume create /32139-without-scheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:28:35.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:28:35.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:28:27.679" endtime="20220302 18:28:35.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:28:35.089" level="INFO"/>
<status status="PASS" starttime="20220302 18:28:35.088" endtime="20220302 18:28:35.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:28:35.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:28:35.089" endtime="20220302 18:28:35.090"/>
</kw>
<status status="PASS" starttime="20220302 18:28:27.677" endtime="20220302 18:28:35.091"/>
</kw>
<msg timestamp="20220302 18:28:35.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:28:27.676" endtime="20220302 18:28:35.092"/>
</kw>
<msg timestamp="20220302 18:28:35.093" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220302 18:28:27.675" endtime="20220302 18:28:35.093"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:28:35.093" endtime="20220302 18:28:35.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:28:35.101" level="INFO">Running command 'ozone sh volume list / | jq -r '.[] | select(.name=="32139-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:28:41.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:28:41.186" level="INFO">${output} = {
  "metadata": {},
  "name": "32139-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220302 18:28:35.098" endtime="20220302 18:28:41.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:28:41.187" level="INFO">{
  "metadata": {},
  "name": "32139-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-02T18:28:35.006Z",
  "modificationTime": "2022-03-02T18:28:35.006Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220302 18:28:41.186" endtime="20220302 18:28:41.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:28:41.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:28:41.187" endtime="20220302 18:28:41.188"/>
</kw>
<status status="PASS" starttime="20220302 18:28:35.097" endtime="20220302 18:28:41.189"/>
</kw>
<msg timestamp="20220302 18:28:41.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:28:35.096" endtime="20220302 18:28:41.189"/>
</kw>
<msg timestamp="20220302 18:28:41.190" level="INFO">${result} = {
  "metadata": {},
  "name": "32139-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220302 18:28:35.094" endtime="20220302 18:28:41.190"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:28:41.190" endtime="20220302 18:28:41.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:28:41.196" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="32139-without-scheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:28:47.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:28:47.681" level="INFO">${output} = {
  "metadata": {},
  "name": "32139-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220302 18:28:41.193" endtime="20220302 18:28:47.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:28:47.683" level="INFO">{
  "metadata": {},
  "name": "32139-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-02T18:28:35.006Z",
  "modificationTime": "2022-03-02T18:28:35.006Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220302 18:28:47.682" endtime="20220302 18:28:47.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:28:47.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:28:47.684" endtime="20220302 18:28:47.685"/>
</kw>
<status status="PASS" starttime="20220302 18:28:41.192" endtime="20220302 18:28:47.685"/>
</kw>
<msg timestamp="20220302 18:28:47.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:28:41.192" endtime="20220302 18:28:47.687"/>
</kw>
<msg timestamp="20220302 18:28:47.688" level="INFO">${result} = {
  "metadata": {},
  "name": "32139-without-scheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime"...</msg>
<status status="PASS" starttime="20220302 18:28:41.191" endtime="20220302 18:28:47.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:28:47.688" endtime="20220302 18:28:47.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:28:47.695" level="INFO">Running command 'ozone sh volume setquota /32139-without-scheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:28:55.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:28:55.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:28:47.692" endtime="20220302 18:28:55.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:28:55.932" level="INFO"/>
<status status="PASS" starttime="20220302 18:28:55.931" endtime="20220302 18:28:55.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:28:55.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:28:55.933" endtime="20220302 18:28:55.935"/>
</kw>
<status status="PASS" starttime="20220302 18:28:47.691" endtime="20220302 18:28:55.936"/>
</kw>
<msg timestamp="20220302 18:28:55.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:28:47.690" endtime="20220302 18:28:55.937"/>
</kw>
<status status="PASS" starttime="20220302 18:28:47.689" endtime="20220302 18:28:55.938"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:28:55.947" level="INFO">Running command 'ozone sh volume info /32139-without-scheme | jq -r '. | select(.name=="32139-without-scheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:29:04.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:29:04.171" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:28:55.943" endtime="20220302 18:29:04.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:29:04.172" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220302 18:29:04.171" endtime="20220302 18:29:04.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:29:04.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:29:04.172" endtime="20220302 18:29:04.173"/>
</kw>
<status status="PASS" starttime="20220302 18:28:55.942" endtime="20220302 18:29:04.173"/>
</kw>
<msg timestamp="20220302 18:29:04.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:28:55.941" endtime="20220302 18:29:04.174"/>
</kw>
<msg timestamp="20220302 18:29:04.174" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:28:55.938" endtime="20220302 18:29:04.174"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:29:04.175" endtime="20220302 18:29:04.175"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:29:04.179" level="INFO">Running command 'ozone sh bucket create /32139-without-scheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:29:09.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:29:09.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:29:04.177" endtime="20220302 18:29:09.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:29:09.868" level="INFO"/>
<status status="PASS" starttime="20220302 18:29:09.866" endtime="20220302 18:29:09.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:29:09.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:29:09.868" endtime="20220302 18:29:09.870"/>
</kw>
<status status="PASS" starttime="20220302 18:29:04.176" endtime="20220302 18:29:09.870"/>
</kw>
<msg timestamp="20220302 18:29:09.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:29:04.176" endtime="20220302 18:29:09.871"/>
</kw>
<status status="PASS" starttime="20220302 18:29:04.175" endtime="20220302 18:29:09.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:29:09.879" level="INFO">Running command 'ozone sh bucket info /32139-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:29:18.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:29:18.660" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220302 18:29:09.875" endtime="20220302 18:29:18.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:29:18.662" level="INFO">DISK</msg>
<status status="PASS" starttime="20220302 18:29:18.661" endtime="20220302 18:29:18.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:29:18.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:29:18.662" endtime="20220302 18:29:18.663"/>
</kw>
<status status="PASS" starttime="20220302 18:29:09.874" endtime="20220302 18:29:18.664"/>
</kw>
<msg timestamp="20220302 18:29:18.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:29:09.874" endtime="20220302 18:29:18.665"/>
</kw>
<msg timestamp="20220302 18:29:18.666" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220302 18:29:09.872" endtime="20220302 18:29:18.666"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:29:18.666" endtime="20220302 18:29:18.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:29:18.674" level="INFO">Running command 'ozone sh bucket info /32139-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:29:25.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:29:25.175" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:29:18.670" endtime="20220302 18:29:25.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:29:25.177" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220302 18:29:25.176" endtime="20220302 18:29:25.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:29:25.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:29:25.177" endtime="20220302 18:29:25.178"/>
</kw>
<status status="PASS" starttime="20220302 18:29:18.670" endtime="20220302 18:29:25.179"/>
</kw>
<msg timestamp="20220302 18:29:25.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:29:18.669" endtime="20220302 18:29:25.181"/>
</kw>
<msg timestamp="20220302 18:29:25.182" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:29:18.667" endtime="20220302 18:29:25.182"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:29:25.184" endtime="20220302 18:29:25.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:29:25.193" level="INFO">Running command 'ozone sh bucket info /32139-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:29:31.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:29:31.561" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220302 18:29:25.190" endtime="20220302 18:29:31.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:29:31.564" level="INFO">100</msg>
<status status="PASS" starttime="20220302 18:29:31.563" endtime="20220302 18:29:31.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:29:31.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:29:31.564" endtime="20220302 18:29:31.566"/>
</kw>
<status status="PASS" starttime="20220302 18:29:25.189" endtime="20220302 18:29:31.566"/>
</kw>
<msg timestamp="20220302 18:29:31.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:29:25.188" endtime="20220302 18:29:31.567"/>
</kw>
<msg timestamp="20220302 18:29:31.568" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220302 18:29:25.186" endtime="20220302 18:29:31.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:29:31.568" endtime="20220302 18:29:31.569"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:29:31.576" level="INFO">Running command 'ozone sh bucket setquota /32139-without-scheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:29:39.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:29:39.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:29:31.573" endtime="20220302 18:29:39.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:29:39.659" level="INFO"/>
<status status="PASS" starttime="20220302 18:29:39.658" endtime="20220302 18:29:39.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:29:39.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:29:39.659" endtime="20220302 18:29:39.660"/>
</kw>
<status status="PASS" starttime="20220302 18:29:31.572" endtime="20220302 18:29:39.661"/>
</kw>
<msg timestamp="20220302 18:29:39.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:29:31.571" endtime="20220302 18:29:39.663"/>
</kw>
<status status="PASS" starttime="20220302 18:29:31.570" endtime="20220302 18:29:39.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:29:39.671" level="INFO">Running command 'ozone sh bucket info /32139-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:29:48.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:29:48.039" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220302 18:29:39.668" endtime="20220302 18:29:48.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:29:48.041" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220302 18:29:48.040" endtime="20220302 18:29:48.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:29:48.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:29:48.042" endtime="20220302 18:29:48.043"/>
</kw>
<status status="PASS" starttime="20220302 18:29:39.667" endtime="20220302 18:29:48.044"/>
</kw>
<msg timestamp="20220302 18:29:48.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:29:39.666" endtime="20220302 18:29:48.045"/>
</kw>
<msg timestamp="20220302 18:29:48.046" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220302 18:29:39.664" endtime="20220302 18:29:48.046"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:29:48.046" endtime="20220302 18:29:48.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:29:48.057" level="INFO">Running command 'ozone sh bucket info /32139-without-scheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:29:56.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:29:56.178" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220302 18:29:48.054" endtime="20220302 18:29:56.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:29:56.181" level="INFO">1000</msg>
<status status="PASS" starttime="20220302 18:29:56.180" endtime="20220302 18:29:56.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:29:56.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:29:56.182" endtime="20220302 18:29:56.184"/>
</kw>
<status status="PASS" starttime="20220302 18:29:48.053" endtime="20220302 18:29:56.185"/>
</kw>
<msg timestamp="20220302 18:29:56.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:29:48.052" endtime="20220302 18:29:56.189"/>
</kw>
<msg timestamp="20220302 18:29:56.190" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220302 18:29:48.050" endtime="20220302 18:29:56.190"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:29:56.190" endtime="20220302 18:29:56.191"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:29:56.199" level="INFO">Running command 'ozone sh bucket list /32139-without-scheme/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:30:03.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:30:03.531" level="INFO">${output} = 32139-without-scheme</msg>
<status status="PASS" starttime="20220302 18:29:56.196" endtime="20220302 18:30:03.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:30:03.533" level="INFO">32139-without-scheme</msg>
<status status="PASS" starttime="20220302 18:30:03.532" endtime="20220302 18:30:03.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:30:03.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:30:03.533" endtime="20220302 18:30:03.534"/>
</kw>
<status status="PASS" starttime="20220302 18:29:56.194" endtime="20220302 18:30:03.534"/>
</kw>
<msg timestamp="20220302 18:30:03.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:29:56.194" endtime="20220302 18:30:03.535"/>
</kw>
<msg timestamp="20220302 18:30:03.535" level="INFO">${result} = 32139-without-scheme</msg>
<status status="PASS" starttime="20220302 18:29:56.191" endtime="20220302 18:30:03.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:30:03.535" endtime="20220302 18:30:03.536"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:30:03.541" level="INFO">Running command 'ozone sh key put /32139-without-scheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:33:14.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:33:14.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:30:03.539" endtime="20220302 18:33:14.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:33:14.968" level="INFO"/>
<status status="PASS" starttime="20220302 18:33:14.967" endtime="20220302 18:33:14.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:33:14.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:33:14.969" endtime="20220302 18:33:14.969"/>
</kw>
<status status="PASS" starttime="20220302 18:30:03.538" endtime="20220302 18:33:14.970"/>
</kw>
<msg timestamp="20220302 18:33:14.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:30:03.538" endtime="20220302 18:33:14.971"/>
</kw>
<status status="PASS" starttime="20220302 18:30:03.537" endtime="20220302 18:33:14.971"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:33:14.976" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:33:14.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:33:14.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:33:14.973" endtime="20220302 18:33:14.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:33:14.982" level="INFO"/>
<status status="PASS" starttime="20220302 18:33:14.982" endtime="20220302 18:33:14.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:33:14.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:33:14.983" endtime="20220302 18:33:14.984"/>
</kw>
<status status="PASS" starttime="20220302 18:33:14.973" endtime="20220302 18:33:14.984"/>
</kw>
<msg timestamp="20220302 18:33:14.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:33:14.972" endtime="20220302 18:33:14.985"/>
</kw>
<status status="PASS" starttime="20220302 18:33:14.971" endtime="20220302 18:33:14.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:33:14.990" level="INFO">Running command 'ozone sh key get /32139-without-scheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:33:19.261" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220302 18:33:14.988" endtime="20220302 18:33:19.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.262" endtime="20220302 18:33:19.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.262" endtime="20220302 18:33:19.263"/>
</kw>
<status status="FAIL" starttime="20220302 18:33:14.987" endtime="20220302 18:33:19.263"/>
</kw>
<msg timestamp="20220302 18:33:19.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220302 18:33:14.987" endtime="20220302 18:33:19.264"/>
</kw>
<status status="FAIL" starttime="20220302 18:33:14.986" endtime="20220302 18:33:19.264"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.265" endtime="20220302 18:33:19.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.265" endtime="20220302 18:33:19.265"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.265" endtime="20220302 18:33:19.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.266" endtime="20220302 18:33:19.266"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.266" endtime="20220302 18:33:19.266"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.266" endtime="20220302 18:33:19.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.266" endtime="20220302 18:33:19.266"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.266" endtime="20220302 18:33:19.266"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.267" endtime="20220302 18:33:19.267"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.267" endtime="20220302 18:33:19.267"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.267" endtime="20220302 18:33:19.268"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.268" endtime="20220302 18:33:19.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.268" endtime="20220302 18:33:19.268"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.268" endtime="20220302 18:33:19.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.272" endtime="20220302 18:33:19.273"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.274" endtime="20220302 18:33:19.274"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.274" endtime="20220302 18:33:19.274"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.274" endtime="20220302 18:33:19.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.275" endtime="20220302 18:33:19.276"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.276" endtime="20220302 18:33:19.276"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.277" endtime="20220302 18:33:19.278"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.278" endtime="20220302 18:33:19.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.278" endtime="20220302 18:33:19.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.279" endtime="20220302 18:33:19.279"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.280" endtime="20220302 18:33:19.280"/>
</kw>
<status status="FAIL" starttime="20220302 18:30:03.537" endtime="20220302 18:33:19.281"/>
</kw>
<status status="FAIL" starttime="20220302 18:30:03.536" endtime="20220302 18:33:19.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.282" endtime="20220302 18:33:19.283"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.283" endtime="20220302 18:33:19.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.284" endtime="20220302 18:33:19.284"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.284" endtime="20220302 18:33:19.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.284" endtime="20220302 18:33:19.285"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.285" endtime="20220302 18:33:19.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.286" endtime="20220302 18:33:19.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.287" endtime="20220302 18:33:19.287"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.288" endtime="20220302 18:33:19.289"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.289" endtime="20220302 18:33:19.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.290" endtime="20220302 18:33:19.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.290" endtime="20220302 18:33:19.290"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.290" endtime="20220302 18:33:19.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.291" endtime="20220302 18:33:19.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.292" endtime="20220302 18:33:19.292"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.292" endtime="20220302 18:33:19.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.293" endtime="20220302 18:33:19.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.294" endtime="20220302 18:33:19.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.295" endtime="20220302 18:33:19.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.296" endtime="20220302 18:33:19.296"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.296" endtime="20220302 18:33:19.296"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.296" endtime="20220302 18:33:19.297"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.298" endtime="20220302 18:33:19.298"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:33:19.298" endtime="20220302 18:33:19.299"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.300" endtime="20220302 18:33:19.300"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:33:19.301" endtime="20220302 18:33:19.301"/>
</kw>
<status status="FAIL" starttime="20220302 18:28:19.260" endtime="20220302 18:33:19.302"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220302 18:28:19.259" endtime="20220302 18:33:19.303">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20220302 18:28:19.233" endtime="20220302 18:33:19.332"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220302 18:33:19.406" level="INFO">${random} = 42675</msg>
<status status="PASS" starttime="20220302 18:33:19.405" endtime="20220302 18:33:19.406"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:33:19.408" level="INFO">${prefix} = 42675</msg>
<status status="PASS" starttime="20220302 18:33:19.407" endtime="20220302 18:33:19.408"/>
</kw>
<status status="PASS" starttime="20220302 18:33:19.404" endtime="20220302 18:33:19.408"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:33:19.447" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:33:19.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:33:19.468" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:33:19.424" endtime="20220302 18:33:19.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:33:19.472" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:33:19.469" endtime="20220302 18:33:19.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:33:19.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:33:19.472" endtime="20220302 18:33:19.473"/>
</kw>
<status status="PASS" starttime="20220302 18:33:19.422" endtime="20220302 18:33:19.474"/>
</kw>
<msg timestamp="20220302 18:33:19.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:33:19.420" endtime="20220302 18:33:19.474"/>
</kw>
<msg timestamp="20220302 18:33:19.475" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:33:19.419" endtime="20220302 18:33:19.475"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:33:19.480" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:33:19.475" endtime="20220302 18:33:19.480"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:33:19.541" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:33:19.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:33:19.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:33:19.506" endtime="20220302 18:33:19.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:33:19.646" level="INFO"/>
<status status="PASS" starttime="20220302 18:33:19.641" endtime="20220302 18:33:19.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:33:19.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:33:19.648" endtime="20220302 18:33:19.651"/>
</kw>
<status status="PASS" starttime="20220302 18:33:19.500" endtime="20220302 18:33:19.653"/>
</kw>
<msg timestamp="20220302 18:33:19.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:33:19.492" endtime="20220302 18:33:19.660"/>
</kw>
<status status="PASS" starttime="20220302 18:33:19.481" endtime="20220302 18:33:19.663"/>
</kw>
<status status="PASS" starttime="20220302 18:33:19.480" endtime="20220302 18:33:19.665"/>
</kw>
<status status="PASS" starttime="20220302 18:33:19.416" endtime="20220302 18:33:19.669"/>
</kw>
<status status="PASS" starttime="20220302 18:33:19.415" endtime="20220302 18:33:19.669"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-with-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:33:19.695" level="INFO">Running command 'ozone sh volume info o3://om:9862/42675-with-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:33:34.836" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:33:34.836" level="INFO">${output} = VOLUME_NOT_FOUND Volume 42675-with-host is not found</msg>
<status status="PASS" starttime="20220302 18:33:19.676" endtime="20220302 18:33:34.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:33:34.840" level="INFO">VOLUME_NOT_FOUND Volume 42675-with-host is not found</msg>
<status status="PASS" starttime="20220302 18:33:34.838" endtime="20220302 18:33:34.840"/>
</kw>
<msg timestamp="20220302 18:33:34.842" level="INFO">${result} = VOLUME_NOT_FOUND Volume 42675-with-host is not found</msg>
<status status="PASS" starttime="20220302 18:33:19.676" endtime="20220302 18:33:34.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:33:34.843" endtime="20220302 18:33:34.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:33:34.855" level="INFO">Running command 'ozone sh volume create o3://om:9862/42675-with-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:33:40.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:33:40.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:33:34.846" endtime="20220302 18:33:40.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:33:40.886" level="INFO"/>
<status status="PASS" starttime="20220302 18:33:40.885" endtime="20220302 18:33:40.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:33:40.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:33:40.887" endtime="20220302 18:33:40.888"/>
</kw>
<status status="PASS" starttime="20220302 18:33:34.846" endtime="20220302 18:33:40.888"/>
</kw>
<msg timestamp="20220302 18:33:40.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:33:34.845" endtime="20220302 18:33:40.890"/>
</kw>
<msg timestamp="20220302 18:33:40.890" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220302 18:33:34.844" endtime="20220302 18:33:40.890"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:33:40.890" endtime="20220302 18:33:40.891"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:33:40.896" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '.[] | select(.name=="42675-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:33:49.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:33:49.110" level="INFO">${output} = {
  "metadata": {},
  "name": "42675-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220302 18:33:40.893" endtime="20220302 18:33:49.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:33:49.112" level="INFO">{
  "metadata": {},
  "name": "42675-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-02T18:33:40.756Z",
  "modificationTime": "2022-03-02T18:33:40.756Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220302 18:33:49.111" endtime="20220302 18:33:49.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:33:49.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:33:49.113" endtime="20220302 18:33:49.114"/>
</kw>
<status status="PASS" starttime="20220302 18:33:40.892" endtime="20220302 18:33:49.114"/>
</kw>
<msg timestamp="20220302 18:33:49.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:33:40.892" endtime="20220302 18:33:49.115"/>
</kw>
<msg timestamp="20220302 18:33:49.115" level="INFO">${result} = {
  "metadata": {},
  "name": "42675-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220302 18:33:40.891" endtime="20220302 18:33:49.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:33:49.115" endtime="20220302 18:33:49.116"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:33:49.123" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="42675-with-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:33:57.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:33:57.462" level="INFO">${output} = {
  "metadata": {},
  "name": "42675-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220302 18:33:49.119" endtime="20220302 18:33:57.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:33:57.464" level="INFO">{
  "metadata": {},
  "name": "42675-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-02T18:33:40.756Z",
  "modificationTime": "2022-03-02T18:33:40.756Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220302 18:33:57.463" endtime="20220302 18:33:57.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:33:57.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:33:57.465" endtime="20220302 18:33:57.466"/>
</kw>
<status status="PASS" starttime="20220302 18:33:49.117" endtime="20220302 18:33:57.467"/>
</kw>
<msg timestamp="20220302 18:33:57.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:33:49.117" endtime="20220302 18:33:57.468"/>
</kw>
<msg timestamp="20220302 18:33:57.468" level="INFO">${result} = {
  "metadata": {},
  "name": "42675-with-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20220302 18:33:49.116" endtime="20220302 18:33:57.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:33:57.469" endtime="20220302 18:33:57.469"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:33:57.475" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/42675-with-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:34:05.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:34:05.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:33:57.472" endtime="20220302 18:34:05.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:34:05.880" level="INFO"/>
<status status="PASS" starttime="20220302 18:34:05.880" endtime="20220302 18:34:05.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:34:05.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:34:05.881" endtime="20220302 18:34:05.881"/>
</kw>
<status status="PASS" starttime="20220302 18:33:57.472" endtime="20220302 18:34:05.882"/>
</kw>
<msg timestamp="20220302 18:34:05.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:33:57.471" endtime="20220302 18:34:05.882"/>
</kw>
<status status="PASS" starttime="20220302 18:33:57.469" endtime="20220302 18:34:05.883"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:34:05.887" level="INFO">Running command 'ozone sh volume info o3://om:9862/42675-with-host | jq -r '. | select(.name=="42675-with-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:34:14.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:34:14.067" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:34:05.885" endtime="20220302 18:34:14.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:34:14.069" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220302 18:34:14.068" endtime="20220302 18:34:14.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:34:14.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:34:14.070" endtime="20220302 18:34:14.071"/>
</kw>
<status status="PASS" starttime="20220302 18:34:05.884" endtime="20220302 18:34:14.071"/>
</kw>
<msg timestamp="20220302 18:34:14.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:34:05.884" endtime="20220302 18:34:14.072"/>
</kw>
<msg timestamp="20220302 18:34:14.073" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:34:05.883" endtime="20220302 18:34:14.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:34:14.073" endtime="20220302 18:34:14.074"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:34:14.080" level="INFO">Running command 'ozone sh bucket create o3://om:9862/42675-with-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:34:22.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:34:22.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:34:14.077" endtime="20220302 18:34:22.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:34:22.862" level="INFO"/>
<status status="PASS" starttime="20220302 18:34:22.861" endtime="20220302 18:34:22.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:34:22.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:34:22.862" endtime="20220302 18:34:22.864"/>
</kw>
<status status="PASS" starttime="20220302 18:34:14.075" endtime="20220302 18:34:22.864"/>
</kw>
<msg timestamp="20220302 18:34:22.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:34:14.075" endtime="20220302 18:34:22.865"/>
</kw>
<status status="PASS" starttime="20220302 18:34:14.074" endtime="20220302 18:34:22.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:34:22.870" level="INFO">Running command 'ozone sh bucket info o3://om:9862/42675-with-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:34:31.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:34:31.446" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220302 18:34:22.868" endtime="20220302 18:34:31.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:34:31.448" level="INFO">DISK</msg>
<status status="PASS" starttime="20220302 18:34:31.447" endtime="20220302 18:34:31.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:34:31.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:34:31.449" endtime="20220302 18:34:31.454"/>
</kw>
<status status="PASS" starttime="20220302 18:34:22.867" endtime="20220302 18:34:31.454"/>
</kw>
<msg timestamp="20220302 18:34:31.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:34:22.867" endtime="20220302 18:34:31.456"/>
</kw>
<msg timestamp="20220302 18:34:31.456" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220302 18:34:22.866" endtime="20220302 18:34:31.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:34:31.456" endtime="20220302 18:34:31.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:34:31.465" level="INFO">Running command 'ozone sh bucket info o3://om:9862/42675-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:34:40.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:34:40.114" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:34:31.462" endtime="20220302 18:34:40.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:34:40.118" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220302 18:34:40.116" endtime="20220302 18:34:40.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:34:40.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:34:40.118" endtime="20220302 18:34:40.120"/>
</kw>
<status status="PASS" starttime="20220302 18:34:31.460" endtime="20220302 18:34:40.121"/>
</kw>
<msg timestamp="20220302 18:34:40.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:34:31.460" endtime="20220302 18:34:40.122"/>
</kw>
<msg timestamp="20220302 18:34:40.123" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:34:31.458" endtime="20220302 18:34:40.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:34:40.123" endtime="20220302 18:34:40.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:34:40.133" level="INFO">Running command 'ozone sh bucket info o3://om:9862/42675-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:34:48.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:34:48.465" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220302 18:34:40.129" endtime="20220302 18:34:48.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:34:48.467" level="INFO">100</msg>
<status status="PASS" starttime="20220302 18:34:48.466" endtime="20220302 18:34:48.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:34:48.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:34:48.467" endtime="20220302 18:34:48.468"/>
</kw>
<status status="PASS" starttime="20220302 18:34:40.128" endtime="20220302 18:34:48.469"/>
</kw>
<msg timestamp="20220302 18:34:48.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:34:40.127" endtime="20220302 18:34:48.470"/>
</kw>
<msg timestamp="20220302 18:34:48.470" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220302 18:34:40.125" endtime="20220302 18:34:48.470"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:34:48.471" endtime="20220302 18:34:48.471"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:34:48.476" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/42675-with-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:34:56.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:34:56.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:34:48.474" endtime="20220302 18:34:56.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:34:56.112" level="INFO"/>
<status status="PASS" starttime="20220302 18:34:56.111" endtime="20220302 18:34:56.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:34:56.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:34:56.113" endtime="20220302 18:34:56.114"/>
</kw>
<status status="PASS" starttime="20220302 18:34:48.473" endtime="20220302 18:34:56.115"/>
</kw>
<msg timestamp="20220302 18:34:56.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:34:48.473" endtime="20220302 18:34:56.116"/>
</kw>
<status status="PASS" starttime="20220302 18:34:48.472" endtime="20220302 18:34:56.116"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:34:56.124" level="INFO">Running command 'ozone sh bucket info o3://om:9862/42675-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:35:02.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:35:02.703" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220302 18:34:56.121" endtime="20220302 18:35:02.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:35:02.706" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220302 18:35:02.704" endtime="20220302 18:35:02.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:35:02.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:35:02.706" endtime="20220302 18:35:02.707"/>
</kw>
<status status="PASS" starttime="20220302 18:34:56.119" endtime="20220302 18:35:02.707"/>
</kw>
<msg timestamp="20220302 18:35:02.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:34:56.119" endtime="20220302 18:35:02.708"/>
</kw>
<msg timestamp="20220302 18:35:02.709" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220302 18:34:56.117" endtime="20220302 18:35:02.709"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:35:02.709" endtime="20220302 18:35:02.710"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:35:02.735" level="INFO">Running command 'ozone sh bucket info o3://om:9862/42675-with-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:35:11.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:35:11.633" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220302 18:35:02.731" endtime="20220302 18:35:11.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:35:11.634" level="INFO">1000</msg>
<status status="PASS" starttime="20220302 18:35:11.634" endtime="20220302 18:35:11.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:35:11.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:35:11.635" endtime="20220302 18:35:11.635"/>
</kw>
<status status="PASS" starttime="20220302 18:35:02.730" endtime="20220302 18:35:11.636"/>
</kw>
<msg timestamp="20220302 18:35:11.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:35:02.712" endtime="20220302 18:35:11.644"/>
</kw>
<msg timestamp="20220302 18:35:11.644" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220302 18:35:02.710" endtime="20220302 18:35:11.644"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:35:11.644" endtime="20220302 18:35:11.645"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:35:11.652" level="INFO">Running command 'ozone sh bucket list o3://om:9862/42675-with-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:35:19.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:35:19.900" level="INFO">${output} = 42675-with-host</msg>
<status status="PASS" starttime="20220302 18:35:11.647" endtime="20220302 18:35:19.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:35:19.903" level="INFO">42675-with-host</msg>
<status status="PASS" starttime="20220302 18:35:19.901" endtime="20220302 18:35:19.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:35:19.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:35:19.904" endtime="20220302 18:35:19.904"/>
</kw>
<status status="PASS" starttime="20220302 18:35:11.647" endtime="20220302 18:35:19.905"/>
</kw>
<msg timestamp="20220302 18:35:19.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:35:11.646" endtime="20220302 18:35:19.906"/>
</kw>
<msg timestamp="20220302 18:35:19.906" level="INFO">${result} = 42675-with-host</msg>
<status status="PASS" starttime="20220302 18:35:11.645" endtime="20220302 18:35:19.906"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:35:19.906" endtime="20220302 18:35:19.907"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:35:19.917" level="INFO">Running command 'ozone sh key put o3://om:9862/42675-with-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:38:19.414" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220302 18:35:19.914" endtime="20220302 18:38:19.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.414" endtime="20220302 18:38:19.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.415" endtime="20220302 18:38:19.415"/>
</kw>
<status status="FAIL" starttime="20220302 18:35:19.912" endtime="20220302 18:38:19.415"/>
</kw>
<msg timestamp="20220302 18:38:19.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220302 18:35:19.911" endtime="20220302 18:38:19.416"/>
</kw>
<status status="FAIL" starttime="20220302 18:35:19.910" endtime="20220302 18:38:19.416"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.417" endtime="20220302 18:38:19.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.417" endtime="20220302 18:38:19.417"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.417" endtime="20220302 18:38:19.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.418" endtime="20220302 18:38:19.418"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.418" endtime="20220302 18:38:19.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.418" endtime="20220302 18:38:19.418"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.418" endtime="20220302 18:38:19.418"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.418" endtime="20220302 18:38:19.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.419" endtime="20220302 18:38:19.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.419" endtime="20220302 18:38:19.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.419" endtime="20220302 18:38:19.419"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.419" endtime="20220302 18:38:19.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.419" endtime="20220302 18:38:19.420"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.420" endtime="20220302 18:38:19.420"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.420" endtime="20220302 18:38:19.420"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.420" endtime="20220302 18:38:19.420"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.420" endtime="20220302 18:38:19.420"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.420" endtime="20220302 18:38:19.421"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.421" endtime="20220302 18:38:19.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.421" endtime="20220302 18:38:19.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.422" endtime="20220302 18:38:19.422"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.422" endtime="20220302 18:38:19.422"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.423" endtime="20220302 18:38:19.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.423" endtime="20220302 18:38:19.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.423" endtime="20220302 18:38:19.424"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.424" endtime="20220302 18:38:19.424"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.424" endtime="20220302 18:38:19.424"/>
</kw>
<status status="FAIL" starttime="20220302 18:35:19.908" endtime="20220302 18:38:19.425"/>
</kw>
<status status="FAIL" starttime="20220302 18:35:19.907" endtime="20220302 18:38:19.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.425" endtime="20220302 18:38:19.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.426" endtime="20220302 18:38:19.426"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.426" endtime="20220302 18:38:19.427"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.427" endtime="20220302 18:38:19.427"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.427" endtime="20220302 18:38:19.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.428" endtime="20220302 18:38:19.428"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.428" endtime="20220302 18:38:19.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.428" endtime="20220302 18:38:19.429"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.431" endtime="20220302 18:38:19.431"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.431" endtime="20220302 18:38:19.431"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.431" endtime="20220302 18:38:19.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.432" endtime="20220302 18:38:19.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.432" endtime="20220302 18:38:19.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.432" endtime="20220302 18:38:19.432"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.433" endtime="20220302 18:38:19.433"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.433" endtime="20220302 18:38:19.433"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.434" endtime="20220302 18:38:19.434"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.435" endtime="20220302 18:38:19.435"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.435" endtime="20220302 18:38:19.435"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.440" endtime="20220302 18:38:19.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.440" endtime="20220302 18:38:19.441"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.441" endtime="20220302 18:38:19.441"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.441" endtime="20220302 18:38:19.441"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:38:19.441" endtime="20220302 18:38:19.441"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.441" endtime="20220302 18:38:19.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:38:19.442" endtime="20220302 18:38:19.442"/>
</kw>
<status status="FAIL" starttime="20220302 18:33:19.669" endtime="20220302 18:38:19.442"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220302 18:33:19.408" endtime="20220302 18:38:19.442">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:38:19.454" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:38:19.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:38:19.461" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:38:19.451" endtime="20220302 18:38:19.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:38:19.464" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:38:19.462" endtime="20220302 18:38:19.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:38:19.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:38:19.464" endtime="20220302 18:38:19.466"/>
</kw>
<status status="PASS" starttime="20220302 18:38:19.451" endtime="20220302 18:38:19.466"/>
</kw>
<msg timestamp="20220302 18:38:19.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:38:19.450" endtime="20220302 18:38:19.467"/>
</kw>
<msg timestamp="20220302 18:38:19.467" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:38:19.450" endtime="20220302 18:38:19.467"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:38:19.468" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:38:19.467" endtime="20220302 18:38:19.468"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:38:19.476" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:38:19.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:38:19.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:38:19.472" endtime="20220302 18:38:19.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:38:19.487" level="INFO"/>
<status status="PASS" starttime="20220302 18:38:19.486" endtime="20220302 18:38:19.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:38:19.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:38:19.487" endtime="20220302 18:38:19.488"/>
</kw>
<status status="PASS" starttime="20220302 18:38:19.472" endtime="20220302 18:38:19.489"/>
</kw>
<msg timestamp="20220302 18:38:19.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:38:19.471" endtime="20220302 18:38:19.489"/>
</kw>
<status status="PASS" starttime="20220302 18:38:19.471" endtime="20220302 18:38:19.490"/>
</kw>
<status status="PASS" starttime="20220302 18:38:19.469" endtime="20220302 18:38:19.490"/>
</kw>
<status status="PASS" starttime="20220302 18:38:19.449" endtime="20220302 18:38:19.490"/>
</kw>
<status status="PASS" starttime="20220302 18:38:19.449" endtime="20220302 18:38:19.490"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:38:19.495" level="INFO">Running command 'ozone sh volume create o3://om:9862/42675-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:38:25.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:38:25.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:38:19.493" endtime="20220302 18:38:25.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:38:25.435" level="INFO"/>
<status status="PASS" starttime="20220302 18:38:25.433" endtime="20220302 18:38:25.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:38:25.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:38:25.435" endtime="20220302 18:38:25.436"/>
</kw>
<status status="PASS" starttime="20220302 18:38:19.492" endtime="20220302 18:38:25.438"/>
</kw>
<msg timestamp="20220302 18:38:25.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:38:19.492" endtime="20220302 18:38:25.439"/>
</kw>
<status status="PASS" starttime="20220302 18:38:19.491" endtime="20220302 18:38:25.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:38:25.450" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/42675-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:38:33.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:38:33.270" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:38:25.444" endtime="20220302 18:38:33.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:38:33.271" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:38:33.271" endtime="20220302 18:38:33.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:38:33.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:38:33.272" endtime="20220302 18:38:33.272"/>
</kw>
<status status="PASS" starttime="20220302 18:38:25.443" endtime="20220302 18:38:33.273"/>
</kw>
<msg timestamp="20220302 18:38:33.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:38:25.442" endtime="20220302 18:38:33.274"/>
</kw>
<msg timestamp="20220302 18:38:33.274" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:38:25.440" endtime="20220302 18:38:33.274"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:38:33.274" endtime="20220302 18:38:33.275"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:38:33.280" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/42675-acls -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:38:40.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:38:40.832" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220302 18:38:33.278" endtime="20220302 18:38:40.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:38:40.834" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220302 18:38:40.833" endtime="20220302 18:38:40.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:38:40.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:38:40.834" endtime="20220302 18:38:40.835"/>
</kw>
<status status="PASS" starttime="20220302 18:38:33.277" endtime="20220302 18:38:40.835"/>
</kw>
<msg timestamp="20220302 18:38:40.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:38:33.276" endtime="20220302 18:38:40.836"/>
</kw>
<msg timestamp="20220302 18:38:40.836" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220302 18:38:33.276" endtime="20220302 18:38:40.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:38:40.843" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/42675-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:38:49.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:38:49.597" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220302 18:38:40.839" endtime="20220302 18:38:49.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:38:49.599" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:38:49.598" endtime="20220302 18:38:49.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:38:49.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:38:49.599" endtime="20220302 18:38:49.600"/>
</kw>
<status status="PASS" starttime="20220302 18:38:40.838" endtime="20220302 18:38:49.602"/>
</kw>
<msg timestamp="20220302 18:38:49.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:38:40.838" endtime="20220302 18:38:49.603"/>
</kw>
<msg timestamp="20220302 18:38:49.604" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220302 18:38:40.836" endtime="20220302 18:38:49.604"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:38:49.604" endtime="20220302 18:38:49.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:38:49.613" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/42675-acls -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:38:57.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:38:57.800" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220302 18:38:49.610" endtime="20220302 18:38:57.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:38:57.802" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220302 18:38:57.801" endtime="20220302 18:38:57.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:38:57.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:38:57.802" endtime="20220302 18:38:57.803"/>
</kw>
<status status="PASS" starttime="20220302 18:38:49.609" endtime="20220302 18:38:57.803"/>
</kw>
<msg timestamp="20220302 18:38:57.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:38:49.608" endtime="20220302 18:38:57.804"/>
</kw>
<msg timestamp="20220302 18:38:57.804" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220302 18:38:49.607" endtime="20220302 18:38:57.804"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:38:57.809" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/42675-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:39:06.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:39:06.929" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220302 18:38:57.806" endtime="20220302 18:39:06.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:39:06.931" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:39:06.930" endtime="20220302 18:39:06.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:39:06.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:39:06.932" endtime="20220302 18:39:06.932"/>
</kw>
<status status="PASS" starttime="20220302 18:38:57.806" endtime="20220302 18:39:06.933"/>
</kw>
<msg timestamp="20220302 18:39:06.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:38:57.805" endtime="20220302 18:39:06.934"/>
</kw>
<msg timestamp="20220302 18:39:06.934" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20220302 18:38:57.804" endtime="20220302 18:39:06.934"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:39:06.935" endtime="20220302 18:39:06.936"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:39:06.943" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/42675-acls -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:39:12.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:39:12.413" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:39:06.940" endtime="20220302 18:39:12.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:39:12.415" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:39:12.414" endtime="20220302 18:39:12.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:39:12.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:39:12.416" endtime="20220302 18:39:12.417"/>
</kw>
<status status="PASS" starttime="20220302 18:39:06.939" endtime="20220302 18:39:12.418"/>
</kw>
<msg timestamp="20220302 18:39:12.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:39:06.939" endtime="20220302 18:39:12.419"/>
</kw>
<msg timestamp="20220302 18:39:12.420" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:39:06.937" endtime="20220302 18:39:12.420"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:39:12.427" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/42675-acls 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:39:20.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:39:20.375" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220302 18:39:12.423" endtime="20220302 18:39:20.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:39:20.378" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:39:20.376" endtime="20220302 18:39:20.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:39:20.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:39:20.379" endtime="20220302 18:39:20.380"/>
</kw>
<status status="PASS" starttime="20220302 18:39:12.422" endtime="20220302 18:39:20.381"/>
</kw>
<msg timestamp="20220302 18:39:20.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:39:12.422" endtime="20220302 18:39:20.383"/>
</kw>
<msg timestamp="20220302 18:39:20.384" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220302 18:39:12.420" endtime="20220302 18:39:20.384"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:39:20.384" endtime="20220302 18:39:20.385"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:39:20.386" endtime="20220302 18:39:20.388"/>
</kw>
<status status="PASS" starttime="20220302 18:38:19.490" endtime="20220302 18:39:20.389"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220302 18:38:19.448" endtime="20220302 18:39:20.389"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:39:20.401" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:39:20.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:39:20.410" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:39:20.398" endtime="20220302 18:39:20.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:39:20.413" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:39:20.411" endtime="20220302 18:39:20.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:39:20.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:39:20.413" endtime="20220302 18:39:20.416"/>
</kw>
<status status="PASS" starttime="20220302 18:39:20.396" endtime="20220302 18:39:20.416"/>
</kw>
<msg timestamp="20220302 18:39:20.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:39:20.396" endtime="20220302 18:39:20.417"/>
</kw>
<msg timestamp="20220302 18:39:20.417" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:39:20.394" endtime="20220302 18:39:20.417"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:39:20.418" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:39:20.418" endtime="20220302 18:39:20.419"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:39:20.432" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:39:20.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:39:20.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:39:20.424" endtime="20220302 18:39:20.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:39:20.471" level="INFO"/>
<status status="PASS" starttime="20220302 18:39:20.470" endtime="20220302 18:39:20.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:39:20.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:39:20.471" endtime="20220302 18:39:20.472"/>
</kw>
<status status="PASS" starttime="20220302 18:39:20.423" endtime="20220302 18:39:20.472"/>
</kw>
<msg timestamp="20220302 18:39:20.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:39:20.423" endtime="20220302 18:39:20.473"/>
</kw>
<status status="PASS" starttime="20220302 18:39:20.419" endtime="20220302 18:39:20.473"/>
</kw>
<status status="PASS" starttime="20220302 18:39:20.419" endtime="20220302 18:39:20.473"/>
</kw>
<status status="PASS" starttime="20220302 18:39:20.393" endtime="20220302 18:39:20.474"/>
</kw>
<status status="PASS" starttime="20220302 18:39:20.392" endtime="20220302 18:39:20.474"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:39:20.479" level="INFO">Running command 'ozone sh bucket create o3://om:9862/42675-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:39:26.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:39:26.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:39:20.476" endtime="20220302 18:39:26.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:39:26.049" level="INFO"/>
<status status="PASS" starttime="20220302 18:39:26.047" endtime="20220302 18:39:26.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:39:26.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:39:26.049" endtime="20220302 18:39:26.050"/>
</kw>
<status status="PASS" starttime="20220302 18:39:20.476" endtime="20220302 18:39:26.051"/>
</kw>
<msg timestamp="20220302 18:39:26.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:39:20.475" endtime="20220302 18:39:26.055"/>
</kw>
<status status="PASS" starttime="20220302 18:39:20.475" endtime="20220302 18:39:26.056"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:39:26.063" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/42675-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:39:34.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:39:34.090" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220302 18:39:26.060" endtime="20220302 18:39:34.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:39:34.093" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:39:34.091" endtime="20220302 18:39:34.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:39:34.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:39:34.094" endtime="20220302 18:39:34.095"/>
</kw>
<status status="PASS" starttime="20220302 18:39:26.059" endtime="20220302 18:39:34.095"/>
</kw>
<msg timestamp="20220302 18:39:34.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:39:26.058" endtime="20220302 18:39:34.096"/>
</kw>
<msg timestamp="20220302 18:39:34.097" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220302 18:39:26.056" endtime="20220302 18:39:34.097"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:39:34.097" endtime="20220302 18:39:34.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:39:34.104" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/42675-acls/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:39:40.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:39:40.012" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220302 18:39:34.102" endtime="20220302 18:39:40.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:39:40.014" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220302 18:39:40.013" endtime="20220302 18:39:40.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:39:40.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:39:40.014" endtime="20220302 18:39:40.015"/>
</kw>
<status status="PASS" starttime="20220302 18:39:34.101" endtime="20220302 18:39:40.015"/>
</kw>
<msg timestamp="20220302 18:39:40.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:39:34.100" endtime="20220302 18:39:40.016"/>
</kw>
<msg timestamp="20220302 18:39:40.017" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20220302 18:39:34.098" endtime="20220302 18:39:40.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:39:40.021" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/42675-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:39:48.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:39:48.600" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220302 18:39:40.019" endtime="20220302 18:39:48.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:39:48.603" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:39:48.601" endtime="20220302 18:39:48.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:39:48.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:39:48.604" endtime="20220302 18:39:48.604"/>
</kw>
<status status="PASS" starttime="20220302 18:39:40.018" endtime="20220302 18:39:48.605"/>
</kw>
<msg timestamp="20220302 18:39:48.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:39:40.018" endtime="20220302 18:39:48.606"/>
</kw>
<msg timestamp="20220302 18:39:48.607" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220302 18:39:40.017" endtime="20220302 18:39:48.607"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:39:48.607" endtime="20220302 18:39:48.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:39:48.615" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/42675-acls/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:39:56.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:39:56.217" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220302 18:39:48.611" endtime="20220302 18:39:56.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:39:56.218" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220302 18:39:56.217" endtime="20220302 18:39:56.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:39:56.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:39:56.219" endtime="20220302 18:39:56.220"/>
</kw>
<status status="PASS" starttime="20220302 18:39:48.609" endtime="20220302 18:39:56.220"/>
</kw>
<msg timestamp="20220302 18:39:56.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:39:48.609" endtime="20220302 18:39:56.222"/>
</kw>
<msg timestamp="20220302 18:39:56.222" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220302 18:39:48.608" endtime="20220302 18:39:56.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:39:56.229" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/42675-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:40:05.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:40:05.737" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220302 18:39:56.225" endtime="20220302 18:40:05.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:40:05.738" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:40:05.738" endtime="20220302 18:40:05.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:40:05.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:40:05.739" endtime="20220302 18:40:05.740"/>
</kw>
<status status="PASS" starttime="20220302 18:39:56.224" endtime="20220302 18:40:05.740"/>
</kw>
<msg timestamp="20220302 18:40:05.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:39:56.224" endtime="20220302 18:40:05.741"/>
</kw>
<msg timestamp="20220302 18:40:05.741" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220302 18:39:56.223" endtime="20220302 18:40:05.741"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:40:05.741" endtime="20220302 18:40:05.742"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:40:05.747" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/42675-acls/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:40:13.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:40:13.500" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:40:05.744" endtime="20220302 18:40:13.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:40:13.501" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:40:13.500" endtime="20220302 18:40:13.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:40:13.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:40:13.501" endtime="20220302 18:40:13.502"/>
</kw>
<status status="PASS" starttime="20220302 18:40:05.743" endtime="20220302 18:40:13.503"/>
</kw>
<msg timestamp="20220302 18:40:13.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:40:05.743" endtime="20220302 18:40:13.503"/>
</kw>
<msg timestamp="20220302 18:40:13.504" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:40:05.742" endtime="20220302 18:40:13.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:40:13.508" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/42675-acls/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:40:22.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:40:22.003" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220302 18:40:13.505" endtime="20220302 18:40:22.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:40:22.005" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:40:22.004" endtime="20220302 18:40:22.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:40:22.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:40:22.005" endtime="20220302 18:40:22.006"/>
</kw>
<status status="PASS" starttime="20220302 18:40:13.505" endtime="20220302 18:40:22.006"/>
</kw>
<msg timestamp="20220302 18:40:22.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:40:13.505" endtime="20220302 18:40:22.007"/>
</kw>
<msg timestamp="20220302 18:40:22.007" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220302 18:40:13.504" endtime="20220302 18:40:22.007"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:40:22.007" endtime="20220302 18:40:22.008"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:40:22.008" endtime="20220302 18:40:22.009"/>
</kw>
<status status="PASS" starttime="20220302 18:39:20.474" endtime="20220302 18:40:22.009"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220302 18:39:20.390" endtime="20220302 18:40:22.010"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:40:22.018" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:40:22.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:40:22.024" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:40:22.016" endtime="20220302 18:40:22.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:40:22.026" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:40:22.025" endtime="20220302 18:40:22.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:40:22.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:40:22.026" endtime="20220302 18:40:22.027"/>
</kw>
<status status="PASS" starttime="20220302 18:40:22.015" endtime="20220302 18:40:22.027"/>
</kw>
<msg timestamp="20220302 18:40:22.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:40:22.015" endtime="20220302 18:40:22.028"/>
</kw>
<msg timestamp="20220302 18:40:22.028" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:40:22.014" endtime="20220302 18:40:22.031"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:40:22.032" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:40:22.031" endtime="20220302 18:40:22.032"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:40:22.038" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:40:22.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:40:22.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:40:22.034" endtime="20220302 18:40:22.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:40:22.049" level="INFO"/>
<status status="PASS" starttime="20220302 18:40:22.048" endtime="20220302 18:40:22.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:40:22.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:40:22.050" endtime="20220302 18:40:22.054"/>
</kw>
<status status="PASS" starttime="20220302 18:40:22.034" endtime="20220302 18:40:22.054"/>
</kw>
<msg timestamp="20220302 18:40:22.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:40:22.033" endtime="20220302 18:40:22.055"/>
</kw>
<status status="PASS" starttime="20220302 18:40:22.033" endtime="20220302 18:40:22.057"/>
</kw>
<status status="PASS" starttime="20220302 18:40:22.032" endtime="20220302 18:40:22.057"/>
</kw>
<status status="PASS" starttime="20220302 18:40:22.013" endtime="20220302 18:40:22.057"/>
</kw>
<status status="PASS" starttime="20220302 18:40:22.013" endtime="20220302 18:40:22.057"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:40:22.063" level="INFO">Running command 'ozone sh key put o3://om:9862/42675-acls/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:43:34.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:43:34.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:40:22.060" endtime="20220302 18:43:34.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:43:34.989" level="INFO"/>
<status status="PASS" starttime="20220302 18:43:34.988" endtime="20220302 18:43:34.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:43:34.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:43:34.990" endtime="20220302 18:43:34.990"/>
</kw>
<status status="PASS" starttime="20220302 18:40:22.059" endtime="20220302 18:43:34.992"/>
</kw>
<msg timestamp="20220302 18:43:34.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:40:22.059" endtime="20220302 18:43:34.994"/>
</kw>
<status status="PASS" starttime="20220302 18:40:22.058" endtime="20220302 18:43:34.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:43:34.999" level="INFO">Running command 'ozone sh key getacl o3://om:9862/42675-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:43:43.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:43:43.098" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220302 18:43:34.996" endtime="20220302 18:43:43.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:43:43.100" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:43:43.099" endtime="20220302 18:43:43.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:43:43.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:43:43.100" endtime="20220302 18:43:43.101"/>
</kw>
<status status="PASS" starttime="20220302 18:43:34.996" endtime="20220302 18:43:43.101"/>
</kw>
<msg timestamp="20220302 18:43:43.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:43:34.995" endtime="20220302 18:43:43.102"/>
</kw>
<msg timestamp="20220302 18:43:43.102" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220302 18:43:34.995" endtime="20220302 18:43:43.102"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:43:43.103" endtime="20220302 18:43:43.103"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:43:43.108" level="INFO">Running command 'ozone sh key addacl o3://om:9862/42675-acls/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:43:49.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:43:49.561" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:43:43.105" endtime="20220302 18:43:49.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:43:49.563" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:43:49.562" endtime="20220302 18:43:49.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:43:49.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:43:49.564" endtime="20220302 18:43:49.565"/>
</kw>
<status status="PASS" starttime="20220302 18:43:43.105" endtime="20220302 18:43:49.565"/>
</kw>
<msg timestamp="20220302 18:43:49.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:43:43.104" endtime="20220302 18:43:49.566"/>
</kw>
<msg timestamp="20220302 18:43:49.567" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20220302 18:43:43.103" endtime="20220302 18:43:49.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:43:49.573" level="INFO">Running command 'ozone sh key getacl o3://om:9862/42675-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:43:55.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:43:55.901" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220302 18:43:49.569" endtime="20220302 18:43:55.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:43:55.903" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:43:55.902" endtime="20220302 18:43:55.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:43:55.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:43:55.903" endtime="20220302 18:43:55.904"/>
</kw>
<status status="PASS" starttime="20220302 18:43:49.568" endtime="20220302 18:43:55.904"/>
</kw>
<msg timestamp="20220302 18:43:55.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:43:49.568" endtime="20220302 18:43:55.905"/>
</kw>
<msg timestamp="20220302 18:43:55.906" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220302 18:43:49.567" endtime="20220302 18:43:55.907"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:43:55.907" endtime="20220302 18:43:55.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:43:55.915" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/42675-acls/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:44:03.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:44:03.559" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220302 18:43:55.912" endtime="20220302 18:44:03.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:44:03.561" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220302 18:44:03.560" endtime="20220302 18:44:03.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:44:03.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:44:03.561" endtime="20220302 18:44:03.562"/>
</kw>
<status status="PASS" starttime="20220302 18:43:55.911" endtime="20220302 18:44:03.562"/>
</kw>
<msg timestamp="20220302 18:44:03.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:43:55.910" endtime="20220302 18:44:03.563"/>
</kw>
<msg timestamp="20220302 18:44:03.563" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20220302 18:43:55.909" endtime="20220302 18:44:03.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:44:03.569" level="INFO">Running command 'ozone sh key getacl o3://om:9862/42675-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:44:11.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:44:11.928" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220302 18:44:03.566" endtime="20220302 18:44:11.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:44:11.930" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:44:11.929" endtime="20220302 18:44:11.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:44:11.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:44:11.931" endtime="20220302 18:44:11.933"/>
</kw>
<status status="PASS" starttime="20220302 18:44:03.565" endtime="20220302 18:44:11.934"/>
</kw>
<msg timestamp="20220302 18:44:11.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:44:03.564" endtime="20220302 18:44:11.935"/>
</kw>
<msg timestamp="20220302 18:44:11.935" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20220302 18:44:03.563" endtime="20220302 18:44:11.936"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:44:11.936" endtime="20220302 18:44:11.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:44:11.945" level="INFO">Running command 'ozone sh key setacl o3://om:9862/42675-acls/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:44:19.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:44:19.849" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:44:11.941" endtime="20220302 18:44:19.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:44:19.850" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:44:19.849" endtime="20220302 18:44:19.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:44:19.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:44:19.850" endtime="20220302 18:44:19.852"/>
</kw>
<status status="PASS" starttime="20220302 18:44:11.939" endtime="20220302 18:44:19.852"/>
</kw>
<msg timestamp="20220302 18:44:19.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:44:11.939" endtime="20220302 18:44:19.853"/>
</kw>
<msg timestamp="20220302 18:44:19.854" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:44:11.937" endtime="20220302 18:44:19.855"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:44:19.860" level="INFO">Running command 'ozone sh key getacl o3://om:9862/42675-acls/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:44:28.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:44:28.290" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220302 18:44:19.857" endtime="20220302 18:44:28.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:44:28.294" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:44:28.293" endtime="20220302 18:44:28.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:44:28.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:44:28.295" endtime="20220302 18:44:28.296"/>
</kw>
<status status="PASS" starttime="20220302 18:44:19.856" endtime="20220302 18:44:28.296"/>
</kw>
<msg timestamp="20220302 18:44:28.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:44:19.856" endtime="20220302 18:44:28.298"/>
</kw>
<msg timestamp="20220302 18:44:28.298" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20220302 18:44:19.855" endtime="20220302 18:44:28.299"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:44:28.299" endtime="20220302 18:44:28.300"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:44:28.300" endtime="20220302 18:44:28.302"/>
</kw>
<status status="PASS" starttime="20220302 18:40:22.058" endtime="20220302 18:44:28.303"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220302 18:40:22.012" endtime="20220302 18:44:28.304"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:44:28.318" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:44:28.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:44:28.324" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:44:28.314" endtime="20220302 18:44:28.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:44:28.326" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:44:28.325" endtime="20220302 18:44:28.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:44:28.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:44:28.327" endtime="20220302 18:44:28.328"/>
</kw>
<status status="PASS" starttime="20220302 18:44:28.312" endtime="20220302 18:44:28.328"/>
</kw>
<msg timestamp="20220302 18:44:28.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:44:28.311" endtime="20220302 18:44:28.330"/>
</kw>
<msg timestamp="20220302 18:44:28.330" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:44:28.310" endtime="20220302 18:44:28.331"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:44:28.333" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:44:28.331" endtime="20220302 18:44:28.333"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:44:28.341" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:44:28.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:44:28.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:44:28.338" endtime="20220302 18:44:28.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:44:28.376" level="INFO"/>
<status status="PASS" starttime="20220302 18:44:28.375" endtime="20220302 18:44:28.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:44:28.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:44:28.376" endtime="20220302 18:44:28.377"/>
</kw>
<status status="PASS" starttime="20220302 18:44:28.337" endtime="20220302 18:44:28.377"/>
</kw>
<msg timestamp="20220302 18:44:28.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:44:28.336" endtime="20220302 18:44:28.378"/>
</kw>
<status status="PASS" starttime="20220302 18:44:28.335" endtime="20220302 18:44:28.378"/>
</kw>
<status status="PASS" starttime="20220302 18:44:28.334" endtime="20220302 18:44:28.379"/>
</kw>
<status status="PASS" starttime="20220302 18:44:28.309" endtime="20220302 18:44:28.379"/>
</kw>
<status status="PASS" starttime="20220302 18:44:28.308" endtime="20220302 18:44:28.379"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-acls</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:44:28.386" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/42675-acls/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:44:34.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:44:34.316" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220302 18:44:28.383" endtime="20220302 18:44:34.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:44:34.317" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20220302 18:44:34.317" endtime="20220302 18:44:34.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:44:34.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:44:34.318" endtime="20220302 18:44:34.319"/>
</kw>
<status status="PASS" starttime="20220302 18:44:28.381" endtime="20220302 18:44:34.319"/>
</kw>
<msg timestamp="20220302 18:44:34.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:44:28.381" endtime="20220302 18:44:34.320"/>
</kw>
<status status="PASS" starttime="20220302 18:44:28.380" endtime="20220302 18:44:34.320"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:44:34.330" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/42675-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:44:42.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:44:42.660" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220302 18:44:34.322" endtime="20220302 18:44:42.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:44:42.661" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:44:42.660" endtime="20220302 18:44:42.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:44:42.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:44:42.661" endtime="20220302 18:44:42.662"/>
</kw>
<status status="PASS" starttime="20220302 18:44:34.321" endtime="20220302 18:44:42.662"/>
</kw>
<msg timestamp="20220302 18:44:42.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:44:34.321" endtime="20220302 18:44:42.663"/>
</kw>
<msg timestamp="20220302 18:44:42.663" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220302 18:44:34.320" endtime="20220302 18:44:42.663"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:44:42.663" endtime="20220302 18:44:42.665"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:44:42.670" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/42675-acls/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:44:48.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:44:48.070" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220302 18:44:42.668" endtime="20220302 18:44:48.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:44:48.072" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220302 18:44:48.071" endtime="20220302 18:44:48.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:44:48.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:44:48.072" endtime="20220302 18:44:48.073"/>
</kw>
<status status="PASS" starttime="20220302 18:44:42.667" endtime="20220302 18:44:48.074"/>
</kw>
<msg timestamp="20220302 18:44:48.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:44:42.666" endtime="20220302 18:44:48.075"/>
</kw>
<msg timestamp="20220302 18:44:48.075" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20220302 18:44:42.665" endtime="20220302 18:44:48.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:44:48.080" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/42675-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:44:56.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:44:56.448" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220302 18:44:48.077" endtime="20220302 18:44:56.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:44:56.450" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:44:56.449" endtime="20220302 18:44:56.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:44:56.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:44:56.451" endtime="20220302 18:44:56.451"/>
</kw>
<status status="PASS" starttime="20220302 18:44:48.076" endtime="20220302 18:44:56.452"/>
</kw>
<msg timestamp="20220302 18:44:56.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:44:48.076" endtime="20220302 18:44:56.452"/>
</kw>
<msg timestamp="20220302 18:44:56.453" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20220302 18:44:48.075" endtime="20220302 18:44:56.453"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:44:56.453" endtime="20220302 18:44:56.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:44:56.459" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/42675-acls/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:45:04.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:45:04.517" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:44:56.456" endtime="20220302 18:45:04.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:45:04.520" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:45:04.518" endtime="20220302 18:45:04.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:45:04.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:45:04.520" endtime="20220302 18:45:04.521"/>
</kw>
<status status="PASS" starttime="20220302 18:44:56.456" endtime="20220302 18:45:04.522"/>
</kw>
<msg timestamp="20220302 18:45:04.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:44:56.455" endtime="20220302 18:45:04.523"/>
</kw>
<msg timestamp="20220302 18:45:04.525" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20220302 18:44:56.454" endtime="20220302 18:45:04.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:45:04.532" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/42675-acls/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:45:13.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:45:13.526" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220302 18:45:04.528" endtime="20220302 18:45:13.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:45:13.528" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:45:13.527" endtime="20220302 18:45:13.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:45:13.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:45:13.528" endtime="20220302 18:45:13.528"/>
</kw>
<status status="PASS" starttime="20220302 18:45:04.527" endtime="20220302 18:45:13.529"/>
</kw>
<msg timestamp="20220302 18:45:13.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:45:04.526" endtime="20220302 18:45:13.530"/>
</kw>
<msg timestamp="20220302 18:45:13.530" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20220302 18:45:04.525" endtime="20220302 18:45:13.530"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:45:13.530" endtime="20220302 18:45:13.531"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:45:13.531" endtime="20220302 18:45:13.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:45:13.539" level="INFO">Running command 'ozone sh key put o3://om:9862/42675-acls/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:48:24.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:48:24.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:45:13.534" endtime="20220302 18:48:24.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:48:24.004" level="INFO"/>
<status status="PASS" starttime="20220302 18:48:24.003" endtime="20220302 18:48:24.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:48:24.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:48:24.005" endtime="20220302 18:48:24.005"/>
</kw>
<status status="PASS" starttime="20220302 18:45:13.533" endtime="20220302 18:48:24.006"/>
</kw>
<msg timestamp="20220302 18:48:24.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:45:13.532" endtime="20220302 18:48:24.007"/>
</kw>
<status status="PASS" starttime="20220302 18:45:13.532" endtime="20220302 18:48:24.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:48:24.013" level="INFO">Running command 'ozone sh key getacl o3://om:9862/42675-acls/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:48:30.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:48:30.240" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220302 18:48:24.010" endtime="20220302 18:48:30.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:48:30.241" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20220302 18:48:30.240" endtime="20220302 18:48:30.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:48:30.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:48:30.241" endtime="20220302 18:48:30.242"/>
</kw>
<status status="PASS" starttime="20220302 18:48:24.009" endtime="20220302 18:48:30.242"/>
</kw>
<msg timestamp="20220302 18:48:30.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:48:24.009" endtime="20220302 18:48:30.243"/>
</kw>
<msg timestamp="20220302 18:48:30.243" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20220302 18:48:24.008" endtime="20220302 18:48:30.244"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:48:30.244" endtime="20220302 18:48:30.245"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220302 18:48:30.245" endtime="20220302 18:48:30.246"/>
</kw>
<status status="PASS" starttime="20220302 18:44:28.379" endtime="20220302 18:48:30.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220302 18:44:28.306" endtime="20220302 18:48:30.247"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:48:30.260" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:48:30.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:48:30.266" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:48:30.257" endtime="20220302 18:48:30.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:48:30.267" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:48:30.266" endtime="20220302 18:48:30.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:48:30.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:48:30.268" endtime="20220302 18:48:30.269"/>
</kw>
<status status="PASS" starttime="20220302 18:48:30.255" endtime="20220302 18:48:30.270"/>
</kw>
<msg timestamp="20220302 18:48:30.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:48:30.255" endtime="20220302 18:48:30.271"/>
</kw>
<msg timestamp="20220302 18:48:30.271" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:48:30.254" endtime="20220302 18:48:30.271"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:48:30.272" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:48:30.271" endtime="20220302 18:48:30.272"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:48:30.278" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:48:30.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:48:30.302" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:48:30.275" endtime="20220302 18:48:30.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:48:30.304" level="INFO"/>
<status status="PASS" starttime="20220302 18:48:30.304" endtime="20220302 18:48:30.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:48:30.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:48:30.306" endtime="20220302 18:48:30.307"/>
</kw>
<status status="PASS" starttime="20220302 18:48:30.275" endtime="20220302 18:48:30.308"/>
</kw>
<msg timestamp="20220302 18:48:30.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:48:30.274" endtime="20220302 18:48:30.310"/>
</kw>
<status status="PASS" starttime="20220302 18:48:30.273" endtime="20220302 18:48:30.311"/>
</kw>
<status status="PASS" starttime="20220302 18:48:30.272" endtime="20220302 18:48:30.311"/>
</kw>
<status status="PASS" starttime="20220302 18:48:30.253" endtime="20220302 18:48:30.311"/>
</kw>
<status status="PASS" starttime="20220302 18:48:30.252" endtime="20220302 18:48:30.311"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-without-host</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:48:30.321" level="INFO">Running command 'ozone sh volume info o3:///42675-without-host 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:48:38.274" level="INFO">${rc} = 255</msg>
<msg timestamp="20220302 18:48:38.274" level="INFO">${output} = VOLUME_NOT_FOUND Volume 42675-without-host is not found</msg>
<status status="PASS" starttime="20220302 18:48:30.315" endtime="20220302 18:48:38.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:48:38.276" level="INFO">VOLUME_NOT_FOUND Volume 42675-without-host is not found</msg>
<status status="PASS" starttime="20220302 18:48:38.275" endtime="20220302 18:48:38.277"/>
</kw>
<msg timestamp="20220302 18:48:38.277" level="INFO">${result} = VOLUME_NOT_FOUND Volume 42675-without-host is not found</msg>
<status status="PASS" starttime="20220302 18:48:30.314" endtime="20220302 18:48:38.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:48:38.277" endtime="20220302 18:48:38.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:48:38.289" level="INFO">Running command 'ozone sh volume create o3:///42675-without-host --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:48:45.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:48:45.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:48:38.283" endtime="20220302 18:48:45.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:48:45.967" level="INFO"/>
<status status="PASS" starttime="20220302 18:48:45.966" endtime="20220302 18:48:45.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:48:45.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:48:45.967" endtime="20220302 18:48:45.968"/>
</kw>
<status status="PASS" starttime="20220302 18:48:38.281" endtime="20220302 18:48:45.968"/>
</kw>
<msg timestamp="20220302 18:48:45.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:48:38.281" endtime="20220302 18:48:45.969"/>
</kw>
<msg timestamp="20220302 18:48:45.969" level="INFO">${result} = </msg>
<status status="PASS" starttime="20220302 18:48:38.279" endtime="20220302 18:48:45.969"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:48:45.970" endtime="20220302 18:48:45.970"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:48:45.974" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '.[] | select(.name=="42675-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:48:54.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:48:54.614" level="INFO">${output} = {
  "metadata": {},
  "name": "42675-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220302 18:48:45.972" endtime="20220302 18:48:54.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:48:54.615" level="INFO">{
  "metadata": {},
  "name": "42675-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-02T18:48:45.706Z",
  "modificationTime": "2022-03-02T18:48:45.706Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220302 18:48:54.614" endtime="20220302 18:48:54.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:48:54.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:48:54.615" endtime="20220302 18:48:54.616"/>
</kw>
<status status="PASS" starttime="20220302 18:48:45.972" endtime="20220302 18:48:54.617"/>
</kw>
<msg timestamp="20220302 18:48:54.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:48:45.971" endtime="20220302 18:48:54.617"/>
</kw>
<msg timestamp="20220302 18:48:54.618" level="INFO">${result} = {
  "metadata": {},
  "name": "42675-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220302 18:48:45.970" endtime="20220302 18:48:54.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:48:54.618" endtime="20220302 18:48:54.619"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '.[] | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:48:54.624" level="INFO">Running command 'ozone sh volume list | jq -r '.[] | select(.name=="42675-without-host")' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:49:01.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:49:01.017" level="INFO">${output} = {
  "metadata": {},
  "name": "42675-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220302 18:48:54.620" endtime="20220302 18:49:01.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:49:01.020" level="INFO">{
  "metadata": {},
  "name": "42675-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2022-03-02T18:48:45.706Z",
  "modificationTime": "2022-03-02T18:48:45.706Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20220302 18:49:01.018" endtime="20220302 18:49:01.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:49:01.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:49:01.020" endtime="20220302 18:49:01.022"/>
</kw>
<status status="PASS" starttime="20220302 18:48:54.620" endtime="20220302 18:49:01.022"/>
</kw>
<msg timestamp="20220302 18:49:01.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:48:54.620" endtime="20220302 18:49:01.025"/>
</kw>
<msg timestamp="20220302 18:49:01.025" level="INFO">${result} = {
  "metadata": {},
  "name": "42675-without-host",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": ...</msg>
<status status="PASS" starttime="20220302 18:48:54.619" endtime="20220302 18:49:01.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220302 18:49:01.026" endtime="20220302 18:49:01.027"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:49:01.034" level="INFO">Running command 'ozone sh volume setquota o3:///42675-without-host --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:49:09.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:49:09.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:49:01.031" endtime="20220302 18:49:09.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:49:09.560" level="INFO"/>
<status status="PASS" starttime="20220302 18:49:09.559" endtime="20220302 18:49:09.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:49:09.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:49:09.560" endtime="20220302 18:49:09.561"/>
</kw>
<status status="PASS" starttime="20220302 18:49:01.030" endtime="20220302 18:49:09.562"/>
</kw>
<msg timestamp="20220302 18:49:09.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:49:01.029" endtime="20220302 18:49:09.562"/>
</kw>
<status status="PASS" starttime="20220302 18:49:01.027" endtime="20220302 18:49:09.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:49:09.568" level="INFO">Running command 'ozone sh volume info o3:///42675-without-host | jq -r '. | select(.name=="42675-without-host") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:49:18.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:49:18.413" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:49:09.565" endtime="20220302 18:49:18.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:49:18.416" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220302 18:49:18.414" endtime="20220302 18:49:18.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:49:18.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:49:18.416" endtime="20220302 18:49:18.418"/>
</kw>
<status status="PASS" starttime="20220302 18:49:09.565" endtime="20220302 18:49:18.419"/>
</kw>
<msg timestamp="20220302 18:49:18.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:49:09.564" endtime="20220302 18:49:18.420"/>
</kw>
<msg timestamp="20220302 18:49:18.421" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:49:09.563" endtime="20220302 18:49:18.421"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:49:18.422" endtime="20220302 18:49:18.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:49:18.430" level="INFO">Running command 'ozone sh bucket create o3:///42675-without-host/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:49:26.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:49:26.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:49:18.427" endtime="20220302 18:49:26.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:49:26.649" level="INFO"/>
<status status="PASS" starttime="20220302 18:49:26.648" endtime="20220302 18:49:26.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:49:26.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:49:26.649" endtime="20220302 18:49:26.651"/>
</kw>
<status status="PASS" starttime="20220302 18:49:18.426" endtime="20220302 18:49:26.651"/>
</kw>
<msg timestamp="20220302 18:49:26.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:49:18.425" endtime="20220302 18:49:26.652"/>
</kw>
<status status="PASS" starttime="20220302 18:49:18.423" endtime="20220302 18:49:26.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:49:26.672" level="INFO">Running command 'ozone sh bucket info o3:///42675-without-host/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:49:34.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:49:34.747" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20220302 18:49:26.665" endtime="20220302 18:49:34.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:49:34.749" level="INFO">DISK</msg>
<status status="PASS" starttime="20220302 18:49:34.747" endtime="20220302 18:49:34.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:49:34.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:49:34.749" endtime="20220302 18:49:34.750"/>
</kw>
<status status="PASS" starttime="20220302 18:49:26.664" endtime="20220302 18:49:34.750"/>
</kw>
<msg timestamp="20220302 18:49:34.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:49:26.663" endtime="20220302 18:49:34.751"/>
</kw>
<msg timestamp="20220302 18:49:34.751" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20220302 18:49:26.652" endtime="20220302 18:49:34.751"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:49:34.752" endtime="20220302 18:49:34.753"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:49:34.759" level="INFO">Running command 'ozone sh bucket info o3:///42675-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:49:42.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:49:42.531" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:49:34.756" endtime="20220302 18:49:42.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:49:42.532" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20220302 18:49:42.531" endtime="20220302 18:49:42.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:49:42.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:49:42.533" endtime="20220302 18:49:42.533"/>
</kw>
<status status="PASS" starttime="20220302 18:49:34.755" endtime="20220302 18:49:42.534"/>
</kw>
<msg timestamp="20220302 18:49:42.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:49:34.755" endtime="20220302 18:49:42.534"/>
</kw>
<msg timestamp="20220302 18:49:42.535" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20220302 18:49:34.753" endtime="20220302 18:49:42.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:49:42.535" endtime="20220302 18:49:42.535"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:49:42.545" level="INFO">Running command 'ozone sh bucket info o3:///42675-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:49:50.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:49:50.065" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20220302 18:49:42.538" endtime="20220302 18:49:50.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:49:50.066" level="INFO">100</msg>
<status status="PASS" starttime="20220302 18:49:50.065" endtime="20220302 18:49:50.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:49:50.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:49:50.067" endtime="20220302 18:49:50.069"/>
</kw>
<status status="PASS" starttime="20220302 18:49:42.537" endtime="20220302 18:49:50.069"/>
</kw>
<msg timestamp="20220302 18:49:50.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:49:42.537" endtime="20220302 18:49:50.070"/>
</kw>
<msg timestamp="20220302 18:49:50.072" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20220302 18:49:42.536" endtime="20220302 18:49:50.072"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:49:50.072" endtime="20220302 18:49:50.073"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:49:50.082" level="INFO">Running command 'ozone sh bucket setquota o3:///42675-without-host/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:49:58.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:49:58.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:49:50.076" endtime="20220302 18:49:58.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:49:58.747" level="INFO"/>
<status status="PASS" starttime="20220302 18:49:58.746" endtime="20220302 18:49:58.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:49:58.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:49:58.747" endtime="20220302 18:49:58.747"/>
</kw>
<status status="PASS" starttime="20220302 18:49:50.075" endtime="20220302 18:49:58.748"/>
</kw>
<msg timestamp="20220302 18:49:58.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:49:50.075" endtime="20220302 18:49:58.748"/>
</kw>
<status status="PASS" starttime="20220302 18:49:50.074" endtime="20220302 18:49:58.749"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:49:58.757" level="INFO">Running command 'ozone sh bucket info o3:///42675-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:50:07.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:50:07.168" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20220302 18:49:58.754" endtime="20220302 18:50:07.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:50:07.169" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20220302 18:50:07.168" endtime="20220302 18:50:07.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:50:07.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:50:07.170" endtime="20220302 18:50:07.171"/>
</kw>
<status status="PASS" starttime="20220302 18:49:58.753" endtime="20220302 18:50:07.171"/>
</kw>
<msg timestamp="20220302 18:50:07.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:49:58.750" endtime="20220302 18:50:07.172"/>
</kw>
<msg timestamp="20220302 18:50:07.172" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20220302 18:49:58.749" endtime="20220302 18:50:07.172"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:50:07.173" endtime="20220302 18:50:07.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:50:07.180" level="INFO">Running command 'ozone sh bucket info o3:///42675-without-host/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:50:15.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:50:15.041" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20220302 18:50:07.177" endtime="20220302 18:50:15.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:50:15.043" level="INFO">1000</msg>
<status status="PASS" starttime="20220302 18:50:15.042" endtime="20220302 18:50:15.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:50:15.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:50:15.043" endtime="20220302 18:50:15.044"/>
</kw>
<status status="PASS" starttime="20220302 18:50:07.175" endtime="20220302 18:50:15.044"/>
</kw>
<msg timestamp="20220302 18:50:15.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:50:07.174" endtime="20220302 18:50:15.045"/>
</kw>
<msg timestamp="20220302 18:50:15.046" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20220302 18:50:07.173" endtime="20220302 18:50:15.046"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:50:15.047" endtime="20220302 18:50:15.048"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '.[] | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:50:15.054" level="INFO">Running command 'ozone sh bucket list o3:///42675-without-host/ | jq -r '.[] | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:50:23.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:50:23.796" level="INFO">${output} = 42675-without-host</msg>
<status status="PASS" starttime="20220302 18:50:15.052" endtime="20220302 18:50:23.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:50:23.797" level="INFO">42675-without-host</msg>
<status status="PASS" starttime="20220302 18:50:23.796" endtime="20220302 18:50:23.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:50:23.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:50:23.798" endtime="20220302 18:50:23.799"/>
</kw>
<status status="PASS" starttime="20220302 18:50:15.051" endtime="20220302 18:50:23.800"/>
</kw>
<msg timestamp="20220302 18:50:23.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:50:15.050" endtime="20220302 18:50:23.800"/>
</kw>
<msg timestamp="20220302 18:50:23.801" level="INFO">${result} = 42675-without-host</msg>
<status status="PASS" starttime="20220302 18:50:15.048" endtime="20220302 18:50:23.801"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220302 18:50:23.801" endtime="20220302 18:50:23.801"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:50:23.807" level="INFO">Running command 'ozone sh key put o3:///42675-without-host/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:53:30.252" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20220302 18:50:23.804" endtime="20220302 18:53:30.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.252" endtime="20220302 18:53:30.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.252" endtime="20220302 18:53:30.253"/>
</kw>
<status status="FAIL" starttime="20220302 18:50:23.804" endtime="20220302 18:53:30.253"/>
</kw>
<msg timestamp="20220302 18:53:30.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220302 18:50:23.803" endtime="20220302 18:53:30.254"/>
</kw>
<status status="FAIL" starttime="20220302 18:50:23.803" endtime="20220302 18:53:30.254"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.254" endtime="20220302 18:53:30.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.255" endtime="20220302 18:53:30.255"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.255" endtime="20220302 18:53:30.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.255" endtime="20220302 18:53:30.255"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.255" endtime="20220302 18:53:30.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.256" endtime="20220302 18:53:30.256"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.256" endtime="20220302 18:53:30.256"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.256" endtime="20220302 18:53:30.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.256" endtime="20220302 18:53:30.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.256" endtime="20220302 18:53:30.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.257" endtime="20220302 18:53:30.257"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.257" endtime="20220302 18:53:30.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.257" endtime="20220302 18:53:30.257"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.257" endtime="20220302 18:53:30.257"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.257" endtime="20220302 18:53:30.258"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.258" endtime="20220302 18:53:30.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.258" endtime="20220302 18:53:30.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.258" endtime="20220302 18:53:30.258"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.259" endtime="20220302 18:53:30.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.259" endtime="20220302 18:53:30.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.259" endtime="20220302 18:53:30.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[] | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.259" endtime="20220302 18:53:30.259"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.259" endtime="20220302 18:53:30.260"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.260" endtime="20220302 18:53:30.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.[].name'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.260" endtime="20220302 18:53:30.260"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.260" endtime="20220302 18:53:30.260"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.260" endtime="20220302 18:53:30.260"/>
</kw>
<status status="FAIL" starttime="20220302 18:50:23.802" endtime="20220302 18:53:30.261"/>
</kw>
<status status="FAIL" starttime="20220302 18:50:23.801" endtime="20220302 18:53:30.261"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.261" endtime="20220302 18:53:30.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.262" endtime="20220302 18:53:30.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.262" endtime="20220302 18:53:30.262"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.262" endtime="20220302 18:53:30.262"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.262" endtime="20220302 18:53:30.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.262" endtime="20220302 18:53:30.262"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.263" endtime="20220302 18:53:30.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.263" endtime="20220302 18:53:30.263"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.263" endtime="20220302 18:53:30.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.263" endtime="20220302 18:53:30.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.263" endtime="20220302 18:53:30.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.264" endtime="20220302 18:53:30.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.264" endtime="20220302 18:53:30.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.264" endtime="20220302 18:53:30.264"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.264" endtime="20220302 18:53:30.264"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.264" endtime="20220302 18:53:30.265"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.265" endtime="20220302 18:53:30.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.265" endtime="20220302 18:53:30.266"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.266" endtime="20220302 18:53:30.266"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.266" endtime="20220302 18:53:30.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.267" endtime="20220302 18:53:30.267"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.267" endtime="20220302 18:53:30.267"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.267" endtime="20220302 18:53:30.267"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20220302 18:53:30.268" endtime="20220302 18:53:30.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.268" endtime="20220302 18:53:30.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20220302 18:53:30.268" endtime="20220302 18:53:30.268"/>
</kw>
<status status="FAIL" starttime="20220302 18:48:30.311" endtime="20220302 18:53:30.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220302 18:48:30.250" endtime="20220302 18:53:30.269">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20220302 18:33:19.359" endtime="20220302 18:53:30.274"/>
</suite>
<status status="FAIL" starttime="20220302 18:08:36.613" endtime="20220302 18:53:30.282"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:08:30.635" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:08:30.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:08:30.640" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20220302 18:08:30.631" endtime="20220302 18:08:30.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:08:30.641" level="INFO">scm</msg>
<status status="PASS" starttime="20220302 18:08:30.641" endtime="20220302 18:08:30.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:08:30.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:08:30.642" endtime="20220302 18:08:30.642"/>
</kw>
<status status="PASS" starttime="20220302 18:08:30.630" endtime="20220302 18:08:30.643"/>
</kw>
<msg timestamp="20220302 18:08:30.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:08:30.630" endtime="20220302 18:08:30.644"/>
</kw>
<msg timestamp="20220302 18:08:30.645" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20220302 18:08:30.629" endtime="20220302 18:08:30.645"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220302 18:08:30.646" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20220302 18:08:30.645" endtime="20220302 18:08:30.646"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220302 18:08:30.650" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20220302 18:08:30.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20220302 18:08:30.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220302 18:08:30.648" endtime="20220302 18:08:30.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220302 18:08:30.660" level="INFO"/>
<status status="PASS" starttime="20220302 18:08:30.659" endtime="20220302 18:08:30.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220302 18:08:30.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220302 18:08:30.660" endtime="20220302 18:08:30.661"/>
</kw>
<status status="PASS" starttime="20220302 18:08:30.647" endtime="20220302 18:08:30.661"/>
</kw>
<msg timestamp="20220302 18:08:30.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220302 18:08:30.647" endtime="20220302 18:08:30.662"/>
</kw>
<status status="PASS" starttime="20220302 18:08:30.646" endtime="20220302 18:08:30.662"/>
</kw>
<status status="PASS" starttime="20220302 18:08:30.646" endtime="20220302 18:08:30.662"/>
</kw>
<status status="PASS" starttime="20220302 18:08:30.628" endtime="20220302 18:08:30.662"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20220302 18:08:30.627" endtime="20220302 18:08:30.663"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20220302 18:08:30.558" endtime="20220302 18:08:30.664"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2693775"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="9" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="9" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="9" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="2" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
