<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220323 14:56:54.156" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220323 14:47:38.954" level="INFO">${random} = 93534</msg>
<status status="PASS" starttime="20220323 14:47:38.953" endtime="20220323 14:47:38.954"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:47:38.961" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-93534 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:47:43.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:47:43.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:47:38.956" endtime="20220323 14:47:43.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:47:43.337" level="INFO"/>
<status status="PASS" starttime="20220323 14:47:43.336" endtime="20220323 14:47:43.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:47:43.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:47:43.337" endtime="20220323 14:47:43.337"/>
</kw>
<status status="PASS" starttime="20220323 14:47:38.956" endtime="20220323 14:47:43.338"/>
</kw>
<msg timestamp="20220323 14:47:43.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:47:38.955" endtime="20220323 14:47:43.338"/>
</kw>
<msg timestamp="20220323 14:47:43.338" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:47:38.954" endtime="20220323 14:47:43.338"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:47:43.338" endtime="20220323 14:47:43.339"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:47:38.952" endtime="20220323 14:47:43.339"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220323 14:47:38.895" endtime="20220323 14:47:43.341"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220323 14:51:49.191" level="INFO">${random} = 38188</msg>
<status status="PASS" starttime="20220323 14:51:49.190" endtime="20220323 14:51:49.191"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:51:49.197" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-38188 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:51:53.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:51:53.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:51:49.193" endtime="20220323 14:51:53.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:51:53.573" level="INFO"/>
<status status="PASS" starttime="20220323 14:51:53.572" endtime="20220323 14:51:53.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:51:53.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:51:53.574" endtime="20220323 14:51:53.575"/>
</kw>
<status status="PASS" starttime="20220323 14:51:49.193" endtime="20220323 14:51:53.575"/>
</kw>
<msg timestamp="20220323 14:51:53.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:51:49.192" endtime="20220323 14:51:53.575"/>
</kw>
<msg timestamp="20220323 14:51:53.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:51:49.191" endtime="20220323 14:51:53.576"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:51:53.576" endtime="20220323 14:51:53.579"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:51:49.190" endtime="20220323 14:51:53.579"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220323 14:51:49.127" endtime="20220323 14:51:53.581"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:51:57.479" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:51:59.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:51:59.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:51:57.475" endtime="20220323 14:51:59.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:51:59.850" level="INFO"/>
<status status="PASS" starttime="20220323 14:51:59.849" endtime="20220323 14:51:59.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:51:59.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:51:59.850" endtime="20220323 14:51:59.851"/>
</kw>
<status status="PASS" starttime="20220323 14:51:57.475" endtime="20220323 14:51:59.851"/>
</kw>
<msg timestamp="20220323 14:51:59.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:51:57.475" endtime="20220323 14:51:59.851"/>
</kw>
<msg timestamp="20220323 14:51:59.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:51:57.474" endtime="20220323 14:51:59.852"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:51:59.852" endtime="20220323 14:51:59.852"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:51:59.857" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:52:02.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:52:02.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:51:59.854" endtime="20220323 14:52:02.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:52:02.360" level="INFO"/>
<status status="PASS" starttime="20220323 14:52:02.359" endtime="20220323 14:52:02.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:52:02.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:52:02.360" endtime="20220323 14:52:02.361"/>
</kw>
<status status="PASS" starttime="20220323 14:51:59.854" endtime="20220323 14:52:02.362"/>
</kw>
<msg timestamp="20220323 14:52:02.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:51:59.853" endtime="20220323 14:52:02.362"/>
</kw>
<msg timestamp="20220323 14:52:02.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:51:59.852" endtime="20220323 14:52:02.363"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:52:02.363" endtime="20220323 14:52:02.363"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:51:57.473" endtime="20220323 14:52:02.364"/>
</test>
<test id="s1-s3-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:52:02.369" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:52:07.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:52:07.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:52:02.367" endtime="20220323 14:52:07.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:52:07.531" level="INFO"/>
<status status="PASS" starttime="20220323 14:52:07.530" endtime="20220323 14:52:07.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:52:07.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:52:07.531" endtime="20220323 14:52:07.533"/>
</kw>
<status status="PASS" starttime="20220323 14:52:02.366" endtime="20220323 14:52:07.534"/>
</kw>
<msg timestamp="20220323 14:52:07.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:52:02.366" endtime="20220323 14:52:07.534"/>
</kw>
<msg timestamp="20220323 14:52:07.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:52:02.365" endtime="20220323 14:52:07.535"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:52:07.535" endtime="20220323 14:52:07.535"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:52:02.364" endtime="20220323 14:52:07.536"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220323 14:51:57.417" endtime="20220323 14:52:07.537"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220323 14:52:11.666" level="INFO">${random} = 45089</msg>
<status status="PASS" starttime="20220323 14:52:11.665" endtime="20220323 14:52:11.666"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:52:11.672" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-45089 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:52:16.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:52:16.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:52:11.668" endtime="20220323 14:52:16.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:52:16.081" level="INFO"/>
<status status="PASS" starttime="20220323 14:52:16.080" endtime="20220323 14:52:16.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:52:16.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:52:16.081" endtime="20220323 14:52:16.082"/>
</kw>
<status status="PASS" starttime="20220323 14:52:11.667" endtime="20220323 14:52:16.082"/>
</kw>
<msg timestamp="20220323 14:52:16.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:52:11.667" endtime="20220323 14:52:16.082"/>
</kw>
<msg timestamp="20220323 14:52:16.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:52:11.666" endtime="20220323 14:52:16.083"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:52:16.083" endtime="20220323 14:52:16.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:52:11.664" endtime="20220323 14:52:16.084"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220323 14:52:11.612" endtime="20220323 14:52:16.085"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s5-t1" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:52:20.271" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:52:25.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:52:25.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:52:20.268" endtime="20220323 14:52:25.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:52:25.158" level="INFO"/>
<status status="PASS" starttime="20220323 14:52:25.157" endtime="20220323 14:52:25.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:52:25.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:52:25.158" endtime="20220323 14:52:25.159"/>
</kw>
<status status="PASS" starttime="20220323 14:52:20.267" endtime="20220323 14:52:25.159"/>
</kw>
<msg timestamp="20220323 14:52:25.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:52:20.267" endtime="20220323 14:52:25.160"/>
</kw>
<msg timestamp="20220323 14:52:25.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:52:20.266" endtime="20220323 14:52:25.160"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:52:25.160" endtime="20220323 14:52:25.160"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:52:20.265" endtime="20220323 14:52:25.161"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220323 14:52:20.210" endtime="20220323 14:52:25.162"/>
</suite>
<suite id="s1-s6" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s6-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220323 14:51:40.282" level="INFO">${random} = 80909</msg>
<status status="PASS" starttime="20220323 14:51:40.281" endtime="20220323 14:51:40.282"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:51:40.288" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-80909 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:51:44.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:51:44.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:51:40.284" endtime="20220323 14:51:44.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:51:44.988" level="INFO"/>
<status status="PASS" starttime="20220323 14:51:44.987" endtime="20220323 14:51:44.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:51:44.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:51:44.988" endtime="20220323 14:51:44.989"/>
</kw>
<status status="PASS" starttime="20220323 14:51:40.284" endtime="20220323 14:51:44.989"/>
</kw>
<msg timestamp="20220323 14:51:44.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:51:40.283" endtime="20220323 14:51:44.989"/>
</kw>
<msg timestamp="20220323 14:51:44.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:51:40.282" endtime="20220323 14:51:44.990"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:51:44.990" endtime="20220323 14:51:44.990"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:51:40.280" endtime="20220323 14:51:44.990"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220323 14:51:40.225" endtime="20220323 14:51:44.992"/>
</suite>
<suite id="s1-s7" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s7-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:47:22.630" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:47:25.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:47:25.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:47:22.626" endtime="20220323 14:47:25.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:47:25.112" level="INFO"/>
<status status="PASS" starttime="20220323 14:47:25.112" endtime="20220323 14:47:25.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:47:25.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:47:25.113" endtime="20220323 14:47:25.113"/>
</kw>
<status status="PASS" starttime="20220323 14:47:22.625" endtime="20220323 14:47:25.114"/>
</kw>
<msg timestamp="20220323 14:47:25.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:47:22.625" endtime="20220323 14:47:25.114"/>
</kw>
<msg timestamp="20220323 14:47:25.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:47:22.624" endtime="20220323 14:47:25.114"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:47:25.114" endtime="20220323 14:47:25.115"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:47:25.120" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:47:28.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:47:28.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:47:25.117" endtime="20220323 14:47:28.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:47:28.194" level="INFO"/>
<status status="PASS" starttime="20220323 14:47:28.194" endtime="20220323 14:47:28.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:47:28.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:47:28.195" endtime="20220323 14:47:28.195"/>
</kw>
<status status="PASS" starttime="20220323 14:47:25.117" endtime="20220323 14:47:28.195"/>
</kw>
<msg timestamp="20220323 14:47:28.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:47:25.116" endtime="20220323 14:47:28.196"/>
</kw>
<msg timestamp="20220323 14:47:28.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:47:25.115" endtime="20220323 14:47:28.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:47:28.196" endtime="20220323 14:47:28.197"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:47:22.623" endtime="20220323 14:47:28.197"/>
</test>
<test id="s1-s7-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:47:28.202" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:47:34.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:47:34.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:47:28.200" endtime="20220323 14:47:34.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:47:34.740" level="INFO"/>
<status status="PASS" starttime="20220323 14:47:34.739" endtime="20220323 14:47:34.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:47:34.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:47:34.740" endtime="20220323 14:47:34.741"/>
</kw>
<status status="PASS" starttime="20220323 14:47:28.199" endtime="20220323 14:47:34.741"/>
</kw>
<msg timestamp="20220323 14:47:34.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:47:28.199" endtime="20220323 14:47:34.741"/>
</kw>
<msg timestamp="20220323 14:47:34.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:47:28.198" endtime="20220323 14:47:34.741"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:47:34.741" endtime="20220323 14:47:34.742"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:47:28.198" endtime="20220323 14:47:34.742"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220323 14:47:22.566" endtime="20220323 14:47:34.744"/>
</suite>
<suite id="s1-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:29.210" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220323 14:55:29.209" endtime="20220323 14:55:29.210"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:29.210" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:55:29.210" endtime="20220323 14:55:29.210"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:55:29.211" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:55:29.210" endtime="20220323 14:55:29.211"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:55:29.211" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220323 14:55:29.211" endtime="20220323 14:55:29.212"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:55:29.213" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:55:29.213" level="INFO">${version_file_contents} = #Wed Mar 23 14:53:56 UTC 2022
cTime=1648046772925
clusterID=CID-b534b4c0-96d4-4ef6-956f-b86969b90acb
nodeType=SCM
scmUuid=7883f277-e361-4f87-939c-0c6aea7be98e
layoutVersion=2
</msg>
<status status="PASS" starttime="20220323 14:55:29.212" endtime="20220323 14:55:29.213"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:55:29.214" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220323 14:55:29.213" endtime="20220323 14:55:29.214"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:55:29.214" endtime="20220323 14:55:29.214"/>
</kw>
<status status="PASS" starttime="20220323 14:55:29.212" endtime="20220323 14:55:29.214"/>
</kw>
<status status="PASS" starttime="20220323 14:55:29.212" endtime="20220323 14:55:29.214"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:55:29.208" endtime="20220323 14:55:29.214"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:55:29.157" endtime="20220323 14:55:29.215"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s9-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220323 14:56:15.444" level="INFO">${random} = 39569</msg>
<status status="PASS" starttime="20220323 14:56:15.443" endtime="20220323 14:56:15.444"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:56:15.450" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-39569 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:56:19.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:56:19.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:56:15.446" endtime="20220323 14:56:19.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:56:19.951" level="INFO"/>
<status status="PASS" starttime="20220323 14:56:19.951" endtime="20220323 14:56:19.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:56:19.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:56:19.952" endtime="20220323 14:56:19.952"/>
</kw>
<status status="PASS" starttime="20220323 14:56:15.445" endtime="20220323 14:56:19.953"/>
</kw>
<msg timestamp="20220323 14:56:19.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:56:15.445" endtime="20220323 14:56:19.956"/>
</kw>
<msg timestamp="20220323 14:56:19.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:56:15.444" endtime="20220323 14:56:19.956"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:56:19.956" endtime="20220323 14:56:19.956"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:56:15.442" endtime="20220323 14:56:19.957"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220323 14:56:15.389" endtime="20220323 14:56:19.960"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s10-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:56:24.030" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:56:26.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:56:26.793" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:56:24.026" endtime="20220323 14:56:26.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:56:26.795" level="INFO"/>
<status status="PASS" starttime="20220323 14:56:26.794" endtime="20220323 14:56:26.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:56:26.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:56:26.795" endtime="20220323 14:56:26.796"/>
</kw>
<status status="PASS" starttime="20220323 14:56:24.025" endtime="20220323 14:56:26.796"/>
</kw>
<msg timestamp="20220323 14:56:26.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:56:24.025" endtime="20220323 14:56:26.798"/>
</kw>
<msg timestamp="20220323 14:56:26.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:56:24.024" endtime="20220323 14:56:26.798"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:56:26.798" endtime="20220323 14:56:26.799"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:56:26.803" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:56:29.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:56:29.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:56:26.801" endtime="20220323 14:56:29.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:56:29.640" level="INFO"/>
<status status="PASS" starttime="20220323 14:56:29.640" endtime="20220323 14:56:29.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:56:29.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:56:29.641" endtime="20220323 14:56:29.641"/>
</kw>
<status status="PASS" starttime="20220323 14:56:26.800" endtime="20220323 14:56:29.642"/>
</kw>
<msg timestamp="20220323 14:56:29.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:56:26.800" endtime="20220323 14:56:29.642"/>
</kw>
<msg timestamp="20220323 14:56:29.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:56:26.799" endtime="20220323 14:56:29.642"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:56:29.643" endtime="20220323 14:56:29.643"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:56:24.023" endtime="20220323 14:56:29.643"/>
</test>
<test id="s1-s10-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:56:29.652" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:56:32.210" level="INFO">${rc} = 255</msg>
<msg timestamp="20220323 14:56:32.211" level="INFO">${output} = INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20220323 14:56:29.649" endtime="20220323 14:56:32.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:56:32.212" level="INFO">INTERNAL_ERROR Allocated 0 blocks. Requested 1 blocks</msg>
<status status="PASS" starttime="20220323 14:56:32.211" endtime="20220323 14:56:32.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:56:32.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20220323 14:56:32.213" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20220323 14:56:32.212" endtime="20220323 14:56:32.213"/>
</kw>
<status status="FAIL" starttime="20220323 14:56:29.648" endtime="20220323 14:56:32.215"/>
</kw>
<msg timestamp="20220323 14:56:32.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20220323 14:56:29.648" endtime="20220323 14:56:32.215"/>
</kw>
<status status="FAIL" starttime="20220323 14:56:29.647" endtime="20220323 14:56:32.216"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20220323 14:56:32.216" endtime="20220323 14:56:32.216"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20220323 14:56:29.646" endtime="20220323 14:56:32.217">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20220323 14:56:23.968" endtime="20220323 14:56:32.219"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:33.293" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220323 14:55:33.292" endtime="20220323 14:55:33.293"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:33.294" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:55:33.293" endtime="20220323 14:55:33.294"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:55:33.294" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:55:33.294" endtime="20220323 14:55:33.294"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:55:33.295" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220323 14:55:33.294" endtime="20220323 14:55:33.295"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:55:33.296" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:55:33.296" level="INFO">${version_file_contents} = #Wed Mar 23 14:54:05 UTC 2022
cTime=1648046888220
clusterID=c6fe6b6e-0b93-4766-9b16-2d622849069e
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220323 14:55:33.296" endtime="20220323 14:55:33.296"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:55:33.297" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220323 14:55:33.297" endtime="20220323 14:55:33.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:55:33.297" endtime="20220323 14:55:33.298"/>
</kw>
<status status="PASS" starttime="20220323 14:55:33.295" endtime="20220323 14:55:33.298"/>
</kw>
<status status="PASS" starttime="20220323 14:55:33.295" endtime="20220323 14:55:33.298"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:55:33.291" endtime="20220323 14:55:33.298"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:55:33.222" endtime="20220323 14:55:33.299"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:37.339" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220323 14:55:37.339" endtime="20220323 14:55:37.339"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:37.340" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:55:37.340" endtime="20220323 14:55:37.340"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:55:37.341" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:55:37.340" endtime="20220323 14:55:37.341"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:55:37.341" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220323 14:55:37.341" endtime="20220323 14:55:37.341"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:55:37.343" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:55:37.343" level="INFO">${version_file_contents} = #Wed Mar 23 14:54:20 UTC 2022
cTime=1648046889974
clusterID=1caafab5-8815-4e66-92ed-d7e53d381e4b
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220323 14:55:37.342" endtime="20220323 14:55:37.343"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:55:37.344" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220323 14:55:37.343" endtime="20220323 14:55:37.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:55:37.344" endtime="20220323 14:55:37.344"/>
</kw>
<status status="PASS" starttime="20220323 14:55:37.342" endtime="20220323 14:55:37.344"/>
</kw>
<status status="PASS" starttime="20220323 14:55:37.341" endtime="20220323 14:55:37.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:55:37.338" endtime="20220323 14:55:37.345"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:55:37.282" endtime="20220323 14:55:37.346"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:41.540" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220323 14:55:41.540" endtime="20220323 14:55:41.540"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:41.541" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:55:41.541" endtime="20220323 14:55:41.541"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:55:41.541" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:55:41.541" endtime="20220323 14:55:41.542"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:55:41.542" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220323 14:55:41.542" endtime="20220323 14:55:41.542"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:55:41.543" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:55:41.544" level="INFO">${version_file_contents} = #Wed Mar 23 14:53:57 UTC 2022
cTime=1648046889654
clusterID=45e92118-31a9-4b6f-9e18-0a4abff7f9e5
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220323 14:55:41.543" endtime="20220323 14:55:41.544"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:55:41.544" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220323 14:55:41.544" endtime="20220323 14:55:41.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:55:41.545" endtime="20220323 14:55:41.545"/>
</kw>
<status status="PASS" starttime="20220323 14:55:41.543" endtime="20220323 14:55:41.545"/>
</kw>
<status status="PASS" starttime="20220323 14:55:41.542" endtime="20220323 14:55:41.545"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:55:41.539" endtime="20220323 14:55:41.545"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:55:41.477" endtime="20220323 14:55:41.547"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:45.721" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220323 14:55:45.721" endtime="20220323 14:55:45.722"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:45.722" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:55:45.722" endtime="20220323 14:55:45.722"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:55:45.723" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:55:45.722" endtime="20220323 14:55:45.723"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:55:45.723" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220323 14:55:45.723" endtime="20220323 14:55:45.723"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:55:45.725" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:55:45.725" level="INFO">${version_file_contents} = #Wed Mar 23 14:46:35 UTC 2022
cTime=1648046774442
clusterID=CID-b534b4c0-96d4-4ef6-956f-b86969b90acb
omUuid=dbc577f6-8ff8-460f-9396-efce0e185c25
nodeType=OM
scmUuid=7883f277-e361-4f87-939c-0c6aea7be98...</msg>
<status status="PASS" starttime="20220323 14:55:45.724" endtime="20220323 14:55:45.725"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:55:45.726" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220323 14:55:45.725" endtime="20220323 14:55:45.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:55:45.726" endtime="20220323 14:55:45.726"/>
</kw>
<status status="PASS" starttime="20220323 14:55:45.724" endtime="20220323 14:55:45.726"/>
</kw>
<status status="PASS" starttime="20220323 14:55:45.724" endtime="20220323 14:55:45.727"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:55:45.720" endtime="20220323 14:55:45.727"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:55:45.663" endtime="20220323 14:55:45.728"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:49.896" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220323 14:55:49.895" endtime="20220323 14:55:49.896"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:49.896" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:55:49.896" endtime="20220323 14:55:49.896"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:55:49.897" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:55:49.897" endtime="20220323 14:55:49.897"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:55:49.898" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220323 14:55:49.897" endtime="20220323 14:55:49.898"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:55:49.899" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:55:49.899" level="INFO">${version_file_contents} = #Wed Mar 23 14:46:35 UTC 2022
cTime=1648046771677
clusterID=CID-b534b4c0-96d4-4ef6-956f-b86969b90acb
omUuid=533044bc-796a-4f68-8ec9-33e594868dba
nodeType=OM
scmUuid=7883f277-e361-4f87-939c-0c6aea7be98...</msg>
<status status="PASS" starttime="20220323 14:55:49.899" endtime="20220323 14:55:49.899"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:55:49.900" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220323 14:55:49.900" endtime="20220323 14:55:49.900"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:55:49.900" endtime="20220323 14:55:49.901"/>
</kw>
<status status="PASS" starttime="20220323 14:55:49.898" endtime="20220323 14:55:49.901"/>
</kw>
<status status="PASS" starttime="20220323 14:55:49.898" endtime="20220323 14:55:49.901"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:55:49.894" endtime="20220323 14:55:49.901"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:55:49.829" endtime="20220323 14:55:49.902"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:54.024" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220323 14:55:54.023" endtime="20220323 14:55:54.024"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:55:54.024" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:55:54.024" endtime="20220323 14:55:54.025"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:55:54.025" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:55:54.025" endtime="20220323 14:55:54.025"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:55:54.026" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220323 14:55:54.025" endtime="20220323 14:55:54.026"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:55:54.027" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:55:54.027" level="INFO">${version_file_contents} = #Wed Mar 23 14:46:35 UTC 2022
cTime=1648046774417
clusterID=CID-b534b4c0-96d4-4ef6-956f-b86969b90acb
omUuid=bab617ce-efb8-4bdf-aef2-402dae7e653e
nodeType=OM
scmUuid=7883f277-e361-4f87-939c-0c6aea7be98...</msg>
<status status="PASS" starttime="20220323 14:55:54.027" endtime="20220323 14:55:54.027"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:55:54.028" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220323 14:55:54.028" endtime="20220323 14:55:54.028"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:55:54.028" endtime="20220323 14:55:54.029"/>
</kw>
<status status="PASS" starttime="20220323 14:55:54.026" endtime="20220323 14:55:54.029"/>
</kw>
<status status="PASS" starttime="20220323 14:55:54.026" endtime="20220323 14:55:54.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:55:54.022" endtime="20220323 14:55:54.029"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:55:53.967" endtime="20220323 14:55:54.030"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220323 14:55:57.905" level="INFO">${random} = 00279</msg>
<status status="PASS" starttime="20220323 14:55:57.905" endtime="20220323 14:55:57.905"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:55:57.911" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-00279 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:56:02.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:56:02.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:55:57.907" endtime="20220323 14:56:02.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:56:02.599" level="INFO"/>
<status status="PASS" starttime="20220323 14:56:02.598" endtime="20220323 14:56:02.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:56:02.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:56:02.599" endtime="20220323 14:56:02.600"/>
</kw>
<status status="PASS" starttime="20220323 14:55:57.906" endtime="20220323 14:56:02.600"/>
</kw>
<msg timestamp="20220323 14:56:02.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:55:57.906" endtime="20220323 14:56:02.601"/>
</kw>
<msg timestamp="20220323 14:56:02.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:55:57.905" endtime="20220323 14:56:02.602"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:56:02.602" endtime="20220323 14:56:02.602"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:55:57.904" endtime="20220323 14:56:02.607"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220323 14:55:57.853" endtime="20220323 14:56:02.608"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220323 14:56:06.622" level="INFO">${random} = 52295</msg>
<status status="PASS" starttime="20220323 14:56:06.622" endtime="20220323 14:56:06.622"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:56:06.629" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-52295 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:56:11.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:56:11.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:56:06.624" endtime="20220323 14:56:11.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:56:11.423" level="INFO"/>
<status status="PASS" starttime="20220323 14:56:11.422" endtime="20220323 14:56:11.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:56:11.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:56:11.423" endtime="20220323 14:56:11.423"/>
</kw>
<status status="PASS" starttime="20220323 14:56:06.623" endtime="20220323 14:56:11.424"/>
</kw>
<msg timestamp="20220323 14:56:11.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:56:06.623" endtime="20220323 14:56:11.425"/>
</kw>
<msg timestamp="20220323 14:56:11.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:56:06.622" endtime="20220323 14:56:11.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:56:11.426" endtime="20220323 14:56:11.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:56:06.621" endtime="20220323 14:56:11.426"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220323 14:56:06.568" endtime="20220323 14:56:11.429"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220323 14:53:47.921" endtime="20220323 14:53:47.921"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:53:47.927" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:55:21.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:55:21.780" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220323 14:53:47.923" endtime="20220323 14:55:21.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:55:21.782" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220323 14:55:21.781" endtime="20220323 14:55:21.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:55:21.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:55:21.782" endtime="20220323 14:55:21.783"/>
</kw>
<status status="PASS" starttime="20220323 14:53:47.922" endtime="20220323 14:55:21.784"/>
</kw>
<msg timestamp="20220323 14:55:21.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:53:47.922" endtime="20220323 14:55:21.785"/>
</kw>
<msg timestamp="20220323 14:55:21.785" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220323 14:53:47.921" endtime="20220323 14:55:21.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:55:21.786" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220323 14:55:21.786" endtime="20220323 14:55:21.786"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:53:47.919" endtime="20220323 14:55:21.786"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220323 14:55:21.788" endtime="20220323 14:55:21.788"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:55:21.792" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:55:25.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:55:25.186" level="INFO">${output} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220323 14:55:21.790" endtime="20220323 14:55:25.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:55:25.188" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220323 14:55:25.187" endtime="20220323 14:55:25.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:55:25.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:55:25.188" endtime="20220323 14:55:25.189"/>
</kw>
<status status="PASS" starttime="20220323 14:55:21.789" endtime="20220323 14:55:25.189"/>
</kw>
<msg timestamp="20220323 14:55:25.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:55:21.789" endtime="20220323 14:55:25.190"/>
</kw>
<msg timestamp="20220323 14:55:25.190" level="INFO">${result} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220323 14:55:21.789" endtime="20220323 14:55:25.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:55:25.191" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220323 14:55:25.190" endtime="20220323 14:55:25.191"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:55:21.787" endtime="20220323 14:55:25.191"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20220323 14:53:47.861" endtime="20220323 14:55:25.193"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:11.374" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220323 14:49:11.373" endtime="20220323 14:49:11.374"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:11.374" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:49:11.374" endtime="20220323 14:49:11.374"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:49:11.375" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:49:11.374" endtime="20220323 14:49:11.375"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:49:11.375" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220323 14:49:11.375" endtime="20220323 14:49:11.375"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:49:11.377" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:49:11.377" level="INFO">${version_file_contents} = #Wed Mar 23 14:48:08 UTC 2022
cTime=1648046888220
clusterID=c6fe6b6e-0b93-4766-9b16-2d622849069e
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220323 14:49:11.376" endtime="20220323 14:49:11.377"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:49:11.378" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220323 14:49:11.377" endtime="20220323 14:49:11.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:49:11.378" endtime="20220323 14:49:11.378"/>
</kw>
<status status="PASS" starttime="20220323 14:49:11.376" endtime="20220323 14:49:11.378"/>
</kw>
<status status="PASS" starttime="20220323 14:49:11.376" endtime="20220323 14:49:11.378"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:49:11.372" endtime="20220323 14:49:11.378"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:49:11.318" endtime="20220323 14:49:11.379"/>
</suite>
<suite id="s1-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220323 14:50:10.102" level="INFO">${random} = 86768</msg>
<status status="PASS" starttime="20220323 14:50:10.102" endtime="20220323 14:50:10.102"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:50:10.108" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-86768 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:50:14.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:50:14.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:50:10.104" endtime="20220323 14:50:14.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:50:14.750" level="INFO"/>
<status status="PASS" starttime="20220323 14:50:14.749" endtime="20220323 14:50:14.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:50:14.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:50:14.750" endtime="20220323 14:50:14.751"/>
</kw>
<status status="PASS" starttime="20220323 14:50:10.104" endtime="20220323 14:50:14.751"/>
</kw>
<msg timestamp="20220323 14:50:14.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:50:10.104" endtime="20220323 14:50:14.752"/>
</kw>
<msg timestamp="20220323 14:50:14.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:50:10.102" endtime="20220323 14:50:14.753"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:50:14.753" endtime="20220323 14:50:14.753"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:50:10.101" endtime="20220323 14:50:14.754"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220323 14:50:10.048" endtime="20220323 14:50:14.755"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:15.543" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220323 14:49:15.543" endtime="20220323 14:49:15.543"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:15.544" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:49:15.544" endtime="20220323 14:49:15.544"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:49:15.545" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:49:15.544" endtime="20220323 14:49:15.545"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:49:15.545" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220323 14:49:15.545" endtime="20220323 14:49:15.545"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:49:15.546" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:49:15.547" level="INFO">${version_file_contents} = #Wed Mar 23 14:48:09 UTC 2022
cTime=1648046889974
clusterID=1caafab5-8815-4e66-92ed-d7e53d381e4b
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220323 14:49:15.546" endtime="20220323 14:49:15.547"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:49:15.547" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220323 14:49:15.547" endtime="20220323 14:49:15.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:49:15.547" endtime="20220323 14:49:15.548"/>
</kw>
<status status="PASS" starttime="20220323 14:49:15.546" endtime="20220323 14:49:15.548"/>
</kw>
<status status="PASS" starttime="20220323 14:49:15.545" endtime="20220323 14:49:15.548"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:49:15.542" endtime="20220323 14:49:15.548"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:49:15.488" endtime="20220323 14:49:15.549"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:19.687" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220323 14:49:19.686" endtime="20220323 14:49:19.687"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:19.688" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:49:19.688" endtime="20220323 14:49:19.688"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:49:19.688" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:49:19.688" endtime="20220323 14:49:19.689"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:49:19.689" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220323 14:49:19.689" endtime="20220323 14:49:19.689"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:49:19.690" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:49:19.691" level="INFO">${version_file_contents} = #Wed Mar 23 14:48:09 UTC 2022
cTime=1648046889654
clusterID=45e92118-31a9-4b6f-9e18-0a4abff7f9e5
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220323 14:49:19.690" endtime="20220323 14:49:19.691"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:49:19.691" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220323 14:49:19.691" endtime="20220323 14:49:19.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:49:19.692" endtime="20220323 14:49:19.692"/>
</kw>
<status status="PASS" starttime="20220323 14:49:19.690" endtime="20220323 14:49:19.692"/>
</kw>
<status status="PASS" starttime="20220323 14:49:19.689" endtime="20220323 14:49:19.692"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:49:19.685" endtime="20220323 14:49:19.693"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:49:19.626" endtime="20220323 14:49:19.693"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:23.731" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220323 14:49:23.730" endtime="20220323 14:49:23.731"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:23.731" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:49:23.731" endtime="20220323 14:49:23.732"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:49:23.732" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:49:23.732" endtime="20220323 14:49:23.732"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:49:23.733" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220323 14:49:23.732" endtime="20220323 14:49:23.733"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:49:23.736" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:49:23.737" level="INFO">${version_file_contents} = #Wed Mar 23 14:46:35 UTC 2022
cTime=1648046774442
clusterID=CID-b534b4c0-96d4-4ef6-956f-b86969b90acb
omUuid=dbc577f6-8ff8-460f-9396-efce0e185c25
nodeType=OM
scmUuid=7883f277-e361-4f87-939c-0c6aea7be98...</msg>
<status status="PASS" starttime="20220323 14:49:23.734" endtime="20220323 14:49:23.737"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:49:23.738" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220323 14:49:23.737" endtime="20220323 14:49:23.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:49:23.738" endtime="20220323 14:49:23.738"/>
</kw>
<status status="PASS" starttime="20220323 14:49:23.733" endtime="20220323 14:49:23.738"/>
</kw>
<status status="PASS" starttime="20220323 14:49:23.733" endtime="20220323 14:49:23.738"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:49:23.729" endtime="20220323 14:49:23.739"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:49:23.675" endtime="20220323 14:49:23.740"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:27.819" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220323 14:49:27.818" endtime="20220323 14:49:27.819"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:27.820" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:49:27.819" endtime="20220323 14:49:27.820"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:49:27.820" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:49:27.820" endtime="20220323 14:49:27.820"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:49:27.821" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220323 14:49:27.821" endtime="20220323 14:49:27.821"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:49:27.822" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:49:27.823" level="INFO">${version_file_contents} = #Wed Mar 23 14:46:35 UTC 2022
cTime=1648046771677
clusterID=CID-b534b4c0-96d4-4ef6-956f-b86969b90acb
omUuid=533044bc-796a-4f68-8ec9-33e594868dba
nodeType=OM
scmUuid=7883f277-e361-4f87-939c-0c6aea7be98...</msg>
<status status="PASS" starttime="20220323 14:49:27.822" endtime="20220323 14:49:27.823"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:49:27.824" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220323 14:49:27.823" endtime="20220323 14:49:27.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:49:27.824" endtime="20220323 14:49:27.824"/>
</kw>
<status status="PASS" starttime="20220323 14:49:27.822" endtime="20220323 14:49:27.824"/>
</kw>
<status status="PASS" starttime="20220323 14:49:27.821" endtime="20220323 14:49:27.825"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:49:27.817" endtime="20220323 14:49:27.825"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:49:27.763" endtime="20220323 14:49:27.826"/>
</suite>
<suite id="s1-s26" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s26-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:31.924" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220323 14:49:31.924" endtime="20220323 14:49:31.924"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:31.925" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:49:31.924" endtime="20220323 14:49:31.925"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:49:31.925" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:49:31.925" endtime="20220323 14:49:31.925"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:49:31.926" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220323 14:49:31.926" endtime="20220323 14:49:31.926"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:49:31.928" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:49:31.928" level="INFO">${version_file_contents} = #Wed Mar 23 14:46:35 UTC 2022
cTime=1648046774417
clusterID=CID-b534b4c0-96d4-4ef6-956f-b86969b90acb
omUuid=bab617ce-efb8-4bdf-aef2-402dae7e653e
nodeType=OM
scmUuid=7883f277-e361-4f87-939c-0c6aea7be98...</msg>
<status status="PASS" starttime="20220323 14:49:31.928" endtime="20220323 14:49:31.928"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:49:31.929" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220323 14:49:31.928" endtime="20220323 14:49:31.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:49:31.929" endtime="20220323 14:49:31.929"/>
</kw>
<status status="PASS" starttime="20220323 14:49:31.927" endtime="20220323 14:49:31.930"/>
</kw>
<status status="PASS" starttime="20220323 14:49:31.926" endtime="20220323 14:49:31.930"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:49:31.923" endtime="20220323 14:49:31.930"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:49:31.865" endtime="20220323 14:49:31.931"/>
</suite>
<suite id="s1-s27" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s27-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220323 14:49:35.945" level="INFO">${random} = 98507</msg>
<status status="PASS" starttime="20220323 14:49:35.945" endtime="20220323 14:49:35.945"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:49:35.952" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-98507 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:49:40.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:49:40.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:49:35.947" endtime="20220323 14:49:40.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:49:40.909" level="INFO"/>
<status status="PASS" starttime="20220323 14:49:40.908" endtime="20220323 14:49:40.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:49:40.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:49:40.909" endtime="20220323 14:49:40.910"/>
</kw>
<status status="PASS" starttime="20220323 14:49:35.947" endtime="20220323 14:49:40.910"/>
</kw>
<msg timestamp="20220323 14:49:40.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:49:35.946" endtime="20220323 14:49:40.912"/>
</kw>
<msg timestamp="20220323 14:49:40.912" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:49:35.945" endtime="20220323 14:49:40.912"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:49:40.912" endtime="20220323 14:49:40.913"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:49:35.944" endtime="20220323 14:49:40.913"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220323 14:49:35.890" endtime="20220323 14:49:40.915"/>
</suite>
<suite id="s1-s28" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s28-t1" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:49:45.099" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:49:51.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:49:51.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:49:45.095" endtime="20220323 14:49:51.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:49:51.327" level="INFO"/>
<status status="PASS" starttime="20220323 14:49:51.326" endtime="20220323 14:49:51.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:49:51.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:49:51.327" endtime="20220323 14:49:51.328"/>
</kw>
<status status="PASS" starttime="20220323 14:49:45.093" endtime="20220323 14:49:51.328"/>
</kw>
<msg timestamp="20220323 14:49:51.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:49:45.093" endtime="20220323 14:49:51.330"/>
</kw>
<msg timestamp="20220323 14:49:51.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:49:45.091" endtime="20220323 14:49:51.330"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:49:51.330" endtime="20220323 14:49:51.331"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:49:45.090" endtime="20220323 14:49:51.331"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220323 14:49:45.026" endtime="20220323 14:49:51.332"/>
</suite>
<suite id="s1-s29" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s29-t1" name="Create a volume and bucket">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:49:55.438" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:49:58.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:49:58.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:49:55.433" endtime="20220323 14:49:58.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:49:58.408" level="INFO"/>
<status status="PASS" starttime="20220323 14:49:58.408" endtime="20220323 14:49:58.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:49:58.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:49:58.409" endtime="20220323 14:49:58.409"/>
</kw>
<status status="PASS" starttime="20220323 14:49:55.433" endtime="20220323 14:49:58.410"/>
</kw>
<msg timestamp="20220323 14:49:58.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:49:55.432" endtime="20220323 14:49:58.411"/>
</kw>
<msg timestamp="20220323 14:49:58.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:49:55.432" endtime="20220323 14:49:58.412"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:49:58.412" endtime="20220323 14:49:58.412"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:49:58.416" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:50:01.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:50:01.137" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:49:58.414" endtime="20220323 14:50:01.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:50:01.139" level="INFO"/>
<status status="PASS" starttime="20220323 14:50:01.138" endtime="20220323 14:50:01.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:50:01.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:50:01.139" endtime="20220323 14:50:01.140"/>
</kw>
<status status="PASS" starttime="20220323 14:49:58.413" endtime="20220323 14:50:01.140"/>
</kw>
<msg timestamp="20220323 14:50:01.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:49:58.413" endtime="20220323 14:50:01.141"/>
</kw>
<msg timestamp="20220323 14:50:01.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:49:58.412" endtime="20220323 14:50:01.141"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:50:01.141" endtime="20220323 14:50:01.141"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:49:55.431" endtime="20220323 14:50:01.142"/>
</test>
<test id="s1-s29-t2" name="Create key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220323 14:50:01.148" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220323 14:50:05.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20220323 14:50:05.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:50:01.145" endtime="20220323 14:50:05.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220323 14:50:05.988" level="INFO"/>
<status status="PASS" starttime="20220323 14:50:05.987" endtime="20220323 14:50:05.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220323 14:50:05.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220323 14:50:05.988" endtime="20220323 14:50:05.989"/>
</kw>
<status status="PASS" starttime="20220323 14:50:01.144" endtime="20220323 14:50:05.989"/>
</kw>
<msg timestamp="20220323 14:50:05.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220323 14:50:01.144" endtime="20220323 14:50:05.990"/>
</kw>
<msg timestamp="20220323 14:50:05.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220323 14:50:01.143" endtime="20220323 14:50:05.990"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:50:05.990" endtime="20220323 14:50:05.990"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:50:01.142" endtime="20220323 14:50:05.991"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220323 14:49:55.366" endtime="20220323 14:50:05.992"/>
</suite>
<suite id="s1-s30" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s30-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:07.147" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220323 14:49:07.146" endtime="20220323 14:49:07.148"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220323 14:49:07.148" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220323 14:49:07.148" endtime="20220323 14:49:07.148"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220323 14:49:07.149" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220323 14:49:07.148" endtime="20220323 14:49:07.149"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220323 14:49:07.149" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220323 14:49:07.149" endtime="20220323 14:49:07.149"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220323 14:49:07.151" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220323 14:49:07.151" level="INFO">${version_file_contents} = #Wed Mar 23 14:46:12 UTC 2022
cTime=1648046772925
clusterID=CID-b534b4c0-96d4-4ef6-956f-b86969b90acb
nodeType=SCM
scmUuid=7883f277-e361-4f87-939c-0c6aea7be98e
layoutVersion=0
</msg>
<status status="PASS" starttime="20220323 14:49:07.151" endtime="20220323 14:49:07.151"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220323 14:49:07.152" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220323 14:49:07.151" endtime="20220323 14:49:07.152"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220323 14:49:07.152" endtime="20220323 14:49:07.153"/>
</kw>
<status status="PASS" starttime="20220323 14:49:07.150" endtime="20220323 14:49:07.153"/>
</kw>
<status status="PASS" starttime="20220323 14:49:07.150" endtime="20220323 14:49:07.153"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220323 14:49:07.145" endtime="20220323 14:49:07.153"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220323 14:49:07.089" endtime="20220323 14:49:07.154"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="192742"/>
</suite>
<statistics>
<total>
<stat pass="34" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="34" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="1" skip="0" id="s1-s10" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Generate">upgrade.Generate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s29" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s30" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
