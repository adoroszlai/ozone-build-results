<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.3 (Python 3.6.9 on linux)" generated="20220312 01:38:02.023" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220312 01:29:02.552" level="INFO">${random} = 08749</msg>
<status status="PASS" starttime="20220312 01:29:02.551" endtime="20220312 01:29:02.552"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:29:02.558" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-08749 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:29:07.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:29:07.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:29:02.554" endtime="20220312 01:29:07.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:29:07.085" level="INFO"/>
<status status="PASS" starttime="20220312 01:29:07.084" endtime="20220312 01:29:07.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:29:07.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:29:07.086" endtime="20220312 01:29:07.086"/>
</kw>
<status status="PASS" starttime="20220312 01:29:02.554" endtime="20220312 01:29:07.087"/>
</kw>
<msg timestamp="20220312 01:29:07.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:29:02.553" endtime="20220312 01:29:07.087"/>
</kw>
<msg timestamp="20220312 01:29:07.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:29:02.552" endtime="20220312 01:29:07.087"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:29:07.088" endtime="20220312 01:29:07.088"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:29:02.550" endtime="20220312 01:29:07.088"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220312 01:29:02.485" endtime="20220312 01:29:07.090"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220312 01:33:08.523" level="INFO">${random} = 77636</msg>
<status status="PASS" starttime="20220312 01:33:08.522" endtime="20220312 01:33:08.523"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:33:08.529" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-77636 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:33:12.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:33:12.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:33:08.525" endtime="20220312 01:33:12.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:33:12.988" level="INFO"/>
<status status="PASS" starttime="20220312 01:33:12.987" endtime="20220312 01:33:12.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:33:12.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:33:12.988" endtime="20220312 01:33:12.989"/>
</kw>
<status status="PASS" starttime="20220312 01:33:08.524" endtime="20220312 01:33:12.990"/>
</kw>
<msg timestamp="20220312 01:33:12.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:33:08.524" endtime="20220312 01:33:12.990"/>
</kw>
<msg timestamp="20220312 01:33:12.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:33:08.523" endtime="20220312 01:33:12.990"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:33:12.990" endtime="20220312 01:33:12.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:33:08.521" endtime="20220312 01:33:12.991"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220312 01:33:08.451" endtime="20220312 01:33:12.993"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:33:17.047" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:33:19.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:33:19.652" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:33:17.041" endtime="20220312 01:33:19.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:33:19.654" level="INFO"/>
<status status="PASS" starttime="20220312 01:33:19.653" endtime="20220312 01:33:19.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:33:19.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:33:19.654" endtime="20220312 01:33:19.657"/>
</kw>
<status status="PASS" starttime="20220312 01:33:17.040" endtime="20220312 01:33:19.657"/>
</kw>
<msg timestamp="20220312 01:33:19.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:33:17.040" endtime="20220312 01:33:19.658"/>
</kw>
<msg timestamp="20220312 01:33:19.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:33:17.039" endtime="20220312 01:33:19.658"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:33:19.658" endtime="20220312 01:33:19.659"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:33:19.675" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:33:22.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:33:22.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:33:19.671" endtime="20220312 01:33:22.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:33:22.435" level="INFO"/>
<status status="PASS" starttime="20220312 01:33:22.435" endtime="20220312 01:33:22.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:33:22.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:33:22.436" endtime="20220312 01:33:22.436"/>
</kw>
<status status="PASS" starttime="20220312 01:33:19.669" endtime="20220312 01:33:22.437"/>
</kw>
<msg timestamp="20220312 01:33:22.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:33:19.669" endtime="20220312 01:33:22.437"/>
</kw>
<msg timestamp="20220312 01:33:22.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:33:19.659" endtime="20220312 01:33:22.438"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:33:22.438" endtime="20220312 01:33:22.438"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:33:22.443" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:33:27.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:33:27.996" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:33:22.440" endtime="20220312 01:33:27.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:33:27.997" level="INFO"/>
<status status="PASS" starttime="20220312 01:33:27.997" endtime="20220312 01:33:27.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:33:27.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:33:27.998" endtime="20220312 01:33:27.998"/>
</kw>
<status status="PASS" starttime="20220312 01:33:22.440" endtime="20220312 01:33:27.999"/>
</kw>
<msg timestamp="20220312 01:33:27.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:33:22.439" endtime="20220312 01:33:27.999"/>
</kw>
<msg timestamp="20220312 01:33:27.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:33:22.438" endtime="20220312 01:33:27.999"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:33:27.999" endtime="20220312 01:33:28.000"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:33:17.037" endtime="20220312 01:33:28.000"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220312 01:33:16.968" endtime="20220312 01:33:28.002"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220312 01:33:32.110" level="INFO">${random} = 66524</msg>
<status status="PASS" starttime="20220312 01:33:32.109" endtime="20220312 01:33:32.110"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:33:32.116" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-66524 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:33:36.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:33:36.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:33:32.113" endtime="20220312 01:33:36.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:33:36.462" level="INFO"/>
<status status="PASS" starttime="20220312 01:33:36.460" endtime="20220312 01:33:36.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:33:36.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:33:36.462" endtime="20220312 01:33:36.463"/>
</kw>
<status status="PASS" starttime="20220312 01:33:32.112" endtime="20220312 01:33:36.463"/>
</kw>
<msg timestamp="20220312 01:33:36.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:33:32.111" endtime="20220312 01:33:36.463"/>
</kw>
<msg timestamp="20220312 01:33:36.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:33:32.110" endtime="20220312 01:33:36.464"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:33:36.464" endtime="20220312 01:33:36.464"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:33:32.108" endtime="20220312 01:33:36.467"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220312 01:33:32.041" endtime="20220312 01:33:36.469"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220312 01:32:59.516" level="INFO">${random} = 32872</msg>
<status status="PASS" starttime="20220312 01:32:59.515" endtime="20220312 01:32:59.516"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:32:59.522" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-32872 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:33:04.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:33:04.266" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:32:59.518" endtime="20220312 01:33:04.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:33:04.267" level="INFO"/>
<status status="PASS" starttime="20220312 01:33:04.266" endtime="20220312 01:33:04.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:33:04.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:33:04.267" endtime="20220312 01:33:04.268"/>
</kw>
<status status="PASS" starttime="20220312 01:32:59.517" endtime="20220312 01:33:04.268"/>
</kw>
<msg timestamp="20220312 01:33:04.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:32:59.517" endtime="20220312 01:33:04.269"/>
</kw>
<msg timestamp="20220312 01:33:04.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:32:59.516" endtime="20220312 01:33:04.269"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:33:04.269" endtime="20220312 01:33:04.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:32:59.513" endtime="20220312 01:33:04.270"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220312 01:32:59.438" endtime="20220312 01:33:04.272"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:28:47.113" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:28:49.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:28:49.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:28:47.109" endtime="20220312 01:28:49.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:28:49.900" level="INFO"/>
<status status="PASS" starttime="20220312 01:28:49.899" endtime="20220312 01:28:49.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:28:49.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:28:49.900" endtime="20220312 01:28:49.901"/>
</kw>
<status status="PASS" starttime="20220312 01:28:47.109" endtime="20220312 01:28:49.901"/>
</kw>
<msg timestamp="20220312 01:28:49.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:28:47.108" endtime="20220312 01:28:49.901"/>
</kw>
<msg timestamp="20220312 01:28:49.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:28:47.107" endtime="20220312 01:28:49.902"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:28:49.902" endtime="20220312 01:28:49.903"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:28:49.910" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:28:52.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:28:52.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:28:49.907" endtime="20220312 01:28:52.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:28:52.784" level="INFO"/>
<status status="PASS" starttime="20220312 01:28:52.783" endtime="20220312 01:28:52.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:28:52.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:28:52.784" endtime="20220312 01:28:52.785"/>
</kw>
<status status="PASS" starttime="20220312 01:28:49.906" endtime="20220312 01:28:52.786"/>
</kw>
<msg timestamp="20220312 01:28:52.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:28:49.905" endtime="20220312 01:28:52.786"/>
</kw>
<msg timestamp="20220312 01:28:52.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:28:49.903" endtime="20220312 01:28:52.786"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:28:52.787" endtime="20220312 01:28:52.787"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:28:52.791" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:28:58.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:28:58.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:28:52.789" endtime="20220312 01:28:58.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:28:58.516" level="INFO"/>
<status status="PASS" starttime="20220312 01:28:58.515" endtime="20220312 01:28:58.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:28:58.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:28:58.516" endtime="20220312 01:28:58.517"/>
</kw>
<status status="PASS" starttime="20220312 01:28:52.788" endtime="20220312 01:28:58.518"/>
</kw>
<msg timestamp="20220312 01:28:58.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:28:52.788" endtime="20220312 01:28:58.518"/>
</kw>
<msg timestamp="20220312 01:28:58.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:28:52.787" endtime="20220312 01:28:58.518"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:28:58.518" endtime="20220312 01:28:58.519"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:28:47.106" endtime="20220312 01:28:58.519"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220312 01:28:47.035" endtime="20220312 01:28:58.521"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:35.378" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220312 01:36:35.377" endtime="20220312 01:36:35.378"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:35.379" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:36:35.379" endtime="20220312 01:36:35.379"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:36:35.380" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:36:35.379" endtime="20220312 01:36:35.380"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:36:35.381" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220312 01:36:35.380" endtime="20220312 01:36:35.381"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:36:35.382" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:36:35.383" level="INFO">${version_file_contents} = #Sat Mar 12 01:35:12 UTC 2022
cTime=1647048463963
clusterID=CID-b89a423e-a5c0-4cdf-b073-67279ac1e66e
nodeType=SCM
scmUuid=d7269d57-5b92-4402-8cca-3c07fd51ca62
layoutVersion=2
</msg>
<status status="PASS" starttime="20220312 01:36:35.382" endtime="20220312 01:36:35.383"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:36:35.384" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220312 01:36:35.383" endtime="20220312 01:36:35.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:36:35.384" endtime="20220312 01:36:35.385"/>
</kw>
<status status="PASS" starttime="20220312 01:36:35.381" endtime="20220312 01:36:35.385"/>
</kw>
<status status="PASS" starttime="20220312 01:36:35.381" endtime="20220312 01:36:35.385"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:36:35.376" endtime="20220312 01:36:35.385"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:36:35.302" endtime="20220312 01:36:35.386"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220312 01:37:19.959" level="INFO">${random} = 97053</msg>
<status status="PASS" starttime="20220312 01:37:19.959" endtime="20220312 01:37:19.960"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:37:19.965" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-97053 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:37:24.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:37:24.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:19.961" endtime="20220312 01:37:24.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:37:24.326" level="INFO"/>
<status status="PASS" starttime="20220312 01:37:24.326" endtime="20220312 01:37:24.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:37:24.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:37:24.327" endtime="20220312 01:37:24.327"/>
</kw>
<status status="PASS" starttime="20220312 01:37:19.961" endtime="20220312 01:37:24.328"/>
</kw>
<msg timestamp="20220312 01:37:24.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:37:19.961" endtime="20220312 01:37:24.329"/>
</kw>
<msg timestamp="20220312 01:37:24.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:19.960" endtime="20220312 01:37:24.330"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:37:24.330" endtime="20220312 01:37:24.330"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:37:19.958" endtime="20220312 01:37:24.330"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220312 01:37:19.896" endtime="20220312 01:37:24.332"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:37:28.023" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:37:30.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:37:30.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:28.020" endtime="20220312 01:37:30.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:37:30.623" level="INFO"/>
<status status="PASS" starttime="20220312 01:37:30.622" endtime="20220312 01:37:30.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:37:30.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:37:30.623" endtime="20220312 01:37:30.623"/>
</kw>
<status status="PASS" starttime="20220312 01:37:28.019" endtime="20220312 01:37:30.624"/>
</kw>
<msg timestamp="20220312 01:37:30.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:37:28.018" endtime="20220312 01:37:30.625"/>
</kw>
<msg timestamp="20220312 01:37:30.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:28.017" endtime="20220312 01:37:30.626"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:37:30.626" endtime="20220312 01:37:30.627"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:37:30.631" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:37:33.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:37:33.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:30.629" endtime="20220312 01:37:33.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:37:33.322" level="INFO"/>
<status status="PASS" starttime="20220312 01:37:33.321" endtime="20220312 01:37:33.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:37:33.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:37:33.322" endtime="20220312 01:37:33.323"/>
</kw>
<status status="PASS" starttime="20220312 01:37:30.628" endtime="20220312 01:37:33.323"/>
</kw>
<msg timestamp="20220312 01:37:33.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:37:30.628" endtime="20220312 01:37:33.324"/>
</kw>
<msg timestamp="20220312 01:37:33.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:30.627" endtime="20220312 01:37:33.325"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:37:33.325" endtime="20220312 01:37:33.325"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:37:33.330" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:37:38.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:37:38.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:33.327" endtime="20220312 01:37:38.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:37:38.535" level="INFO"/>
<status status="PASS" starttime="20220312 01:37:38.534" endtime="20220312 01:37:38.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:37:38.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:37:38.535" endtime="20220312 01:37:38.536"/>
</kw>
<status status="PASS" starttime="20220312 01:37:33.327" endtime="20220312 01:37:38.536"/>
</kw>
<msg timestamp="20220312 01:37:38.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:37:33.326" endtime="20220312 01:37:38.537"/>
</kw>
<msg timestamp="20220312 01:37:38.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:33.325" endtime="20220312 01:37:38.537"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:37:38.537" endtime="20220312 01:37:38.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:37:28.017" endtime="20220312 01:37:38.538"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220312 01:37:27.960" endtime="20220312 01:37:38.539"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220312 01:37:42.131" level="INFO">${random} = 41834</msg>
<status status="PASS" starttime="20220312 01:37:42.130" endtime="20220312 01:37:42.131"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:37:42.141" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-41834 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:37:46.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:37:46.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:42.133" endtime="20220312 01:37:46.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:37:46.316" level="INFO"/>
<status status="PASS" starttime="20220312 01:37:46.315" endtime="20220312 01:37:46.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:37:46.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:37:46.316" endtime="20220312 01:37:46.317"/>
</kw>
<status status="PASS" starttime="20220312 01:37:42.132" endtime="20220312 01:37:46.317"/>
</kw>
<msg timestamp="20220312 01:37:46.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:37:42.132" endtime="20220312 01:37:46.318"/>
</kw>
<msg timestamp="20220312 01:37:46.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:42.131" endtime="20220312 01:37:46.319"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:37:46.319" endtime="20220312 01:37:46.319"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:37:42.129" endtime="20220312 01:37:46.319"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220312 01:37:42.060" endtime="20220312 01:37:46.321"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:39.358" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220312 01:36:39.358" endtime="20220312 01:36:39.358"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:39.359" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:36:39.359" endtime="20220312 01:36:39.359"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:36:39.360" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:36:39.359" endtime="20220312 01:36:39.360"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:36:39.360" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220312 01:36:39.360" endtime="20220312 01:36:39.361"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:36:39.363" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:36:39.363" level="INFO">${version_file_contents} = #Sat Mar 12 01:35:38 UTC 2022
cTime=1647048575403
clusterID=03888252-8183-4e11-b34a-0768e37d1c0e
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220312 01:36:39.362" endtime="20220312 01:36:39.363"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:36:39.363" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220312 01:36:39.363" endtime="20220312 01:36:39.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:36:39.364" endtime="20220312 01:36:39.364"/>
</kw>
<status status="PASS" starttime="20220312 01:36:39.361" endtime="20220312 01:36:39.364"/>
</kw>
<status status="PASS" starttime="20220312 01:36:39.361" endtime="20220312 01:36:39.364"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:36:39.357" endtime="20220312 01:36:39.365"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:36:39.296" endtime="20220312 01:36:39.365"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:43.365" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220312 01:36:43.364" endtime="20220312 01:36:43.365"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:43.366" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:36:43.365" endtime="20220312 01:36:43.366"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:36:43.366" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:36:43.366" endtime="20220312 01:36:43.366"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:36:43.367" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220312 01:36:43.367" endtime="20220312 01:36:43.367"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:36:43.369" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:36:43.369" level="INFO">${version_file_contents} = #Sat Mar 12 01:35:15 UTC 2022
cTime=1647048569910
clusterID=f91d735f-8e3a-48e5-9f54-12e42bb834d2
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220312 01:36:43.368" endtime="20220312 01:36:43.369"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:36:43.370" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220312 01:36:43.370" endtime="20220312 01:36:43.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:36:43.371" endtime="20220312 01:36:43.371"/>
</kw>
<status status="PASS" starttime="20220312 01:36:43.368" endtime="20220312 01:36:43.372"/>
</kw>
<status status="PASS" starttime="20220312 01:36:43.368" endtime="20220312 01:36:43.372"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:36:43.364" endtime="20220312 01:36:43.372"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:36:43.303" endtime="20220312 01:36:43.373"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:47.417" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220312 01:36:47.416" endtime="20220312 01:36:47.417"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:47.418" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:36:47.418" endtime="20220312 01:36:47.418"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:36:47.419" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:36:47.418" endtime="20220312 01:36:47.419"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:36:47.419" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220312 01:36:47.419" endtime="20220312 01:36:47.420"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:36:47.421" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:36:47.421" level="INFO">${version_file_contents} = #Sat Mar 12 01:35:14 UTC 2022
cTime=1647048572572
clusterID=852167fa-193f-480a-a006-5656672365b3
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20220312 01:36:47.421" endtime="20220312 01:36:47.421"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:36:47.422" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20220312 01:36:47.422" endtime="20220312 01:36:47.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:36:47.422" endtime="20220312 01:36:47.423"/>
</kw>
<status status="PASS" starttime="20220312 01:36:47.420" endtime="20220312 01:36:47.423"/>
</kw>
<status status="PASS" starttime="20220312 01:36:47.420" endtime="20220312 01:36:47.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:36:47.415" endtime="20220312 01:36:47.423"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:36:47.345" endtime="20220312 01:36:47.425"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:51.394" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220312 01:36:51.393" endtime="20220312 01:36:51.394"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:51.395" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:36:51.394" endtime="20220312 01:36:51.395"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:36:51.396" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:36:51.395" endtime="20220312 01:36:51.396"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:36:51.396" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220312 01:36:51.396" endtime="20220312 01:36:51.397"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:36:51.398" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:36:51.398" level="INFO">${version_file_contents} = #Sat Mar 12 01:28:09 UTC 2022
cTime=1647048466348
clusterID=CID-b89a423e-a5c0-4cdf-b073-67279ac1e66e
omUuid=8901a16a-8135-42cc-945b-d86b20b75878
nodeType=OM
scmUuid=d7269d57-5b92-4402-8cca-3c07fd51ca6...</msg>
<status status="PASS" starttime="20220312 01:36:51.398" endtime="20220312 01:36:51.398"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:36:51.399" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220312 01:36:51.398" endtime="20220312 01:36:51.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:36:51.400" endtime="20220312 01:36:51.400"/>
</kw>
<status status="PASS" starttime="20220312 01:36:51.397" endtime="20220312 01:36:51.400"/>
</kw>
<status status="PASS" starttime="20220312 01:36:51.397" endtime="20220312 01:36:51.400"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:36:51.392" endtime="20220312 01:36:51.401"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:36:51.328" endtime="20220312 01:36:51.401"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:55.349" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220312 01:36:55.349" endtime="20220312 01:36:55.350"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:55.350" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:36:55.350" endtime="20220312 01:36:55.350"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:36:55.351" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:36:55.350" endtime="20220312 01:36:55.351"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:36:55.351" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220312 01:36:55.351" endtime="20220312 01:36:55.351"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:36:55.353" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:36:55.353" level="INFO">${version_file_contents} = #Sat Mar 12 01:28:09 UTC 2022
cTime=1647048460953
clusterID=CID-b89a423e-a5c0-4cdf-b073-67279ac1e66e
omUuid=7a6cd53d-a730-4961-ae14-a3ffa27c3534
nodeType=OM
scmUuid=d7269d57-5b92-4402-8cca-3c07fd51ca6...</msg>
<status status="PASS" starttime="20220312 01:36:55.352" endtime="20220312 01:36:55.353"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:36:55.354" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220312 01:36:55.353" endtime="20220312 01:36:55.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:36:55.354" endtime="20220312 01:36:55.355"/>
</kw>
<status status="PASS" starttime="20220312 01:36:55.352" endtime="20220312 01:36:55.355"/>
</kw>
<status status="PASS" starttime="20220312 01:36:55.352" endtime="20220312 01:36:55.355"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:36:55.348" endtime="20220312 01:36:55.355"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:36:55.286" endtime="20220312 01:36:55.357"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:59.133" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220312 01:36:59.133" endtime="20220312 01:36:59.133"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:36:59.134" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:36:59.134" endtime="20220312 01:36:59.134"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:36:59.135" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:36:59.134" endtime="20220312 01:36:59.135"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:36:59.135" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220312 01:36:59.135" endtime="20220312 01:36:59.135"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:36:59.137" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:36:59.138" level="INFO">${version_file_contents} = #Sat Mar 12 01:28:09 UTC 2022
cTime=1647048467528
clusterID=CID-b89a423e-a5c0-4cdf-b073-67279ac1e66e
omUuid=29f254c5-ce24-4f26-94bd-77d78d85419b
nodeType=OM
scmUuid=d7269d57-5b92-4402-8cca-3c07fd51ca6...</msg>
<status status="PASS" starttime="20220312 01:36:59.137" endtime="20220312 01:36:59.138"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:36:59.138" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220312 01:36:59.138" endtime="20220312 01:36:59.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:36:59.139" endtime="20220312 01:36:59.139"/>
</kw>
<status status="PASS" starttime="20220312 01:36:59.136" endtime="20220312 01:36:59.139"/>
</kw>
<status status="PASS" starttime="20220312 01:36:59.136" endtime="20220312 01:36:59.139"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:36:59.132" endtime="20220312 01:36:59.139"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:36:59.069" endtime="20220312 01:36:59.140"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220312 01:37:03.121" level="INFO">${random} = 84949</msg>
<status status="PASS" starttime="20220312 01:37:03.120" endtime="20220312 01:37:03.121"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:37:03.128" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-84949 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:37:07.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:37:07.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:03.123" endtime="20220312 01:37:07.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:37:07.749" level="INFO"/>
<status status="PASS" starttime="20220312 01:37:07.748" endtime="20220312 01:37:07.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:37:07.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:37:07.749" endtime="20220312 01:37:07.750"/>
</kw>
<status status="PASS" starttime="20220312 01:37:03.122" endtime="20220312 01:37:07.750"/>
</kw>
<msg timestamp="20220312 01:37:07.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:37:03.122" endtime="20220312 01:37:07.752"/>
</kw>
<msg timestamp="20220312 01:37:07.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:03.121" endtime="20220312 01:37:07.752"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:37:07.753" endtime="20220312 01:37:07.754"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:37:03.119" endtime="20220312 01:37:07.754"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220312 01:37:03.053" endtime="20220312 01:37:07.755"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220312 01:37:11.599" level="INFO">${random} = 67829</msg>
<status status="PASS" starttime="20220312 01:37:11.599" endtime="20220312 01:37:11.599"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:37:11.605" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-67829 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:37:16.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:37:16.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:11.601" endtime="20220312 01:37:16.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:37:16.053" level="INFO"/>
<status status="PASS" starttime="20220312 01:37:16.052" endtime="20220312 01:37:16.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:37:16.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:37:16.054" endtime="20220312 01:37:16.054"/>
</kw>
<status status="PASS" starttime="20220312 01:37:11.601" endtime="20220312 01:37:16.054"/>
</kw>
<msg timestamp="20220312 01:37:16.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:37:11.600" endtime="20220312 01:37:16.056"/>
</kw>
<msg timestamp="20220312 01:37:16.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:37:11.600" endtime="20220312 01:37:16.056"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:37:16.056" endtime="20220312 01:37:16.057"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:37:11.598" endtime="20220312 01:37:16.057"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220312 01:37:11.527" endtime="20220312 01:37:16.058"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220312 01:35:04.461" endtime="20220312 01:35:04.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:35:04.468" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:36:28.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:36:28.466" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220312 01:35:04.464" endtime="20220312 01:36:28.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:36:28.467" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220312 01:36:28.466" endtime="20220312 01:36:28.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:36:28.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:36:28.467" endtime="20220312 01:36:28.468"/>
</kw>
<status status="PASS" starttime="20220312 01:35:04.463" endtime="20220312 01:36:28.468"/>
</kw>
<msg timestamp="20220312 01:36:28.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:35:04.463" endtime="20220312 01:36:28.469"/>
</kw>
<msg timestamp="20220312 01:36:28.470" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20220312 01:35:04.462" endtime="20220312 01:36:28.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:36:28.470" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20220312 01:36:28.470" endtime="20220312 01:36:28.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:35:04.461" endtime="20220312 01:36:28.471"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20220312 01:36:28.472" endtime="20220312 01:36:28.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:36:28.477" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:36:31.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:36:31.628" level="INFO">${output} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220312 01:36:28.475" endtime="20220312 01:36:31.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:36:31.630" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220312 01:36:31.629" endtime="20220312 01:36:31.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:36:31.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:36:31.630" endtime="20220312 01:36:31.632"/>
</kw>
<status status="PASS" starttime="20220312 01:36:28.474" endtime="20220312 01:36:31.632"/>
</kw>
<msg timestamp="20220312 01:36:31.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:36:28.474" endtime="20220312 01:36:31.633"/>
</kw>
<msg timestamp="20220312 01:36:31.633" level="INFO">${result} = Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220312 01:36:28.473" endtime="20220312 01:36:31.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:36:31.634" level="INFO">Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20220312 01:36:31.633" endtime="20220312 01:36:31.634"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:36:28.471" endtime="20220312 01:36:31.634"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20220312 01:35:04.397" endtime="20220312 01:36:31.641"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:38.949" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220312 01:30:38.949" endtime="20220312 01:30:38.949"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:38.950" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:30:38.949" endtime="20220312 01:30:38.950"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:30:38.950" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:30:38.950" endtime="20220312 01:30:38.951"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:30:38.951" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220312 01:30:38.951" endtime="20220312 01:30:38.951"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:30:38.952" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:30:38.953" level="INFO">${version_file_contents} = #Sat Mar 12 01:29:35 UTC 2022
cTime=1647048575403
clusterID=03888252-8183-4e11-b34a-0768e37d1c0e
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220312 01:30:38.952" endtime="20220312 01:30:38.953"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:30:38.954" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220312 01:30:38.953" endtime="20220312 01:30:38.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:30:38.954" endtime="20220312 01:30:38.954"/>
</kw>
<status status="PASS" starttime="20220312 01:30:38.952" endtime="20220312 01:30:38.955"/>
</kw>
<status status="PASS" starttime="20220312 01:30:38.951" endtime="20220312 01:30:38.955"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:30:38.947" endtime="20220312 01:30:38.955"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:30:38.886" endtime="20220312 01:30:38.956"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:42.824" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220312 01:30:42.823" endtime="20220312 01:30:42.824"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:42.825" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:30:42.824" endtime="20220312 01:30:42.825"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:30:42.825" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:30:42.825" endtime="20220312 01:30:42.825"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:30:42.826" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220312 01:30:42.826" endtime="20220312 01:30:42.826"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:30:42.827" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:30:42.828" level="INFO">${version_file_contents} = #Sat Mar 12 01:29:29 UTC 2022
cTime=1647048569910
clusterID=f91d735f-8e3a-48e5-9f54-12e42bb834d2
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220312 01:30:42.827" endtime="20220312 01:30:42.828"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:30:42.829" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220312 01:30:42.828" endtime="20220312 01:30:42.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:30:42.829" endtime="20220312 01:30:42.830"/>
</kw>
<status status="PASS" starttime="20220312 01:30:42.827" endtime="20220312 01:30:42.830"/>
</kw>
<status status="PASS" starttime="20220312 01:30:42.826" endtime="20220312 01:30:42.830"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:30:42.823" endtime="20220312 01:30:42.830"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:30:42.758" endtime="20220312 01:30:42.831"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:46.746" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20220312 01:30:46.745" endtime="20220312 01:30:46.746"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:46.747" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:30:46.746" endtime="20220312 01:30:46.747"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:30:46.747" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:30:46.747" endtime="20220312 01:30:46.748"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:30:46.748" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20220312 01:30:46.748" endtime="20220312 01:30:46.748"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:30:46.749" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:30:46.750" level="INFO">${version_file_contents} = #Sat Mar 12 01:29:32 UTC 2022
cTime=1647048572572
clusterID=852167fa-193f-480a-a006-5656672365b3
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20220312 01:30:46.749" endtime="20220312 01:30:46.750"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:30:46.750" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220312 01:30:46.750" endtime="20220312 01:30:46.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:30:46.751" endtime="20220312 01:30:46.751"/>
</kw>
<status status="PASS" starttime="20220312 01:30:46.749" endtime="20220312 01:30:46.751"/>
</kw>
<status status="PASS" starttime="20220312 01:30:46.748" endtime="20220312 01:30:46.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:30:46.744" endtime="20220312 01:30:46.752"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:30:46.682" endtime="20220312 01:30:46.752"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:50.568" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220312 01:30:50.567" endtime="20220312 01:30:50.568"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:50.569" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:30:50.568" endtime="20220312 01:30:50.569"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:30:50.569" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:30:50.569" endtime="20220312 01:30:50.569"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:30:50.570" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220312 01:30:50.569" endtime="20220312 01:30:50.570"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:30:50.571" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:30:50.572" level="INFO">${version_file_contents} = #Sat Mar 12 01:28:09 UTC 2022
cTime=1647048466348
clusterID=CID-b89a423e-a5c0-4cdf-b073-67279ac1e66e
omUuid=8901a16a-8135-42cc-945b-d86b20b75878
nodeType=OM
scmUuid=d7269d57-5b92-4402-8cca-3c07fd51ca6...</msg>
<status status="PASS" starttime="20220312 01:30:50.571" endtime="20220312 01:30:50.572"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:30:50.573" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220312 01:30:50.572" endtime="20220312 01:30:50.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:30:50.573" endtime="20220312 01:30:50.574"/>
</kw>
<status status="PASS" starttime="20220312 01:30:50.571" endtime="20220312 01:30:50.574"/>
</kw>
<status status="PASS" starttime="20220312 01:30:50.570" endtime="20220312 01:30:50.574"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:30:50.566" endtime="20220312 01:30:50.574"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:30:50.504" endtime="20220312 01:30:50.575"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:54.500" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220312 01:30:54.499" endtime="20220312 01:30:54.500"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:54.500" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:30:54.500" endtime="20220312 01:30:54.500"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:30:54.501" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:30:54.501" endtime="20220312 01:30:54.501"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:30:54.502" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220312 01:30:54.502" endtime="20220312 01:30:54.502"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:30:54.503" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:30:54.504" level="INFO">${version_file_contents} = #Sat Mar 12 01:28:09 UTC 2022
cTime=1647048460953
clusterID=CID-b89a423e-a5c0-4cdf-b073-67279ac1e66e
omUuid=7a6cd53d-a730-4961-ae14-a3ffa27c3534
nodeType=OM
scmUuid=d7269d57-5b92-4402-8cca-3c07fd51ca6...</msg>
<status status="PASS" starttime="20220312 01:30:54.503" endtime="20220312 01:30:54.504"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:30:54.504" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220312 01:30:54.504" endtime="20220312 01:30:54.504"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:30:54.504" endtime="20220312 01:30:54.505"/>
</kw>
<status status="PASS" starttime="20220312 01:30:54.503" endtime="20220312 01:30:54.505"/>
</kw>
<status status="PASS" starttime="20220312 01:30:54.502" endtime="20220312 01:30:54.505"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:30:54.494" endtime="20220312 01:30:54.505"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:30:54.427" endtime="20220312 01:30:54.506"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:58.374" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20220312 01:30:58.373" endtime="20220312 01:30:58.374"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:58.375" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:30:58.374" endtime="20220312 01:30:58.375"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:30:58.375" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:30:58.375" endtime="20220312 01:30:58.375"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:30:58.376" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20220312 01:30:58.375" endtime="20220312 01:30:58.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:30:58.378" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:30:58.378" level="INFO">${version_file_contents} = #Sat Mar 12 01:28:09 UTC 2022
cTime=1647048467528
clusterID=CID-b89a423e-a5c0-4cdf-b073-67279ac1e66e
omUuid=29f254c5-ce24-4f26-94bd-77d78d85419b
nodeType=OM
scmUuid=d7269d57-5b92-4402-8cca-3c07fd51ca6...</msg>
<status status="PASS" starttime="20220312 01:30:58.377" endtime="20220312 01:30:58.378"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:30:58.379" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220312 01:30:58.378" endtime="20220312 01:30:58.379"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:30:58.379" endtime="20220312 01:30:58.379"/>
</kw>
<status status="PASS" starttime="20220312 01:30:58.377" endtime="20220312 01:30:58.380"/>
</kw>
<status status="PASS" starttime="20220312 01:30:58.376" endtime="20220312 01:30:58.380"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:30:58.373" endtime="20220312 01:30:58.380"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:30:58.309" endtime="20220312 01:30:58.381"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220312 01:31:02.117" level="INFO">${random} = 60304</msg>
<status status="PASS" starttime="20220312 01:31:02.116" endtime="20220312 01:31:02.117"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:31:02.124" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-60304 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:31:07.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:31:07.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:31:02.119" endtime="20220312 01:31:07.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:31:07.851" level="INFO"/>
<status status="PASS" starttime="20220312 01:31:07.850" endtime="20220312 01:31:07.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:31:07.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:31:07.851" endtime="20220312 01:31:07.852"/>
</kw>
<status status="PASS" starttime="20220312 01:31:02.118" endtime="20220312 01:31:07.852"/>
</kw>
<msg timestamp="20220312 01:31:07.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:31:02.118" endtime="20220312 01:31:07.854"/>
</kw>
<msg timestamp="20220312 01:31:07.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:31:02.117" endtime="20220312 01:31:07.854"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:31:07.855" endtime="20220312 01:31:07.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:31:02.115" endtime="20220312 01:31:07.855"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220312 01:31:02.050" endtime="20220312 01:31:07.857"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:31:11.670" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:31:14.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:31:14.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:31:11.665" endtime="20220312 01:31:14.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:31:14.682" level="INFO"/>
<status status="PASS" starttime="20220312 01:31:14.682" endtime="20220312 01:31:14.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:31:14.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:31:14.683" endtime="20220312 01:31:14.684"/>
</kw>
<status status="PASS" starttime="20220312 01:31:11.664" endtime="20220312 01:31:14.685"/>
</kw>
<msg timestamp="20220312 01:31:14.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:31:11.664" endtime="20220312 01:31:14.689"/>
</kw>
<msg timestamp="20220312 01:31:14.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:31:11.663" endtime="20220312 01:31:14.690"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:31:14.690" endtime="20220312 01:31:14.694"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:31:14.702" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:31:17.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:31:17.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:31:14.696" endtime="20220312 01:31:17.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:31:17.607" level="INFO"/>
<status status="PASS" starttime="20220312 01:31:17.606" endtime="20220312 01:31:17.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:31:17.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:31:17.607" endtime="20220312 01:31:17.608"/>
</kw>
<status status="PASS" starttime="20220312 01:31:14.695" endtime="20220312 01:31:17.608"/>
</kw>
<msg timestamp="20220312 01:31:17.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:31:14.695" endtime="20220312 01:31:17.609"/>
</kw>
<msg timestamp="20220312 01:31:17.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:31:14.694" endtime="20220312 01:31:17.610"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:31:17.610" endtime="20220312 01:31:17.610"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:31:17.616" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:31:23.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:31:23.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:31:17.612" endtime="20220312 01:31:23.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:31:23.217" level="INFO"/>
<status status="PASS" starttime="20220312 01:31:23.216" endtime="20220312 01:31:23.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:31:23.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:31:23.217" endtime="20220312 01:31:23.218"/>
</kw>
<status status="PASS" starttime="20220312 01:31:17.611" endtime="20220312 01:31:23.218"/>
</kw>
<msg timestamp="20220312 01:31:23.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:31:17.611" endtime="20220312 01:31:23.219"/>
</kw>
<msg timestamp="20220312 01:31:23.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:31:17.610" endtime="20220312 01:31:23.219"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:31:23.220" endtime="20220312 01:31:23.220"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:31:11.662" endtime="20220312 01:31:23.220"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20220312 01:31:11.592" endtime="20220312 01:31:23.222"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220312 01:31:27.137" level="INFO">${random} = 23508</msg>
<status status="PASS" starttime="20220312 01:31:27.137" endtime="20220312 01:31:27.137"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20220312 01:31:27.143" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-23508 2&gt;&amp;1'.</msg>
<msg timestamp="20220312 01:31:31.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20220312 01:31:31.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:31:27.139" endtime="20220312 01:31:31.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220312 01:31:31.898" level="INFO"/>
<status status="PASS" starttime="20220312 01:31:31.896" endtime="20220312 01:31:31.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220312 01:31:31.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20220312 01:31:31.898" endtime="20220312 01:31:31.898"/>
</kw>
<status status="PASS" starttime="20220312 01:31:27.139" endtime="20220312 01:31:31.899"/>
</kw>
<msg timestamp="20220312 01:31:31.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20220312 01:31:27.138" endtime="20220312 01:31:31.901"/>
</kw>
<msg timestamp="20220312 01:31:31.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20220312 01:31:27.137" endtime="20220312 01:31:31.901"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:31:31.901" endtime="20220312 01:31:31.902"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:31:27.136" endtime="20220312 01:31:31.902"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20220312 01:31:27.066" endtime="20220312 01:31:31.904"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:34.996" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20220312 01:30:34.996" endtime="20220312 01:30:34.997"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220312 01:30:34.997" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20220312 01:30:34.997" endtime="20220312 01:30:34.997"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220312 01:30:34.998" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220312 01:30:34.997" endtime="20220312 01:30:34.998"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20220312 01:30:34.998" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20220312 01:30:34.998" endtime="20220312 01:30:34.999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220312 01:30:35.000" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20220312 01:30:35.000" level="INFO">${version_file_contents} = #Sat Mar 12 01:27:43 UTC 2022
cTime=1647048463963
clusterID=CID-b89a423e-a5c0-4cdf-b073-67279ac1e66e
nodeType=SCM
scmUuid=d7269d57-5b92-4402-8cca-3c07fd51ca62
layoutVersion=0
</msg>
<status status="PASS" starttime="20220312 01:30:34.999" endtime="20220312 01:30:35.000"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220312 01:30:35.001" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20220312 01:30:35.000" endtime="20220312 01:30:35.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220312 01:30:35.001" endtime="20220312 01:30:35.002"/>
</kw>
<status status="PASS" starttime="20220312 01:30:34.999" endtime="20220312 01:30:35.002"/>
</kw>
<status status="PASS" starttime="20220312 01:30:34.999" endtime="20220312 01:30:35.002"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20220312 01:30:34.995" endtime="20220312 01:30:35.002"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20220312 01:30:34.935" endtime="20220312 01:30:35.003"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="179978"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
