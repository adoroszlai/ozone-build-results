<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.6.8 on linux)" generated="20240915 16:49:00.235" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.4.0-1.5.0-SNAPSHOT-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:39:22.947" endtime="20240915 16:39:22.948"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:22.952" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:22.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:22.955" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:39:22.949" endtime="20240915 16:39:22.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:22.956" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:39:22.955" endtime="20240915 16:39:22.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:22.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:22.956" endtime="20240915 16:39:22.957"/>
</kw>
<status status="PASS" starttime="20240915 16:39:22.949" endtime="20240915 16:39:22.957"/>
</kw>
<msg timestamp="20240915 16:39:22.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:22.949" endtime="20240915 16:39:22.957"/>
</kw>
<msg timestamp="20240915 16:39:22.957" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:39:22.948" endtime="20240915 16:39:22.957"/>
</kw>
<msg timestamp="20240915 16:39:22.957" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:39:22.948" endtime="20240915 16:39:22.957"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:39:22.958" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:39:22.957" endtime="20240915 16:39:22.958"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:22.961" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:23.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:23.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:22.959" endtime="20240915 16:39:23.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:23.009" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:23.008" endtime="20240915 16:39:23.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:23.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:23.009" endtime="20240915 16:39:23.009"/>
</kw>
<status status="PASS" starttime="20240915 16:39:22.959" endtime="20240915 16:39:23.010"/>
</kw>
<msg timestamp="20240915 16:39:23.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:22.959" endtime="20240915 16:39:23.010"/>
</kw>
<status status="PASS" starttime="20240915 16:39:22.958" endtime="20240915 16:39:23.010"/>
</kw>
<status status="PASS" starttime="20240915 16:39:22.958" endtime="20240915 16:39:23.010"/>
</kw>
<status status="PASS" starttime="20240915 16:39:22.947" endtime="20240915 16:39:23.010"/>
</kw>
<status status="PASS" starttime="20240915 16:39:22.946" endtime="20240915 16:39:23.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:23.014" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:23.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:23.017" level="INFO">${output} = CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20240915 16:39:23.012" endtime="20240915 16:39:23.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:23.017" level="INFO">CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.4.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE_UPGRADE_TO=1.5.0-SNAPSHOT
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.ratis.enable=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20240915 16:39:23.017" endtime="20240915 16:39:23.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:23.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:23.018" endtime="20240915 16:39:23.018"/>
</kw>
<status status="PASS" starttime="20240915 16:39:23.011" endtime="20240915 16:39:23.018"/>
</kw>
<msg timestamp="20240915 16:39:23.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:23.011" endtime="20240915 16:39:23.019"/>
</kw>
<msg timestamp="20240915 16:39:23.019" level="INFO">${result} = CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE...</msg>
<status status="PASS" starttime="20240915 16:39:23.010" endtime="20240915 16:39:23.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:23.019" level="INFO">CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm1.org
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_hdds.container.token.enabled=true
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
OZONE-SITE.XML_ozone.acl.enabled=true
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.4.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
WAITFOR=kdc:88
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE_UPGRADE_TO=1.5.0-SNAPSHOT
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.scm.ratis.enable=true
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20240915 16:39:23.019" endtime="20240915 16:39:23.019"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:39:23.020" endtime="20240915 16:39:23.020"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:23.023" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:25.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:25.994" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240915 16:39:23.021" endtime="20240915 16:39:25.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:25.995" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240915 16:39:25.995" endtime="20240915 16:39:25.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:25.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:25.996" endtime="20240915 16:39:25.996"/>
</kw>
<status status="PASS" starttime="20240915 16:39:23.021" endtime="20240915 16:39:25.996"/>
</kw>
<msg timestamp="20240915 16:39:25.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:23.020" endtime="20240915 16:39:25.996"/>
</kw>
<msg timestamp="20240915 16:39:25.996" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240915 16:39:23.020" endtime="20240915 16:39:25.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:25.997" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240915 16:39:25.997" endtime="20240915 16:39:25.997"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20240915 16:39:25.997" endtime="20240915 16:39:25.997"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240915 16:39:22.946" endtime="20240915 16:39:25.998"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:39:26.000" endtime="20240915 16:39:26.000"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:26.004" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:26.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:26.007" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:39:26.001" endtime="20240915 16:39:26.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:26.008" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:39:26.007" endtime="20240915 16:39:26.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:26.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:26.008" endtime="20240915 16:39:26.009"/>
</kw>
<status status="PASS" starttime="20240915 16:39:26.001" endtime="20240915 16:39:26.009"/>
</kw>
<msg timestamp="20240915 16:39:26.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:26.001" endtime="20240915 16:39:26.009"/>
</kw>
<msg timestamp="20240915 16:39:26.009" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:39:26.000" endtime="20240915 16:39:26.009"/>
</kw>
<msg timestamp="20240915 16:39:26.009" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:39:26.000" endtime="20240915 16:39:26.009"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:39:26.010" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:39:26.009" endtime="20240915 16:39:26.010"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:26.014" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:26.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:26.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:26.012" endtime="20240915 16:39:26.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:26.064" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:26.063" endtime="20240915 16:39:26.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:26.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:26.064" endtime="20240915 16:39:26.065"/>
</kw>
<status status="PASS" starttime="20240915 16:39:26.011" endtime="20240915 16:39:26.065"/>
</kw>
<msg timestamp="20240915 16:39:26.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:26.011" endtime="20240915 16:39:26.065"/>
</kw>
<status status="PASS" starttime="20240915 16:39:26.010" endtime="20240915 16:39:26.065"/>
</kw>
<status status="PASS" starttime="20240915 16:39:26.010" endtime="20240915 16:39:26.065"/>
</kw>
<status status="PASS" starttime="20240915 16:39:25.999" endtime="20240915 16:39:26.065"/>
</kw>
<status status="PASS" starttime="20240915 16:39:25.999" endtime="20240915 16:39:26.065"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:39:26.065" endtime="20240915 16:39:26.066"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:26.069" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:29.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:29.015" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240915 16:39:26.067" endtime="20240915 16:39:29.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:29.016" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240915 16:39:29.016" endtime="20240915 16:39:29.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:29.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:29.017" endtime="20240915 16:39:29.017"/>
</kw>
<status status="PASS" starttime="20240915 16:39:26.066" endtime="20240915 16:39:29.017"/>
</kw>
<msg timestamp="20240915 16:39:29.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:26.066" endtime="20240915 16:39:29.017"/>
</kw>
<msg timestamp="20240915 16:39:29.018" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240915 16:39:26.066" endtime="20240915 16:39:29.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:29.018" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240915 16:39:29.018" endtime="20240915 16:39:29.018"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20240915 16:39:29.018" endtime="20240915 16:39:29.018"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240915 16:39:25.998" endtime="20240915 16:39:29.019"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20240915 16:39:22.899" endtime="20240915 16:39:29.020"/>
</suite>
<suite id="s1-s2" name="1.4.0-1.5.0-SNAPSHOT-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:39:29.821" endtime="20240915 16:39:29.822"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:29.825" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:29.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:29.829" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:39:29.823" endtime="20240915 16:39:29.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:29.829" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:39:29.829" endtime="20240915 16:39:29.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:29.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:29.829" endtime="20240915 16:39:29.830"/>
</kw>
<status status="PASS" starttime="20240915 16:39:29.823" endtime="20240915 16:39:29.830"/>
</kw>
<msg timestamp="20240915 16:39:29.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:29.822" endtime="20240915 16:39:29.830"/>
</kw>
<msg timestamp="20240915 16:39:29.830" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:39:29.822" endtime="20240915 16:39:29.830"/>
</kw>
<msg timestamp="20240915 16:39:29.831" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:39:29.822" endtime="20240915 16:39:29.831"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:39:29.831" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:39:29.831" endtime="20240915 16:39:29.831"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:29.835" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:29.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:29.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:29.833" endtime="20240915 16:39:29.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:29.887" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:29.887" endtime="20240915 16:39:29.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:29.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:29.887" endtime="20240915 16:39:29.888"/>
</kw>
<status status="PASS" starttime="20240915 16:39:29.832" endtime="20240915 16:39:29.888"/>
</kw>
<msg timestamp="20240915 16:39:29.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:29.832" endtime="20240915 16:39:29.888"/>
</kw>
<status status="PASS" starttime="20240915 16:39:29.832" endtime="20240915 16:39:29.888"/>
</kw>
<status status="PASS" starttime="20240915 16:39:29.831" endtime="20240915 16:39:29.888"/>
</kw>
<status status="PASS" starttime="20240915 16:39:29.821" endtime="20240915 16:39:29.888"/>
</kw>
<status status="PASS" starttime="20240915 16:39:29.820" endtime="20240915 16:39:29.888"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:29.894" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:33.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:33.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:29.891" endtime="20240915 16:39:33.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:33.124" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:33.124" endtime="20240915 16:39:33.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:33.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:33.125" endtime="20240915 16:39:33.125"/>
</kw>
<status status="PASS" starttime="20240915 16:39:29.890" endtime="20240915 16:39:33.126"/>
</kw>
<msg timestamp="20240915 16:39:33.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:29.890" endtime="20240915 16:39:33.126"/>
</kw>
<msg timestamp="20240915 16:39:33.126" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:29.890" endtime="20240915 16:39:33.126"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:39:33.126" endtime="20240915 16:39:33.127"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:33.133" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:36.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:36.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:33.129" endtime="20240915 16:39:36.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:36.512" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:36.511" endtime="20240915 16:39:36.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:36.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:36.512" endtime="20240915 16:39:36.512"/>
</kw>
<status status="PASS" starttime="20240915 16:39:33.128" endtime="20240915 16:39:36.513"/>
</kw>
<msg timestamp="20240915 16:39:36.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:33.128" endtime="20240915 16:39:36.513"/>
</kw>
<msg timestamp="20240915 16:39:36.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:33.127" endtime="20240915 16:39:36.513"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:39:36.513" endtime="20240915 16:39:36.513"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:39:29.889" endtime="20240915 16:39:36.514"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:36.518" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240915 16:39:36.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:36.520" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:36.516" endtime="20240915 16:39:36.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:36.520" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:36.520" endtime="20240915 16:39:36.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:36.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:36.521" endtime="20240915 16:39:36.521"/>
</kw>
<status status="PASS" starttime="20240915 16:39:36.515" endtime="20240915 16:39:36.521"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:36.524" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:41.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:41.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:36.522" endtime="20240915 16:39:41.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:41.996" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:41.995" endtime="20240915 16:39:41.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:41.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:41.996" endtime="20240915 16:39:41.996"/>
</kw>
<status status="PASS" starttime="20240915 16:39:36.522" endtime="20240915 16:39:41.996"/>
</kw>
<msg timestamp="20240915 16:39:41.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:36.522" endtime="20240915 16:39:41.997"/>
</kw>
<msg timestamp="20240915 16:39:41.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:36.521" endtime="20240915 16:39:41.997"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:39:41.997" endtime="20240915 16:39:41.997"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:42.000" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:42.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:42.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:41.998" endtime="20240915 16:39:42.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:42.003" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:42.003" endtime="20240915 16:39:42.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:42.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:42.004" endtime="20240915 16:39:42.004"/>
</kw>
<status status="PASS" starttime="20240915 16:39:41.997" endtime="20240915 16:39:42.004"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:39:36.515" endtime="20240915 16:39:42.005"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:42.009" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:45.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:45.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:42.007" endtime="20240915 16:39:45.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:45.342" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:45.342" endtime="20240915 16:39:45.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:45.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:45.343" endtime="20240915 16:39:45.343"/>
</kw>
<status status="PASS" starttime="20240915 16:39:42.007" endtime="20240915 16:39:45.343"/>
</kw>
<msg timestamp="20240915 16:39:45.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:42.006" endtime="20240915 16:39:45.343"/>
</kw>
<msg timestamp="20240915 16:39:45.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:42.006" endtime="20240915 16:39:45.344"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:39:45.344" endtime="20240915 16:39:45.344"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:39:42.005" endtime="20240915 16:39:45.344"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:45.349" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240915 16:39:45.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:45.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:45.346" endtime="20240915 16:39:45.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:45.351" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:45.351" endtime="20240915 16:39:45.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:45.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:45.352" endtime="20240915 16:39:45.352"/>
</kw>
<status status="PASS" starttime="20240915 16:39:45.346" endtime="20240915 16:39:45.352"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:45.356" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:52.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:52.826" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:45.354" endtime="20240915 16:39:52.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:52.827" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:52.826" endtime="20240915 16:39:52.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:52.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:52.827" endtime="20240915 16:39:52.827"/>
</kw>
<status status="PASS" starttime="20240915 16:39:45.353" endtime="20240915 16:39:52.828"/>
</kw>
<msg timestamp="20240915 16:39:52.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:45.353" endtime="20240915 16:39:52.828"/>
</kw>
<msg timestamp="20240915 16:39:52.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:45.352" endtime="20240915 16:39:52.828"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:39:52.828" endtime="20240915 16:39:52.828"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:52.831" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:52.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:52.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:52.829" endtime="20240915 16:39:52.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:52.835" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:52.834" endtime="20240915 16:39:52.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:52.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:52.835" endtime="20240915 16:39:52.835"/>
</kw>
<status status="PASS" starttime="20240915 16:39:52.829" endtime="20240915 16:39:52.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:39:45.345" endtime="20240915 16:39:52.836"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:39:52.838" endtime="20240915 16:39:52.839"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:52.842" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:52.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:52.845" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:39:52.840" endtime="20240915 16:39:52.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:52.846" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:39:52.845" endtime="20240915 16:39:52.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:52.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:52.846" endtime="20240915 16:39:52.847"/>
</kw>
<status status="PASS" starttime="20240915 16:39:52.840" endtime="20240915 16:39:52.847"/>
</kw>
<msg timestamp="20240915 16:39:52.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:52.839" endtime="20240915 16:39:52.847"/>
</kw>
<msg timestamp="20240915 16:39:52.847" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:39:52.839" endtime="20240915 16:39:52.847"/>
</kw>
<msg timestamp="20240915 16:39:52.847" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:39:52.839" endtime="20240915 16:39:52.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:39:52.848" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:39:52.847" endtime="20240915 16:39:52.848"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:52.851" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:52.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:52.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:52.849" endtime="20240915 16:39:52.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:52.873" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:52.872" endtime="20240915 16:39:52.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:52.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:52.873" endtime="20240915 16:39:52.873"/>
</kw>
<status status="PASS" starttime="20240915 16:39:52.849" endtime="20240915 16:39:52.874"/>
</kw>
<msg timestamp="20240915 16:39:52.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:52.849" endtime="20240915 16:39:52.874"/>
</kw>
<status status="PASS" starttime="20240915 16:39:52.848" endtime="20240915 16:39:52.874"/>
</kw>
<status status="PASS" starttime="20240915 16:39:52.848" endtime="20240915 16:39:52.874"/>
</kw>
<status status="PASS" starttime="20240915 16:39:52.838" endtime="20240915 16:39:52.874"/>
</kw>
<status status="PASS" starttime="20240915 16:39:52.838" endtime="20240915 16:39:52.874"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:52.877" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:55.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:55.447" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=408dcea3fb8ac35461ed5c7698cf0a730b7bdbc128fe77c1caf3d1cd8527580f
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240915 16:39:52.875" endtime="20240915 16:39:55.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:55.449" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=408dcea3fb8ac35461ed5c7698cf0a730b7bdbc128fe77c1caf3d1cd8527580f
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240915 16:39:55.448" endtime="20240915 16:39:55.449"/>
</kw>
<msg timestamp="20240915 16:39:55.449" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=408dcea3fb8ac35461ed5c7698cf0a730b7bdbc128fe77c1caf3d1cd8527580f
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240915 16:39:52.875" endtime="20240915 16:39:55.449"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20240915 16:39:55.450" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=408dcea3fb8ac35461ed5c7698cf0a730b7bdbc128fe77c1caf3d1cd8527580f
isDeleted=false
transactionLogIndex=0' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20240915 16:39:55.449" endtime="20240915 16:39:55.450"/>
</kw>
<msg timestamp="20240915 16:39:55.450" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20240915 16:39:55.449" endtime="20240915 16:39:55.450"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240915 16:39:55.451" endtime="20240915 16:39:55.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240915 16:39:55.451" endtime="20240915 16:39:55.451"/>
</kw>
<status status="NOT RUN" starttime="20240915 16:39:55.450" endtime="20240915 16:39:55.451"/>
</branch>
<status status="PASS" starttime="20240915 16:39:55.450" endtime="20240915 16:39:55.451"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:39:55.452" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:39:55.451" endtime="20240915 16:39:55.452"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240915 16:39:55.452" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:39:55.452" endtime="20240915 16:39:55.452"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:39:55.453" level="INFO">${secret} = ['408dcea3fb8ac35461ed5c7698cf0a730b7bdbc128fe77c1caf3d1cd8527580f']</msg>
<status status="PASS" starttime="20240915 16:39:55.452" endtime="20240915 16:39:55.453"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:39:55.454" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:39:55.453" endtime="20240915 16:39:55.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:39:55.455" level="INFO">${secret} = 408dcea3fb8ac35461ed5c7698cf0a730b7bdbc128fe77c1caf3d1cd8527580f</msg>
<status status="PASS" starttime="20240915 16:39:55.454" endtime="20240915 16:39:55.455"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:55.459" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:55.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:55.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:55.457" endtime="20240915 16:39:55.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:55.901" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:55.901" endtime="20240915 16:39:55.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:55.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:55.901" endtime="20240915 16:39:55.902"/>
</kw>
<status status="PASS" starttime="20240915 16:39:55.456" endtime="20240915 16:39:55.902"/>
</kw>
<msg timestamp="20240915 16:39:55.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:55.456" endtime="20240915 16:39:55.902"/>
</kw>
<status status="PASS" starttime="20240915 16:39:55.455" endtime="20240915 16:39:55.902"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:55.906" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:56.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:56.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:55.904" endtime="20240915 16:39:56.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:56.341" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:56.340" endtime="20240915 16:39:56.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:56.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:56.341" endtime="20240915 16:39:56.341"/>
</kw>
<status status="PASS" starttime="20240915 16:39:55.903" endtime="20240915 16:39:56.341"/>
</kw>
<msg timestamp="20240915 16:39:56.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:55.903" endtime="20240915 16:39:56.342"/>
</kw>
<status status="PASS" starttime="20240915 16:39:55.902" endtime="20240915 16:39:56.342"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:56.345" level="INFO">Running command 'aws configure set aws_secret_access_key 408dcea3fb8ac35461ed5c7698cf0a730b7bdbc128fe77c1caf3d1cd8527580f 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:56.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:56.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:56.343" endtime="20240915 16:39:56.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:56.786" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:56.786" endtime="20240915 16:39:56.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:56.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:56.786" endtime="20240915 16:39:56.787"/>
</kw>
<status status="PASS" starttime="20240915 16:39:56.343" endtime="20240915 16:39:56.787"/>
</kw>
<msg timestamp="20240915 16:39:56.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:56.342" endtime="20240915 16:39:56.787"/>
</kw>
<status status="PASS" starttime="20240915 16:39:56.342" endtime="20240915 16:39:56.787"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:56.791" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:57.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:57.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:56.789" endtime="20240915 16:39:57.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:57.232" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:57.232" endtime="20240915 16:39:57.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:57.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:57.232" endtime="20240915 16:39:57.233"/>
</kw>
<status status="PASS" starttime="20240915 16:39:56.788" endtime="20240915 16:39:57.233"/>
</kw>
<msg timestamp="20240915 16:39:57.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:56.788" endtime="20240915 16:39:57.233"/>
</kw>
<status status="PASS" starttime="20240915 16:39:56.788" endtime="20240915 16:39:57.233"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:57.237" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:57.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:57.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:57.235" endtime="20240915 16:39:57.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:57.675" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:57.674" endtime="20240915 16:39:57.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:57.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:57.675" endtime="20240915 16:39:57.675"/>
</kw>
<status status="PASS" starttime="20240915 16:39:57.234" endtime="20240915 16:39:57.676"/>
</kw>
<msg timestamp="20240915 16:39:57.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:57.234" endtime="20240915 16:39:57.676"/>
</kw>
<status status="PASS" starttime="20240915 16:39:57.234" endtime="20240915 16:39:57.676"/>
</kw>
<status status="PASS" starttime="20240915 16:39:52.874" endtime="20240915 16:39:57.676"/>
</kw>
<status status="PASS" starttime="20240915 16:39:52.874" endtime="20240915 16:39:57.676"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240915 16:39:57.676" endtime="20240915 16:39:57.676"/>
</kw>
<status status="PASS" starttime="20240915 16:39:52.837" endtime="20240915 16:39:57.677"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240915 16:39:57.678" level="INFO">${randStr} = 9647142314</msg>
<status status="PASS" starttime="20240915 16:39:57.677" endtime="20240915 16:39:57.678"/>
</kw>
<msg timestamp="20240915 16:39:57.678" level="INFO">${random} = ozone-test-9647142314</msg>
<status status="PASS" starttime="20240915 16:39:57.677" endtime="20240915 16:39:57.678"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:57.682" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-9647142314 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:39:59.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:59.495" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-9647142314"
}</msg>
<status status="PASS" starttime="20240915 16:39:57.680" endtime="20240915 16:39:59.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:59.496" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-9647142314"
}</msg>
<status status="PASS" starttime="20240915 16:39:59.496" endtime="20240915 16:39:59.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:59.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:59.497" endtime="20240915 16:39:59.497"/>
</kw>
<status status="PASS" starttime="20240915 16:39:57.680" endtime="20240915 16:39:59.497"/>
</kw>
<msg timestamp="20240915 16:39:59.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:39:57.679" endtime="20240915 16:39:59.498"/>
</kw>
<msg timestamp="20240915 16:39:59.498" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-9647142314"
}</msg>
<status status="PASS" starttime="20240915 16:39:57.679" endtime="20240915 16:39:59.498"/>
</kw>
<msg timestamp="20240915 16:39:59.498" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-9647142314"
}</msg>
<status status="PASS" starttime="20240915 16:39:57.679" endtime="20240915 16:39:59.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:39:59.498" endtime="20240915 16:39:59.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:39:59.498" endtime="20240915 16:39:59.499"/>
</kw>
<msg timestamp="20240915 16:39:59.499" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20240915 16:39:57.678" endtime="20240915 16:39:59.499"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240915 16:39:59.499" endtime="20240915 16:39:59.500"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:39:52.837" endtime="20240915 16:39:59.500"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:59.504" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240915 16:39:59.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:39:59.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:39:59.502" endtime="20240915 16:39:59.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:39:59.507" level="INFO"/>
<status status="PASS" starttime="20240915 16:39:59.506" endtime="20240915 16:39:59.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:39:59.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:39:59.507" endtime="20240915 16:39:59.507"/>
</kw>
<status status="PASS" starttime="20240915 16:39:59.501" endtime="20240915 16:39:59.507"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:39:59.511" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:01.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:01.301" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240915 16:39:59.509" endtime="20240915 16:40:01.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:01.302" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240915 16:40:01.301" endtime="20240915 16:40:01.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:01.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:01.303" endtime="20240915 16:40:01.303"/>
</kw>
<msg timestamp="20240915 16:40:01.304" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240915 16:39:59.508" endtime="20240915 16:40:01.304"/>
</kw>
<msg timestamp="20240915 16:40:01.304" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240915 16:39:59.508" endtime="20240915 16:40:01.304"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:40:01.304" endtime="20240915 16:40:01.305"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:01.309" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:01.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:01.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:01.306" endtime="20240915 16:40:01.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:01.313" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:01.312" endtime="20240915 16:40:01.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:01.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:01.313" endtime="20240915 16:40:01.314"/>
</kw>
<status status="PASS" starttime="20240915 16:40:01.305" endtime="20240915 16:40:01.314"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:39:59.501" endtime="20240915 16:40:01.314"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20240915 16:39:29.744" endtime="20240915 16:40:01.316"/>
</suite>
<suite id="s1-s3" name="1.4.0-1.5.0-SNAPSHOT-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:40:02.246" endtime="20240915 16:40:02.246"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:02.250" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:02.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:02.254" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:40:02.248" endtime="20240915 16:40:02.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:02.254" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:40:02.254" endtime="20240915 16:40:02.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:02.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:02.255" endtime="20240915 16:40:02.255"/>
</kw>
<status status="PASS" starttime="20240915 16:40:02.247" endtime="20240915 16:40:02.255"/>
</kw>
<msg timestamp="20240915 16:40:02.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:02.247" endtime="20240915 16:40:02.255"/>
</kw>
<msg timestamp="20240915 16:40:02.256" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:40:02.247" endtime="20240915 16:40:02.256"/>
</kw>
<msg timestamp="20240915 16:40:02.256" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:40:02.247" endtime="20240915 16:40:02.256"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:40:02.256" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:40:02.256" endtime="20240915 16:40:02.257"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:02.260" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:02.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:02.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:02.258" endtime="20240915 16:40:02.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:02.300" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:02.299" endtime="20240915 16:40:02.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:02.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:02.300" endtime="20240915 16:40:02.300"/>
</kw>
<status status="PASS" starttime="20240915 16:40:02.258" endtime="20240915 16:40:02.300"/>
</kw>
<msg timestamp="20240915 16:40:02.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:02.258" endtime="20240915 16:40:02.301"/>
</kw>
<status status="PASS" starttime="20240915 16:40:02.257" endtime="20240915 16:40:02.301"/>
</kw>
<status status="PASS" starttime="20240915 16:40:02.257" endtime="20240915 16:40:02.301"/>
</kw>
<status status="PASS" starttime="20240915 16:40:02.246" endtime="20240915 16:40:02.301"/>
</kw>
<status status="PASS" starttime="20240915 16:40:02.245" endtime="20240915 16:40:02.301"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240915 16:40:02.302" level="INFO">${random} = 18390</msg>
<status status="PASS" starttime="20240915 16:40:02.302" endtime="20240915 16:40:02.302"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:02.306" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-18390 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:07.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:07.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:02.304" endtime="20240915 16:40:07.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:07.374" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:07.374" endtime="20240915 16:40:07.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:07.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:07.374" endtime="20240915 16:40:07.375"/>
</kw>
<status status="PASS" starttime="20240915 16:40:02.303" endtime="20240915 16:40:07.375"/>
</kw>
<msg timestamp="20240915 16:40:07.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:02.303" endtime="20240915 16:40:07.375"/>
</kw>
<msg timestamp="20240915 16:40:07.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:02.302" endtime="20240915 16:40:07.376"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:40:07.376" endtime="20240915 16:40:07.376"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:07.379" level="INFO">Running command 'cat /tmp/key-18390 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:07.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:07.382" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:40:07.377" endtime="20240915 16:40:07.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:07.383" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:40:07.382" endtime="20240915 16:40:07.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:07.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:07.383" endtime="20240915 16:40:07.384"/>
</kw>
<msg timestamp="20240915 16:40:07.384" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:40:07.376" endtime="20240915 16:40:07.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:40:07.384" endtime="20240915 16:40:07.384"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:07.387" level="INFO">Running command 'rm /tmp/key-18390 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:07.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:07.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:07.385" endtime="20240915 16:40:07.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:07.390" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:07.390" endtime="20240915 16:40:07.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:07.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:07.391" endtime="20240915 16:40:07.391"/>
</kw>
<status status="PASS" starttime="20240915 16:40:07.384" endtime="20240915 16:40:07.391"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:40:02.301" endtime="20240915 16:40:07.392"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:40:07.394" endtime="20240915 16:40:07.394"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:07.398" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:07.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:07.401" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:40:07.396" endtime="20240915 16:40:07.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:07.402" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:40:07.402" endtime="20240915 16:40:07.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:07.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:07.402" endtime="20240915 16:40:07.403"/>
</kw>
<status status="PASS" starttime="20240915 16:40:07.395" endtime="20240915 16:40:07.403"/>
</kw>
<msg timestamp="20240915 16:40:07.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:07.395" endtime="20240915 16:40:07.403"/>
</kw>
<msg timestamp="20240915 16:40:07.403" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:40:07.395" endtime="20240915 16:40:07.403"/>
</kw>
<msg timestamp="20240915 16:40:07.404" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:40:07.394" endtime="20240915 16:40:07.404"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:40:07.404" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:40:07.404" endtime="20240915 16:40:07.404"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:07.408" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:07.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:07.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:07.406" endtime="20240915 16:40:07.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:07.443" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:07.442" endtime="20240915 16:40:07.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:07.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:07.443" endtime="20240915 16:40:07.444"/>
</kw>
<status status="PASS" starttime="20240915 16:40:07.405" endtime="20240915 16:40:07.444"/>
</kw>
<msg timestamp="20240915 16:40:07.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:07.405" endtime="20240915 16:40:07.444"/>
</kw>
<status status="PASS" starttime="20240915 16:40:07.405" endtime="20240915 16:40:07.444"/>
</kw>
<status status="PASS" starttime="20240915 16:40:07.404" endtime="20240915 16:40:07.444"/>
</kw>
<status status="PASS" starttime="20240915 16:40:07.394" endtime="20240915 16:40:07.444"/>
</kw>
<status status="PASS" starttime="20240915 16:40:07.393" endtime="20240915 16:40:07.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:07.448" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:09.983" level="INFO">${rc} = 255</msg>
<msg timestamp="20240915 16:40:09.983" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:40:07.446" endtime="20240915 16:40:09.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:09.985" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:40:09.984" endtime="20240915 16:40:09.985"/>
</kw>
<msg timestamp="20240915 16:40:09.985" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:40:07.445" endtime="20240915 16:40:09.985"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:40:09.985" endtime="20240915 16:40:09.986"/>
</kw>
<msg timestamp="20240915 16:40:09.986" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240915 16:40:09.985" endtime="20240915 16:40:09.986"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:09.990" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:12.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:12.698" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:40:09.987" endtime="20240915 16:40:12.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:12.699" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:40:12.699" endtime="20240915 16:40:12.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:12.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:12.700" endtime="20240915 16:40:12.700"/>
</kw>
<status status="PASS" starttime="20240915 16:40:09.987" endtime="20240915 16:40:12.700"/>
</kw>
<msg timestamp="20240915 16:40:12.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:09.987" endtime="20240915 16:40:12.700"/>
</kw>
<status status="PASS" starttime="20240915 16:40:09.986" endtime="20240915 16:40:12.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:12.705" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:15.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:15.388" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5ccddb63f5baabd01f6653e586dde27159260ddfef935420b0bac3efcf347c99
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240915 16:40:12.702" endtime="20240915 16:40:15.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:15.389" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5ccddb63f5baabd01f6653e586dde27159260ddfef935420b0bac3efcf347c99
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240915 16:40:15.388" endtime="20240915 16:40:15.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:15.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:15.389" endtime="20240915 16:40:15.390"/>
</kw>
<status status="PASS" starttime="20240915 16:40:12.702" endtime="20240915 16:40:15.390"/>
</kw>
<msg timestamp="20240915 16:40:15.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:12.701" endtime="20240915 16:40:15.390"/>
</kw>
<msg timestamp="20240915 16:40:15.390" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=5ccddb63f5baabd01f6653e586dde27159260ddfef935420b0bac3efcf347c99
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240915 16:40:12.701" endtime="20240915 16:40:15.390"/>
</kw>
<status status="PASS" starttime="20240915 16:40:09.986" endtime="20240915 16:40:15.390"/>
</branch>
<status status="PASS" starttime="20240915 16:40:09.986" endtime="20240915 16:40:15.391"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:40:15.391" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:40:15.391" endtime="20240915 16:40:15.391"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240915 16:40:15.392" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:40:15.392" endtime="20240915 16:40:15.392"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:40:15.393" level="INFO">${secret} = ['5ccddb63f5baabd01f6653e586dde27159260ddfef935420b0bac3efcf347c99']</msg>
<status status="PASS" starttime="20240915 16:40:15.392" endtime="20240915 16:40:15.393"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:40:15.394" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:40:15.393" endtime="20240915 16:40:15.394"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:40:15.395" level="INFO">${secret} = 5ccddb63f5baabd01f6653e586dde27159260ddfef935420b0bac3efcf347c99</msg>
<status status="PASS" starttime="20240915 16:40:15.394" endtime="20240915 16:40:15.395"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:15.399" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:15.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:15.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:15.396" endtime="20240915 16:40:15.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:15.828" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:15.828" endtime="20240915 16:40:15.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:15.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:15.828" endtime="20240915 16:40:15.829"/>
</kw>
<status status="PASS" starttime="20240915 16:40:15.396" endtime="20240915 16:40:15.829"/>
</kw>
<msg timestamp="20240915 16:40:15.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:15.395" endtime="20240915 16:40:15.829"/>
</kw>
<status status="PASS" starttime="20240915 16:40:15.395" endtime="20240915 16:40:15.829"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:15.833" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:16.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:16.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:15.831" endtime="20240915 16:40:16.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:16.273" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:16.272" endtime="20240915 16:40:16.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:16.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:16.273" endtime="20240915 16:40:16.274"/>
</kw>
<status status="PASS" starttime="20240915 16:40:15.830" endtime="20240915 16:40:16.274"/>
</kw>
<msg timestamp="20240915 16:40:16.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:15.830" endtime="20240915 16:40:16.274"/>
</kw>
<status status="PASS" starttime="20240915 16:40:15.829" endtime="20240915 16:40:16.274"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:16.278" level="INFO">Running command 'aws configure set aws_secret_access_key 5ccddb63f5baabd01f6653e586dde27159260ddfef935420b0bac3efcf347c99 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:16.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:16.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:16.275" endtime="20240915 16:40:16.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:16.753" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:16.752" endtime="20240915 16:40:16.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:16.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:16.753" endtime="20240915 16:40:16.753"/>
</kw>
<status status="PASS" starttime="20240915 16:40:16.275" endtime="20240915 16:40:16.754"/>
</kw>
<msg timestamp="20240915 16:40:16.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:16.275" endtime="20240915 16:40:16.754"/>
</kw>
<status status="PASS" starttime="20240915 16:40:16.274" endtime="20240915 16:40:16.754"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:16.757" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:17.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:17.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:16.755" endtime="20240915 16:40:17.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:17.269" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:17.269" endtime="20240915 16:40:17.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:17.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:17.270" endtime="20240915 16:40:17.270"/>
</kw>
<status status="PASS" starttime="20240915 16:40:16.755" endtime="20240915 16:40:17.270"/>
</kw>
<msg timestamp="20240915 16:40:17.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:16.754" endtime="20240915 16:40:17.270"/>
</kw>
<status status="PASS" starttime="20240915 16:40:16.754" endtime="20240915 16:40:17.270"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:17.274" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:17.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:17.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:17.272" endtime="20240915 16:40:17.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:17.720" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:17.719" endtime="20240915 16:40:17.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:17.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:17.721" endtime="20240915 16:40:17.722"/>
</kw>
<status status="PASS" starttime="20240915 16:40:17.271" endtime="20240915 16:40:17.722"/>
</kw>
<msg timestamp="20240915 16:40:17.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:17.271" endtime="20240915 16:40:17.722"/>
</kw>
<status status="PASS" starttime="20240915 16:40:17.271" endtime="20240915 16:40:17.722"/>
</kw>
<status status="PASS" starttime="20240915 16:40:07.445" endtime="20240915 16:40:17.722"/>
</kw>
<status status="PASS" starttime="20240915 16:40:07.444" endtime="20240915 16:40:17.723"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240915 16:40:17.723" endtime="20240915 16:40:17.723"/>
</kw>
<status status="PASS" starttime="20240915 16:40:07.393" endtime="20240915 16:40:17.723"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:17.728" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:18.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:18.440" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:39:52 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20240915 16:40:17.725" endtime="20240915 16:40:18.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:18.441" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:39:52 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 15 Sep 2024 16:40:18 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240915 16:40:18.440" endtime="20240915 16:40:18.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:18.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:18.441" endtime="20240915 16:40:18.442"/>
</kw>
<msg timestamp="20240915 16:40:18.442" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:39:52 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20240915 16:40:17.724" endtime="20240915 16:40:18.442"/>
</kw>
<msg timestamp="20240915 16:40:18.442" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:39:52 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20240915 16:40:17.724" endtime="20240915 16:40:18.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:40:18.442" endtime="20240915 16:40:18.443"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:18.446" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:18.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:18.449" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:40:18.443" endtime="20240915 16:40:18.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:18.450" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:40:18.449" endtime="20240915 16:40:18.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:18.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:18.450" endtime="20240915 16:40:18.450"/>
</kw>
<msg timestamp="20240915 16:40:18.450" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:40:18.443" endtime="20240915 16:40:18.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:40:18.451" endtime="20240915 16:40:18.451"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:18.454" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:18.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:18.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:18.451" endtime="20240915 16:40:18.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:18.457" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:18.456" endtime="20240915 16:40:18.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:18.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:18.457" endtime="20240915 16:40:18.458"/>
</kw>
<status status="PASS" starttime="20240915 16:40:18.451" endtime="20240915 16:40:18.458"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:40:07.392" endtime="20240915 16:40:18.458"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:40:18.460" endtime="20240915 16:40:18.461"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:18.464" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:18.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:18.467" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:40:18.462" endtime="20240915 16:40:18.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:18.468" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:40:18.468" endtime="20240915 16:40:18.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:18.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:18.468" endtime="20240915 16:40:18.469"/>
</kw>
<status status="PASS" starttime="20240915 16:40:18.462" endtime="20240915 16:40:18.469"/>
</kw>
<msg timestamp="20240915 16:40:18.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:18.462" endtime="20240915 16:40:18.470"/>
</kw>
<msg timestamp="20240915 16:40:18.470" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:40:18.461" endtime="20240915 16:40:18.470"/>
</kw>
<msg timestamp="20240915 16:40:18.470" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:40:18.461" endtime="20240915 16:40:18.470"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:40:18.470" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:40:18.470" endtime="20240915 16:40:18.471"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:18.474" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:18.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:18.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:18.472" endtime="20240915 16:40:18.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:18.496" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:18.495" endtime="20240915 16:40:18.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:18.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:18.496" endtime="20240915 16:40:18.496"/>
</kw>
<status status="PASS" starttime="20240915 16:40:18.472" endtime="20240915 16:40:18.497"/>
</kw>
<msg timestamp="20240915 16:40:18.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:18.471" endtime="20240915 16:40:18.497"/>
</kw>
<status status="PASS" starttime="20240915 16:40:18.471" endtime="20240915 16:40:18.497"/>
</kw>
<status status="PASS" starttime="20240915 16:40:18.471" endtime="20240915 16:40:18.497"/>
</kw>
<status status="PASS" starttime="20240915 16:40:18.460" endtime="20240915 16:40:18.497"/>
</kw>
<status status="PASS" starttime="20240915 16:40:18.460" endtime="20240915 16:40:18.497"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:18.501" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:21.312" level="INFO">${rc} = 255</msg>
<msg timestamp="20240915 16:40:21.312" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:40:18.498" endtime="20240915 16:40:21.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:21.313" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:40:21.313" endtime="20240915 16:40:21.313"/>
</kw>
<msg timestamp="20240915 16:40:21.314" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:40:18.498" endtime="20240915 16:40:21.314"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:40:21.314" endtime="20240915 16:40:21.314"/>
</kw>
<msg timestamp="20240915 16:40:21.314" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240915 16:40:21.314" endtime="20240915 16:40:21.315"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:21.318" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:24.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:24.111" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:40:21.316" endtime="20240915 16:40:24.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:24.112" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:40:24.111" endtime="20240915 16:40:24.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:24.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:24.112" endtime="20240915 16:40:24.113"/>
</kw>
<status status="PASS" starttime="20240915 16:40:21.316" endtime="20240915 16:40:24.113"/>
</kw>
<msg timestamp="20240915 16:40:24.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:21.315" endtime="20240915 16:40:24.113"/>
</kw>
<status status="PASS" starttime="20240915 16:40:21.315" endtime="20240915 16:40:24.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:24.117" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:26.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:26.721" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e9a66613b7657b6889ce6917e8df111daeeadc63ef21eb0608f20d747e3ef69c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240915 16:40:24.115" endtime="20240915 16:40:26.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:26.722" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e9a66613b7657b6889ce6917e8df111daeeadc63ef21eb0608f20d747e3ef69c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240915 16:40:26.721" endtime="20240915 16:40:26.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:26.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:26.722" endtime="20240915 16:40:26.723"/>
</kw>
<status status="PASS" starttime="20240915 16:40:24.114" endtime="20240915 16:40:26.723"/>
</kw>
<msg timestamp="20240915 16:40:26.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:24.114" endtime="20240915 16:40:26.723"/>
</kw>
<msg timestamp="20240915 16:40:26.723" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=e9a66613b7657b6889ce6917e8df111daeeadc63ef21eb0608f20d747e3ef69c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240915 16:40:24.113" endtime="20240915 16:40:26.723"/>
</kw>
<status status="PASS" starttime="20240915 16:40:21.315" endtime="20240915 16:40:26.723"/>
</branch>
<status status="PASS" starttime="20240915 16:40:21.315" endtime="20240915 16:40:26.723"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:40:26.724" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:40:26.724" endtime="20240915 16:40:26.724"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240915 16:40:26.725" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:40:26.724" endtime="20240915 16:40:26.725"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:40:26.725" level="INFO">${secret} = ['e9a66613b7657b6889ce6917e8df111daeeadc63ef21eb0608f20d747e3ef69c']</msg>
<status status="PASS" starttime="20240915 16:40:26.725" endtime="20240915 16:40:26.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:40:26.726" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:40:26.725" endtime="20240915 16:40:26.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:40:26.727" level="INFO">${secret} = e9a66613b7657b6889ce6917e8df111daeeadc63ef21eb0608f20d747e3ef69c</msg>
<status status="PASS" starttime="20240915 16:40:26.727" endtime="20240915 16:40:26.728"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:26.732" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:27.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:27.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:26.729" endtime="20240915 16:40:27.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:27.171" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:27.170" endtime="20240915 16:40:27.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:27.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:27.171" endtime="20240915 16:40:27.171"/>
</kw>
<status status="PASS" starttime="20240915 16:40:26.728" endtime="20240915 16:40:27.172"/>
</kw>
<msg timestamp="20240915 16:40:27.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:26.728" endtime="20240915 16:40:27.172"/>
</kw>
<status status="PASS" starttime="20240915 16:40:26.728" endtime="20240915 16:40:27.172"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:27.176" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:27.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:27.615" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:27.173" endtime="20240915 16:40:27.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:27.616" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:27.615" endtime="20240915 16:40:27.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:27.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:27.616" endtime="20240915 16:40:27.617"/>
</kw>
<status status="PASS" starttime="20240915 16:40:27.173" endtime="20240915 16:40:27.617"/>
</kw>
<msg timestamp="20240915 16:40:27.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:27.172" endtime="20240915 16:40:27.617"/>
</kw>
<status status="PASS" starttime="20240915 16:40:27.172" endtime="20240915 16:40:27.618"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:27.622" level="INFO">Running command 'aws configure set aws_secret_access_key e9a66613b7657b6889ce6917e8df111daeeadc63ef21eb0608f20d747e3ef69c 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:28.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:28.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:27.619" endtime="20240915 16:40:28.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:28.064" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:28.063" endtime="20240915 16:40:28.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:28.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:28.064" endtime="20240915 16:40:28.065"/>
</kw>
<status status="PASS" starttime="20240915 16:40:27.619" endtime="20240915 16:40:28.065"/>
</kw>
<msg timestamp="20240915 16:40:28.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:27.618" endtime="20240915 16:40:28.065"/>
</kw>
<status status="PASS" starttime="20240915 16:40:27.618" endtime="20240915 16:40:28.065"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:28.070" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:28.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:28.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:28.067" endtime="20240915 16:40:28.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:28.504" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:28.503" endtime="20240915 16:40:28.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:28.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:28.504" endtime="20240915 16:40:28.504"/>
</kw>
<status status="PASS" starttime="20240915 16:40:28.066" endtime="20240915 16:40:28.504"/>
</kw>
<msg timestamp="20240915 16:40:28.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:28.066" endtime="20240915 16:40:28.505"/>
</kw>
<status status="PASS" starttime="20240915 16:40:28.065" endtime="20240915 16:40:28.505"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:28.509" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:28.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:28.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:28.506" endtime="20240915 16:40:28.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:28.944" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:28.943" endtime="20240915 16:40:28.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:28.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:28.944" endtime="20240915 16:40:28.945"/>
</kw>
<status status="PASS" starttime="20240915 16:40:28.506" endtime="20240915 16:40:28.945"/>
</kw>
<msg timestamp="20240915 16:40:28.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:28.505" endtime="20240915 16:40:28.945"/>
</kw>
<status status="PASS" starttime="20240915 16:40:28.505" endtime="20240915 16:40:28.945"/>
</kw>
<status status="PASS" starttime="20240915 16:40:18.498" endtime="20240915 16:40:28.945"/>
</kw>
<status status="PASS" starttime="20240915 16:40:18.497" endtime="20240915 16:40:28.945"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240915 16:40:28.946" endtime="20240915 16:40:28.946"/>
</kw>
<status status="PASS" starttime="20240915 16:40:18.459" endtime="20240915 16:40:28.946"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:28.950" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:29.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:29.563" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:40:01 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240915 16:40:28.947" endtime="20240915 16:40:29.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:29.564" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:40:01 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 15 Sep 2024 16:40:29 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240915 16:40:29.563" endtime="20240915 16:40:29.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:29.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:29.564" endtime="20240915 16:40:29.565"/>
</kw>
<msg timestamp="20240915 16:40:29.565" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:40:01 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240915 16:40:28.947" endtime="20240915 16:40:29.565"/>
</kw>
<msg timestamp="20240915 16:40:29.565" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:40:01 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240915 16:40:28.946" endtime="20240915 16:40:29.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:40:29.565" endtime="20240915 16:40:29.566"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:29.569" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:29.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:29.571" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20240915 16:40:29.566" endtime="20240915 16:40:29.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:29.572" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20240915 16:40:29.572" endtime="20240915 16:40:29.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:29.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:29.572" endtime="20240915 16:40:29.573"/>
</kw>
<msg timestamp="20240915 16:40:29.573" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20240915 16:40:29.566" endtime="20240915 16:40:29.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:40:29.573" endtime="20240915 16:40:29.574"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:29.576" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:29.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:29.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:29.574" endtime="20240915 16:40:29.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:29.580" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:29.579" endtime="20240915 16:40:29.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:29.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:29.580" endtime="20240915 16:40:29.580"/>
</kw>
<status status="PASS" starttime="20240915 16:40:29.574" endtime="20240915 16:40:29.580"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:40:18.459" endtime="20240915 16:40:29.581"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20240915 16:40:02.151" endtime="20240915 16:40:29.582"/>
</suite>
<suite id="s1-s4" name="1.4.0-1.5.0-SNAPSHOT-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:40:30.348" endtime="20240915 16:40:30.348"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:30.353" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:30.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:30.356" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:40:30.350" endtime="20240915 16:40:30.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:30.357" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:40:30.356" endtime="20240915 16:40:30.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:30.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:30.357" endtime="20240915 16:40:30.358"/>
</kw>
<status status="PASS" starttime="20240915 16:40:30.350" endtime="20240915 16:40:30.358"/>
</kw>
<msg timestamp="20240915 16:40:30.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:30.349" endtime="20240915 16:40:30.358"/>
</kw>
<msg timestamp="20240915 16:40:30.358" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:40:30.349" endtime="20240915 16:40:30.358"/>
</kw>
<msg timestamp="20240915 16:40:30.358" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:40:30.349" endtime="20240915 16:40:30.358"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:40:30.359" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:40:30.359" endtime="20240915 16:40:30.359"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:30.363" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:30.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:30.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:40:30.360" endtime="20240915 16:40:30.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:30.409" level="INFO"/>
<status status="PASS" starttime="20240915 16:40:30.409" endtime="20240915 16:40:30.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:30.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:30.409" endtime="20240915 16:40:30.410"/>
</kw>
<status status="PASS" starttime="20240915 16:40:30.360" endtime="20240915 16:40:30.410"/>
</kw>
<msg timestamp="20240915 16:40:30.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:30.360" endtime="20240915 16:40:30.410"/>
</kw>
<status status="PASS" starttime="20240915 16:40:30.359" endtime="20240915 16:40:30.410"/>
</kw>
<status status="PASS" starttime="20240915 16:40:30.359" endtime="20240915 16:40:30.410"/>
</kw>
<status status="PASS" starttime="20240915 16:40:30.348" endtime="20240915 16:40:30.410"/>
</kw>
<status status="PASS" starttime="20240915 16:40:30.347" endtime="20240915 16:40:30.410"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:40:30.410" endtime="20240915 16:40:30.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:40:30.414" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:40:43.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:40:43.842" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [NOT_PREPARED], Current...</msg>
<status status="PASS" starttime="20240915 16:40:30.412" endtime="20240915 16:40:43.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:40:43.843" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
OM : [om3], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]
Waiting for 10 seconds before retrying...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20240915 16:40:43.842" endtime="20240915 16:40:43.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:40:43.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:40:43.844" endtime="20240915 16:40:43.844"/>
</kw>
<status status="PASS" starttime="20240915 16:40:30.412" endtime="20240915 16:40:43.844"/>
</kw>
<msg timestamp="20240915 16:40:43.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:40:30.412" endtime="20240915 16:40:43.844"/>
</kw>
<msg timestamp="20240915 16:40:43.844" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [NOT_PREPARED], Current...</msg>
<status status="PASS" starttime="20240915 16:40:30.411" endtime="20240915 16:40:43.845"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:40:43.845" endtime="20240915 16:40:43.845"/>
</kw>
<status status="PASS" starttime="20240915 16:40:43.845" endtime="20240915 16:40:43.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:40:30.347" endtime="20240915 16:40:43.846"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20240915 16:40:30.299" endtime="20240915 16:40:43.847"/>
</suite>
<suite id="s1-s5" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:42:08.947" endtime="20240915 16:42:08.948"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:08.951" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:08.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:08.955" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:42:08.949" endtime="20240915 16:42:08.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:08.956" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:42:08.955" endtime="20240915 16:42:08.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:08.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:08.956" endtime="20240915 16:42:08.956"/>
</kw>
<status status="PASS" starttime="20240915 16:42:08.948" endtime="20240915 16:42:08.956"/>
</kw>
<msg timestamp="20240915 16:42:08.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:08.948" endtime="20240915 16:42:08.957"/>
</kw>
<msg timestamp="20240915 16:42:08.957" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:42:08.948" endtime="20240915 16:42:08.957"/>
</kw>
<msg timestamp="20240915 16:42:08.957" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:08.948" endtime="20240915 16:42:08.957"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:42:08.957" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:08.957" endtime="20240915 16:42:08.957"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:08.961" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:08.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:08.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:08.959" endtime="20240915 16:42:08.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:08.976" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:08.976" endtime="20240915 16:42:08.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:08.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:08.977" endtime="20240915 16:42:08.977"/>
</kw>
<status status="PASS" starttime="20240915 16:42:08.958" endtime="20240915 16:42:08.977"/>
</kw>
<msg timestamp="20240915 16:42:08.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:08.958" endtime="20240915 16:42:08.977"/>
</kw>
<status status="PASS" starttime="20240915 16:42:08.958" endtime="20240915 16:42:08.977"/>
</kw>
<status status="PASS" starttime="20240915 16:42:08.957" endtime="20240915 16:42:08.977"/>
</kw>
<status status="PASS" starttime="20240915 16:42:08.947" endtime="20240915 16:42:08.978"/>
</kw>
<status status="PASS" starttime="20240915 16:42:08.947" endtime="20240915 16:42:08.978"/>
</kw>
<test id="s1-s5-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240915 16:42:08.979" level="INFO">${random} = 58423</msg>
<status status="PASS" starttime="20240915 16:42:08.979" endtime="20240915 16:42:08.979"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:08.982" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-58423 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:13.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:13.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:08.980" endtime="20240915 16:42:13.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:13.308" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:13.307" endtime="20240915 16:42:13.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:13.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:13.308" endtime="20240915 16:42:13.309"/>
</kw>
<status status="PASS" starttime="20240915 16:42:08.980" endtime="20240915 16:42:13.309"/>
</kw>
<msg timestamp="20240915 16:42:13.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:08.980" endtime="20240915 16:42:13.309"/>
</kw>
<msg timestamp="20240915 16:42:13.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:08.979" endtime="20240915 16:42:13.309"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:13.309" endtime="20240915 16:42:13.309"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:13.312" level="INFO">Running command 'cat /tmp/key-58423 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:13.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:13.316" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:42:13.310" endtime="20240915 16:42:13.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:13.317" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:42:13.316" endtime="20240915 16:42:13.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:13.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:13.317" endtime="20240915 16:42:13.318"/>
</kw>
<msg timestamp="20240915 16:42:13.318" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:42:13.310" endtime="20240915 16:42:13.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:13.318" endtime="20240915 16:42:13.318"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:13.321" level="INFO">Running command 'rm /tmp/key-58423 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:13.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:13.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:13.319" endtime="20240915 16:42:13.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:13.325" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:13.325" endtime="20240915 16:42:13.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:13.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:13.325" endtime="20240915 16:42:13.326"/>
</kw>
<status status="PASS" starttime="20240915 16:42:13.318" endtime="20240915 16:42:13.326"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:42:08.978" endtime="20240915 16:42:13.326"/>
</test>
<test id="s1-s5-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:42:13.328" endtime="20240915 16:42:13.328"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:13.331" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:13.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:13.335" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:42:13.330" endtime="20240915 16:42:13.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:13.336" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:42:13.335" endtime="20240915 16:42:13.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:13.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:13.336" endtime="20240915 16:42:13.336"/>
</kw>
<status status="PASS" starttime="20240915 16:42:13.329" endtime="20240915 16:42:13.337"/>
</kw>
<msg timestamp="20240915 16:42:13.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:13.329" endtime="20240915 16:42:13.337"/>
</kw>
<msg timestamp="20240915 16:42:13.337" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:42:13.329" endtime="20240915 16:42:13.337"/>
</kw>
<msg timestamp="20240915 16:42:13.337" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:13.328" endtime="20240915 16:42:13.337"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:42:13.338" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:13.337" endtime="20240915 16:42:13.338"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:13.341" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:13.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:13.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:13.339" endtime="20240915 16:42:13.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:13.377" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:13.376" endtime="20240915 16:42:13.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:13.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:13.377" endtime="20240915 16:42:13.377"/>
</kw>
<status status="PASS" starttime="20240915 16:42:13.339" endtime="20240915 16:42:13.377"/>
</kw>
<msg timestamp="20240915 16:42:13.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:13.339" endtime="20240915 16:42:13.378"/>
</kw>
<status status="PASS" starttime="20240915 16:42:13.338" endtime="20240915 16:42:13.378"/>
</kw>
<status status="PASS" starttime="20240915 16:42:13.338" endtime="20240915 16:42:13.378"/>
</kw>
<status status="PASS" starttime="20240915 16:42:13.328" endtime="20240915 16:42:13.378"/>
</kw>
<status status="PASS" starttime="20240915 16:42:13.327" endtime="20240915 16:42:13.378"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:13.381" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:15.711" level="INFO">${rc} = 255</msg>
<msg timestamp="20240915 16:42:15.711" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:42:13.379" endtime="20240915 16:42:15.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:15.712" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:42:15.712" endtime="20240915 16:42:15.712"/>
</kw>
<msg timestamp="20240915 16:42:15.713" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:42:13.379" endtime="20240915 16:42:15.713"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:15.713" endtime="20240915 16:42:15.714"/>
</kw>
<msg timestamp="20240915 16:42:15.714" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240915 16:42:15.713" endtime="20240915 16:42:15.714"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:15.718" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:18.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:18.029" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:42:15.716" endtime="20240915 16:42:18.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:18.030" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:42:18.030" endtime="20240915 16:42:18.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:18.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:18.031" endtime="20240915 16:42:18.031"/>
</kw>
<status status="PASS" starttime="20240915 16:42:15.715" endtime="20240915 16:42:18.031"/>
</kw>
<msg timestamp="20240915 16:42:18.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:15.715" endtime="20240915 16:42:18.031"/>
</kw>
<status status="PASS" starttime="20240915 16:42:15.714" endtime="20240915 16:42:18.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:18.035" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:20.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:20.165" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1960338bca08050c25f15fd8d8f311375b198deeb0ada6a7cd0e2daf2715666c</msg>
<status status="PASS" starttime="20240915 16:42:18.033" endtime="20240915 16:42:20.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:20.166" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1960338bca08050c25f15fd8d8f311375b198deeb0ada6a7cd0e2daf2715666c</msg>
<status status="PASS" starttime="20240915 16:42:20.165" endtime="20240915 16:42:20.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:20.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:20.166" endtime="20240915 16:42:20.166"/>
</kw>
<status status="PASS" starttime="20240915 16:42:18.032" endtime="20240915 16:42:20.167"/>
</kw>
<msg timestamp="20240915 16:42:20.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:18.032" endtime="20240915 16:42:20.167"/>
</kw>
<msg timestamp="20240915 16:42:20.167" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1960338bca08050c25f15fd8d8f311375b198deeb0ada6a7cd0e2daf2715666c</msg>
<status status="PASS" starttime="20240915 16:42:18.031" endtime="20240915 16:42:20.167"/>
</kw>
<status status="PASS" starttime="20240915 16:42:15.714" endtime="20240915 16:42:20.167"/>
</branch>
<status status="PASS" starttime="20240915 16:42:15.714" endtime="20240915 16:42:20.167"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:42:20.168" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:42:20.167" endtime="20240915 16:42:20.168"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240915 16:42:20.168" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:42:20.168" endtime="20240915 16:42:20.168"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:42:20.169" level="INFO">${secret} = ['1960338bca08050c25f15fd8d8f311375b198deeb0ada6a7cd0e2daf2715666c']</msg>
<status status="PASS" starttime="20240915 16:42:20.169" endtime="20240915 16:42:20.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:42:20.170" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:20.169" endtime="20240915 16:42:20.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:42:20.171" level="INFO">${secret} = 1960338bca08050c25f15fd8d8f311375b198deeb0ada6a7cd0e2daf2715666c</msg>
<status status="PASS" starttime="20240915 16:42:20.170" endtime="20240915 16:42:20.171"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:20.174" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:20.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:20.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:20.172" endtime="20240915 16:42:20.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:20.578" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:20.577" endtime="20240915 16:42:20.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:20.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:20.578" endtime="20240915 16:42:20.579"/>
</kw>
<status status="PASS" starttime="20240915 16:42:20.172" endtime="20240915 16:42:20.579"/>
</kw>
<msg timestamp="20240915 16:42:20.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:20.171" endtime="20240915 16:42:20.579"/>
</kw>
<status status="PASS" starttime="20240915 16:42:20.171" endtime="20240915 16:42:20.579"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:20.582" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:20.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:20.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:20.580" endtime="20240915 16:42:20.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:20.972" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:20.971" endtime="20240915 16:42:20.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:20.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:20.972" endtime="20240915 16:42:20.972"/>
</kw>
<status status="PASS" starttime="20240915 16:42:20.580" endtime="20240915 16:42:20.973"/>
</kw>
<msg timestamp="20240915 16:42:20.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:20.580" endtime="20240915 16:42:20.973"/>
</kw>
<status status="PASS" starttime="20240915 16:42:20.579" endtime="20240915 16:42:20.973"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:20.976" level="INFO">Running command 'aws configure set aws_secret_access_key 1960338bca08050c25f15fd8d8f311375b198deeb0ada6a7cd0e2daf2715666c 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:21.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:21.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:20.974" endtime="20240915 16:42:21.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:21.358" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:21.357" endtime="20240915 16:42:21.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:21.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:21.358" endtime="20240915 16:42:21.359"/>
</kw>
<status status="PASS" starttime="20240915 16:42:20.974" endtime="20240915 16:42:21.359"/>
</kw>
<msg timestamp="20240915 16:42:21.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:20.973" endtime="20240915 16:42:21.359"/>
</kw>
<status status="PASS" starttime="20240915 16:42:20.973" endtime="20240915 16:42:21.359"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:21.362" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:21.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:21.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:21.360" endtime="20240915 16:42:21.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:21.762" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:21.762" endtime="20240915 16:42:21.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:21.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:21.763" endtime="20240915 16:42:21.763"/>
</kw>
<status status="PASS" starttime="20240915 16:42:21.360" endtime="20240915 16:42:21.763"/>
</kw>
<msg timestamp="20240915 16:42:21.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:21.360" endtime="20240915 16:42:21.763"/>
</kw>
<status status="PASS" starttime="20240915 16:42:21.359" endtime="20240915 16:42:21.763"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:21.767" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:22.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:22.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:21.765" endtime="20240915 16:42:22.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:22.158" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:22.157" endtime="20240915 16:42:22.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:22.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:22.158" endtime="20240915 16:42:22.159"/>
</kw>
<status status="PASS" starttime="20240915 16:42:21.764" endtime="20240915 16:42:22.159"/>
</kw>
<msg timestamp="20240915 16:42:22.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:21.764" endtime="20240915 16:42:22.159"/>
</kw>
<status status="PASS" starttime="20240915 16:42:21.764" endtime="20240915 16:42:22.159"/>
</kw>
<status status="PASS" starttime="20240915 16:42:13.378" endtime="20240915 16:42:22.159"/>
</kw>
<status status="PASS" starttime="20240915 16:42:13.378" endtime="20240915 16:42:22.159"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240915 16:42:22.159" endtime="20240915 16:42:22.160"/>
</kw>
<status status="PASS" starttime="20240915 16:42:13.327" endtime="20240915 16:42:22.160"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:22.163" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:24.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:24.107" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:39:52 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240915 16:42:22.161" endtime="20240915 16:42:24.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:24.108" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:39:52 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 15 Sep 2024 16:42:22 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240915 16:42:24.108" endtime="20240915 16:42:24.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:24.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:24.109" endtime="20240915 16:42:24.109"/>
</kw>
<msg timestamp="20240915 16:42:24.109" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:39:52 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240915 16:42:22.160" endtime="20240915 16:42:24.109"/>
</kw>
<msg timestamp="20240915 16:42:24.109" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:39:52 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240915 16:42:22.160" endtime="20240915 16:42:24.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:24.110" endtime="20240915 16:42:24.110"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:24.113" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:24.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:24.116" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:42:24.110" endtime="20240915 16:42:24.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:24.117" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:42:24.117" endtime="20240915 16:42:24.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:24.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:24.117" endtime="20240915 16:42:24.118"/>
</kw>
<msg timestamp="20240915 16:42:24.118" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:42:24.110" endtime="20240915 16:42:24.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:24.118" endtime="20240915 16:42:24.118"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:24.121" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:24.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:24.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:24.119" endtime="20240915 16:42:24.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:24.125" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:24.125" endtime="20240915 16:42:24.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:24.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:24.125" endtime="20240915 16:42:24.126"/>
</kw>
<status status="PASS" starttime="20240915 16:42:24.119" endtime="20240915 16:42:24.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:42:13.326" endtime="20240915 16:42:24.126"/>
</test>
<test id="s1-s5-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:42:24.128" endtime="20240915 16:42:24.128"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:24.132" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:24.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:24.135" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:42:24.130" endtime="20240915 16:42:24.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:24.136" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:42:24.136" endtime="20240915 16:42:24.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:24.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:24.136" endtime="20240915 16:42:24.137"/>
</kw>
<status status="PASS" starttime="20240915 16:42:24.129" endtime="20240915 16:42:24.137"/>
</kw>
<msg timestamp="20240915 16:42:24.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:24.129" endtime="20240915 16:42:24.137"/>
</kw>
<msg timestamp="20240915 16:42:24.137" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:42:24.129" endtime="20240915 16:42:24.138"/>
</kw>
<msg timestamp="20240915 16:42:24.138" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:24.129" endtime="20240915 16:42:24.138"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:42:24.138" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:24.138" endtime="20240915 16:42:24.138"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:24.141" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:24.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:24.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:24.140" endtime="20240915 16:42:24.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:24.188" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:24.187" endtime="20240915 16:42:24.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:24.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:24.188" endtime="20240915 16:42:24.188"/>
</kw>
<status status="PASS" starttime="20240915 16:42:24.139" endtime="20240915 16:42:24.188"/>
</kw>
<msg timestamp="20240915 16:42:24.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:24.139" endtime="20240915 16:42:24.188"/>
</kw>
<status status="PASS" starttime="20240915 16:42:24.139" endtime="20240915 16:42:24.189"/>
</kw>
<status status="PASS" starttime="20240915 16:42:24.138" endtime="20240915 16:42:24.189"/>
</kw>
<status status="PASS" starttime="20240915 16:42:24.128" endtime="20240915 16:42:24.189"/>
</kw>
<status status="PASS" starttime="20240915 16:42:24.127" endtime="20240915 16:42:24.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:24.192" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:26.380" level="INFO">${rc} = 255</msg>
<msg timestamp="20240915 16:42:26.380" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:42:24.190" endtime="20240915 16:42:26.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:26.381" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:42:26.380" endtime="20240915 16:42:26.381"/>
</kw>
<msg timestamp="20240915 16:42:26.381" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:42:24.190" endtime="20240915 16:42:26.381"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:26.381" endtime="20240915 16:42:26.382"/>
</kw>
<msg timestamp="20240915 16:42:26.382" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240915 16:42:26.381" endtime="20240915 16:42:26.382"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:26.385" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:28.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:28.877" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:42:26.383" endtime="20240915 16:42:28.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:28.878" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:42:28.878" endtime="20240915 16:42:28.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:28.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:28.878" endtime="20240915 16:42:28.879"/>
</kw>
<status status="PASS" starttime="20240915 16:42:26.383" endtime="20240915 16:42:28.879"/>
</kw>
<msg timestamp="20240915 16:42:28.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:26.383" endtime="20240915 16:42:28.879"/>
</kw>
<status status="PASS" starttime="20240915 16:42:26.382" endtime="20240915 16:42:28.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:28.883" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:31.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:31.049" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=194b4795c3d839d1e0451b37fdd7faed8e153cf0310b342197ff2270ef372214</msg>
<status status="PASS" starttime="20240915 16:42:28.880" endtime="20240915 16:42:31.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:31.050" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=194b4795c3d839d1e0451b37fdd7faed8e153cf0310b342197ff2270ef372214</msg>
<status status="PASS" starttime="20240915 16:42:31.049" endtime="20240915 16:42:31.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:31.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:31.050" endtime="20240915 16:42:31.051"/>
</kw>
<status status="PASS" starttime="20240915 16:42:28.880" endtime="20240915 16:42:31.051"/>
</kw>
<msg timestamp="20240915 16:42:31.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:28.880" endtime="20240915 16:42:31.051"/>
</kw>
<msg timestamp="20240915 16:42:31.051" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=194b4795c3d839d1e0451b37fdd7faed8e153cf0310b342197ff2270ef372214</msg>
<status status="PASS" starttime="20240915 16:42:28.879" endtime="20240915 16:42:31.051"/>
</kw>
<status status="PASS" starttime="20240915 16:42:26.382" endtime="20240915 16:42:31.051"/>
</branch>
<status status="PASS" starttime="20240915 16:42:26.382" endtime="20240915 16:42:31.051"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:42:31.052" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:42:31.051" endtime="20240915 16:42:31.052"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240915 16:42:31.052" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:42:31.052" endtime="20240915 16:42:31.052"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:42:31.053" level="INFO">${secret} = ['194b4795c3d839d1e0451b37fdd7faed8e153cf0310b342197ff2270ef372214']</msg>
<status status="PASS" starttime="20240915 16:42:31.052" endtime="20240915 16:42:31.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:42:31.054" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:31.053" endtime="20240915 16:42:31.054"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:42:31.055" level="INFO">${secret} = 194b4795c3d839d1e0451b37fdd7faed8e153cf0310b342197ff2270ef372214</msg>
<status status="PASS" starttime="20240915 16:42:31.054" endtime="20240915 16:42:31.055"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:31.058" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:31.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:31.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:31.056" endtime="20240915 16:42:31.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:31.465" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:31.465" endtime="20240915 16:42:31.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:31.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:31.466" endtime="20240915 16:42:31.466"/>
</kw>
<status status="PASS" starttime="20240915 16:42:31.055" endtime="20240915 16:42:31.466"/>
</kw>
<msg timestamp="20240915 16:42:31.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:31.055" endtime="20240915 16:42:31.466"/>
</kw>
<status status="PASS" starttime="20240915 16:42:31.055" endtime="20240915 16:42:31.467"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:31.470" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:31.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:31.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:31.468" endtime="20240915 16:42:31.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:31.988" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:31.987" endtime="20240915 16:42:31.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:31.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:31.988" endtime="20240915 16:42:31.989"/>
</kw>
<status status="PASS" starttime="20240915 16:42:31.467" endtime="20240915 16:42:31.989"/>
</kw>
<msg timestamp="20240915 16:42:31.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:31.467" endtime="20240915 16:42:31.989"/>
</kw>
<status status="PASS" starttime="20240915 16:42:31.467" endtime="20240915 16:42:31.989"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:31.993" level="INFO">Running command 'aws configure set aws_secret_access_key 194b4795c3d839d1e0451b37fdd7faed8e153cf0310b342197ff2270ef372214 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:32.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:32.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:31.990" endtime="20240915 16:42:32.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:32.380" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:32.379" endtime="20240915 16:42:32.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:32.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:32.380" endtime="20240915 16:42:32.381"/>
</kw>
<status status="PASS" starttime="20240915 16:42:31.990" endtime="20240915 16:42:32.381"/>
</kw>
<msg timestamp="20240915 16:42:32.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:31.990" endtime="20240915 16:42:32.381"/>
</kw>
<status status="PASS" starttime="20240915 16:42:31.989" endtime="20240915 16:42:32.381"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:32.385" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:32.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:32.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:32.382" endtime="20240915 16:42:32.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:32.780" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:32.779" endtime="20240915 16:42:32.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:32.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:32.780" endtime="20240915 16:42:32.780"/>
</kw>
<status status="PASS" starttime="20240915 16:42:32.382" endtime="20240915 16:42:32.781"/>
</kw>
<msg timestamp="20240915 16:42:32.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:32.382" endtime="20240915 16:42:32.781"/>
</kw>
<status status="PASS" starttime="20240915 16:42:32.381" endtime="20240915 16:42:32.781"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:32.784" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:33.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:33.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:32.782" endtime="20240915 16:42:33.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:33.168" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:33.167" endtime="20240915 16:42:33.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:33.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:33.168" endtime="20240915 16:42:33.168"/>
</kw>
<status status="PASS" starttime="20240915 16:42:32.782" endtime="20240915 16:42:33.169"/>
</kw>
<msg timestamp="20240915 16:42:33.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:32.782" endtime="20240915 16:42:33.169"/>
</kw>
<status status="PASS" starttime="20240915 16:42:32.781" endtime="20240915 16:42:33.169"/>
</kw>
<status status="PASS" starttime="20240915 16:42:24.189" endtime="20240915 16:42:33.169"/>
</kw>
<status status="PASS" starttime="20240915 16:42:24.189" endtime="20240915 16:42:33.169"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240915 16:42:33.169" endtime="20240915 16:42:33.169"/>
</kw>
<status status="PASS" starttime="20240915 16:42:24.127" endtime="20240915 16:42:33.169"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:33.173" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:33.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:33.811" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:40:01 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240915 16:42:33.170" endtime="20240915 16:42:33.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:33.812" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:40:01 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 15 Sep 2024 16:42:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240915 16:42:33.812" endtime="20240915 16:42:33.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:33.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:33.812" endtime="20240915 16:42:33.813"/>
</kw>
<msg timestamp="20240915 16:42:33.813" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:40:01 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240915 16:42:33.170" endtime="20240915 16:42:33.813"/>
</kw>
<msg timestamp="20240915 16:42:33.813" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:40:01 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240915 16:42:33.170" endtime="20240915 16:42:33.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:33.813" endtime="20240915 16:42:33.814"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:33.816" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:33.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:33.820" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20240915 16:42:33.814" endtime="20240915 16:42:33.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:33.821" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20240915 16:42:33.820" endtime="20240915 16:42:33.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:33.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:33.821" endtime="20240915 16:42:33.821"/>
</kw>
<msg timestamp="20240915 16:42:33.822" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20240915 16:42:33.814" endtime="20240915 16:42:33.822"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:33.822" endtime="20240915 16:42:33.822"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:33.825" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:33.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:33.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:33.823" endtime="20240915 16:42:33.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:33.829" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:33.828" endtime="20240915 16:42:33.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:33.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:33.829" endtime="20240915 16:42:33.830"/>
</kw>
<status status="PASS" starttime="20240915 16:42:33.822" endtime="20240915 16:42:33.830"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:42:24.127" endtime="20240915 16:42:33.830"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20240915 16:42:08.882" endtime="20240915 16:42:33.831"/>
</suite>
<suite id="s1-s6" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-old1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:42:34.599" endtime="20240915 16:42:34.599"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:34.603" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:34.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:34.607" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:42:34.600" endtime="20240915 16:42:34.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:34.607" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:42:34.607" endtime="20240915 16:42:34.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:34.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:34.608" endtime="20240915 16:42:34.608"/>
</kw>
<status status="PASS" starttime="20240915 16:42:34.600" endtime="20240915 16:42:34.608"/>
</kw>
<msg timestamp="20240915 16:42:34.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:34.600" endtime="20240915 16:42:34.608"/>
</kw>
<msg timestamp="20240915 16:42:34.608" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:42:34.599" endtime="20240915 16:42:34.608"/>
</kw>
<msg timestamp="20240915 16:42:34.609" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:34.599" endtime="20240915 16:42:34.609"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:42:34.609" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:34.609" endtime="20240915 16:42:34.609"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:34.612" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:34.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:34.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:34.611" endtime="20240915 16:42:34.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:34.634" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:34.634" endtime="20240915 16:42:34.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:34.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:34.634" endtime="20240915 16:42:34.634"/>
</kw>
<status status="PASS" starttime="20240915 16:42:34.610" endtime="20240915 16:42:34.635"/>
</kw>
<msg timestamp="20240915 16:42:34.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:34.610" endtime="20240915 16:42:34.635"/>
</kw>
<status status="PASS" starttime="20240915 16:42:34.610" endtime="20240915 16:42:34.635"/>
</kw>
<status status="PASS" starttime="20240915 16:42:34.609" endtime="20240915 16:42:34.635"/>
</kw>
<status status="PASS" starttime="20240915 16:42:34.599" endtime="20240915 16:42:34.635"/>
</kw>
<status status="PASS" starttime="20240915 16:42:34.598" endtime="20240915 16:42:34.635"/>
</kw>
<test id="s1-s6-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:34.638" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240915 16:42:34.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:34.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:34.636" endtime="20240915 16:42:34.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:34.641" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:34.641" endtime="20240915 16:42:34.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:34.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:34.641" endtime="20240915 16:42:34.642"/>
</kw>
<status status="PASS" starttime="20240915 16:42:34.636" endtime="20240915 16:42:34.642"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:34.645" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:39.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:39.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:34.643" endtime="20240915 16:42:39.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:39.329" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:39.328" endtime="20240915 16:42:39.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:39.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:39.330" endtime="20240915 16:42:39.330"/>
</kw>
<status status="PASS" starttime="20240915 16:42:34.643" endtime="20240915 16:42:39.330"/>
</kw>
<msg timestamp="20240915 16:42:39.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:34.642" endtime="20240915 16:42:39.330"/>
</kw>
<msg timestamp="20240915 16:42:39.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:34.642" endtime="20240915 16:42:39.330"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:39.330" endtime="20240915 16:42:39.331"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:39.333" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:39.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:39.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:39.331" endtime="20240915 16:42:39.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:39.338" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:39.337" endtime="20240915 16:42:39.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:39.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:39.338" endtime="20240915 16:42:39.338"/>
</kw>
<status status="PASS" starttime="20240915 16:42:39.331" endtime="20240915 16:42:39.339"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:42:34.635" endtime="20240915 16:42:39.339"/>
</test>
<test id="s1-s6-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:39.342" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240915 16:42:39.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:39.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:39.340" endtime="20240915 16:42:39.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:39.345" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:39.344" endtime="20240915 16:42:39.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:39.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:39.345" endtime="20240915 16:42:39.345"/>
</kw>
<status status="PASS" starttime="20240915 16:42:39.340" endtime="20240915 16:42:39.346"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:39.349" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:43.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:43.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:39.347" endtime="20240915 16:42:43.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:43.655" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:43.654" endtime="20240915 16:42:43.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:43.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:43.655" endtime="20240915 16:42:43.655"/>
</kw>
<status status="PASS" starttime="20240915 16:42:39.346" endtime="20240915 16:42:43.656"/>
</kw>
<msg timestamp="20240915 16:42:43.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:39.346" endtime="20240915 16:42:43.656"/>
</kw>
<msg timestamp="20240915 16:42:43.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:39.346" endtime="20240915 16:42:43.656"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:43.656" endtime="20240915 16:42:43.656"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:43.659" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:43.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:43.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:43.657" endtime="20240915 16:42:43.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:43.664" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:43.663" endtime="20240915 16:42:43.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:43.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:43.664" endtime="20240915 16:42:43.664"/>
</kw>
<status status="PASS" starttime="20240915 16:42:43.656" endtime="20240915 16:42:43.665"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:42:39.339" endtime="20240915 16:42:43.665"/>
</test>
<test id="s1-s6-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:42:43.667" endtime="20240915 16:42:43.667"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:43.670" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:43.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:43.674" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:42:43.669" endtime="20240915 16:42:43.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:43.675" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:42:43.675" endtime="20240915 16:42:43.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:43.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:43.675" endtime="20240915 16:42:43.676"/>
</kw>
<status status="PASS" starttime="20240915 16:42:43.668" endtime="20240915 16:42:43.676"/>
</kw>
<msg timestamp="20240915 16:42:43.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:43.668" endtime="20240915 16:42:43.676"/>
</kw>
<msg timestamp="20240915 16:42:43.676" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:42:43.668" endtime="20240915 16:42:43.676"/>
</kw>
<msg timestamp="20240915 16:42:43.676" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:43.667" endtime="20240915 16:42:43.676"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:42:43.677" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:43.676" endtime="20240915 16:42:43.677"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:43.680" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:43.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:43.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:43.678" endtime="20240915 16:42:43.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:43.703" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:43.702" endtime="20240915 16:42:43.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:43.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:43.703" endtime="20240915 16:42:43.704"/>
</kw>
<status status="PASS" starttime="20240915 16:42:43.678" endtime="20240915 16:42:43.704"/>
</kw>
<msg timestamp="20240915 16:42:43.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:43.678" endtime="20240915 16:42:43.704"/>
</kw>
<status status="PASS" starttime="20240915 16:42:43.677" endtime="20240915 16:42:43.704"/>
</kw>
<status status="PASS" starttime="20240915 16:42:43.677" endtime="20240915 16:42:43.704"/>
</kw>
<status status="PASS" starttime="20240915 16:42:43.667" endtime="20240915 16:42:43.704"/>
</kw>
<status status="PASS" starttime="20240915 16:42:43.666" endtime="20240915 16:42:43.704"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:43.707" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:46.025" level="INFO">${rc} = 255</msg>
<msg timestamp="20240915 16:42:46.025" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:42:43.706" endtime="20240915 16:42:46.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:46.026" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:42:46.026" endtime="20240915 16:42:46.026"/>
</kw>
<msg timestamp="20240915 16:42:46.027" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:42:43.705" endtime="20240915 16:42:46.027"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:46.027" endtime="20240915 16:42:46.027"/>
</kw>
<msg timestamp="20240915 16:42:46.027" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240915 16:42:46.027" endtime="20240915 16:42:46.028"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:46.031" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:48.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:48.343" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:42:46.029" endtime="20240915 16:42:48.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:48.344" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:42:48.343" endtime="20240915 16:42:48.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:48.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:48.344" endtime="20240915 16:42:48.344"/>
</kw>
<status status="PASS" starttime="20240915 16:42:46.029" endtime="20240915 16:42:48.344"/>
</kw>
<msg timestamp="20240915 16:42:48.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:46.028" endtime="20240915 16:42:48.345"/>
</kw>
<status status="PASS" starttime="20240915 16:42:46.028" endtime="20240915 16:42:48.345"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:48.348" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:50.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:50.461" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7698b68f45885cd0fd07fbd42471a610fe51afb1640c42f72cb84a93ec84208a</msg>
<status status="PASS" starttime="20240915 16:42:48.346" endtime="20240915 16:42:50.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:50.462" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7698b68f45885cd0fd07fbd42471a610fe51afb1640c42f72cb84a93ec84208a</msg>
<status status="PASS" starttime="20240915 16:42:50.461" endtime="20240915 16:42:50.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:50.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:50.462" endtime="20240915 16:42:50.463"/>
</kw>
<status status="PASS" starttime="20240915 16:42:48.346" endtime="20240915 16:42:50.463"/>
</kw>
<msg timestamp="20240915 16:42:50.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:48.345" endtime="20240915 16:42:50.463"/>
</kw>
<msg timestamp="20240915 16:42:50.463" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=7698b68f45885cd0fd07fbd42471a610fe51afb1640c42f72cb84a93ec84208a</msg>
<status status="PASS" starttime="20240915 16:42:48.345" endtime="20240915 16:42:50.463"/>
</kw>
<status status="PASS" starttime="20240915 16:42:46.028" endtime="20240915 16:42:50.463"/>
</branch>
<status status="PASS" starttime="20240915 16:42:46.028" endtime="20240915 16:42:50.463"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:42:50.464" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:42:50.463" endtime="20240915 16:42:50.464"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240915 16:42:50.464" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:42:50.464" endtime="20240915 16:42:50.464"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:42:50.465" level="INFO">${secret} = ['7698b68f45885cd0fd07fbd42471a610fe51afb1640c42f72cb84a93ec84208a']</msg>
<status status="PASS" starttime="20240915 16:42:50.465" endtime="20240915 16:42:50.465"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:42:50.466" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:50.465" endtime="20240915 16:42:50.466"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:42:50.467" level="INFO">${secret} = 7698b68f45885cd0fd07fbd42471a610fe51afb1640c42f72cb84a93ec84208a</msg>
<status status="PASS" starttime="20240915 16:42:50.466" endtime="20240915 16:42:50.467"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:50.470" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:50.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:50.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:50.468" endtime="20240915 16:42:50.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:50.867" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:50.866" endtime="20240915 16:42:50.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:50.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:50.867" endtime="20240915 16:42:50.867"/>
</kw>
<status status="PASS" starttime="20240915 16:42:50.468" endtime="20240915 16:42:50.867"/>
</kw>
<msg timestamp="20240915 16:42:50.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:50.467" endtime="20240915 16:42:50.868"/>
</kw>
<status status="PASS" starttime="20240915 16:42:50.467" endtime="20240915 16:42:50.868"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:50.871" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:51.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:51.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:50.869" endtime="20240915 16:42:51.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:51.248" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:51.247" endtime="20240915 16:42:51.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:51.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:51.248" endtime="20240915 16:42:51.248"/>
</kw>
<status status="PASS" starttime="20240915 16:42:50.869" endtime="20240915 16:42:51.249"/>
</kw>
<msg timestamp="20240915 16:42:51.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:50.868" endtime="20240915 16:42:51.249"/>
</kw>
<status status="PASS" starttime="20240915 16:42:50.868" endtime="20240915 16:42:51.249"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:51.252" level="INFO">Running command 'aws configure set aws_secret_access_key 7698b68f45885cd0fd07fbd42471a610fe51afb1640c42f72cb84a93ec84208a 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:51.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:51.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:51.250" endtime="20240915 16:42:51.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:51.667" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:51.666" endtime="20240915 16:42:51.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:51.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:51.668" endtime="20240915 16:42:51.668"/>
</kw>
<status status="PASS" starttime="20240915 16:42:51.250" endtime="20240915 16:42:51.668"/>
</kw>
<msg timestamp="20240915 16:42:51.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:51.250" endtime="20240915 16:42:51.668"/>
</kw>
<status status="PASS" starttime="20240915 16:42:51.249" endtime="20240915 16:42:51.668"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:51.672" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:52.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:52.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:51.669" endtime="20240915 16:42:52.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:52.065" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:52.064" endtime="20240915 16:42:52.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:52.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:52.065" endtime="20240915 16:42:52.065"/>
</kw>
<status status="PASS" starttime="20240915 16:42:51.669" endtime="20240915 16:42:52.066"/>
</kw>
<msg timestamp="20240915 16:42:52.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:51.669" endtime="20240915 16:42:52.066"/>
</kw>
<status status="PASS" starttime="20240915 16:42:51.668" endtime="20240915 16:42:52.066"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:52.069" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:52.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:52.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:52.067" endtime="20240915 16:42:52.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:52.469" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:52.469" endtime="20240915 16:42:52.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:52.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:52.470" endtime="20240915 16:42:52.470"/>
</kw>
<status status="PASS" starttime="20240915 16:42:52.067" endtime="20240915 16:42:52.470"/>
</kw>
<msg timestamp="20240915 16:42:52.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:52.066" endtime="20240915 16:42:52.470"/>
</kw>
<status status="PASS" starttime="20240915 16:42:52.066" endtime="20240915 16:42:52.470"/>
</kw>
<status status="PASS" starttime="20240915 16:42:43.705" endtime="20240915 16:42:52.471"/>
</kw>
<status status="PASS" starttime="20240915 16:42:43.704" endtime="20240915 16:42:52.471"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240915 16:42:52.471" endtime="20240915 16:42:52.471"/>
</kw>
<status status="PASS" starttime="20240915 16:42:43.666" endtime="20240915 16:42:52.471"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240915 16:42:52.472" level="INFO">${randStr} = 1637011688</msg>
<status status="PASS" starttime="20240915 16:42:52.472" endtime="20240915 16:42:52.472"/>
</kw>
<msg timestamp="20240915 16:42:52.472" level="INFO">${random} = ozone-test-1637011688</msg>
<status status="PASS" starttime="20240915 16:42:52.471" endtime="20240915 16:42:52.472"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:52.477" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-1637011688 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:53.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:53.013" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-1637011688"
}</msg>
<status status="PASS" starttime="20240915 16:42:52.474" endtime="20240915 16:42:53.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:53.014" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-1637011688"
}</msg>
<status status="PASS" starttime="20240915 16:42:53.013" endtime="20240915 16:42:53.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:53.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:53.014" endtime="20240915 16:42:53.014"/>
</kw>
<status status="PASS" starttime="20240915 16:42:52.474" endtime="20240915 16:42:53.015"/>
</kw>
<msg timestamp="20240915 16:42:53.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:52.474" endtime="20240915 16:42:53.015"/>
</kw>
<msg timestamp="20240915 16:42:53.015" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-1637011688"
}</msg>
<status status="PASS" starttime="20240915 16:42:52.473" endtime="20240915 16:42:53.015"/>
</kw>
<msg timestamp="20240915 16:42:53.015" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-1637011688"
}</msg>
<status status="PASS" starttime="20240915 16:42:52.473" endtime="20240915 16:42:53.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:53.015" endtime="20240915 16:42:53.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:53.016" endtime="20240915 16:42:53.016"/>
</kw>
<msg timestamp="20240915 16:42:53.016" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20240915 16:42:52.472" endtime="20240915 16:42:53.016"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240915 16:42:53.016" endtime="20240915 16:42:53.017"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:42:43.665" endtime="20240915 16:42:53.017"/>
</test>
<test id="s1-s6-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:53.021" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240915 16:42:53.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:53.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:53.018" endtime="20240915 16:42:53.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:53.023" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:53.023" endtime="20240915 16:42:53.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:53.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:53.024" endtime="20240915 16:42:53.024"/>
</kw>
<status status="PASS" starttime="20240915 16:42:53.018" endtime="20240915 16:42:53.024"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:53.027" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:53.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:53.776" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240915 16:42:53.025" endtime="20240915 16:42:53.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:53.777" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240915 16:42:53.777" endtime="20240915 16:42:53.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:53.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:53.778" endtime="20240915 16:42:53.778"/>
</kw>
<msg timestamp="20240915 16:42:53.778" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240915 16:42:53.025" endtime="20240915 16:42:53.778"/>
</kw>
<msg timestamp="20240915 16:42:53.778" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240915 16:42:53.024" endtime="20240915 16:42:53.778"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:53.779" endtime="20240915 16:42:53.779"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:53.782" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:53.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:53.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:53.779" endtime="20240915 16:42:53.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:53.786" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:53.786" endtime="20240915 16:42:53.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:53.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:53.786" endtime="20240915 16:42:53.787"/>
</kw>
<status status="PASS" starttime="20240915 16:42:53.779" endtime="20240915 16:42:53.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:42:53.017" endtime="20240915 16:42:53.787"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20240915 16:42:34.520" endtime="20240915 16:42:53.788"/>
</suite>
<suite id="s1-s7" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-new1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:42:54.582" endtime="20240915 16:42:54.582"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:54.586" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:54.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:54.590" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:42:54.583" endtime="20240915 16:42:54.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:54.591" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:42:54.590" endtime="20240915 16:42:54.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:54.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:54.591" endtime="20240915 16:42:54.591"/>
</kw>
<status status="PASS" starttime="20240915 16:42:54.583" endtime="20240915 16:42:54.591"/>
</kw>
<msg timestamp="20240915 16:42:54.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:54.583" endtime="20240915 16:42:54.591"/>
</kw>
<msg timestamp="20240915 16:42:54.592" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:42:54.583" endtime="20240915 16:42:54.592"/>
</kw>
<msg timestamp="20240915 16:42:54.592" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:54.582" endtime="20240915 16:42:54.592"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:42:54.592" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:42:54.592" endtime="20240915 16:42:54.592"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:54.596" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:54.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:54.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:54.594" endtime="20240915 16:42:54.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:54.619" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:54.619" endtime="20240915 16:42:54.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:54.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:54.620" endtime="20240915 16:42:54.620"/>
</kw>
<status status="PASS" starttime="20240915 16:42:54.593" endtime="20240915 16:42:54.620"/>
</kw>
<msg timestamp="20240915 16:42:54.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:54.593" endtime="20240915 16:42:54.620"/>
</kw>
<status status="PASS" starttime="20240915 16:42:54.593" endtime="20240915 16:42:54.620"/>
</kw>
<status status="PASS" starttime="20240915 16:42:54.592" endtime="20240915 16:42:54.620"/>
</kw>
<status status="PASS" starttime="20240915 16:42:54.582" endtime="20240915 16:42:54.620"/>
</kw>
<status status="PASS" starttime="20240915 16:42:54.581" endtime="20240915 16:42:54.621"/>
</kw>
<test id="s1-s7-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:54.625" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:42:57.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:42:57.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:54.623" endtime="20240915 16:42:57.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:42:57.512" level="INFO"/>
<status status="PASS" starttime="20240915 16:42:57.511" endtime="20240915 16:42:57.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:42:57.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:42:57.512" endtime="20240915 16:42:57.512"/>
</kw>
<status status="PASS" starttime="20240915 16:42:54.622" endtime="20240915 16:42:57.513"/>
</kw>
<msg timestamp="20240915 16:42:57.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:54.622" endtime="20240915 16:42:57.513"/>
</kw>
<msg timestamp="20240915 16:42:57.513" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:54.621" endtime="20240915 16:42:57.513"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:42:57.513" endtime="20240915 16:42:57.513"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:42:57.517" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:00.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:00.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:57.515" endtime="20240915 16:43:00.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:00.298" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:00.297" endtime="20240915 16:43:00.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:00.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:00.298" endtime="20240915 16:43:00.298"/>
</kw>
<status status="PASS" starttime="20240915 16:42:57.514" endtime="20240915 16:43:00.298"/>
</kw>
<msg timestamp="20240915 16:43:00.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:42:57.514" endtime="20240915 16:43:00.299"/>
</kw>
<msg timestamp="20240915 16:43:00.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:42:57.514" endtime="20240915 16:43:00.299"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:00.299" endtime="20240915 16:43:00.299"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:42:54.621" endtime="20240915 16:43:00.299"/>
</test>
<test id="s1-s7-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:00.303" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240915 16:43:00.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:00.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:00.301" endtime="20240915 16:43:00.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:00.306" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:00.305" endtime="20240915 16:43:00.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:00.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:00.306" endtime="20240915 16:43:00.307"/>
</kw>
<status status="PASS" starttime="20240915 16:43:00.300" endtime="20240915 16:43:00.307"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:00.310" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:05.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:05.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:00.308" endtime="20240915 16:43:05.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:05.162" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:05.161" endtime="20240915 16:43:05.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:05.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:05.162" endtime="20240915 16:43:05.163"/>
</kw>
<status status="PASS" starttime="20240915 16:43:00.308" endtime="20240915 16:43:05.163"/>
</kw>
<msg timestamp="20240915 16:43:05.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:00.307" endtime="20240915 16:43:05.163"/>
</kw>
<msg timestamp="20240915 16:43:05.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:00.307" endtime="20240915 16:43:05.163"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:05.163" endtime="20240915 16:43:05.164"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:05.166" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:05.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:05.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:05.164" endtime="20240915 16:43:05.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:05.171" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:05.170" endtime="20240915 16:43:05.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:05.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:05.171" endtime="20240915 16:43:05.171"/>
</kw>
<status status="PASS" starttime="20240915 16:43:05.164" endtime="20240915 16:43:05.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:43:00.300" endtime="20240915 16:43:05.172"/>
</test>
<test id="s1-s7-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:05.176" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:08.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:08.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:05.174" endtime="20240915 16:43:08.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:08.152" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:08.151" endtime="20240915 16:43:08.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:08.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:08.152" endtime="20240915 16:43:08.152"/>
</kw>
<status status="PASS" starttime="20240915 16:43:05.174" endtime="20240915 16:43:08.152"/>
</kw>
<msg timestamp="20240915 16:43:08.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:05.174" endtime="20240915 16:43:08.153"/>
</kw>
<msg timestamp="20240915 16:43:08.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:05.173" endtime="20240915 16:43:08.153"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:08.153" endtime="20240915 16:43:08.153"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:43:05.172" endtime="20240915 16:43:08.153"/>
</test>
<test id="s1-s7-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:08.157" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240915 16:43:08.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:08.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:08.155" endtime="20240915 16:43:08.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:08.160" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:08.160" endtime="20240915 16:43:08.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:08.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:08.160" endtime="20240915 16:43:08.161"/>
</kw>
<status status="PASS" starttime="20240915 16:43:08.154" endtime="20240915 16:43:08.161"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:08.164" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:12.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:12.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:08.162" endtime="20240915 16:43:12.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:12.503" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:12.502" endtime="20240915 16:43:12.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:12.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:12.503" endtime="20240915 16:43:12.503"/>
</kw>
<status status="PASS" starttime="20240915 16:43:08.162" endtime="20240915 16:43:12.504"/>
</kw>
<msg timestamp="20240915 16:43:12.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:08.161" endtime="20240915 16:43:12.504"/>
</kw>
<msg timestamp="20240915 16:43:12.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:08.161" endtime="20240915 16:43:12.504"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:12.504" endtime="20240915 16:43:12.504"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:12.507" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:12.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:12.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:12.505" endtime="20240915 16:43:12.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:12.512" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:12.511" endtime="20240915 16:43:12.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:12.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:12.512" endtime="20240915 16:43:12.512"/>
</kw>
<status status="PASS" starttime="20240915 16:43:12.504" endtime="20240915 16:43:12.513"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:43:08.154" endtime="20240915 16:43:12.513"/>
</test>
<test id="s1-s7-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:43:12.515" endtime="20240915 16:43:12.515"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:12.519" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:12.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:12.522" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:43:12.517" endtime="20240915 16:43:12.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:12.523" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:43:12.523" endtime="20240915 16:43:12.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:12.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:12.523" endtime="20240915 16:43:12.524"/>
</kw>
<status status="PASS" starttime="20240915 16:43:12.516" endtime="20240915 16:43:12.524"/>
</kw>
<msg timestamp="20240915 16:43:12.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:12.516" endtime="20240915 16:43:12.524"/>
</kw>
<msg timestamp="20240915 16:43:12.524" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:43:12.516" endtime="20240915 16:43:12.524"/>
</kw>
<msg timestamp="20240915 16:43:12.524" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:12.515" endtime="20240915 16:43:12.524"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:43:12.525" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:12.525" endtime="20240915 16:43:12.525"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:12.528" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:12.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:12.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:12.526" endtime="20240915 16:43:12.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:12.557" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:12.556" endtime="20240915 16:43:12.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:12.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:12.557" endtime="20240915 16:43:12.558"/>
</kw>
<status status="PASS" starttime="20240915 16:43:12.526" endtime="20240915 16:43:12.558"/>
</kw>
<msg timestamp="20240915 16:43:12.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:12.526" endtime="20240915 16:43:12.558"/>
</kw>
<status status="PASS" starttime="20240915 16:43:12.525" endtime="20240915 16:43:12.558"/>
</kw>
<status status="PASS" starttime="20240915 16:43:12.525" endtime="20240915 16:43:12.558"/>
</kw>
<status status="PASS" starttime="20240915 16:43:12.515" endtime="20240915 16:43:12.558"/>
</kw>
<status status="PASS" starttime="20240915 16:43:12.514" endtime="20240915 16:43:12.558"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:12.561" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:14.671" level="INFO">${rc} = 255</msg>
<msg timestamp="20240915 16:43:14.671" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:43:12.559" endtime="20240915 16:43:14.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:14.672" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:43:14.672" endtime="20240915 16:43:14.672"/>
</kw>
<msg timestamp="20240915 16:43:14.672" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:43:12.559" endtime="20240915 16:43:14.673"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:14.673" endtime="20240915 16:43:14.673"/>
</kw>
<msg timestamp="20240915 16:43:14.673" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240915 16:43:14.673" endtime="20240915 16:43:14.673"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:14.677" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:17.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:17.029" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:43:14.675" endtime="20240915 16:43:17.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:17.031" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:43:17.030" endtime="20240915 16:43:17.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:17.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:17.031" endtime="20240915 16:43:17.032"/>
</kw>
<status status="PASS" starttime="20240915 16:43:14.674" endtime="20240915 16:43:17.032"/>
</kw>
<msg timestamp="20240915 16:43:17.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:14.674" endtime="20240915 16:43:17.032"/>
</kw>
<status status="PASS" starttime="20240915 16:43:14.674" endtime="20240915 16:43:17.032"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:17.037" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:19.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:19.291" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=887de6a0460091ae44c34a5f4bb2048fc87a7b43253fc4fd23e0dadf7896e547</msg>
<status status="PASS" starttime="20240915 16:43:17.034" endtime="20240915 16:43:19.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:19.292" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=887de6a0460091ae44c34a5f4bb2048fc87a7b43253fc4fd23e0dadf7896e547</msg>
<status status="PASS" starttime="20240915 16:43:19.292" endtime="20240915 16:43:19.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:19.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:19.292" endtime="20240915 16:43:19.293"/>
</kw>
<status status="PASS" starttime="20240915 16:43:17.033" endtime="20240915 16:43:19.293"/>
</kw>
<msg timestamp="20240915 16:43:19.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:17.033" endtime="20240915 16:43:19.293"/>
</kw>
<msg timestamp="20240915 16:43:19.293" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=887de6a0460091ae44c34a5f4bb2048fc87a7b43253fc4fd23e0dadf7896e547</msg>
<status status="PASS" starttime="20240915 16:43:17.032" endtime="20240915 16:43:19.293"/>
</kw>
<status status="PASS" starttime="20240915 16:43:14.674" endtime="20240915 16:43:19.293"/>
</branch>
<status status="PASS" starttime="20240915 16:43:14.674" endtime="20240915 16:43:19.293"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:43:19.294" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:43:19.294" endtime="20240915 16:43:19.294"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240915 16:43:19.295" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:43:19.294" endtime="20240915 16:43:19.295"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:43:19.295" level="INFO">${secret} = ['887de6a0460091ae44c34a5f4bb2048fc87a7b43253fc4fd23e0dadf7896e547']</msg>
<status status="PASS" starttime="20240915 16:43:19.295" endtime="20240915 16:43:19.295"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:43:19.296" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:19.295" endtime="20240915 16:43:19.296"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:43:19.297" level="INFO">${secret} = 887de6a0460091ae44c34a5f4bb2048fc87a7b43253fc4fd23e0dadf7896e547</msg>
<status status="PASS" starttime="20240915 16:43:19.296" endtime="20240915 16:43:19.297"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:19.300" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:19.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:19.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:19.298" endtime="20240915 16:43:19.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:19.689" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:19.688" endtime="20240915 16:43:19.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:19.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:19.689" endtime="20240915 16:43:19.690"/>
</kw>
<status status="PASS" starttime="20240915 16:43:19.298" endtime="20240915 16:43:19.690"/>
</kw>
<msg timestamp="20240915 16:43:19.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:19.298" endtime="20240915 16:43:19.690"/>
</kw>
<status status="PASS" starttime="20240915 16:43:19.297" endtime="20240915 16:43:19.690"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:19.694" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:20.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:20.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:19.691" endtime="20240915 16:43:20.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:20.087" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:20.086" endtime="20240915 16:43:20.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:20.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:20.087" endtime="20240915 16:43:20.088"/>
</kw>
<status status="PASS" starttime="20240915 16:43:19.691" endtime="20240915 16:43:20.088"/>
</kw>
<msg timestamp="20240915 16:43:20.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:19.691" endtime="20240915 16:43:20.088"/>
</kw>
<status status="PASS" starttime="20240915 16:43:19.690" endtime="20240915 16:43:20.088"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:20.092" level="INFO">Running command 'aws configure set aws_secret_access_key 887de6a0460091ae44c34a5f4bb2048fc87a7b43253fc4fd23e0dadf7896e547 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:20.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:20.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:20.089" endtime="20240915 16:43:20.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:20.479" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:20.479" endtime="20240915 16:43:20.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:20.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:20.480" endtime="20240915 16:43:20.480"/>
</kw>
<status status="PASS" starttime="20240915 16:43:20.089" endtime="20240915 16:43:20.480"/>
</kw>
<msg timestamp="20240915 16:43:20.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:20.089" endtime="20240915 16:43:20.480"/>
</kw>
<status status="PASS" starttime="20240915 16:43:20.088" endtime="20240915 16:43:20.481"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:20.484" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:20.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:20.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:20.482" endtime="20240915 16:43:20.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:20.879" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:20.878" endtime="20240915 16:43:20.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:20.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:20.879" endtime="20240915 16:43:20.880"/>
</kw>
<status status="PASS" starttime="20240915 16:43:20.481" endtime="20240915 16:43:20.880"/>
</kw>
<msg timestamp="20240915 16:43:20.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:20.481" endtime="20240915 16:43:20.880"/>
</kw>
<status status="PASS" starttime="20240915 16:43:20.481" endtime="20240915 16:43:20.880"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:20.884" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:21.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:21.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:20.881" endtime="20240915 16:43:21.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:21.275" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:21.275" endtime="20240915 16:43:21.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:21.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:21.275" endtime="20240915 16:43:21.276"/>
</kw>
<status status="PASS" starttime="20240915 16:43:20.881" endtime="20240915 16:43:21.276"/>
</kw>
<msg timestamp="20240915 16:43:21.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:20.881" endtime="20240915 16:43:21.276"/>
</kw>
<status status="PASS" starttime="20240915 16:43:20.880" endtime="20240915 16:43:21.276"/>
</kw>
<status status="PASS" starttime="20240915 16:43:12.559" endtime="20240915 16:43:21.276"/>
</kw>
<status status="PASS" starttime="20240915 16:43:12.558" endtime="20240915 16:43:21.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240915 16:43:21.277" endtime="20240915 16:43:21.277"/>
</kw>
<status status="PASS" starttime="20240915 16:43:12.514" endtime="20240915 16:43:21.277"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240915 16:43:21.278" level="INFO">${randStr} = 6757066115</msg>
<status status="PASS" starttime="20240915 16:43:21.278" endtime="20240915 16:43:21.278"/>
</kw>
<msg timestamp="20240915 16:43:21.278" level="INFO">${random} = ozone-test-6757066115</msg>
<status status="PASS" starttime="20240915 16:43:21.277" endtime="20240915 16:43:21.278"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:21.282" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket-ozone-test-6757066115 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:21.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:21.872" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-6757066115"
}</msg>
<status status="PASS" starttime="20240915 16:43:21.280" endtime="20240915 16:43:21.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:21.873" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket-ozone-test-6757066115"
}</msg>
<status status="PASS" starttime="20240915 16:43:21.872" endtime="20240915 16:43:21.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:21.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:21.873" endtime="20240915 16:43:21.874"/>
</kw>
<status status="PASS" starttime="20240915 16:43:21.280" endtime="20240915 16:43:21.874"/>
</kw>
<msg timestamp="20240915 16:43:21.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:21.279" endtime="20240915 16:43:21.874"/>
</kw>
<msg timestamp="20240915 16:43:21.875" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-6757066115"
}</msg>
<status status="PASS" starttime="20240915 16:43:21.279" endtime="20240915 16:43:21.875"/>
</kw>
<msg timestamp="20240915 16:43:21.875" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-6757066115"
}</msg>
<status status="PASS" starttime="20240915 16:43:21.279" endtime="20240915 16:43:21.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:21.875" endtime="20240915 16:43:21.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:21.875" endtime="20240915 16:43:21.876"/>
</kw>
<msg timestamp="20240915 16:43:21.876" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20240915 16:43:21.278" endtime="20240915 16:43:21.876"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240915 16:43:21.876" endtime="20240915 16:43:21.877"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:43:12.513" endtime="20240915 16:43:21.877"/>
</test>
<test id="s1-s7-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:21.882" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240915 16:43:21.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:21.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:21.879" endtime="20240915 16:43:21.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:21.886" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:21.886" endtime="20240915 16:43:21.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:21.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:21.886" endtime="20240915 16:43:21.887"/>
</kw>
<status status="PASS" starttime="20240915 16:43:21.879" endtime="20240915 16:43:21.887"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:21.891" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:22.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:22.490" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20240915 16:43:21.888" endtime="20240915 16:43:22.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:22.492" level="INFO">{
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20240915 16:43:22.491" endtime="20240915 16:43:22.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:22.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:22.492" endtime="20240915 16:43:22.492"/>
</kw>
<msg timestamp="20240915 16:43:22.492" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20240915 16:43:21.888" endtime="20240915 16:43:22.492"/>
</kw>
<msg timestamp="20240915 16:43:22.493" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20240915 16:43:21.887" endtime="20240915 16:43:22.493"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:22.493" endtime="20240915 16:43:22.493"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:22.496" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:22.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:22.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:22.494" endtime="20240915 16:43:22.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:22.501" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:22.500" endtime="20240915 16:43:22.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:22.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:22.501" endtime="20240915 16:43:22.501"/>
</kw>
<status status="PASS" starttime="20240915 16:43:22.493" endtime="20240915 16:43:22.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:43:21.878" endtime="20240915 16:43:22.502"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20240915 16:42:54.514" endtime="20240915 16:43:22.503"/>
</suite>
<suite id="s1-s8" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:43:23.232" endtime="20240915 16:43:23.232"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:23.236" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:23.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:23.240" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:43:23.233" endtime="20240915 16:43:23.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:23.240" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:43:23.240" endtime="20240915 16:43:23.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:23.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:23.240" endtime="20240915 16:43:23.241"/>
</kw>
<status status="PASS" starttime="20240915 16:43:23.233" endtime="20240915 16:43:23.241"/>
</kw>
<msg timestamp="20240915 16:43:23.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:23.233" endtime="20240915 16:43:23.241"/>
</kw>
<msg timestamp="20240915 16:43:23.241" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:43:23.232" endtime="20240915 16:43:23.241"/>
</kw>
<msg timestamp="20240915 16:43:23.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:23.232" endtime="20240915 16:43:23.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:43:23.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:23.242" endtime="20240915 16:43:23.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:23.246" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:23.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:23.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:23.244" endtime="20240915 16:43:23.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:23.276" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:23.275" endtime="20240915 16:43:23.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:23.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:23.276" endtime="20240915 16:43:23.276"/>
</kw>
<status status="PASS" starttime="20240915 16:43:23.243" endtime="20240915 16:43:23.276"/>
</kw>
<msg timestamp="20240915 16:43:23.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:23.243" endtime="20240915 16:43:23.277"/>
</kw>
<status status="PASS" starttime="20240915 16:43:23.243" endtime="20240915 16:43:23.277"/>
</kw>
<status status="PASS" starttime="20240915 16:43:23.242" endtime="20240915 16:43:23.277"/>
</kw>
<status status="PASS" starttime="20240915 16:43:23.231" endtime="20240915 16:43:23.277"/>
</kw>
<status status="PASS" starttime="20240915 16:43:23.231" endtime="20240915 16:43:23.277"/>
</kw>
<test id="s1-s8-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240915 16:43:23.278" level="INFO">${random} = 79271</msg>
<status status="PASS" starttime="20240915 16:43:23.278" endtime="20240915 16:43:23.278"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:23.282" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-79271 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:27.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:27.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:23.280" endtime="20240915 16:43:27.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:27.631" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:27.631" endtime="20240915 16:43:27.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:27.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:27.632" endtime="20240915 16:43:27.632"/>
</kw>
<status status="PASS" starttime="20240915 16:43:23.279" endtime="20240915 16:43:27.632"/>
</kw>
<msg timestamp="20240915 16:43:27.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:23.279" endtime="20240915 16:43:27.633"/>
</kw>
<msg timestamp="20240915 16:43:27.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:23.278" endtime="20240915 16:43:27.633"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:27.633" endtime="20240915 16:43:27.633"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:27.636" level="INFO">Running command 'cat /tmp/key-79271 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:27.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:27.640" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:43:27.634" endtime="20240915 16:43:27.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:27.641" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:43:27.640" endtime="20240915 16:43:27.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:27.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:27.641" endtime="20240915 16:43:27.642"/>
</kw>
<msg timestamp="20240915 16:43:27.642" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:43:27.633" endtime="20240915 16:43:27.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:27.642" endtime="20240915 16:43:27.642"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:27.645" level="INFO">Running command 'rm /tmp/key-79271 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:27.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:27.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:27.643" endtime="20240915 16:43:27.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:27.649" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:27.649" endtime="20240915 16:43:27.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:27.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:27.649" endtime="20240915 16:43:27.650"/>
</kw>
<status status="PASS" starttime="20240915 16:43:27.642" endtime="20240915 16:43:27.650"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:43:23.277" endtime="20240915 16:43:27.650"/>
</test>
<test id="s1-s8-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:43:27.652" endtime="20240915 16:43:27.652"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:27.656" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:27.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:27.660" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:43:27.654" endtime="20240915 16:43:27.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:27.660" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:43:27.660" endtime="20240915 16:43:27.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:27.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:27.661" endtime="20240915 16:43:27.661"/>
</kw>
<status status="PASS" starttime="20240915 16:43:27.653" endtime="20240915 16:43:27.661"/>
</kw>
<msg timestamp="20240915 16:43:27.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:27.653" endtime="20240915 16:43:27.661"/>
</kw>
<msg timestamp="20240915 16:43:27.661" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:43:27.653" endtime="20240915 16:43:27.661"/>
</kw>
<msg timestamp="20240915 16:43:27.662" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:27.653" endtime="20240915 16:43:27.662"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:43:27.662" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:27.662" endtime="20240915 16:43:27.662"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:27.666" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:27.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:27.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:27.664" endtime="20240915 16:43:27.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:27.696" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:27.695" endtime="20240915 16:43:27.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:27.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:27.696" endtime="20240915 16:43:27.697"/>
</kw>
<status status="PASS" starttime="20240915 16:43:27.663" endtime="20240915 16:43:27.697"/>
</kw>
<msg timestamp="20240915 16:43:27.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:27.663" endtime="20240915 16:43:27.697"/>
</kw>
<status status="PASS" starttime="20240915 16:43:27.663" endtime="20240915 16:43:27.697"/>
</kw>
<status status="PASS" starttime="20240915 16:43:27.662" endtime="20240915 16:43:27.697"/>
</kw>
<status status="PASS" starttime="20240915 16:43:27.652" endtime="20240915 16:43:27.697"/>
</kw>
<status status="PASS" starttime="20240915 16:43:27.651" endtime="20240915 16:43:27.697"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:27.701" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:29.801" level="INFO">${rc} = 255</msg>
<msg timestamp="20240915 16:43:29.801" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:43:27.699" endtime="20240915 16:43:29.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:29.802" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:43:29.801" endtime="20240915 16:43:29.802"/>
</kw>
<msg timestamp="20240915 16:43:29.802" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:43:27.698" endtime="20240915 16:43:29.802"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:29.802" endtime="20240915 16:43:29.803"/>
</kw>
<msg timestamp="20240915 16:43:29.803" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240915 16:43:29.802" endtime="20240915 16:43:29.803"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:29.806" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:32.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:32.338" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:43:29.804" endtime="20240915 16:43:32.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:32.339" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:43:32.339" endtime="20240915 16:43:32.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:32.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:32.339" endtime="20240915 16:43:32.340"/>
</kw>
<status status="PASS" starttime="20240915 16:43:29.804" endtime="20240915 16:43:32.340"/>
</kw>
<msg timestamp="20240915 16:43:32.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:29.804" endtime="20240915 16:43:32.340"/>
</kw>
<status status="PASS" starttime="20240915 16:43:29.803" endtime="20240915 16:43:32.340"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:32.344" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:34.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:34.365" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=af44466e6f42eb856d444ef66fa4734d968fd8bd3078c130e15befaba35b663c</msg>
<status status="PASS" starttime="20240915 16:43:32.342" endtime="20240915 16:43:34.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:34.366" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=af44466e6f42eb856d444ef66fa4734d968fd8bd3078c130e15befaba35b663c</msg>
<status status="PASS" starttime="20240915 16:43:34.366" endtime="20240915 16:43:34.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:34.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:34.366" endtime="20240915 16:43:34.367"/>
</kw>
<status status="PASS" starttime="20240915 16:43:32.341" endtime="20240915 16:43:34.367"/>
</kw>
<msg timestamp="20240915 16:43:34.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:32.341" endtime="20240915 16:43:34.367"/>
</kw>
<msg timestamp="20240915 16:43:34.367" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=af44466e6f42eb856d444ef66fa4734d968fd8bd3078c130e15befaba35b663c</msg>
<status status="PASS" starttime="20240915 16:43:32.340" endtime="20240915 16:43:34.367"/>
</kw>
<status status="PASS" starttime="20240915 16:43:29.803" endtime="20240915 16:43:34.367"/>
</branch>
<status status="PASS" starttime="20240915 16:43:29.803" endtime="20240915 16:43:34.368"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:43:34.368" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:43:34.368" endtime="20240915 16:43:34.368"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240915 16:43:34.369" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:43:34.368" endtime="20240915 16:43:34.369"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:43:34.369" level="INFO">${secret} = ['af44466e6f42eb856d444ef66fa4734d968fd8bd3078c130e15befaba35b663c']</msg>
<status status="PASS" starttime="20240915 16:43:34.369" endtime="20240915 16:43:34.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:43:34.370" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:34.370" endtime="20240915 16:43:34.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:43:34.371" level="INFO">${secret} = af44466e6f42eb856d444ef66fa4734d968fd8bd3078c130e15befaba35b663c</msg>
<status status="PASS" starttime="20240915 16:43:34.371" endtime="20240915 16:43:34.371"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:34.375" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:34.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:34.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:34.373" endtime="20240915 16:43:34.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:34.807" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:34.807" endtime="20240915 16:43:34.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:34.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:34.807" endtime="20240915 16:43:34.808"/>
</kw>
<status status="PASS" starttime="20240915 16:43:34.372" endtime="20240915 16:43:34.808"/>
</kw>
<msg timestamp="20240915 16:43:34.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:34.372" endtime="20240915 16:43:34.808"/>
</kw>
<status status="PASS" starttime="20240915 16:43:34.372" endtime="20240915 16:43:34.808"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:34.812" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:35.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:35.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:34.810" endtime="20240915 16:43:35.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:35.190" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:35.189" endtime="20240915 16:43:35.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:35.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:35.190" endtime="20240915 16:43:35.191"/>
</kw>
<status status="PASS" starttime="20240915 16:43:34.809" endtime="20240915 16:43:35.191"/>
</kw>
<msg timestamp="20240915 16:43:35.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:34.809" endtime="20240915 16:43:35.191"/>
</kw>
<status status="PASS" starttime="20240915 16:43:34.808" endtime="20240915 16:43:35.191"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:35.194" level="INFO">Running command 'aws configure set aws_secret_access_key af44466e6f42eb856d444ef66fa4734d968fd8bd3078c130e15befaba35b663c 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:35.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:35.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:35.192" endtime="20240915 16:43:35.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:35.588" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:35.587" endtime="20240915 16:43:35.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:35.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:35.588" endtime="20240915 16:43:35.588"/>
</kw>
<status status="PASS" starttime="20240915 16:43:35.192" endtime="20240915 16:43:35.589"/>
</kw>
<msg timestamp="20240915 16:43:35.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:35.192" endtime="20240915 16:43:35.589"/>
</kw>
<status status="PASS" starttime="20240915 16:43:35.191" endtime="20240915 16:43:35.589"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:35.592" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:35.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:35.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:35.590" endtime="20240915 16:43:35.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:35.989" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:35.988" endtime="20240915 16:43:35.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:35.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:35.989" endtime="20240915 16:43:35.989"/>
</kw>
<status status="PASS" starttime="20240915 16:43:35.590" endtime="20240915 16:43:35.990"/>
</kw>
<msg timestamp="20240915 16:43:35.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:35.590" endtime="20240915 16:43:35.990"/>
</kw>
<status status="PASS" starttime="20240915 16:43:35.589" endtime="20240915 16:43:35.990"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:35.993" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:36.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:36.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:35.991" endtime="20240915 16:43:36.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:36.384" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:36.384" endtime="20240915 16:43:36.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:36.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:36.384" endtime="20240915 16:43:36.385"/>
</kw>
<status status="PASS" starttime="20240915 16:43:35.991" endtime="20240915 16:43:36.385"/>
</kw>
<msg timestamp="20240915 16:43:36.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:35.991" endtime="20240915 16:43:36.386"/>
</kw>
<status status="PASS" starttime="20240915 16:43:35.990" endtime="20240915 16:43:36.386"/>
</kw>
<status status="PASS" starttime="20240915 16:43:27.698" endtime="20240915 16:43:36.386"/>
</kw>
<status status="PASS" starttime="20240915 16:43:27.697" endtime="20240915 16:43:36.386"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240915 16:43:36.386" endtime="20240915 16:43:36.386"/>
</kw>
<status status="PASS" starttime="20240915 16:43:27.651" endtime="20240915 16:43:36.386"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:36.390" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:36.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:36.928" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:43:12 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240915 16:43:36.387" endtime="20240915 16:43:36.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:36.929" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:43:12 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 15 Sep 2024 16:43:36 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240915 16:43:36.929" endtime="20240915 16:43:36.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:36.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:36.930" endtime="20240915 16:43:36.930"/>
</kw>
<msg timestamp="20240915 16:43:36.930" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:43:12 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240915 16:43:36.387" endtime="20240915 16:43:36.930"/>
</kw>
<msg timestamp="20240915 16:43:36.930" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:43:12 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240915 16:43:36.386" endtime="20240915 16:43:36.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:36.931" endtime="20240915 16:43:36.931"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:36.934" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:36.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:36.938" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:43:36.931" endtime="20240915 16:43:36.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:36.939" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:43:36.938" endtime="20240915 16:43:36.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:36.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:36.939" endtime="20240915 16:43:36.939"/>
</kw>
<msg timestamp="20240915 16:43:36.939" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240915 16:43:36.931" endtime="20240915 16:43:36.939"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:36.939" endtime="20240915 16:43:36.940"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:36.942" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:36.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:36.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:36.940" endtime="20240915 16:43:36.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:36.947" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:36.946" endtime="20240915 16:43:36.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:36.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:36.947" endtime="20240915 16:43:36.947"/>
</kw>
<status status="PASS" starttime="20240915 16:43:36.940" endtime="20240915 16:43:36.947"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:43:27.650" endtime="20240915 16:43:36.947"/>
</test>
<test id="s1-s8-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:43:36.950" endtime="20240915 16:43:36.951"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:36.954" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:36.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:36.958" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:43:36.952" endtime="20240915 16:43:36.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:36.959" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:43:36.958" endtime="20240915 16:43:36.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:36.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:36.959" endtime="20240915 16:43:36.960"/>
</kw>
<status status="PASS" starttime="20240915 16:43:36.952" endtime="20240915 16:43:36.960"/>
</kw>
<msg timestamp="20240915 16:43:36.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:36.951" endtime="20240915 16:43:36.960"/>
</kw>
<msg timestamp="20240915 16:43:36.960" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:43:36.951" endtime="20240915 16:43:36.960"/>
</kw>
<msg timestamp="20240915 16:43:36.961" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:36.951" endtime="20240915 16:43:36.961"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:43:36.961" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:36.961" endtime="20240915 16:43:36.961"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:36.965" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:36.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:36.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:36.963" endtime="20240915 16:43:36.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:36.991" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:36.990" endtime="20240915 16:43:36.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:36.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:36.991" endtime="20240915 16:43:36.992"/>
</kw>
<status status="PASS" starttime="20240915 16:43:36.962" endtime="20240915 16:43:36.992"/>
</kw>
<msg timestamp="20240915 16:43:36.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:36.962" endtime="20240915 16:43:36.992"/>
</kw>
<status status="PASS" starttime="20240915 16:43:36.962" endtime="20240915 16:43:36.992"/>
</kw>
<status status="PASS" starttime="20240915 16:43:36.961" endtime="20240915 16:43:36.992"/>
</kw>
<status status="PASS" starttime="20240915 16:43:36.950" endtime="20240915 16:43:36.992"/>
</kw>
<status status="PASS" starttime="20240915 16:43:36.950" endtime="20240915 16:43:36.992"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:36.996" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:39.120" level="INFO">${rc} = 255</msg>
<msg timestamp="20240915 16:43:39.120" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:43:36.993" endtime="20240915 16:43:39.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:39.121" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:43:39.120" endtime="20240915 16:43:39.121"/>
</kw>
<msg timestamp="20240915 16:43:39.121" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240915 16:43:36.993" endtime="20240915 16:43:39.121"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:39.122" endtime="20240915 16:43:39.122"/>
</kw>
<msg timestamp="20240915 16:43:39.122" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240915 16:43:39.122" endtime="20240915 16:43:39.122"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:39.126" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:41.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:41.270" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:43:39.124" endtime="20240915 16:43:41.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:41.271" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240915 16:43:41.271" endtime="20240915 16:43:41.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:41.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:41.272" endtime="20240915 16:43:41.272"/>
</kw>
<status status="PASS" starttime="20240915 16:43:39.123" endtime="20240915 16:43:41.272"/>
</kw>
<msg timestamp="20240915 16:43:41.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:39.123" endtime="20240915 16:43:41.272"/>
</kw>
<status status="PASS" starttime="20240915 16:43:39.123" endtime="20240915 16:43:41.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:41.277" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:43.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:43.436" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=070310740e1b4f9b2673886c95085233485ea127ac3c592be9df1d65079653f7</msg>
<status status="PASS" starttime="20240915 16:43:41.274" endtime="20240915 16:43:43.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:43.437" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=070310740e1b4f9b2673886c95085233485ea127ac3c592be9df1d65079653f7</msg>
<status status="PASS" starttime="20240915 16:43:43.436" endtime="20240915 16:43:43.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:43.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:43.437" endtime="20240915 16:43:43.438"/>
</kw>
<status status="PASS" starttime="20240915 16:43:41.273" endtime="20240915 16:43:43.438"/>
</kw>
<msg timestamp="20240915 16:43:43.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:41.273" endtime="20240915 16:43:43.438"/>
</kw>
<msg timestamp="20240915 16:43:43.438" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=070310740e1b4f9b2673886c95085233485ea127ac3c592be9df1d65079653f7</msg>
<status status="PASS" starttime="20240915 16:43:41.273" endtime="20240915 16:43:43.438"/>
</kw>
<status status="PASS" starttime="20240915 16:43:39.122" endtime="20240915 16:43:43.438"/>
</branch>
<status status="PASS" starttime="20240915 16:43:39.122" endtime="20240915 16:43:43.438"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:43:43.439" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:43:43.438" endtime="20240915 16:43:43.439"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240915 16:43:43.439" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240915 16:43:43.439" endtime="20240915 16:43:43.439"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240915 16:43:43.440" level="INFO">${secret} = ['070310740e1b4f9b2673886c95085233485ea127ac3c592be9df1d65079653f7']</msg>
<status status="PASS" starttime="20240915 16:43:43.439" endtime="20240915 16:43:43.440"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:43:43.441" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:43.440" endtime="20240915 16:43:43.441"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240915 16:43:43.442" level="INFO">${secret} = 070310740e1b4f9b2673886c95085233485ea127ac3c592be9df1d65079653f7</msg>
<status status="PASS" starttime="20240915 16:43:43.441" endtime="20240915 16:43:43.442"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:43.445" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:43.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:43.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:43.443" endtime="20240915 16:43:43.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:43.835" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:43.835" endtime="20240915 16:43:43.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:43.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:43.835" endtime="20240915 16:43:43.836"/>
</kw>
<status status="PASS" starttime="20240915 16:43:43.442" endtime="20240915 16:43:43.836"/>
</kw>
<msg timestamp="20240915 16:43:43.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:43.442" endtime="20240915 16:43:43.836"/>
</kw>
<status status="PASS" starttime="20240915 16:43:43.442" endtime="20240915 16:43:43.836"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:43.840" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:44.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:44.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:43.838" endtime="20240915 16:43:44.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:44.226" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:44.225" endtime="20240915 16:43:44.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:44.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:44.226" endtime="20240915 16:43:44.226"/>
</kw>
<status status="PASS" starttime="20240915 16:43:43.837" endtime="20240915 16:43:44.226"/>
</kw>
<msg timestamp="20240915 16:43:44.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:43.837" endtime="20240915 16:43:44.226"/>
</kw>
<status status="PASS" starttime="20240915 16:43:43.836" endtime="20240915 16:43:44.227"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:44.230" level="INFO">Running command 'aws configure set aws_secret_access_key 070310740e1b4f9b2673886c95085233485ea127ac3c592be9df1d65079653f7 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:44.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:44.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:44.228" endtime="20240915 16:43:44.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:44.624" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:44.623" endtime="20240915 16:43:44.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:44.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:44.624" endtime="20240915 16:43:44.624"/>
</kw>
<status status="PASS" starttime="20240915 16:43:44.227" endtime="20240915 16:43:44.625"/>
</kw>
<msg timestamp="20240915 16:43:44.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:44.227" endtime="20240915 16:43:44.625"/>
</kw>
<status status="PASS" starttime="20240915 16:43:44.227" endtime="20240915 16:43:44.625"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:44.629" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:45.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:45.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:44.626" endtime="20240915 16:43:45.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:45.017" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:45.016" endtime="20240915 16:43:45.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:45.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:45.017" endtime="20240915 16:43:45.017"/>
</kw>
<status status="PASS" starttime="20240915 16:43:44.626" endtime="20240915 16:43:45.017"/>
</kw>
<msg timestamp="20240915 16:43:45.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:44.626" endtime="20240915 16:43:45.018"/>
</kw>
<status status="PASS" starttime="20240915 16:43:44.625" endtime="20240915 16:43:45.018"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:45.021" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:45.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:45.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:45.019" endtime="20240915 16:43:45.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:45.409" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:45.408" endtime="20240915 16:43:45.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:45.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:45.409" endtime="20240915 16:43:45.410"/>
</kw>
<status status="PASS" starttime="20240915 16:43:45.018" endtime="20240915 16:43:45.410"/>
</kw>
<msg timestamp="20240915 16:43:45.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:45.018" endtime="20240915 16:43:45.410"/>
</kw>
<status status="PASS" starttime="20240915 16:43:45.018" endtime="20240915 16:43:45.410"/>
</kw>
<status status="PASS" starttime="20240915 16:43:36.993" endtime="20240915 16:43:45.410"/>
</kw>
<status status="PASS" starttime="20240915 16:43:36.992" endtime="20240915 16:43:45.410"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240915 16:43:45.410" endtime="20240915 16:43:45.411"/>
</kw>
<status status="PASS" starttime="20240915 16:43:36.949" endtime="20240915 16:43:45.411"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:45.414" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:45.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:45.923" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:43:22 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240915 16:43:45.412" endtime="20240915 16:43:45.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:45.924" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:43:22 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 15 Sep 2024 16:43:45 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240915 16:43:45.923" endtime="20240915 16:43:45.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:45.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:45.924" endtime="20240915 16:43:45.924"/>
</kw>
<msg timestamp="20240915 16:43:45.924" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:43:22 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240915 16:43:45.412" endtime="20240915 16:43:45.924"/>
</kw>
<msg timestamp="20240915 16:43:45.925" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 15 Sep 2024 16:43:22 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240915 16:43:45.411" endtime="20240915 16:43:45.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:45.925" endtime="20240915 16:43:45.925"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:45.928" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:45.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:45.931" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20240915 16:43:45.926" endtime="20240915 16:43:45.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:45.932" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20240915 16:43:45.932" endtime="20240915 16:43:45.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:45.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:45.932" endtime="20240915 16:43:45.933"/>
</kw>
<msg timestamp="20240915 16:43:45.933" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20240915 16:43:45.925" endtime="20240915 16:43:45.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240915 16:43:45.933" endtime="20240915 16:43:45.933"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:45.936" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:45.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:45.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:45.934" endtime="20240915 16:43:45.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:45.940" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:45.940" endtime="20240915 16:43:45.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:45.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:45.940" endtime="20240915 16:43:45.941"/>
</kw>
<status status="PASS" starttime="20240915 16:43:45.934" endtime="20240915 16:43:45.941"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240915 16:43:36.948" endtime="20240915 16:43:45.941"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20240915 16:43:23.166" endtime="20240915 16:43:45.942"/>
</suite>
<suite id="s1-s9" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s9-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:43:46.693" endtime="20240915 16:43:46.693"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:46.697" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:46.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:46.701" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240915 16:43:46.695" endtime="20240915 16:43:46.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:46.702" level="INFO">scm</msg>
<status status="PASS" starttime="20240915 16:43:46.701" endtime="20240915 16:43:46.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:46.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:46.702" endtime="20240915 16:43:46.702"/>
</kw>
<status status="PASS" starttime="20240915 16:43:46.694" endtime="20240915 16:43:46.703"/>
</kw>
<msg timestamp="20240915 16:43:46.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:46.694" endtime="20240915 16:43:46.703"/>
</kw>
<msg timestamp="20240915 16:43:46.703" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240915 16:43:46.694" endtime="20240915 16:43:46.703"/>
</kw>
<msg timestamp="20240915 16:43:46.703" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:46.693" endtime="20240915 16:43:46.703"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240915 16:43:46.704" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240915 16:43:46.703" endtime="20240915 16:43:46.704"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:46.707" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:43:46.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20240915 16:43:46.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240915 16:43:46.705" endtime="20240915 16:43:46.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240915 16:43:46.729" level="INFO"/>
<status status="PASS" starttime="20240915 16:43:46.729" endtime="20240915 16:43:46.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240915 16:43:46.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240915 16:43:46.730" endtime="20240915 16:43:46.730"/>
</kw>
<status status="PASS" starttime="20240915 16:43:46.705" endtime="20240915 16:43:46.730"/>
</kw>
<msg timestamp="20240915 16:43:46.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240915 16:43:46.705" endtime="20240915 16:43:46.730"/>
</kw>
<status status="PASS" starttime="20240915 16:43:46.704" endtime="20240915 16:43:46.730"/>
</kw>
<status status="PASS" starttime="20240915 16:43:46.704" endtime="20240915 16:43:46.731"/>
</kw>
<status status="PASS" starttime="20240915 16:43:46.693" endtime="20240915 16:43:46.731"/>
</kw>
<status status="PASS" starttime="20240915 16:43:46.692" endtime="20240915 16:43:46.731"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240915 16:43:46.731" endtime="20240915 16:43:46.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240915 16:43:46.734" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240915 16:48:46.692" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20240915 16:43:46.732" endtime="20240915 16:48:46.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20240915 16:48:46.693" endtime="20240915 16:48:46.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20240915 16:48:46.693" endtime="20240915 16:48:46.693"/>
</kw>
<status status="FAIL" starttime="20240915 16:43:46.732" endtime="20240915 16:48:46.693"/>
</kw>
<msg timestamp="20240915 16:48:46.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20240915 16:43:46.732" endtime="20240915 16:48:46.693"/>
</kw>
<status status="FAIL" starttime="20240915 16:43:46.731" endtime="20240915 16:48:46.693"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240915 16:48:46.694" endtime="20240915 16:48:46.694"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20240915 16:43:46.692" endtime="20240915 16:48:46.694">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20240915 16:43:46.647" endtime="20240915 16:48:46.695"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="473702"/>
</suite>
<statistics>
<total>
<stat pass="28" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="28" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.4.0-1.5.0-SNAPSHOT-1-original-check-finalization">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.4.0-1.5.0-SNAPSHOT-1-original-generate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.4.0-1.5.0-SNAPSHOT-1-original-validate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-validate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="1.4.0-1.5.0-SNAPSHOT-1-original-prepare">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-old1</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-old1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s7" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-new1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-new1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-new1</stat>
<stat pass="0" fail="1" skip="0" id="s1-s9" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-prepare">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
