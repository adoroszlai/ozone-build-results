<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.6.8 on linux)" generated="20240913 07:28:33.513" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="1.4.0-1.5.0-SNAPSHOT-1-original-check-finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:22:01.882" endtime="20240913 07:22:01.883"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:01.886" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:01.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:01.890" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:22:01.884" endtime="20240913 07:22:01.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:01.890" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:22:01.890" endtime="20240913 07:22:01.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:01.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:01.891" endtime="20240913 07:22:01.891"/>
</kw>
<status status="PASS" starttime="20240913 07:22:01.884" endtime="20240913 07:22:01.891"/>
</kw>
<msg timestamp="20240913 07:22:01.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:01.883" endtime="20240913 07:22:01.892"/>
</kw>
<msg timestamp="20240913 07:22:01.892" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:22:01.883" endtime="20240913 07:22:01.892"/>
</kw>
<msg timestamp="20240913 07:22:01.892" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:01.883" endtime="20240913 07:22:01.892"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:22:01.893" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:01.892" endtime="20240913 07:22:01.893"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:01.897" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:01.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:01.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:01.894" endtime="20240913 07:22:01.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:01.945" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:01.944" endtime="20240913 07:22:01.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:01.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:01.945" endtime="20240913 07:22:01.946"/>
</kw>
<status status="PASS" starttime="20240913 07:22:01.894" endtime="20240913 07:22:01.946"/>
</kw>
<msg timestamp="20240913 07:22:01.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:01.894" endtime="20240913 07:22:01.946"/>
</kw>
<status status="PASS" starttime="20240913 07:22:01.893" endtime="20240913 07:22:01.946"/>
</kw>
<status status="PASS" starttime="20240913 07:22:01.893" endtime="20240913 07:22:01.946"/>
</kw>
<status status="PASS" starttime="20240913 07:22:01.882" endtime="20240913 07:22:01.946"/>
</kw>
<status status="PASS" starttime="20240913 07:22:01.881" endtime="20240913 07:22:01.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:01.950" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:01.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:01.953" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE...</msg>
<status status="PASS" starttime="20240913 07:22:01.948" endtime="20240913 07:22:01.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:01.953" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm2.org
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OM_SERVICE_ID=omservice
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
JAVA_HOME=/usr/lib/jvm/jre/
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.4.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
WAITFOR=scm1.org:9894
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE_UPGRADE_TO=1.5.0-SNAPSHOT
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20240913 07:22:01.953" endtime="20240913 07:22:01.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:01.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:01.954" endtime="20240913 07:22:01.954"/>
</kw>
<status status="PASS" starttime="20240913 07:22:01.947" endtime="20240913 07:22:01.954"/>
</kw>
<msg timestamp="20240913 07:22:01.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:01.947" endtime="20240913 07:22:01.955"/>
</kw>
<msg timestamp="20240913 07:22:01.955" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE...</msg>
<status status="PASS" starttime="20240913 07:22:01.947" endtime="20240913 07:22:01.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:01.955" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
CORE-SITE.XML_hadoop.security.authentication=kerberos
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
OZONE-SITE.XML_ozone.s3g.kerberos.principal=s3g/s3g@EXAMPLE.COM
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.users=*
HOSTNAME=scm2.org
OZONE-SITE.XML_hdds.grpc.tls.enabled=true
HADOOP-POLICY.XML_hdds.security.client.scm.certificate.protocol.acl=*
OZONE-SITE.XML_ozone.s3.administrators=testuser,s3g
OZONE-SITE.XML_ozone.administrators=testuser,recon,om
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.principal=HTTP/scm@EXAMPLE.COM
OZONE-SITE.XML_ozone.recon.kerberos.principal=recon/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.kerberos.keytab.file=/etc/security/keytabs/scm.keytab
HTTPFS-SITE.XML_httpfs.hadoop.authentication.type=kerberos
OZONE-SITE.XML_ozone.http.filter.initializers=org.apache.hadoop.security.AuthenticationFilterInitializer
OZONE-SITE.XML_ozone.httpfs.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
CORE-SITE.XML_dfs.data.transfer.protection=authentication
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
HADOOP-POLICY.XML_hdds.security.client.scm.container.protocol.acl=*
OZONE-SITE.XML_ozone.acl.authorizer.class=org.apache.hadoop.ozone.security.acl.OzoneNativeAuthorizer
HDFS-SITE.XML_dfs.web.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_hdds.scm.kerberos.principal=scm/scm@EXAMPLE.COM
OZONE-SITE.XML_hdds.secret.key.expiry.duration=1h
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/httpfs@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.http.auth.type=kerberos
HADOOP-POLICY.XML_ozone.om.security.client.protocol.acl=*
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OM_SERVICE_ID=omservice
CORE-SITE.XML_hadoop.http.authentication.simple.anonymous.allowed=false
HADOOP-POLICY.XML_hdds.security.client.scm.block.protocol.acl=*
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.principal=httpfs/httpfs@EXAMPLE.COM
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.principal=HTTP/db@EXAMPLE.COM
OZONE-SITE.XML_hdds.container.token.enabled=true
OZONE-SITE.XML_hdds.scm.http.auth.type=kerberos
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.groups=*
OZONE-SITE.XML_ozone.http.basedir=/tmp/ozone_http
CORE-SITE.XML_hadoop.security.auth_to_local=DEFAULT
OZONE-SITE.XML_ozone.security.enabled=true
OZONE-SITE.XML_ozone.httpfs.http.auth.type=kerberos
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
OZONE-SITE.XML_ozone.httpfs.http.auth.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.security.http.kerberos.enabled=true
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
OZONE-SITE.XML_ozone.httpfs.kerberos.keytab.file=/etc/security/keytabs/httpfs.keytab
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.om.kerberos.principal=om/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.scm.container.size=1GB
OZONE-SITE.XML_ozone.acl.enabled=true
HDFS-SITE.XML_dfs.datanode.kerberos.principal=dn/dn@EXAMPLE.COM
JAVA_HOME=/usr/lib/jvm/jre/
CORE-SITE.XML_hadoop.proxyuser.httpfs.groups=*
OZONE-SITE.XML_hdds.scm.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
ENSURE_SCM_BOOTSTRAPPED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
HDFS-SITE.XML_dfs.datanode.kerberos.keytab.file=/etc/security/keytabs/dn.keytab
OZONE-SITE.XML_hdds.datanode.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.om.kerberos.keytab.file=/etc/security/keytabs/om.keytab
OZONE-SITE.XML_ozone.s3g.kerberos.keytab.file=/etc/security/keytabs/s3g.keytab
OZONE-SITE.XML_hdds.secret.key.rotate.check.duration=1m
CORE-SITE.XML_hadoop.http.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.http.auth.kerberos.principal=HTTP/om@EXAMPLE.COM
OZONE-SITE.XML_ozone.s3g.secret.http.auth.type=kerberos
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.recon.http.auth.type=kerberos
HTTPFS-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE_DATANODE_SECURE_USER=root
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.4.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
CORE-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.principal=HTTP/recon@EXAMPLE.COM
OZONE-SITE.XML_hdds.secret.key.rotate.duration=5m
WAITFOR=scm1.org:9894
OZONE-SITE.XML_ozone.om.http.auth.type=kerberos
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
KMS-SITE.XML_hadoop.kms.proxyuser.s3g.hosts=*
OZONE-SITE.XML_ozone.fs.hsync.enabled=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_ozone.recon.http.auth.kerberos.keytab=/etc/security/keytabs/recon.keytab
HDFS-SITE.XML_dfs.web.authentication.kerberos.principal=HTTP/ozone@EXAMPLE.COM
HTTPFS-SITE.XML_httpfs.hadoop.authentication.kerberos.keytab=/etc/security/keytabs/httpfs.keytab
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.s3g.secret.http.enabled=true
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.om.http.auth.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
CORE-SITE.XML_hadoop.http.authentication.kerberos.keytab=/etc/security/keytabs/HTTP.keytab
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE-SITE.XML_ozone.s3g.http.auth.kerberos.principal=HTTP/s3g@EXAMPLE.COM
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
CORE-SITE.XML_hadoop.http.authentication.signature.secret.file=/etc/security/http_secret
OZONE_UPGRADE_TO=1.5.0-SNAPSHOT
HTTPFS-SITE.XML_hadoop.http.authentication.type=kerberos
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1.org
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2.org
OZONE-SITE.XML_ozone.recon.kerberos.keytab.file=/etc/security/keytabs/recon.keytab
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
CORE-SITE.XML_hadoop.proxyuser.httpfs.hosts=*
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3.org
OZONE-SITE.XML_hdds.block.token.enabled=true
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_hdds.datanode.http.auth.type=kerberos
HADOOP-POLICY.XML_hdds.security.client.datanode.container.protocol.acl=*
CORE-SITE.XML_hadoop.security.key.provider.path=kms://http@kms:9600/kms
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
CORE-SITE.XML_hadoop.security.authorization=true
_=/usr/bin/env</msg>
<status status="PASS" starttime="20240913 07:22:01.955" endtime="20240913 07:22:01.956"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:22:01.956" endtime="20240913 07:22:01.956"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:01.959" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:04.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:04.875" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240913 07:22:01.957" endtime="20240913 07:22:04.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:04.876" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240913 07:22:04.876" endtime="20240913 07:22:04.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:04.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:04.876" endtime="20240913 07:22:04.877"/>
</kw>
<status status="PASS" starttime="20240913 07:22:01.957" endtime="20240913 07:22:04.877"/>
</kw>
<msg timestamp="20240913 07:22:04.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:01.957" endtime="20240913 07:22:04.877"/>
</kw>
<msg timestamp="20240913 07:22:04.877" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240913 07:22:01.956" endtime="20240913 07:22:04.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:04.878" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20240913 07:22:04.877" endtime="20240913 07:22:04.878"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20240913 07:22:04.878" endtime="20240913 07:22:04.878"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240913 07:22:01.881" endtime="20240913 07:22:04.878"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:22:04.880" endtime="20240913 07:22:04.881"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:04.884" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:04.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:04.888" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:22:04.882" endtime="20240913 07:22:04.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:04.889" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:22:04.888" endtime="20240913 07:22:04.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:04.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:04.889" endtime="20240913 07:22:04.889"/>
</kw>
<status status="PASS" starttime="20240913 07:22:04.882" endtime="20240913 07:22:04.889"/>
</kw>
<msg timestamp="20240913 07:22:04.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:04.881" endtime="20240913 07:22:04.890"/>
</kw>
<msg timestamp="20240913 07:22:04.890" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:22:04.881" endtime="20240913 07:22:04.890"/>
</kw>
<msg timestamp="20240913 07:22:04.890" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:04.881" endtime="20240913 07:22:04.890"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:22:04.890" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:04.890" endtime="20240913 07:22:04.890"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:04.894" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:04.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:04.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:04.892" endtime="20240913 07:22:04.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:04.946" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:04.945" endtime="20240913 07:22:04.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:04.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:04.946" endtime="20240913 07:22:04.946"/>
</kw>
<status status="PASS" starttime="20240913 07:22:04.892" endtime="20240913 07:22:04.946"/>
</kw>
<msg timestamp="20240913 07:22:04.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:04.891" endtime="20240913 07:22:04.947"/>
</kw>
<status status="PASS" starttime="20240913 07:22:04.891" endtime="20240913 07:22:04.947"/>
</kw>
<status status="PASS" starttime="20240913 07:22:04.891" endtime="20240913 07:22:04.947"/>
</kw>
<status status="PASS" starttime="20240913 07:22:04.880" endtime="20240913 07:22:04.947"/>
</kw>
<status status="PASS" starttime="20240913 07:22:04.880" endtime="20240913 07:22:04.947"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:22:04.947" endtime="20240913 07:22:04.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:04.951" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:07.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:07.780" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240913 07:22:04.949" endtime="20240913 07:22:07.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:07.782" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240913 07:22:07.781" endtime="20240913 07:22:07.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:07.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:07.782" endtime="20240913 07:22:07.782"/>
</kw>
<status status="PASS" starttime="20240913 07:22:04.948" endtime="20240913 07:22:07.782"/>
</kw>
<msg timestamp="20240913 07:22:07.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:04.948" endtime="20240913 07:22:07.782"/>
</kw>
<msg timestamp="20240913 07:22:07.783" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240913 07:22:04.948" endtime="20240913 07:22:07.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:07.783" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20240913 07:22:07.783" endtime="20240913 07:22:07.783"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20240913 07:22:07.783" endtime="20240913 07:22:07.784"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20240913 07:22:04.879" endtime="20240913 07:22:07.784"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20240913 07:22:01.834" endtime="20240913 07:22:07.785"/>
</suite>
<suite id="s1-s2" name="1.4.0-1.5.0-SNAPSHOT-1-original-generate-old1" source="/opt/ozone/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:22:08.615" endtime="20240913 07:22:08.616"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:08.620" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:08.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:08.623" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:22:08.617" endtime="20240913 07:22:08.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:08.624" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:22:08.623" endtime="20240913 07:22:08.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:08.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:08.624" endtime="20240913 07:22:08.624"/>
</kw>
<status status="PASS" starttime="20240913 07:22:08.617" endtime="20240913 07:22:08.624"/>
</kw>
<msg timestamp="20240913 07:22:08.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:08.617" endtime="20240913 07:22:08.624"/>
</kw>
<msg timestamp="20240913 07:22:08.625" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:22:08.616" endtime="20240913 07:22:08.625"/>
</kw>
<msg timestamp="20240913 07:22:08.625" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:08.616" endtime="20240913 07:22:08.625"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:22:08.625" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:08.625" endtime="20240913 07:22:08.625"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:08.629" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:08.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:08.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:08.627" endtime="20240913 07:22:08.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:08.668" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:08.667" endtime="20240913 07:22:08.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:08.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:08.668" endtime="20240913 07:22:08.668"/>
</kw>
<status status="PASS" starttime="20240913 07:22:08.627" endtime="20240913 07:22:08.669"/>
</kw>
<msg timestamp="20240913 07:22:08.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:08.626" endtime="20240913 07:22:08.669"/>
</kw>
<status status="PASS" starttime="20240913 07:22:08.626" endtime="20240913 07:22:08.669"/>
</kw>
<status status="PASS" starttime="20240913 07:22:08.625" endtime="20240913 07:22:08.669"/>
</kw>
<status status="PASS" starttime="20240913 07:22:08.615" endtime="20240913 07:22:08.669"/>
</kw>
<status status="PASS" starttime="20240913 07:22:08.615" endtime="20240913 07:22:08.669"/>
</kw>
<test id="s1-s2-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:08.673" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:12.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:12.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:08.671" endtime="20240913 07:22:12.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:12.050" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:12.049" endtime="20240913 07:22:12.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:12.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:12.050" endtime="20240913 07:22:12.051"/>
</kw>
<status status="PASS" starttime="20240913 07:22:08.671" endtime="20240913 07:22:12.051"/>
</kw>
<msg timestamp="20240913 07:22:12.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:08.671" endtime="20240913 07:22:12.051"/>
</kw>
<msg timestamp="20240913 07:22:12.051" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:08.670" endtime="20240913 07:22:12.051"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:12.051" endtime="20240913 07:22:12.052"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:12.056" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:15.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:15.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:12.053" endtime="20240913 07:22:15.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:15.452" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:15.451" endtime="20240913 07:22:15.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:15.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:15.452" endtime="20240913 07:22:15.452"/>
</kw>
<status status="PASS" starttime="20240913 07:22:12.053" endtime="20240913 07:22:15.452"/>
</kw>
<msg timestamp="20240913 07:22:15.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:12.052" endtime="20240913 07:22:15.453"/>
</kw>
<msg timestamp="20240913 07:22:15.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:12.052" endtime="20240913 07:22:15.453"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:15.453" endtime="20240913 07:22:15.453"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:22:08.669" endtime="20240913 07:22:15.453"/>
</test>
<test id="s1-s2-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:15.457" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240913 07:22:15.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:15.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:15.455" endtime="20240913 07:22:15.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:15.460" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:15.459" endtime="20240913 07:22:15.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:15.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:15.460" endtime="20240913 07:22:15.461"/>
</kw>
<status status="PASS" starttime="20240913 07:22:15.455" endtime="20240913 07:22:15.461"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:15.464" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:21.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:21.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:15.462" endtime="20240913 07:22:21.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:21.090" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:21.089" endtime="20240913 07:22:21.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:21.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:21.090" endtime="20240913 07:22:21.091"/>
</kw>
<status status="PASS" starttime="20240913 07:22:15.462" endtime="20240913 07:22:21.091"/>
</kw>
<msg timestamp="20240913 07:22:21.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:15.461" endtime="20240913 07:22:21.091"/>
</kw>
<msg timestamp="20240913 07:22:21.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:15.461" endtime="20240913 07:22:21.091"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:21.091" endtime="20240913 07:22:21.091"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:21.094" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:21.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:21.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:21.092" endtime="20240913 07:22:21.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:21.098" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:21.097" endtime="20240913 07:22:21.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:21.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:21.098" endtime="20240913 07:22:21.098"/>
</kw>
<status status="PASS" starttime="20240913 07:22:21.092" endtime="20240913 07:22:21.099"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:22:15.454" endtime="20240913 07:22:21.099"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:21.103" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:24.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:24.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:21.101" endtime="20240913 07:22:24.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:24.460" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:24.459" endtime="20240913 07:22:24.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:24.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:24.460" endtime="20240913 07:22:24.460"/>
</kw>
<status status="PASS" starttime="20240913 07:22:21.101" endtime="20240913 07:22:24.461"/>
</kw>
<msg timestamp="20240913 07:22:24.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:21.101" endtime="20240913 07:22:24.461"/>
</kw>
<msg timestamp="20240913 07:22:24.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:21.100" endtime="20240913 07:22:24.461"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:24.461" endtime="20240913 07:22:24.461"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:22:21.099" endtime="20240913 07:22:24.461"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:24.466" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240913 07:22:24.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:24.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:24.463" endtime="20240913 07:22:24.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:24.468" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:24.468" endtime="20240913 07:22:24.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:24.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:24.469" endtime="20240913 07:22:24.469"/>
</kw>
<status status="PASS" starttime="20240913 07:22:24.463" endtime="20240913 07:22:24.469"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:24.473" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:29.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:29.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:24.471" endtime="20240913 07:22:29.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:29.612" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:29.611" endtime="20240913 07:22:29.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:29.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:29.612" endtime="20240913 07:22:29.612"/>
</kw>
<status status="PASS" starttime="20240913 07:22:24.470" endtime="20240913 07:22:29.613"/>
</kw>
<msg timestamp="20240913 07:22:29.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:24.470" endtime="20240913 07:22:29.613"/>
</kw>
<msg timestamp="20240913 07:22:29.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:24.469" endtime="20240913 07:22:29.613"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:29.613" endtime="20240913 07:22:29.613"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:29.617" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:29.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:29.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:29.614" endtime="20240913 07:22:29.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:29.620" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:29.619" endtime="20240913 07:22:29.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:29.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:29.620" endtime="20240913 07:22:29.621"/>
</kw>
<status status="PASS" starttime="20240913 07:22:29.614" endtime="20240913 07:22:29.621"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:22:24.462" endtime="20240913 07:22:29.621"/>
</test>
<test id="s1-s2-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:22:29.624" endtime="20240913 07:22:29.624"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:29.628" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:29.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:29.631" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:22:29.625" endtime="20240913 07:22:29.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:29.632" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:22:29.631" endtime="20240913 07:22:29.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:29.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:29.632" endtime="20240913 07:22:29.633"/>
</kw>
<status status="PASS" starttime="20240913 07:22:29.625" endtime="20240913 07:22:29.633"/>
</kw>
<msg timestamp="20240913 07:22:29.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:29.625" endtime="20240913 07:22:29.633"/>
</kw>
<msg timestamp="20240913 07:22:29.633" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:22:29.624" endtime="20240913 07:22:29.633"/>
</kw>
<msg timestamp="20240913 07:22:29.633" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:29.624" endtime="20240913 07:22:29.633"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:22:29.634" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:29.634" endtime="20240913 07:22:29.634"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:29.638" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:29.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:29.653" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:29.636" endtime="20240913 07:22:29.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:29.654" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:29.653" endtime="20240913 07:22:29.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:29.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:29.654" endtime="20240913 07:22:29.655"/>
</kw>
<status status="PASS" starttime="20240913 07:22:29.635" endtime="20240913 07:22:29.655"/>
</kw>
<msg timestamp="20240913 07:22:29.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:29.635" endtime="20240913 07:22:29.655"/>
</kw>
<status status="PASS" starttime="20240913 07:22:29.634" endtime="20240913 07:22:29.655"/>
</kw>
<status status="PASS" starttime="20240913 07:22:29.634" endtime="20240913 07:22:29.655"/>
</kw>
<status status="PASS" starttime="20240913 07:22:29.623" endtime="20240913 07:22:29.655"/>
</kw>
<status status="PASS" starttime="20240913 07:22:29.623" endtime="20240913 07:22:29.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:29.659" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:32.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:32.335" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=eb9911294ca37fe5cf640556da2f4b80809b3fee62e3916464dfc166e61b0e36
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240913 07:22:29.657" endtime="20240913 07:22:32.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:32.336" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=eb9911294ca37fe5cf640556da2f4b80809b3fee62e3916464dfc166e61b0e36
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240913 07:22:32.335" endtime="20240913 07:22:32.336"/>
</kw>
<msg timestamp="20240913 07:22:32.336" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=eb9911294ca37fe5cf640556da2f4b80809b3fee62e3916464dfc166e61b0e36
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240913 07:22:29.656" endtime="20240913 07:22:32.336"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20240913 07:22:32.338" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=eb9911294ca37fe5cf640556da2f4b80809b3fee62e3916464dfc166e61b0e36
isDeleted=false
transactionLogIndex=0' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20240913 07:22:32.337" endtime="20240913 07:22:32.338"/>
</kw>
<msg timestamp="20240913 07:22:32.338" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20240913 07:22:32.337" endtime="20240913 07:22:32.338"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240913 07:22:32.339" endtime="20240913 07:22:32.339"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240913 07:22:32.339" endtime="20240913 07:22:32.339"/>
</kw>
<status status="NOT RUN" starttime="20240913 07:22:32.338" endtime="20240913 07:22:32.339"/>
</branch>
<status status="PASS" starttime="20240913 07:22:32.338" endtime="20240913 07:22:32.339"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:22:32.340" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:22:32.339" endtime="20240913 07:22:32.340"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240913 07:22:32.341" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:22:32.340" endtime="20240913 07:22:32.341"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:22:32.341" level="INFO">${secret} = ['eb9911294ca37fe5cf640556da2f4b80809b3fee62e3916464dfc166e61b0e36']</msg>
<status status="PASS" starttime="20240913 07:22:32.341" endtime="20240913 07:22:32.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:22:32.343" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:32.342" endtime="20240913 07:22:32.343"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:22:32.344" level="INFO">${secret} = eb9911294ca37fe5cf640556da2f4b80809b3fee62e3916464dfc166e61b0e36</msg>
<status status="PASS" starttime="20240913 07:22:32.343" endtime="20240913 07:22:32.344"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:32.349" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:32.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:32.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:32.346" endtime="20240913 07:22:32.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:32.826" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:32.825" endtime="20240913 07:22:32.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:32.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:32.826" endtime="20240913 07:22:32.826"/>
</kw>
<status status="PASS" starttime="20240913 07:22:32.345" endtime="20240913 07:22:32.827"/>
</kw>
<msg timestamp="20240913 07:22:32.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:32.345" endtime="20240913 07:22:32.827"/>
</kw>
<status status="PASS" starttime="20240913 07:22:32.345" endtime="20240913 07:22:32.827"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:32.830" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:33.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:33.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:32.828" endtime="20240913 07:22:33.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:33.261" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:33.261" endtime="20240913 07:22:33.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:33.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:33.262" endtime="20240913 07:22:33.262"/>
</kw>
<status status="PASS" starttime="20240913 07:22:32.828" endtime="20240913 07:22:33.262"/>
</kw>
<msg timestamp="20240913 07:22:33.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:32.827" endtime="20240913 07:22:33.262"/>
</kw>
<status status="PASS" starttime="20240913 07:22:32.827" endtime="20240913 07:22:33.262"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:33.266" level="INFO">Running command 'aws configure set aws_secret_access_key eb9911294ca37fe5cf640556da2f4b80809b3fee62e3916464dfc166e61b0e36 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:33.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:33.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:33.264" endtime="20240913 07:22:33.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:33.710" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:33.709" endtime="20240913 07:22:33.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:33.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:33.710" endtime="20240913 07:22:33.711"/>
</kw>
<status status="PASS" starttime="20240913 07:22:33.263" endtime="20240913 07:22:33.711"/>
</kw>
<msg timestamp="20240913 07:22:33.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:33.263" endtime="20240913 07:22:33.711"/>
</kw>
<status status="PASS" starttime="20240913 07:22:33.263" endtime="20240913 07:22:33.711"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:33.715" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:34.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:34.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:33.712" endtime="20240913 07:22:34.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:34.158" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:34.158" endtime="20240913 07:22:34.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:34.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:34.159" endtime="20240913 07:22:34.159"/>
</kw>
<status status="PASS" starttime="20240913 07:22:33.712" endtime="20240913 07:22:34.159"/>
</kw>
<msg timestamp="20240913 07:22:34.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:33.712" endtime="20240913 07:22:34.159"/>
</kw>
<status status="PASS" starttime="20240913 07:22:33.711" endtime="20240913 07:22:34.160"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:34.163" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:34.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:34.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:34.161" endtime="20240913 07:22:34.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:34.603" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:34.602" endtime="20240913 07:22:34.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:34.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:34.603" endtime="20240913 07:22:34.603"/>
</kw>
<status status="PASS" starttime="20240913 07:22:34.161" endtime="20240913 07:22:34.603"/>
</kw>
<msg timestamp="20240913 07:22:34.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:34.160" endtime="20240913 07:22:34.604"/>
</kw>
<status status="PASS" starttime="20240913 07:22:34.160" endtime="20240913 07:22:34.604"/>
</kw>
<status status="PASS" starttime="20240913 07:22:29.656" endtime="20240913 07:22:34.604"/>
</kw>
<status status="PASS" starttime="20240913 07:22:29.655" endtime="20240913 07:22:34.604"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240913 07:22:34.604" endtime="20240913 07:22:34.604"/>
</kw>
<status status="PASS" starttime="20240913 07:22:29.622" endtime="20240913 07:22:34.605"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240913 07:22:34.606" level="INFO">${randStr} = 5039013966</msg>
<status status="PASS" starttime="20240913 07:22:34.605" endtime="20240913 07:22:34.606"/>
</kw>
<msg timestamp="20240913 07:22:34.606" level="INFO">${random} = ozone-test-5039013966</msg>
<status status="PASS" starttime="20240913 07:22:34.605" endtime="20240913 07:22:34.606"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:34.611" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-5039013966 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:36.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:36.394" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5039013966"
}</msg>
<status status="PASS" starttime="20240913 07:22:34.608" endtime="20240913 07:22:36.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:36.395" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5039013966"
}</msg>
<status status="PASS" starttime="20240913 07:22:36.395" endtime="20240913 07:22:36.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:36.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:36.395" endtime="20240913 07:22:36.396"/>
</kw>
<status status="PASS" starttime="20240913 07:22:34.608" endtime="20240913 07:22:36.396"/>
</kw>
<msg timestamp="20240913 07:22:36.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:34.608" endtime="20240913 07:22:36.396"/>
</kw>
<msg timestamp="20240913 07:22:36.397" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5039013966"
}</msg>
<status status="PASS" starttime="20240913 07:22:34.607" endtime="20240913 07:22:36.397"/>
</kw>
<msg timestamp="20240913 07:22:36.397" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-5039013966"
}</msg>
<status status="PASS" starttime="20240913 07:22:34.607" endtime="20240913 07:22:36.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:36.397" endtime="20240913 07:22:36.397"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:36.397" endtime="20240913 07:22:36.398"/>
</kw>
<msg timestamp="20240913 07:22:36.398" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20240913 07:22:34.606" endtime="20240913 07:22:36.398"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240913 07:22:36.398" endtime="20240913 07:22:36.398"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:22:29.622" endtime="20240913 07:22:36.399"/>
</test>
<test id="s1-s2-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:36.403" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240913 07:22:36.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:36.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:36.400" endtime="20240913 07:22:36.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:36.406" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:36.405" endtime="20240913 07:22:36.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:36.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:36.406" endtime="20240913 07:22:36.406"/>
</kw>
<status status="PASS" starttime="20240913 07:22:36.400" endtime="20240913 07:22:36.406"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:36.410" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:37.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:37.868" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240913 07:22:36.407" endtime="20240913 07:22:37.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:37.869" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240913 07:22:37.869" endtime="20240913 07:22:37.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:37.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:37.869" endtime="20240913 07:22:37.870"/>
</kw>
<msg timestamp="20240913 07:22:37.870" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240913 07:22:36.407" endtime="20240913 07:22:37.870"/>
</kw>
<msg timestamp="20240913 07:22:37.870" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240913 07:22:36.406" endtime="20240913 07:22:37.870"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:37.871" endtime="20240913 07:22:37.871"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:37.874" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:37.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:37.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:37.871" endtime="20240913 07:22:37.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:37.877" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:37.877" endtime="20240913 07:22:37.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:37.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:37.878" endtime="20240913 07:22:37.878"/>
</kw>
<status status="PASS" starttime="20240913 07:22:37.871" endtime="20240913 07:22:37.878"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:22:36.399" endtime="20240913 07:22:37.878"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20240913 07:22:08.536" endtime="20240913 07:22:37.880"/>
</suite>
<suite id="s1-s3" name="1.4.0-1.5.0-SNAPSHOT-1-original-validate-old1" source="/opt/ozone/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:22:38.723" endtime="20240913 07:22:38.723"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:38.727" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:38.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:38.730" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:22:38.724" endtime="20240913 07:22:38.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:38.731" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:22:38.730" endtime="20240913 07:22:38.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:38.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:38.731" endtime="20240913 07:22:38.731"/>
</kw>
<status status="PASS" starttime="20240913 07:22:38.724" endtime="20240913 07:22:38.731"/>
</kw>
<msg timestamp="20240913 07:22:38.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:38.724" endtime="20240913 07:22:38.732"/>
</kw>
<msg timestamp="20240913 07:22:38.732" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:22:38.723" endtime="20240913 07:22:38.732"/>
</kw>
<msg timestamp="20240913 07:22:38.732" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:38.723" endtime="20240913 07:22:38.732"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:22:38.733" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:38.732" endtime="20240913 07:22:38.733"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:38.736" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:38.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:38.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:38.734" endtime="20240913 07:22:38.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:38.753" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:38.752" endtime="20240913 07:22:38.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:38.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:38.753" endtime="20240913 07:22:38.753"/>
</kw>
<status status="PASS" starttime="20240913 07:22:38.734" endtime="20240913 07:22:38.753"/>
</kw>
<msg timestamp="20240913 07:22:38.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:38.734" endtime="20240913 07:22:38.754"/>
</kw>
<status status="PASS" starttime="20240913 07:22:38.733" endtime="20240913 07:22:38.754"/>
</kw>
<status status="PASS" starttime="20240913 07:22:38.733" endtime="20240913 07:22:38.754"/>
</kw>
<status status="PASS" starttime="20240913 07:22:38.722" endtime="20240913 07:22:38.754"/>
</kw>
<status status="PASS" starttime="20240913 07:22:38.722" endtime="20240913 07:22:38.754"/>
</kw>
<test id="s1-s3-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240913 07:22:38.755" level="INFO">${random} = 19367</msg>
<status status="PASS" starttime="20240913 07:22:38.755" endtime="20240913 07:22:38.755"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:38.759" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-19367 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:43.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:43.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:38.757" endtime="20240913 07:22:43.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:43.951" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:43.950" endtime="20240913 07:22:43.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:43.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:43.952" endtime="20240913 07:22:43.952"/>
</kw>
<status status="PASS" starttime="20240913 07:22:38.756" endtime="20240913 07:22:43.953"/>
</kw>
<msg timestamp="20240913 07:22:43.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:38.756" endtime="20240913 07:22:43.953"/>
</kw>
<msg timestamp="20240913 07:22:43.953" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:38.755" endtime="20240913 07:22:43.953"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:43.953" endtime="20240913 07:22:43.954"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:43.958" level="INFO">Running command 'cat /tmp/key-19367 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:43.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:43.961" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:22:43.955" endtime="20240913 07:22:43.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:43.962" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:22:43.961" endtime="20240913 07:22:43.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:43.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:43.962" endtime="20240913 07:22:43.962"/>
</kw>
<msg timestamp="20240913 07:22:43.963" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:22:43.954" endtime="20240913 07:22:43.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:43.963" endtime="20240913 07:22:43.963"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:43.966" level="INFO">Running command 'rm /tmp/key-19367 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:43.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:43.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:43.964" endtime="20240913 07:22:43.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:43.970" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:43.970" endtime="20240913 07:22:43.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:43.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:43.970" endtime="20240913 07:22:43.971"/>
</kw>
<status status="PASS" starttime="20240913 07:22:43.963" endtime="20240913 07:22:43.971"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:22:38.754" endtime="20240913 07:22:43.971"/>
</test>
<test id="s1-s3-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:22:43.974" endtime="20240913 07:22:43.974"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:43.979" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:43.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:43.985" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:22:43.976" endtime="20240913 07:22:43.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:43.987" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:22:43.986" endtime="20240913 07:22:43.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:43.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:43.987" endtime="20240913 07:22:43.987"/>
</kw>
<status status="PASS" starttime="20240913 07:22:43.976" endtime="20240913 07:22:43.988"/>
</kw>
<msg timestamp="20240913 07:22:43.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:43.975" endtime="20240913 07:22:43.988"/>
</kw>
<msg timestamp="20240913 07:22:43.988" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:22:43.975" endtime="20240913 07:22:43.988"/>
</kw>
<msg timestamp="20240913 07:22:43.989" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:43.975" endtime="20240913 07:22:43.989"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:22:43.989" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:43.989" endtime="20240913 07:22:43.989"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:43.994" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:44.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:44.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:43.992" endtime="20240913 07:22:44.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:44.012" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:44.012" endtime="20240913 07:22:44.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:44.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:44.013" endtime="20240913 07:22:44.013"/>
</kw>
<status status="PASS" starttime="20240913 07:22:43.991" endtime="20240913 07:22:44.013"/>
</kw>
<msg timestamp="20240913 07:22:44.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:43.991" endtime="20240913 07:22:44.014"/>
</kw>
<status status="PASS" starttime="20240913 07:22:43.990" endtime="20240913 07:22:44.014"/>
</kw>
<status status="PASS" starttime="20240913 07:22:43.989" endtime="20240913 07:22:44.014"/>
</kw>
<status status="PASS" starttime="20240913 07:22:43.974" endtime="20240913 07:22:44.014"/>
</kw>
<status status="PASS" starttime="20240913 07:22:43.973" endtime="20240913 07:22:44.014"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:44.018" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:46.848" level="INFO">${rc} = 255</msg>
<msg timestamp="20240913 07:22:46.848" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:22:44.016" endtime="20240913 07:22:46.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:46.849" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:22:46.849" endtime="20240913 07:22:46.849"/>
</kw>
<msg timestamp="20240913 07:22:46.850" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:22:44.015" endtime="20240913 07:22:46.850"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:46.850" endtime="20240913 07:22:46.850"/>
</kw>
<msg timestamp="20240913 07:22:46.851" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240913 07:22:46.850" endtime="20240913 07:22:46.851"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:46.855" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:49.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:49.383" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:22:46.852" endtime="20240913 07:22:49.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:49.384" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:22:49.383" endtime="20240913 07:22:49.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:49.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:49.384" endtime="20240913 07:22:49.385"/>
</kw>
<status status="PASS" starttime="20240913 07:22:46.852" endtime="20240913 07:22:49.385"/>
</kw>
<msg timestamp="20240913 07:22:49.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:46.851" endtime="20240913 07:22:49.385"/>
</kw>
<status status="PASS" starttime="20240913 07:22:46.851" endtime="20240913 07:22:49.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:49.389" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:51.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:51.937" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b295e61dae6bb4febb5a87e35ab36a639039ca29ea68338874dc7e9a0ddda33c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240913 07:22:49.387" endtime="20240913 07:22:51.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:51.938" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b295e61dae6bb4febb5a87e35ab36a639039ca29ea68338874dc7e9a0ddda33c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240913 07:22:51.937" endtime="20240913 07:22:51.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:51.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:51.938" endtime="20240913 07:22:51.939"/>
</kw>
<status status="PASS" starttime="20240913 07:22:49.386" endtime="20240913 07:22:51.939"/>
</kw>
<msg timestamp="20240913 07:22:51.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:49.386" endtime="20240913 07:22:51.939"/>
</kw>
<msg timestamp="20240913 07:22:51.939" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=b295e61dae6bb4febb5a87e35ab36a639039ca29ea68338874dc7e9a0ddda33c
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240913 07:22:49.386" endtime="20240913 07:22:51.939"/>
</kw>
<status status="PASS" starttime="20240913 07:22:46.851" endtime="20240913 07:22:51.940"/>
</branch>
<status status="PASS" starttime="20240913 07:22:46.851" endtime="20240913 07:22:51.940"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:22:51.940" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:22:51.940" endtime="20240913 07:22:51.940"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240913 07:22:51.941" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:22:51.941" endtime="20240913 07:22:51.941"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:22:51.942" level="INFO">${secret} = ['b295e61dae6bb4febb5a87e35ab36a639039ca29ea68338874dc7e9a0ddda33c']</msg>
<status status="PASS" starttime="20240913 07:22:51.941" endtime="20240913 07:22:51.942"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:22:51.943" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:51.942" endtime="20240913 07:22:51.943"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:22:51.944" level="INFO">${secret} = b295e61dae6bb4febb5a87e35ab36a639039ca29ea68338874dc7e9a0ddda33c</msg>
<status status="PASS" starttime="20240913 07:22:51.943" endtime="20240913 07:22:51.944"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:51.948" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:52.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:52.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:51.945" endtime="20240913 07:22:52.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:52.376" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:52.375" endtime="20240913 07:22:52.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:52.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:52.376" endtime="20240913 07:22:52.377"/>
</kw>
<status status="PASS" starttime="20240913 07:22:51.945" endtime="20240913 07:22:52.377"/>
</kw>
<msg timestamp="20240913 07:22:52.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:51.944" endtime="20240913 07:22:52.377"/>
</kw>
<status status="PASS" starttime="20240913 07:22:51.944" endtime="20240913 07:22:52.377"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:52.381" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:52.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:52.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:52.378" endtime="20240913 07:22:52.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:52.839" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:52.838" endtime="20240913 07:22:52.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:52.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:52.839" endtime="20240913 07:22:52.839"/>
</kw>
<status status="PASS" starttime="20240913 07:22:52.378" endtime="20240913 07:22:52.839"/>
</kw>
<msg timestamp="20240913 07:22:52.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:52.378" endtime="20240913 07:22:52.839"/>
</kw>
<status status="PASS" starttime="20240913 07:22:52.377" endtime="20240913 07:22:52.840"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:52.843" level="INFO">Running command 'aws configure set aws_secret_access_key b295e61dae6bb4febb5a87e35ab36a639039ca29ea68338874dc7e9a0ddda33c 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:53.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:53.274" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:52.841" endtime="20240913 07:22:53.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:53.276" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:53.275" endtime="20240913 07:22:53.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:53.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:53.276" endtime="20240913 07:22:53.276"/>
</kw>
<status status="PASS" starttime="20240913 07:22:52.841" endtime="20240913 07:22:53.276"/>
</kw>
<msg timestamp="20240913 07:22:53.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:52.840" endtime="20240913 07:22:53.277"/>
</kw>
<status status="PASS" starttime="20240913 07:22:52.840" endtime="20240913 07:22:53.277"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:53.280" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:53.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:53.715" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:53.278" endtime="20240913 07:22:53.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:53.716" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:53.715" endtime="20240913 07:22:53.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:53.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:53.716" endtime="20240913 07:22:53.716"/>
</kw>
<status status="PASS" starttime="20240913 07:22:53.278" endtime="20240913 07:22:53.717"/>
</kw>
<msg timestamp="20240913 07:22:53.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:53.277" endtime="20240913 07:22:53.717"/>
</kw>
<status status="PASS" starttime="20240913 07:22:53.277" endtime="20240913 07:22:53.717"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:53.721" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:54.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:54.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:53.718" endtime="20240913 07:22:54.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:54.254" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:54.253" endtime="20240913 07:22:54.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:54.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:54.254" endtime="20240913 07:22:54.255"/>
</kw>
<status status="PASS" starttime="20240913 07:22:53.718" endtime="20240913 07:22:54.255"/>
</kw>
<msg timestamp="20240913 07:22:54.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:53.718" endtime="20240913 07:22:54.255"/>
</kw>
<status status="PASS" starttime="20240913 07:22:53.717" endtime="20240913 07:22:54.256"/>
</kw>
<status status="PASS" starttime="20240913 07:22:44.015" endtime="20240913 07:22:54.256"/>
</kw>
<status status="PASS" starttime="20240913 07:22:44.014" endtime="20240913 07:22:54.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240913 07:22:54.256" endtime="20240913 07:22:54.256"/>
</kw>
<status status="PASS" starttime="20240913 07:22:43.973" endtime="20240913 07:22:54.256"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:54.260" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:55.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:55.011" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:29 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20240913 07:22:54.258" endtime="20240913 07:22:55.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:55.012" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:29 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 13 Sep 2024 07:22:54 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240913 07:22:55.012" endtime="20240913 07:22:55.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:55.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:55.013" endtime="20240913 07:22:55.013"/>
</kw>
<msg timestamp="20240913 07:22:55.013" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:29 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20240913 07:22:54.257" endtime="20240913 07:22:55.013"/>
</kw>
<msg timestamp="20240913 07:22:55.014" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:29 GMT",
    "ContentLength": 44,
    "ETag": "\"null\"",
    "CacheControl": "no-cache",
    "ContentType": "application/oct...</msg>
<status status="PASS" starttime="20240913 07:22:54.256" endtime="20240913 07:22:55.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:55.014" endtime="20240913 07:22:55.014"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:55.017" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:55.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:55.020" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:22:55.015" endtime="20240913 07:22:55.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:55.021" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:22:55.020" endtime="20240913 07:22:55.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:55.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:55.021" endtime="20240913 07:22:55.021"/>
</kw>
<msg timestamp="20240913 07:22:55.021" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:22:55.014" endtime="20240913 07:22:55.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:55.022" endtime="20240913 07:22:55.022"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:55.025" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:55.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:55.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:55.022" endtime="20240913 07:22:55.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:55.028" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:55.027" endtime="20240913 07:22:55.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:55.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:55.028" endtime="20240913 07:22:55.029"/>
</kw>
<status status="PASS" starttime="20240913 07:22:55.022" endtime="20240913 07:22:55.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:22:43.972" endtime="20240913 07:22:55.029"/>
</test>
<test id="s1-s3-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:22:55.031" endtime="20240913 07:22:55.032"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:55.035" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:55.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:55.038" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:22:55.033" endtime="20240913 07:22:55.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:55.039" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:22:55.039" endtime="20240913 07:22:55.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:55.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:55.040" endtime="20240913 07:22:55.040"/>
</kw>
<status status="PASS" starttime="20240913 07:22:55.033" endtime="20240913 07:22:55.041"/>
</kw>
<msg timestamp="20240913 07:22:55.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:55.032" endtime="20240913 07:22:55.041"/>
</kw>
<msg timestamp="20240913 07:22:55.041" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:22:55.032" endtime="20240913 07:22:55.041"/>
</kw>
<msg timestamp="20240913 07:22:55.041" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:55.032" endtime="20240913 07:22:55.041"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:22:55.042" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:22:55.041" endtime="20240913 07:22:55.042"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:55.046" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:55.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:22:55.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:22:55.044" endtime="20240913 07:22:55.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:55.074" level="INFO"/>
<status status="PASS" starttime="20240913 07:22:55.074" endtime="20240913 07:22:55.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:22:55.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:22:55.075" endtime="20240913 07:22:55.075"/>
</kw>
<status status="PASS" starttime="20240913 07:22:55.043" endtime="20240913 07:22:55.076"/>
</kw>
<msg timestamp="20240913 07:22:55.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:55.043" endtime="20240913 07:22:55.076"/>
</kw>
<status status="PASS" starttime="20240913 07:22:55.043" endtime="20240913 07:22:55.076"/>
</kw>
<status status="PASS" starttime="20240913 07:22:55.042" endtime="20240913 07:22:55.076"/>
</kw>
<status status="PASS" starttime="20240913 07:22:55.031" endtime="20240913 07:22:55.076"/>
</kw>
<status status="PASS" starttime="20240913 07:22:55.031" endtime="20240913 07:22:55.076"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:55.081" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:22:57.993" level="INFO">${rc} = 255</msg>
<msg timestamp="20240913 07:22:57.993" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:22:55.078" endtime="20240913 07:22:57.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:22:57.994" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:22:57.994" endtime="20240913 07:22:57.994"/>
</kw>
<msg timestamp="20240913 07:22:57.995" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:22:55.077" endtime="20240913 07:22:57.995"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:22:57.995" endtime="20240913 07:22:57.995"/>
</kw>
<msg timestamp="20240913 07:22:57.996" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240913 07:22:57.995" endtime="20240913 07:22:57.996"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:22:58.000" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:00.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:00.806" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:22:57.997" endtime="20240913 07:23:00.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:00.807" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:23:00.807" endtime="20240913 07:23:00.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:00.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:00.808" endtime="20240913 07:23:00.808"/>
</kw>
<status status="PASS" starttime="20240913 07:22:57.997" endtime="20240913 07:23:00.808"/>
</kw>
<msg timestamp="20240913 07:23:00.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:22:57.997" endtime="20240913 07:23:00.808"/>
</kw>
<status status="PASS" starttime="20240913 07:22:57.996" endtime="20240913 07:23:00.809"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:00.813" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:03.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:03.484" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=73e54180c430d09430e924a9ef1d05865dc59635b349230d33f2961ad31d3646
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240913 07:23:00.810" endtime="20240913 07:23:03.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:03.485" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=73e54180c430d09430e924a9ef1d05865dc59635b349230d33f2961ad31d3646
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240913 07:23:03.484" endtime="20240913 07:23:03.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:03.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:03.485" endtime="20240913 07:23:03.486"/>
</kw>
<status status="PASS" starttime="20240913 07:23:00.810" endtime="20240913 07:23:03.486"/>
</kw>
<msg timestamp="20240913 07:23:03.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:23:00.809" endtime="20240913 07:23:03.486"/>
</kw>
<msg timestamp="20240913 07:23:03.486" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=73e54180c430d09430e924a9ef1d05865dc59635b349230d33f2961ad31d3646
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20240913 07:23:00.809" endtime="20240913 07:23:03.486"/>
</kw>
<status status="PASS" starttime="20240913 07:22:57.996" endtime="20240913 07:23:03.486"/>
</branch>
<status status="PASS" starttime="20240913 07:22:57.996" endtime="20240913 07:23:03.486"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:23:03.487" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:23:03.487" endtime="20240913 07:23:03.487"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240913 07:23:03.488" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:23:03.487" endtime="20240913 07:23:03.488"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:23:03.488" level="INFO">${secret} = ['73e54180c430d09430e924a9ef1d05865dc59635b349230d33f2961ad31d3646']</msg>
<status status="PASS" starttime="20240913 07:23:03.488" endtime="20240913 07:23:03.488"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:23:03.489" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:23:03.488" endtime="20240913 07:23:03.489"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:23:03.490" level="INFO">${secret} = 73e54180c430d09430e924a9ef1d05865dc59635b349230d33f2961ad31d3646</msg>
<status status="PASS" starttime="20240913 07:23:03.489" endtime="20240913 07:23:03.490"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:03.494" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:03.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:03.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:23:03.492" endtime="20240913 07:23:03.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:03.941" level="INFO"/>
<status status="PASS" starttime="20240913 07:23:03.941" endtime="20240913 07:23:03.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:03.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:03.942" endtime="20240913 07:23:03.942"/>
</kw>
<status status="PASS" starttime="20240913 07:23:03.491" endtime="20240913 07:23:03.942"/>
</kw>
<msg timestamp="20240913 07:23:03.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:23:03.491" endtime="20240913 07:23:03.942"/>
</kw>
<status status="PASS" starttime="20240913 07:23:03.490" endtime="20240913 07:23:03.942"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:03.946" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:04.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:04.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:23:03.944" endtime="20240913 07:23:04.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:04.386" level="INFO"/>
<status status="PASS" starttime="20240913 07:23:04.385" endtime="20240913 07:23:04.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:04.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:04.386" endtime="20240913 07:23:04.386"/>
</kw>
<status status="PASS" starttime="20240913 07:23:03.943" endtime="20240913 07:23:04.387"/>
</kw>
<msg timestamp="20240913 07:23:04.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:23:03.943" endtime="20240913 07:23:04.387"/>
</kw>
<status status="PASS" starttime="20240913 07:23:03.943" endtime="20240913 07:23:04.387"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:04.391" level="INFO">Running command 'aws configure set aws_secret_access_key 73e54180c430d09430e924a9ef1d05865dc59635b349230d33f2961ad31d3646 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:04.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:04.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:23:04.388" endtime="20240913 07:23:04.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:04.826" level="INFO"/>
<status status="PASS" starttime="20240913 07:23:04.826" endtime="20240913 07:23:04.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:04.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:04.827" endtime="20240913 07:23:04.827"/>
</kw>
<status status="PASS" starttime="20240913 07:23:04.388" endtime="20240913 07:23:04.827"/>
</kw>
<msg timestamp="20240913 07:23:04.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:23:04.388" endtime="20240913 07:23:04.827"/>
</kw>
<status status="PASS" starttime="20240913 07:23:04.387" endtime="20240913 07:23:04.828"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:04.832" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:05.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:05.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:23:04.829" endtime="20240913 07:23:05.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:05.266" level="INFO"/>
<status status="PASS" starttime="20240913 07:23:05.265" endtime="20240913 07:23:05.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:05.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:05.266" endtime="20240913 07:23:05.267"/>
</kw>
<status status="PASS" starttime="20240913 07:23:04.829" endtime="20240913 07:23:05.267"/>
</kw>
<msg timestamp="20240913 07:23:05.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:23:04.828" endtime="20240913 07:23:05.267"/>
</kw>
<status status="PASS" starttime="20240913 07:23:04.828" endtime="20240913 07:23:05.267"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:05.271" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:05.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:05.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:23:05.269" endtime="20240913 07:23:05.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:05.708" level="INFO"/>
<status status="PASS" starttime="20240913 07:23:05.707" endtime="20240913 07:23:05.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:05.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:05.708" endtime="20240913 07:23:05.708"/>
</kw>
<status status="PASS" starttime="20240913 07:23:05.268" endtime="20240913 07:23:05.709"/>
</kw>
<msg timestamp="20240913 07:23:05.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:23:05.268" endtime="20240913 07:23:05.709"/>
</kw>
<status status="PASS" starttime="20240913 07:23:05.267" endtime="20240913 07:23:05.709"/>
</kw>
<status status="PASS" starttime="20240913 07:22:55.077" endtime="20240913 07:23:05.709"/>
</kw>
<status status="PASS" starttime="20240913 07:22:55.076" endtime="20240913 07:23:05.709"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240913 07:23:05.709" endtime="20240913 07:23:05.709"/>
</kw>
<status status="PASS" starttime="20240913 07:22:55.030" endtime="20240913 07:23:05.710"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:05.713" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:06.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:06.306" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240913 07:23:05.711" endtime="20240913 07:23:06.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:06.307" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 13 Sep 2024 07:23:06 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240913 07:23:06.307" endtime="20240913 07:23:06.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:06.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:06.307" endtime="20240913 07:23:06.308"/>
</kw>
<msg timestamp="20240913 07:23:06.308" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240913 07:23:05.710" endtime="20240913 07:23:06.308"/>
</kw>
<msg timestamp="20240913 07:23:06.308" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240913 07:23:05.710" endtime="20240913 07:23:06.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:23:06.309" endtime="20240913 07:23:06.309"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:06.312" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:06.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:06.315" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20240913 07:23:06.310" endtime="20240913 07:23:06.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:06.316" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20240913 07:23:06.315" endtime="20240913 07:23:06.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:06.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:06.316" endtime="20240913 07:23:06.316"/>
</kw>
<msg timestamp="20240913 07:23:06.317" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20240913 07:23:06.309" endtime="20240913 07:23:06.317"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:23:06.317" endtime="20240913 07:23:06.317"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:06.320" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:06.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:06.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:23:06.318" endtime="20240913 07:23:06.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:06.323" level="INFO"/>
<status status="PASS" starttime="20240913 07:23:06.323" endtime="20240913 07:23:06.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:06.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:06.323" endtime="20240913 07:23:06.324"/>
</kw>
<status status="PASS" starttime="20240913 07:23:06.317" endtime="20240913 07:23:06.324"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:22:55.030" endtime="20240913 07:23:06.324"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20240913 07:22:38.647" endtime="20240913 07:23:06.325"/>
</suite>
<suite id="s1-s4" name="1.4.0-1.5.0-SNAPSHOT-1-original-prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:23:07.089" endtime="20240913 07:23:07.089"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:07.093" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:07.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:07.096" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:23:07.090" endtime="20240913 07:23:07.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:07.097" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:23:07.096" endtime="20240913 07:23:07.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:07.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:07.097" endtime="20240913 07:23:07.098"/>
</kw>
<status status="PASS" starttime="20240913 07:23:07.090" endtime="20240913 07:23:07.098"/>
</kw>
<msg timestamp="20240913 07:23:07.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:23:07.090" endtime="20240913 07:23:07.098"/>
</kw>
<msg timestamp="20240913 07:23:07.098" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:23:07.089" endtime="20240913 07:23:07.098"/>
</kw>
<msg timestamp="20240913 07:23:07.098" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:23:07.089" endtime="20240913 07:23:07.098"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:23:07.099" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:23:07.098" endtime="20240913 07:23:07.099"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:07.102" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:07.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:07.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:23:07.100" endtime="20240913 07:23:07.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:07.118" level="INFO"/>
<status status="PASS" starttime="20240913 07:23:07.117" endtime="20240913 07:23:07.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:07.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:07.118" endtime="20240913 07:23:07.118"/>
</kw>
<status status="PASS" starttime="20240913 07:23:07.100" endtime="20240913 07:23:07.119"/>
</kw>
<msg timestamp="20240913 07:23:07.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:23:07.100" endtime="20240913 07:23:07.119"/>
</kw>
<status status="PASS" starttime="20240913 07:23:07.099" endtime="20240913 07:23:07.119"/>
</kw>
<status status="PASS" starttime="20240913 07:23:07.099" endtime="20240913 07:23:07.119"/>
</kw>
<status status="PASS" starttime="20240913 07:23:07.088" endtime="20240913 07:23:07.119"/>
</kw>
<status status="PASS" starttime="20240913 07:23:07.088" endtime="20240913 07:23:07.119"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:23:07.119" endtime="20240913 07:23:07.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:23:07.123" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:23:15.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:23:15.226" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20240913 07:23:07.121" endtime="20240913 07:23:15.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:23:15.227" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [35]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20240913 07:23:15.227" endtime="20240913 07:23:15.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:23:15.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:23:15.228" endtime="20240913 07:23:15.228"/>
</kw>
<status status="PASS" starttime="20240913 07:23:07.120" endtime="20240913 07:23:15.228"/>
</kw>
<msg timestamp="20240913 07:23:15.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:23:07.120" endtime="20240913 07:23:15.229"/>
</kw>
<msg timestamp="20240913 07:23:15.229" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [35].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20240913 07:23:07.120" endtime="20240913 07:23:15.229"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:23:15.229" endtime="20240913 07:23:15.230"/>
</kw>
<status status="PASS" starttime="20240913 07:23:15.229" endtime="20240913 07:23:15.230"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:23:07.087" endtime="20240913 07:23:15.230"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20240913 07:23:07.039" endtime="20240913 07:23:15.231"/>
</suite>
<suite id="s1-s5" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-old1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:24:38.906" endtime="20240913 07:24:38.906"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:38.915" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:38.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:38.919" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:24:38.912" endtime="20240913 07:24:38.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:38.920" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:24:38.920" endtime="20240913 07:24:38.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:38.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:38.920" endtime="20240913 07:24:38.921"/>
</kw>
<status status="PASS" starttime="20240913 07:24:38.907" endtime="20240913 07:24:38.921"/>
</kw>
<msg timestamp="20240913 07:24:38.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:38.907" endtime="20240913 07:24:38.921"/>
</kw>
<msg timestamp="20240913 07:24:38.921" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:24:38.907" endtime="20240913 07:24:38.921"/>
</kw>
<msg timestamp="20240913 07:24:38.922" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:24:38.906" endtime="20240913 07:24:38.922"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:24:38.922" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:24:38.922" endtime="20240913 07:24:38.922"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:38.927" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:38.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:38.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:38.924" endtime="20240913 07:24:38.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:38.945" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:38.945" endtime="20240913 07:24:38.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:38.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:38.945" endtime="20240913 07:24:38.946"/>
</kw>
<status status="PASS" starttime="20240913 07:24:38.924" endtime="20240913 07:24:38.946"/>
</kw>
<msg timestamp="20240913 07:24:38.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:38.923" endtime="20240913 07:24:38.946"/>
</kw>
<status status="PASS" starttime="20240913 07:24:38.923" endtime="20240913 07:24:38.946"/>
</kw>
<status status="PASS" starttime="20240913 07:24:38.922" endtime="20240913 07:24:38.946"/>
</kw>
<status status="PASS" starttime="20240913 07:24:38.906" endtime="20240913 07:24:38.946"/>
</kw>
<status status="PASS" starttime="20240913 07:24:38.904" endtime="20240913 07:24:38.946"/>
</kw>
<test id="s1-s5-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240913 07:24:38.948" level="INFO">${random} = 51095</msg>
<status status="PASS" starttime="20240913 07:24:38.948" endtime="20240913 07:24:38.948"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:38.957" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-51095 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:43.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:43.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:38.950" endtime="20240913 07:24:43.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:43.390" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:43.389" endtime="20240913 07:24:43.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:43.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:43.390" endtime="20240913 07:24:43.390"/>
</kw>
<status status="PASS" starttime="20240913 07:24:38.949" endtime="20240913 07:24:43.391"/>
</kw>
<msg timestamp="20240913 07:24:43.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:38.949" endtime="20240913 07:24:43.391"/>
</kw>
<msg timestamp="20240913 07:24:43.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:38.948" endtime="20240913 07:24:43.391"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:24:43.391" endtime="20240913 07:24:43.391"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:43.394" level="INFO">Running command 'cat /tmp/key-51095 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:43.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:43.398" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:24:43.392" endtime="20240913 07:24:43.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:43.399" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:24:43.399" endtime="20240913 07:24:43.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:43.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:43.399" endtime="20240913 07:24:43.400"/>
</kw>
<msg timestamp="20240913 07:24:43.400" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:24:43.392" endtime="20240913 07:24:43.400"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:24:43.400" endtime="20240913 07:24:43.401"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:43.403" level="INFO">Running command 'rm /tmp/key-51095 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:43.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:43.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:43.401" endtime="20240913 07:24:43.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:43.407" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:43.407" endtime="20240913 07:24:43.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:43.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:43.407" endtime="20240913 07:24:43.408"/>
</kw>
<status status="PASS" starttime="20240913 07:24:43.401" endtime="20240913 07:24:43.408"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:24:38.947" endtime="20240913 07:24:43.408"/>
</test>
<test id="s1-s5-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:24:43.411" endtime="20240913 07:24:43.411"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:43.414" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:43.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:43.418" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:24:43.412" endtime="20240913 07:24:43.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:43.419" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:24:43.418" endtime="20240913 07:24:43.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:43.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:43.419" endtime="20240913 07:24:43.419"/>
</kw>
<status status="PASS" starttime="20240913 07:24:43.412" endtime="20240913 07:24:43.419"/>
</kw>
<msg timestamp="20240913 07:24:43.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:43.412" endtime="20240913 07:24:43.419"/>
</kw>
<msg timestamp="20240913 07:24:43.420" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:24:43.411" endtime="20240913 07:24:43.420"/>
</kw>
<msg timestamp="20240913 07:24:43.420" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:24:43.411" endtime="20240913 07:24:43.420"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:24:43.420" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:24:43.420" endtime="20240913 07:24:43.420"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:43.424" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:43.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:43.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:43.422" endtime="20240913 07:24:43.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:43.441" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:43.440" endtime="20240913 07:24:43.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:43.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:43.441" endtime="20240913 07:24:43.441"/>
</kw>
<status status="PASS" starttime="20240913 07:24:43.421" endtime="20240913 07:24:43.441"/>
</kw>
<msg timestamp="20240913 07:24:43.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:43.421" endtime="20240913 07:24:43.441"/>
</kw>
<status status="PASS" starttime="20240913 07:24:43.421" endtime="20240913 07:24:43.442"/>
</kw>
<status status="PASS" starttime="20240913 07:24:43.420" endtime="20240913 07:24:43.442"/>
</kw>
<status status="PASS" starttime="20240913 07:24:43.410" endtime="20240913 07:24:43.442"/>
</kw>
<status status="PASS" starttime="20240913 07:24:43.410" endtime="20240913 07:24:43.442"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:43.445" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:45.720" level="INFO">${rc} = 255</msg>
<msg timestamp="20240913 07:24:45.720" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:24:43.443" endtime="20240913 07:24:45.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:45.721" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:24:45.721" endtime="20240913 07:24:45.722"/>
</kw>
<msg timestamp="20240913 07:24:45.722" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:24:43.443" endtime="20240913 07:24:45.722"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:24:45.722" endtime="20240913 07:24:45.722"/>
</kw>
<msg timestamp="20240913 07:24:45.723" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240913 07:24:45.722" endtime="20240913 07:24:45.723"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:45.726" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:47.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:47.906" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:24:45.724" endtime="20240913 07:24:47.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:47.907" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:24:47.907" endtime="20240913 07:24:47.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:47.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:47.907" endtime="20240913 07:24:47.908"/>
</kw>
<status status="PASS" starttime="20240913 07:24:45.724" endtime="20240913 07:24:47.908"/>
</kw>
<msg timestamp="20240913 07:24:47.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:45.723" endtime="20240913 07:24:47.908"/>
</kw>
<status status="PASS" starttime="20240913 07:24:45.723" endtime="20240913 07:24:47.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:47.912" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:50.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:50.213" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=72209ba6694c456821d7660ad293cbf1c4f4e6ecdcba764eb8505c0e1e97d24c</msg>
<status status="PASS" starttime="20240913 07:24:47.909" endtime="20240913 07:24:50.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:50.214" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=72209ba6694c456821d7660ad293cbf1c4f4e6ecdcba764eb8505c0e1e97d24c</msg>
<status status="PASS" starttime="20240913 07:24:50.214" endtime="20240913 07:24:50.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:50.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:50.214" endtime="20240913 07:24:50.215"/>
</kw>
<status status="PASS" starttime="20240913 07:24:47.909" endtime="20240913 07:24:50.215"/>
</kw>
<msg timestamp="20240913 07:24:50.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:47.909" endtime="20240913 07:24:50.215"/>
</kw>
<msg timestamp="20240913 07:24:50.215" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=72209ba6694c456821d7660ad293cbf1c4f4e6ecdcba764eb8505c0e1e97d24c</msg>
<status status="PASS" starttime="20240913 07:24:47.908" endtime="20240913 07:24:50.215"/>
</kw>
<status status="PASS" starttime="20240913 07:24:45.723" endtime="20240913 07:24:50.215"/>
</branch>
<status status="PASS" starttime="20240913 07:24:45.723" endtime="20240913 07:24:50.215"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:24:50.216" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:24:50.216" endtime="20240913 07:24:50.216"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240913 07:24:50.217" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:24:50.216" endtime="20240913 07:24:50.217"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:24:50.217" level="INFO">${secret} = ['72209ba6694c456821d7660ad293cbf1c4f4e6ecdcba764eb8505c0e1e97d24c']</msg>
<status status="PASS" starttime="20240913 07:24:50.217" endtime="20240913 07:24:50.217"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:24:50.218" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:24:50.217" endtime="20240913 07:24:50.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:24:50.219" level="INFO">${secret} = 72209ba6694c456821d7660ad293cbf1c4f4e6ecdcba764eb8505c0e1e97d24c</msg>
<status status="PASS" starttime="20240913 07:24:50.218" endtime="20240913 07:24:50.219"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:50.222" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:50.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:50.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:50.220" endtime="20240913 07:24:50.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:50.621" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:50.620" endtime="20240913 07:24:50.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:50.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:50.621" endtime="20240913 07:24:50.622"/>
</kw>
<status status="PASS" starttime="20240913 07:24:50.220" endtime="20240913 07:24:50.622"/>
</kw>
<msg timestamp="20240913 07:24:50.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:50.220" endtime="20240913 07:24:50.622"/>
</kw>
<status status="PASS" starttime="20240913 07:24:50.219" endtime="20240913 07:24:50.622"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:50.626" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:51.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:51.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:50.623" endtime="20240913 07:24:51.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:51.036" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:51.035" endtime="20240913 07:24:51.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:51.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:51.036" endtime="20240913 07:24:51.036"/>
</kw>
<status status="PASS" starttime="20240913 07:24:50.623" endtime="20240913 07:24:51.037"/>
</kw>
<msg timestamp="20240913 07:24:51.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:50.623" endtime="20240913 07:24:51.037"/>
</kw>
<status status="PASS" starttime="20240913 07:24:50.622" endtime="20240913 07:24:51.037"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:51.041" level="INFO">Running command 'aws configure set aws_secret_access_key 72209ba6694c456821d7660ad293cbf1c4f4e6ecdcba764eb8505c0e1e97d24c 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:51.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:51.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:51.039" endtime="20240913 07:24:51.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:51.433" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:51.433" endtime="20240913 07:24:51.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:51.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:51.434" endtime="20240913 07:24:51.434"/>
</kw>
<status status="PASS" starttime="20240913 07:24:51.038" endtime="20240913 07:24:51.434"/>
</kw>
<msg timestamp="20240913 07:24:51.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:51.038" endtime="20240913 07:24:51.435"/>
</kw>
<status status="PASS" starttime="20240913 07:24:51.037" endtime="20240913 07:24:51.435"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:51.438" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:51.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:51.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:51.436" endtime="20240913 07:24:51.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:51.832" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:51.831" endtime="20240913 07:24:51.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:51.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:51.832" endtime="20240913 07:24:51.832"/>
</kw>
<status status="PASS" starttime="20240913 07:24:51.435" endtime="20240913 07:24:51.833"/>
</kw>
<msg timestamp="20240913 07:24:51.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:51.435" endtime="20240913 07:24:51.833"/>
</kw>
<status status="PASS" starttime="20240913 07:24:51.435" endtime="20240913 07:24:51.833"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:51.836" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:52.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:52.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:51.834" endtime="20240913 07:24:52.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:52.219" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:52.219" endtime="20240913 07:24:52.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:52.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:52.219" endtime="20240913 07:24:52.220"/>
</kw>
<status status="PASS" starttime="20240913 07:24:51.834" endtime="20240913 07:24:52.220"/>
</kw>
<msg timestamp="20240913 07:24:52.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:51.833" endtime="20240913 07:24:52.221"/>
</kw>
<status status="PASS" starttime="20240913 07:24:51.833" endtime="20240913 07:24:52.221"/>
</kw>
<status status="PASS" starttime="20240913 07:24:43.442" endtime="20240913 07:24:52.221"/>
</kw>
<status status="PASS" starttime="20240913 07:24:43.442" endtime="20240913 07:24:52.221"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240913 07:24:52.221" endtime="20240913 07:24:52.221"/>
</kw>
<status status="PASS" starttime="20240913 07:24:43.410" endtime="20240913 07:24:52.221"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:52.224" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:54.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:54.246" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:29 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240913 07:24:52.222" endtime="20240913 07:24:54.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:54.247" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:29 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 13 Sep 2024 07:24:52 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240913 07:24:54.247" endtime="20240913 07:24:54.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:54.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:54.247" endtime="20240913 07:24:54.248"/>
</kw>
<msg timestamp="20240913 07:24:54.248" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:29 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240913 07:24:52.222" endtime="20240913 07:24:54.248"/>
</kw>
<msg timestamp="20240913 07:24:54.248" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:29 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240913 07:24:52.221" endtime="20240913 07:24:54.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:24:54.249" endtime="20240913 07:24:54.249"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:54.252" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:54.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:54.257" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:24:54.250" endtime="20240913 07:24:54.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:54.259" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:24:54.258" endtime="20240913 07:24:54.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:54.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:54.259" endtime="20240913 07:24:54.259"/>
</kw>
<msg timestamp="20240913 07:24:54.260" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:24:54.249" endtime="20240913 07:24:54.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:24:54.260" endtime="20240913 07:24:54.260"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:54.263" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:54.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:54.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:54.261" endtime="20240913 07:24:54.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:54.268" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:54.268" endtime="20240913 07:24:54.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:54.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:54.269" endtime="20240913 07:24:54.269"/>
</kw>
<status status="PASS" starttime="20240913 07:24:54.260" endtime="20240913 07:24:54.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:24:43.409" endtime="20240913 07:24:54.269"/>
</test>
<test id="s1-s5-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:24:54.272" endtime="20240913 07:24:54.272"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:54.276" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:54.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:54.280" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:24:54.274" endtime="20240913 07:24:54.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:54.280" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:24:54.280" endtime="20240913 07:24:54.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:54.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:54.281" endtime="20240913 07:24:54.281"/>
</kw>
<status status="PASS" starttime="20240913 07:24:54.273" endtime="20240913 07:24:54.281"/>
</kw>
<msg timestamp="20240913 07:24:54.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:54.273" endtime="20240913 07:24:54.282"/>
</kw>
<msg timestamp="20240913 07:24:54.282" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:24:54.273" endtime="20240913 07:24:54.282"/>
</kw>
<msg timestamp="20240913 07:24:54.282" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:24:54.272" endtime="20240913 07:24:54.282"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:24:54.282" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:24:54.282" endtime="20240913 07:24:54.282"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:54.286" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:54.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:54.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:24:54.284" endtime="20240913 07:24:54.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:54.302" level="INFO"/>
<status status="PASS" starttime="20240913 07:24:54.302" endtime="20240913 07:24:54.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:54.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:54.302" endtime="20240913 07:24:54.303"/>
</kw>
<status status="PASS" starttime="20240913 07:24:54.283" endtime="20240913 07:24:54.303"/>
</kw>
<msg timestamp="20240913 07:24:54.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:54.283" endtime="20240913 07:24:54.303"/>
</kw>
<status status="PASS" starttime="20240913 07:24:54.283" endtime="20240913 07:24:54.303"/>
</kw>
<status status="PASS" starttime="20240913 07:24:54.282" endtime="20240913 07:24:54.303"/>
</kw>
<status status="PASS" starttime="20240913 07:24:54.272" endtime="20240913 07:24:54.303"/>
</kw>
<status status="PASS" starttime="20240913 07:24:54.271" endtime="20240913 07:24:54.303"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:54.307" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:56.474" level="INFO">${rc} = 255</msg>
<msg timestamp="20240913 07:24:56.474" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:24:54.305" endtime="20240913 07:24:56.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:56.475" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:24:56.475" endtime="20240913 07:24:56.476"/>
</kw>
<msg timestamp="20240913 07:24:56.476" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:24:54.305" endtime="20240913 07:24:56.476"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:24:56.476" endtime="20240913 07:24:56.477"/>
</kw>
<msg timestamp="20240913 07:24:56.477" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240913 07:24:56.476" endtime="20240913 07:24:56.477"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:56.480" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:24:58.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:24:58.692" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:24:56.478" endtime="20240913 07:24:58.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:24:58.693" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:24:58.693" endtime="20240913 07:24:58.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:24:58.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:24:58.693" endtime="20240913 07:24:58.694"/>
</kw>
<status status="PASS" starttime="20240913 07:24:56.478" endtime="20240913 07:24:58.694"/>
</kw>
<msg timestamp="20240913 07:24:58.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:56.478" endtime="20240913 07:24:58.694"/>
</kw>
<status status="PASS" starttime="20240913 07:24:56.477" endtime="20240913 07:24:58.695"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:24:58.710" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:01.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:01.008" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=79b7b236eabf6a967eaff21510c51274dae7f79d1e003449d460e0b0d01351d5</msg>
<status status="PASS" starttime="20240913 07:24:58.698" endtime="20240913 07:25:01.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:01.010" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=79b7b236eabf6a967eaff21510c51274dae7f79d1e003449d460e0b0d01351d5</msg>
<status status="PASS" starttime="20240913 07:25:01.009" endtime="20240913 07:25:01.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:01.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:01.010" endtime="20240913 07:25:01.010"/>
</kw>
<status status="PASS" starttime="20240913 07:24:58.696" endtime="20240913 07:25:01.011"/>
</kw>
<msg timestamp="20240913 07:25:01.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:24:58.695" endtime="20240913 07:25:01.011"/>
</kw>
<msg timestamp="20240913 07:25:01.011" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=79b7b236eabf6a967eaff21510c51274dae7f79d1e003449d460e0b0d01351d5</msg>
<status status="PASS" starttime="20240913 07:24:58.695" endtime="20240913 07:25:01.011"/>
</kw>
<status status="PASS" starttime="20240913 07:24:56.477" endtime="20240913 07:25:01.011"/>
</branch>
<status status="PASS" starttime="20240913 07:24:56.477" endtime="20240913 07:25:01.011"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:25:01.012" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:25:01.012" endtime="20240913 07:25:01.012"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240913 07:25:01.013" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:25:01.012" endtime="20240913 07:25:01.013"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:25:01.013" level="INFO">${secret} = ['79b7b236eabf6a967eaff21510c51274dae7f79d1e003449d460e0b0d01351d5']</msg>
<status status="PASS" starttime="20240913 07:25:01.013" endtime="20240913 07:25:01.013"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:25:01.015" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:01.014" endtime="20240913 07:25:01.015"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:25:01.016" level="INFO">${secret} = 79b7b236eabf6a967eaff21510c51274dae7f79d1e003449d460e0b0d01351d5</msg>
<status status="PASS" starttime="20240913 07:25:01.015" endtime="20240913 07:25:01.016"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:01.021" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:01.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:01.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:01.018" endtime="20240913 07:25:01.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:01.427" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:01.426" endtime="20240913 07:25:01.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:01.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:01.427" endtime="20240913 07:25:01.427"/>
</kw>
<status status="PASS" starttime="20240913 07:25:01.017" endtime="20240913 07:25:01.428"/>
</kw>
<msg timestamp="20240913 07:25:01.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:01.017" endtime="20240913 07:25:01.428"/>
</kw>
<status status="PASS" starttime="20240913 07:25:01.016" endtime="20240913 07:25:01.428"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:01.431" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:01.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:01.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:01.429" endtime="20240913 07:25:01.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:01.825" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:01.825" endtime="20240913 07:25:01.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:01.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:01.825" endtime="20240913 07:25:01.826"/>
</kw>
<status status="PASS" starttime="20240913 07:25:01.429" endtime="20240913 07:25:01.826"/>
</kw>
<msg timestamp="20240913 07:25:01.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:01.428" endtime="20240913 07:25:01.826"/>
</kw>
<status status="PASS" starttime="20240913 07:25:01.428" endtime="20240913 07:25:01.826"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:01.830" level="INFO">Running command 'aws configure set aws_secret_access_key 79b7b236eabf6a967eaff21510c51274dae7f79d1e003449d460e0b0d01351d5 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:02.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:02.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:01.827" endtime="20240913 07:25:02.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:02.240" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:02.240" endtime="20240913 07:25:02.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:02.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:02.241" endtime="20240913 07:25:02.241"/>
</kw>
<status status="PASS" starttime="20240913 07:25:01.827" endtime="20240913 07:25:02.241"/>
</kw>
<msg timestamp="20240913 07:25:02.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:01.827" endtime="20240913 07:25:02.241"/>
</kw>
<status status="PASS" starttime="20240913 07:25:01.826" endtime="20240913 07:25:02.241"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:02.245" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:02.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:02.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:02.243" endtime="20240913 07:25:02.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:02.668" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:02.667" endtime="20240913 07:25:02.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:02.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:02.668" endtime="20240913 07:25:02.669"/>
</kw>
<status status="PASS" starttime="20240913 07:25:02.242" endtime="20240913 07:25:02.669"/>
</kw>
<msg timestamp="20240913 07:25:02.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:02.242" endtime="20240913 07:25:02.669"/>
</kw>
<status status="PASS" starttime="20240913 07:25:02.242" endtime="20240913 07:25:02.669"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:02.673" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:03.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:03.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:02.670" endtime="20240913 07:25:03.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:03.064" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:03.063" endtime="20240913 07:25:03.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:03.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:03.064" endtime="20240913 07:25:03.064"/>
</kw>
<status status="PASS" starttime="20240913 07:25:02.670" endtime="20240913 07:25:03.064"/>
</kw>
<msg timestamp="20240913 07:25:03.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:02.670" endtime="20240913 07:25:03.065"/>
</kw>
<status status="PASS" starttime="20240913 07:25:02.669" endtime="20240913 07:25:03.065"/>
</kw>
<status status="PASS" starttime="20240913 07:24:54.304" endtime="20240913 07:25:03.065"/>
</kw>
<status status="PASS" starttime="20240913 07:24:54.304" endtime="20240913 07:25:03.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240913 07:25:03.065" endtime="20240913 07:25:03.065"/>
</kw>
<status status="PASS" starttime="20240913 07:24:54.271" endtime="20240913 07:25:03.065"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:03.069" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:03.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:03.640" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240913 07:25:03.066" endtime="20240913 07:25:03.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:03.641" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 13 Sep 2024 07:25:03 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240913 07:25:03.641" endtime="20240913 07:25:03.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:03.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:03.642" endtime="20240913 07:25:03.642"/>
</kw>
<msg timestamp="20240913 07:25:03.642" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240913 07:25:03.066" endtime="20240913 07:25:03.642"/>
</kw>
<msg timestamp="20240913 07:25:03.643" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:22:37 GMT",
    "ContentLength": 31,
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240913 07:25:03.066" endtime="20240913 07:25:03.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:03.643" endtime="20240913 07:25:03.643"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:03.647" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:03.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:03.652" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20240913 07:25:03.644" endtime="20240913 07:25:03.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:03.653" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20240913 07:25:03.652" endtime="20240913 07:25:03.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:03.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:03.653" endtime="20240913 07:25:03.653"/>
</kw>
<msg timestamp="20240913 07:25:03.653" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20240913 07:25:03.643" endtime="20240913 07:25:03.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:03.654" endtime="20240913 07:25:03.654"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:03.657" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:03.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:03.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:03.655" endtime="20240913 07:25:03.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:03.661" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:03.661" endtime="20240913 07:25:03.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:03.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:03.661" endtime="20240913 07:25:03.662"/>
</kw>
<status status="PASS" starttime="20240913 07:25:03.654" endtime="20240913 07:25:03.662"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:24:54.270" endtime="20240913 07:25:03.662"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20240913 07:24:38.814" endtime="20240913 07:25:03.663"/>
</suite>
<suite id="s1-s6" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-old1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:25:04.521" endtime="20240913 07:25:04.521"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:04.525" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:04.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:04.530" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:25:04.523" endtime="20240913 07:25:04.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:04.531" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:25:04.531" endtime="20240913 07:25:04.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:04.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:04.531" endtime="20240913 07:25:04.531"/>
</kw>
<status status="PASS" starttime="20240913 07:25:04.522" endtime="20240913 07:25:04.532"/>
</kw>
<msg timestamp="20240913 07:25:04.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:04.522" endtime="20240913 07:25:04.532"/>
</kw>
<msg timestamp="20240913 07:25:04.532" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:25:04.522" endtime="20240913 07:25:04.532"/>
</kw>
<msg timestamp="20240913 07:25:04.532" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:04.522" endtime="20240913 07:25:04.532"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:25:04.533" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:04.532" endtime="20240913 07:25:04.533"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:04.537" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:04.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:04.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:04.534" endtime="20240913 07:25:04.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:04.556" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:04.555" endtime="20240913 07:25:04.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:04.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:04.556" endtime="20240913 07:25:04.556"/>
</kw>
<status status="PASS" starttime="20240913 07:25:04.534" endtime="20240913 07:25:04.557"/>
</kw>
<msg timestamp="20240913 07:25:04.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:04.534" endtime="20240913 07:25:04.557"/>
</kw>
<status status="PASS" starttime="20240913 07:25:04.533" endtime="20240913 07:25:04.557"/>
</kw>
<status status="PASS" starttime="20240913 07:25:04.533" endtime="20240913 07:25:04.557"/>
</kw>
<status status="PASS" starttime="20240913 07:25:04.521" endtime="20240913 07:25:04.557"/>
</kw>
<status status="PASS" starttime="20240913 07:25:04.520" endtime="20240913 07:25:04.557"/>
</kw>
<test id="s1-s6-t1" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:04.561" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240913 07:25:04.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:04.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:04.558" endtime="20240913 07:25:04.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:04.564" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:04.563" endtime="20240913 07:25:04.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:04.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:04.564" endtime="20240913 07:25:04.564"/>
</kw>
<status status="PASS" starttime="20240913 07:25:04.558" endtime="20240913 07:25:04.564"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:04.568" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:11.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:11.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:04.566" endtime="20240913 07:25:11.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:11.508" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:11.507" endtime="20240913 07:25:11.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:11.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:11.508" endtime="20240913 07:25:11.509"/>
</kw>
<status status="PASS" starttime="20240913 07:25:04.565" endtime="20240913 07:25:11.509"/>
</kw>
<msg timestamp="20240913 07:25:11.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:04.565" endtime="20240913 07:25:11.509"/>
</kw>
<msg timestamp="20240913 07:25:11.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:04.564" endtime="20240913 07:25:11.509"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:11.509" endtime="20240913 07:25:11.510"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:11.512" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:11.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:11.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:11.510" endtime="20240913 07:25:11.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:11.517" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:11.517" endtime="20240913 07:25:11.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:11.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:11.517" endtime="20240913 07:25:11.518"/>
</kw>
<status status="PASS" starttime="20240913 07:25:11.510" endtime="20240913 07:25:11.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:04.557" endtime="20240913 07:25:11.518"/>
</test>
<test id="s1-s6-t2" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:11.522" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240913 07:25:11.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:11.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:11.519" endtime="20240913 07:25:11.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:11.524" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:11.524" endtime="20240913 07:25:11.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:11.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:11.525" endtime="20240913 07:25:11.525"/>
</kw>
<status status="PASS" starttime="20240913 07:25:11.519" endtime="20240913 07:25:11.525"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:11.528" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:15.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:15.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:11.526" endtime="20240913 07:25:15.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:15.969" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:15.968" endtime="20240913 07:25:15.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:15.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:15.969" endtime="20240913 07:25:15.969"/>
</kw>
<status status="PASS" starttime="20240913 07:25:11.526" endtime="20240913 07:25:15.969"/>
</kw>
<msg timestamp="20240913 07:25:15.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:11.526" endtime="20240913 07:25:15.970"/>
</kw>
<msg timestamp="20240913 07:25:15.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:11.525" endtime="20240913 07:25:15.970"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:15.970" endtime="20240913 07:25:15.970"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:15.973" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:15.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:15.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:15.971" endtime="20240913 07:25:15.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:15.978" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:15.977" endtime="20240913 07:25:15.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:15.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:15.978" endtime="20240913 07:25:15.978"/>
</kw>
<status status="PASS" starttime="20240913 07:25:15.970" endtime="20240913 07:25:15.979"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:11.518" endtime="20240913 07:25:15.979"/>
</test>
<test id="s1-s6-t3" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:25:15.981" endtime="20240913 07:25:15.981"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:15.984" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:15.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:15.988" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:25:15.982" endtime="20240913 07:25:15.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:15.989" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:25:15.988" endtime="20240913 07:25:15.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:15.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:15.989" endtime="20240913 07:25:15.989"/>
</kw>
<status status="PASS" starttime="20240913 07:25:15.982" endtime="20240913 07:25:15.990"/>
</kw>
<msg timestamp="20240913 07:25:15.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:15.982" endtime="20240913 07:25:15.990"/>
</kw>
<msg timestamp="20240913 07:25:15.990" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:25:15.982" endtime="20240913 07:25:15.990"/>
</kw>
<msg timestamp="20240913 07:25:15.990" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:15.981" endtime="20240913 07:25:15.990"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:25:15.991" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:15.990" endtime="20240913 07:25:15.991"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:15.994" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:16.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:16.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:15.992" endtime="20240913 07:25:16.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:16.016" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:16.015" endtime="20240913 07:25:16.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:16.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:16.016" endtime="20240913 07:25:16.017"/>
</kw>
<status status="PASS" starttime="20240913 07:25:15.992" endtime="20240913 07:25:16.017"/>
</kw>
<msg timestamp="20240913 07:25:16.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:15.991" endtime="20240913 07:25:16.017"/>
</kw>
<status status="PASS" starttime="20240913 07:25:15.991" endtime="20240913 07:25:16.017"/>
</kw>
<status status="PASS" starttime="20240913 07:25:15.991" endtime="20240913 07:25:16.017"/>
</kw>
<status status="PASS" starttime="20240913 07:25:15.980" endtime="20240913 07:25:16.017"/>
</kw>
<status status="PASS" starttime="20240913 07:25:15.980" endtime="20240913 07:25:16.017"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:16.020" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:18.109" level="INFO">${rc} = 255</msg>
<msg timestamp="20240913 07:25:18.110" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:25:16.018" endtime="20240913 07:25:18.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:18.111" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:25:18.110" endtime="20240913 07:25:18.111"/>
</kw>
<msg timestamp="20240913 07:25:18.111" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:25:16.018" endtime="20240913 07:25:18.111"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:18.111" endtime="20240913 07:25:18.112"/>
</kw>
<msg timestamp="20240913 07:25:18.112" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240913 07:25:18.111" endtime="20240913 07:25:18.112"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:18.116" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:20.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:20.371" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:25:18.113" endtime="20240913 07:25:20.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:20.372" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:25:20.372" endtime="20240913 07:25:20.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:20.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:20.373" endtime="20240913 07:25:20.373"/>
</kw>
<status status="PASS" starttime="20240913 07:25:18.113" endtime="20240913 07:25:20.373"/>
</kw>
<msg timestamp="20240913 07:25:20.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:18.113" endtime="20240913 07:25:20.373"/>
</kw>
<status status="PASS" starttime="20240913 07:25:18.112" endtime="20240913 07:25:20.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:20.377" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:22.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:22.541" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=18e6351d8a5cd6f01d87375eff1f7783c4e65225d9afa4b8b8e40dc3b06811a7</msg>
<status status="PASS" starttime="20240913 07:25:20.375" endtime="20240913 07:25:22.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:22.542" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=18e6351d8a5cd6f01d87375eff1f7783c4e65225d9afa4b8b8e40dc3b06811a7</msg>
<status status="PASS" starttime="20240913 07:25:22.541" endtime="20240913 07:25:22.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:22.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:22.542" endtime="20240913 07:25:22.543"/>
</kw>
<status status="PASS" starttime="20240913 07:25:20.374" endtime="20240913 07:25:22.543"/>
</kw>
<msg timestamp="20240913 07:25:22.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:20.374" endtime="20240913 07:25:22.543"/>
</kw>
<msg timestamp="20240913 07:25:22.543" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=18e6351d8a5cd6f01d87375eff1f7783c4e65225d9afa4b8b8e40dc3b06811a7</msg>
<status status="PASS" starttime="20240913 07:25:20.373" endtime="20240913 07:25:22.543"/>
</kw>
<status status="PASS" starttime="20240913 07:25:18.112" endtime="20240913 07:25:22.543"/>
</branch>
<status status="PASS" starttime="20240913 07:25:18.112" endtime="20240913 07:25:22.543"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:25:22.544" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:25:22.544" endtime="20240913 07:25:22.544"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240913 07:25:22.545" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:25:22.544" endtime="20240913 07:25:22.545"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:25:22.545" level="INFO">${secret} = ['18e6351d8a5cd6f01d87375eff1f7783c4e65225d9afa4b8b8e40dc3b06811a7']</msg>
<status status="PASS" starttime="20240913 07:25:22.545" endtime="20240913 07:25:22.545"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:25:22.546" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:22.545" endtime="20240913 07:25:22.546"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:25:22.547" level="INFO">${secret} = 18e6351d8a5cd6f01d87375eff1f7783c4e65225d9afa4b8b8e40dc3b06811a7</msg>
<status status="PASS" starttime="20240913 07:25:22.546" endtime="20240913 07:25:22.547"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:22.551" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:22.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:22.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:22.549" endtime="20240913 07:25:22.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:22.942" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:22.941" endtime="20240913 07:25:22.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:22.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:22.942" endtime="20240913 07:25:22.942"/>
</kw>
<status status="PASS" starttime="20240913 07:25:22.548" endtime="20240913 07:25:22.942"/>
</kw>
<msg timestamp="20240913 07:25:22.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:22.548" endtime="20240913 07:25:22.943"/>
</kw>
<status status="PASS" starttime="20240913 07:25:22.547" endtime="20240913 07:25:22.943"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:22.946" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:23.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:23.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:22.944" endtime="20240913 07:25:23.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:23.345" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:23.345" endtime="20240913 07:25:23.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:23.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:23.346" endtime="20240913 07:25:23.346"/>
</kw>
<status status="PASS" starttime="20240913 07:25:22.944" endtime="20240913 07:25:23.346"/>
</kw>
<msg timestamp="20240913 07:25:23.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:22.943" endtime="20240913 07:25:23.346"/>
</kw>
<status status="PASS" starttime="20240913 07:25:22.943" endtime="20240913 07:25:23.346"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:23.350" level="INFO">Running command 'aws configure set aws_secret_access_key 18e6351d8a5cd6f01d87375eff1f7783c4e65225d9afa4b8b8e40dc3b06811a7 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:23.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:23.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:23.348" endtime="20240913 07:25:23.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:23.752" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:23.751" endtime="20240913 07:25:23.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:23.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:23.752" endtime="20240913 07:25:23.753"/>
</kw>
<status status="PASS" starttime="20240913 07:25:23.347" endtime="20240913 07:25:23.753"/>
</kw>
<msg timestamp="20240913 07:25:23.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:23.347" endtime="20240913 07:25:23.753"/>
</kw>
<status status="PASS" starttime="20240913 07:25:23.347" endtime="20240913 07:25:23.753"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:23.756" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:24.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:24.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:23.754" endtime="20240913 07:25:24.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:24.150" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:24.150" endtime="20240913 07:25:24.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:24.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:24.151" endtime="20240913 07:25:24.151"/>
</kw>
<status status="PASS" starttime="20240913 07:25:23.754" endtime="20240913 07:25:24.151"/>
</kw>
<msg timestamp="20240913 07:25:24.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:23.754" endtime="20240913 07:25:24.151"/>
</kw>
<status status="PASS" starttime="20240913 07:25:23.753" endtime="20240913 07:25:24.152"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:24.155" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:24.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:24.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:24.153" endtime="20240913 07:25:24.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:24.579" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:24.578" endtime="20240913 07:25:24.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:24.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:24.579" endtime="20240913 07:25:24.580"/>
</kw>
<status status="PASS" starttime="20240913 07:25:24.152" endtime="20240913 07:25:24.580"/>
</kw>
<msg timestamp="20240913 07:25:24.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:24.152" endtime="20240913 07:25:24.580"/>
</kw>
<status status="PASS" starttime="20240913 07:25:24.152" endtime="20240913 07:25:24.580"/>
</kw>
<status status="PASS" starttime="20240913 07:25:16.018" endtime="20240913 07:25:24.580"/>
</kw>
<status status="PASS" starttime="20240913 07:25:16.017" endtime="20240913 07:25:24.580"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240913 07:25:24.580" endtime="20240913 07:25:24.581"/>
</kw>
<status status="PASS" starttime="20240913 07:25:15.980" endtime="20240913 07:25:24.581"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240913 07:25:24.582" level="INFO">${randStr} = 8168688545</msg>
<status status="PASS" starttime="20240913 07:25:24.581" endtime="20240913 07:25:24.582"/>
</kw>
<msg timestamp="20240913 07:25:24.582" level="INFO">${random} = ozone-test-8168688545</msg>
<status status="PASS" starttime="20240913 07:25:24.581" endtime="20240913 07:25:24.582"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:24.587" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-8168688545 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:25.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:25.141" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8168688545"
}</msg>
<status status="PASS" starttime="20240913 07:25:24.584" endtime="20240913 07:25:25.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:25.142" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8168688545"
}</msg>
<status status="PASS" starttime="20240913 07:25:25.142" endtime="20240913 07:25:25.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:25.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:25.142" endtime="20240913 07:25:25.143"/>
</kw>
<status status="PASS" starttime="20240913 07:25:24.584" endtime="20240913 07:25:25.143"/>
</kw>
<msg timestamp="20240913 07:25:25.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:24.584" endtime="20240913 07:25:25.143"/>
</kw>
<msg timestamp="20240913 07:25:25.143" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8168688545"
}</msg>
<status status="PASS" starttime="20240913 07:25:24.583" endtime="20240913 07:25:25.143"/>
</kw>
<msg timestamp="20240913 07:25:25.144" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-8168688545"
}</msg>
<status status="PASS" starttime="20240913 07:25:24.583" endtime="20240913 07:25:25.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:25.144" endtime="20240913 07:25:25.144"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:25.144" endtime="20240913 07:25:25.145"/>
</kw>
<msg timestamp="20240913 07:25:25.145" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20240913 07:25:24.582" endtime="20240913 07:25:25.145"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240913 07:25:25.145" endtime="20240913 07:25:25.145"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:15.979" endtime="20240913 07:25:25.146"/>
</test>
<test id="s1-s6-t4" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:25.150" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240913 07:25:25.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:25.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:25.147" endtime="20240913 07:25:25.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:25.153" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:25.152" endtime="20240913 07:25:25.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:25.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:25.153" endtime="20240913 07:25:25.153"/>
</kw>
<status status="PASS" starttime="20240913 07:25:25.147" endtime="20240913 07:25:25.153"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:25.157" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:25.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:25.988" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240913 07:25:25.155" endtime="20240913 07:25:25.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:25.990" level="INFO">{
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240913 07:25:25.989" endtime="20240913 07:25:25.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:25.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:25.990" endtime="20240913 07:25:25.991"/>
</kw>
<msg timestamp="20240913 07:25:25.991" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240913 07:25:25.154" endtime="20240913 07:25:25.991"/>
</kw>
<msg timestamp="20240913 07:25:25.991" level="INFO">${output} = {
    "ETag": "\"ccf270711bab7044e5649ddb2501bfdf\""
}</msg>
<status status="PASS" starttime="20240913 07:25:25.154" endtime="20240913 07:25:25.991"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:25.991" endtime="20240913 07:25:25.992"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:25.995" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:26.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:26.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:25.992" endtime="20240913 07:25:26.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:26.001" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:26.001" endtime="20240913 07:25:26.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:26.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:26.002" endtime="20240913 07:25:26.002"/>
</kw>
<status status="PASS" starttime="20240913 07:25:25.992" endtime="20240913 07:25:26.002"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:25.146" endtime="20240913 07:25:26.003"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20240913 07:25:04.453" endtime="20240913 07:25:26.004"/>
</suite>
<suite id="s1-s7" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-new1" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:25:26.764" endtime="20240913 07:25:26.765"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:26.768" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:26.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:26.772" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:25:26.766" endtime="20240913 07:25:26.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:26.773" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:25:26.772" endtime="20240913 07:25:26.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:26.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:26.773" endtime="20240913 07:25:26.773"/>
</kw>
<status status="PASS" starttime="20240913 07:25:26.765" endtime="20240913 07:25:26.773"/>
</kw>
<msg timestamp="20240913 07:25:26.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:26.765" endtime="20240913 07:25:26.773"/>
</kw>
<msg timestamp="20240913 07:25:26.774" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:25:26.765" endtime="20240913 07:25:26.774"/>
</kw>
<msg timestamp="20240913 07:25:26.774" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:26.765" endtime="20240913 07:25:26.774"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:25:26.774" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:26.774" endtime="20240913 07:25:26.774"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:26.778" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:26.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:26.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:26.776" endtime="20240913 07:25:26.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:26.794" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:26.794" endtime="20240913 07:25:26.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:26.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:26.794" endtime="20240913 07:25:26.795"/>
</kw>
<status status="PASS" starttime="20240913 07:25:26.775" endtime="20240913 07:25:26.795"/>
</kw>
<msg timestamp="20240913 07:25:26.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:26.775" endtime="20240913 07:25:26.795"/>
</kw>
<status status="PASS" starttime="20240913 07:25:26.775" endtime="20240913 07:25:26.795"/>
</kw>
<status status="PASS" starttime="20240913 07:25:26.774" endtime="20240913 07:25:26.795"/>
</kw>
<status status="PASS" starttime="20240913 07:25:26.764" endtime="20240913 07:25:26.795"/>
</kw>
<status status="PASS" starttime="20240913 07:25:26.764" endtime="20240913 07:25:26.795"/>
</kw>
<test id="s1-s7-t1" name="Create a volume and bucket" line="29">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:26.799" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:29.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:29.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:26.797" endtime="20240913 07:25:29.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:29.717" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:29.716" endtime="20240913 07:25:29.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:29.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:29.717" endtime="20240913 07:25:29.718"/>
</kw>
<status status="PASS" starttime="20240913 07:25:26.797" endtime="20240913 07:25:29.718"/>
</kw>
<msg timestamp="20240913 07:25:29.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:26.797" endtime="20240913 07:25:29.719"/>
</kw>
<msg timestamp="20240913 07:25:29.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:26.796" endtime="20240913 07:25:29.719"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:29.719" endtime="20240913 07:25:29.719"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:29.723" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:32.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:32.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:29.721" endtime="20240913 07:25:32.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:32.470" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:32.469" endtime="20240913 07:25:32.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:32.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:32.470" endtime="20240913 07:25:32.470"/>
</kw>
<status status="PASS" starttime="20240913 07:25:29.720" endtime="20240913 07:25:32.470"/>
</kw>
<msg timestamp="20240913 07:25:32.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:29.720" endtime="20240913 07:25:32.471"/>
</kw>
<msg timestamp="20240913 07:25:32.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:29.720" endtime="20240913 07:25:32.471"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:32.471" endtime="20240913 07:25:32.471"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:26.796" endtime="20240913 07:25:32.471"/>
</test>
<test id="s1-s7-t2" name="Create key" line="36">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:32.475" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240913 07:25:32.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:32.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:32.473" endtime="20240913 07:25:32.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:32.478" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:32.478" endtime="20240913 07:25:32.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:32.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:32.478" endtime="20240913 07:25:32.479"/>
</kw>
<status status="PASS" starttime="20240913 07:25:32.473" endtime="20240913 07:25:32.479"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:32.482" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:37.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:37.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:32.480" endtime="20240913 07:25:37.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:37.141" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:37.140" endtime="20240913 07:25:37.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:37.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:37.141" endtime="20240913 07:25:37.142"/>
</kw>
<status status="PASS" starttime="20240913 07:25:32.480" endtime="20240913 07:25:37.142"/>
</kw>
<msg timestamp="20240913 07:25:37.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:32.480" endtime="20240913 07:25:37.142"/>
</kw>
<msg timestamp="20240913 07:25:37.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:32.479" endtime="20240913 07:25:37.142"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:37.142" endtime="20240913 07:25:37.143"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:37.145" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:37.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:37.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:37.143" endtime="20240913 07:25:37.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:37.150" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:37.150" endtime="20240913 07:25:37.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:37.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:37.150" endtime="20240913 07:25:37.151"/>
</kw>
<status status="PASS" starttime="20240913 07:25:37.143" endtime="20240913 07:25:37.151"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:32.472" endtime="20240913 07:25:37.151"/>
</test>
<test id="s1-s7-t3" name="Create a bucket in s3v volume" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:37.155" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:40.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:40.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:37.153" endtime="20240913 07:25:40.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:40.079" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:40.078" endtime="20240913 07:25:40.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:40.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:40.079" endtime="20240913 07:25:40.080"/>
</kw>
<status status="PASS" starttime="20240913 07:25:37.153" endtime="20240913 07:25:40.080"/>
</kw>
<msg timestamp="20240913 07:25:40.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:37.153" endtime="20240913 07:25:40.080"/>
</kw>
<msg timestamp="20240913 07:25:40.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:37.152" endtime="20240913 07:25:40.080"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:40.080" endtime="20240913 07:25:40.081"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:37.152" endtime="20240913 07:25:40.081"/>
</test>
<test id="s1-s7-t4" name="Create key in the bucket in s3v volume" line="47">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:40.085" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240913 07:25:40.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:40.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:40.082" endtime="20240913 07:25:40.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:40.087" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:40.087" endtime="20240913 07:25:40.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:40.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:40.088" endtime="20240913 07:25:40.088"/>
</kw>
<status status="PASS" starttime="20240913 07:25:40.082" endtime="20240913 07:25:40.088"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:40.091" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:44.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:44.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:40.089" endtime="20240913 07:25:44.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:44.617" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:44.616" endtime="20240913 07:25:44.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:44.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:44.617" endtime="20240913 07:25:44.617"/>
</kw>
<status status="PASS" starttime="20240913 07:25:40.089" endtime="20240913 07:25:44.617"/>
</kw>
<msg timestamp="20240913 07:25:44.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:40.089" endtime="20240913 07:25:44.617"/>
</kw>
<msg timestamp="20240913 07:25:44.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:40.088" endtime="20240913 07:25:44.618"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:44.618" endtime="20240913 07:25:44.618"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:44.621" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:44.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:44.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:44.619" endtime="20240913 07:25:44.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:44.626" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:44.625" endtime="20240913 07:25:44.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:44.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:44.626" endtime="20240913 07:25:44.626"/>
</kw>
<status status="PASS" starttime="20240913 07:25:44.618" endtime="20240913 07:25:44.626"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:40.081" endtime="20240913 07:25:44.627"/>
</test>
<test id="s1-s7-t5" name="Try to create a bucket using S3 API" line="53">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:25:44.629" endtime="20240913 07:25:44.629"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:44.632" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:44.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:44.636" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:25:44.630" endtime="20240913 07:25:44.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:44.637" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:25:44.637" endtime="20240913 07:25:44.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:44.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:44.637" endtime="20240913 07:25:44.638"/>
</kw>
<status status="PASS" starttime="20240913 07:25:44.630" endtime="20240913 07:25:44.638"/>
</kw>
<msg timestamp="20240913 07:25:44.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:44.630" endtime="20240913 07:25:44.638"/>
</kw>
<msg timestamp="20240913 07:25:44.638" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:25:44.630" endtime="20240913 07:25:44.638"/>
</kw>
<msg timestamp="20240913 07:25:44.638" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:44.629" endtime="20240913 07:25:44.638"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:25:44.639" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:44.638" endtime="20240913 07:25:44.639"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:44.642" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:44.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:44.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:44.640" endtime="20240913 07:25:44.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:44.661" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:44.660" endtime="20240913 07:25:44.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:44.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:44.661" endtime="20240913 07:25:44.661"/>
</kw>
<status status="PASS" starttime="20240913 07:25:44.640" endtime="20240913 07:25:44.661"/>
</kw>
<msg timestamp="20240913 07:25:44.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:44.640" endtime="20240913 07:25:44.662"/>
</kw>
<status status="PASS" starttime="20240913 07:25:44.639" endtime="20240913 07:25:44.662"/>
</kw>
<status status="PASS" starttime="20240913 07:25:44.639" endtime="20240913 07:25:44.662"/>
</kw>
<status status="PASS" starttime="20240913 07:25:44.628" endtime="20240913 07:25:44.662"/>
</kw>
<status status="PASS" starttime="20240913 07:25:44.628" endtime="20240913 07:25:44.662"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:44.665" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:46.778" level="INFO">${rc} = 255</msg>
<msg timestamp="20240913 07:25:46.778" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:25:44.663" endtime="20240913 07:25:46.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:46.779" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:25:46.779" endtime="20240913 07:25:46.779"/>
</kw>
<msg timestamp="20240913 07:25:46.780" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:25:44.663" endtime="20240913 07:25:46.780"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:46.780" endtime="20240913 07:25:46.781"/>
</kw>
<msg timestamp="20240913 07:25:46.781" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240913 07:25:46.780" endtime="20240913 07:25:46.781"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:46.785" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:48.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:48.977" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:25:46.782" endtime="20240913 07:25:48.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:48.978" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:25:48.977" endtime="20240913 07:25:48.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:48.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:48.978" endtime="20240913 07:25:48.978"/>
</kw>
<status status="PASS" starttime="20240913 07:25:46.782" endtime="20240913 07:25:48.978"/>
</kw>
<msg timestamp="20240913 07:25:48.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:46.782" endtime="20240913 07:25:48.979"/>
</kw>
<status status="PASS" starttime="20240913 07:25:46.781" endtime="20240913 07:25:48.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:48.982" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:51.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:51.177" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8ae7a0b977d15048bcbb7480c09d7dbda44653b8907b3ed780a02c2f6b8ee434</msg>
<status status="PASS" starttime="20240913 07:25:48.980" endtime="20240913 07:25:51.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:51.178" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8ae7a0b977d15048bcbb7480c09d7dbda44653b8907b3ed780a02c2f6b8ee434</msg>
<status status="PASS" starttime="20240913 07:25:51.178" endtime="20240913 07:25:51.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:51.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:51.178" endtime="20240913 07:25:51.179"/>
</kw>
<status status="PASS" starttime="20240913 07:25:48.980" endtime="20240913 07:25:51.179"/>
</kw>
<msg timestamp="20240913 07:25:51.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:48.979" endtime="20240913 07:25:51.179"/>
</kw>
<msg timestamp="20240913 07:25:51.179" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=8ae7a0b977d15048bcbb7480c09d7dbda44653b8907b3ed780a02c2f6b8ee434</msg>
<status status="PASS" starttime="20240913 07:25:48.979" endtime="20240913 07:25:51.179"/>
</kw>
<status status="PASS" starttime="20240913 07:25:46.781" endtime="20240913 07:25:51.179"/>
</branch>
<status status="PASS" starttime="20240913 07:25:46.781" endtime="20240913 07:25:51.179"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:25:51.180" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:25:51.180" endtime="20240913 07:25:51.180"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240913 07:25:51.181" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:25:51.180" endtime="20240913 07:25:51.181"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:25:51.181" level="INFO">${secret} = ['8ae7a0b977d15048bcbb7480c09d7dbda44653b8907b3ed780a02c2f6b8ee434']</msg>
<status status="PASS" starttime="20240913 07:25:51.181" endtime="20240913 07:25:51.181"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:25:51.182" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:51.181" endtime="20240913 07:25:51.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:25:51.183" level="INFO">${secret} = 8ae7a0b977d15048bcbb7480c09d7dbda44653b8907b3ed780a02c2f6b8ee434</msg>
<status status="PASS" starttime="20240913 07:25:51.182" endtime="20240913 07:25:51.183"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:51.187" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:51.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:51.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:51.184" endtime="20240913 07:25:51.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:51.568" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:51.567" endtime="20240913 07:25:51.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:51.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:51.568" endtime="20240913 07:25:51.569"/>
</kw>
<status status="PASS" starttime="20240913 07:25:51.184" endtime="20240913 07:25:51.569"/>
</kw>
<msg timestamp="20240913 07:25:51.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:51.184" endtime="20240913 07:25:51.569"/>
</kw>
<status status="PASS" starttime="20240913 07:25:51.183" endtime="20240913 07:25:51.569"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:51.573" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:51.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:51.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:51.570" endtime="20240913 07:25:51.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:51.975" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:51.974" endtime="20240913 07:25:51.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:51.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:51.975" endtime="20240913 07:25:51.975"/>
</kw>
<status status="PASS" starttime="20240913 07:25:51.570" endtime="20240913 07:25:51.976"/>
</kw>
<msg timestamp="20240913 07:25:51.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:51.570" endtime="20240913 07:25:51.976"/>
</kw>
<status status="PASS" starttime="20240913 07:25:51.569" endtime="20240913 07:25:51.976"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:51.979" level="INFO">Running command 'aws configure set aws_secret_access_key 8ae7a0b977d15048bcbb7480c09d7dbda44653b8907b3ed780a02c2f6b8ee434 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:52.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:52.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:51.977" endtime="20240913 07:25:52.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:52.369" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:52.368" endtime="20240913 07:25:52.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:52.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:52.369" endtime="20240913 07:25:52.369"/>
</kw>
<status status="PASS" starttime="20240913 07:25:51.977" endtime="20240913 07:25:52.370"/>
</kw>
<msg timestamp="20240913 07:25:52.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:51.976" endtime="20240913 07:25:52.370"/>
</kw>
<status status="PASS" starttime="20240913 07:25:51.976" endtime="20240913 07:25:52.370"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:52.374" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:52.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:52.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:52.371" endtime="20240913 07:25:52.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:52.762" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:52.761" endtime="20240913 07:25:52.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:52.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:52.762" endtime="20240913 07:25:52.762"/>
</kw>
<status status="PASS" starttime="20240913 07:25:52.371" endtime="20240913 07:25:52.763"/>
</kw>
<msg timestamp="20240913 07:25:52.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:52.370" endtime="20240913 07:25:52.763"/>
</kw>
<status status="PASS" starttime="20240913 07:25:52.370" endtime="20240913 07:25:52.763"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:52.766" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:53.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:53.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:52.764" endtime="20240913 07:25:53.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:53.153" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:53.152" endtime="20240913 07:25:53.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:53.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:53.153" endtime="20240913 07:25:53.154"/>
</kw>
<status status="PASS" starttime="20240913 07:25:52.764" endtime="20240913 07:25:53.154"/>
</kw>
<msg timestamp="20240913 07:25:53.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:52.764" endtime="20240913 07:25:53.154"/>
</kw>
<status status="PASS" starttime="20240913 07:25:52.763" endtime="20240913 07:25:53.154"/>
</kw>
<status status="PASS" starttime="20240913 07:25:44.662" endtime="20240913 07:25:53.154"/>
</kw>
<status status="PASS" starttime="20240913 07:25:44.662" endtime="20240913 07:25:53.154"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240913 07:25:53.154" endtime="20240913 07:25:53.155"/>
</kw>
<status status="PASS" starttime="20240913 07:25:44.628" endtime="20240913 07:25:53.155"/>
</kw>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240913 07:25:53.155" level="INFO">${randStr} = 1082394460</msg>
<status status="PASS" starttime="20240913 07:25:53.155" endtime="20240913 07:25:53.156"/>
</kw>
<msg timestamp="20240913 07:25:53.156" level="INFO">${random} = ozone-test-1082394460</msg>
<status status="PASS" starttime="20240913 07:25:53.155" endtime="20240913 07:25:53.156"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:53.160" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket-ozone-test-1082394460 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:53.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:53.657" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-1082394460"
}</msg>
<status status="PASS" starttime="20240913 07:25:53.158" endtime="20240913 07:25:53.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:53.658" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket-ozone-test-1082394460"
}</msg>
<status status="PASS" starttime="20240913 07:25:53.658" endtime="20240913 07:25:53.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:53.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:53.659" endtime="20240913 07:25:53.659"/>
</kw>
<status status="PASS" starttime="20240913 07:25:53.157" endtime="20240913 07:25:53.659"/>
</kw>
<msg timestamp="20240913 07:25:53.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:53.157" endtime="20240913 07:25:53.659"/>
</kw>
<msg timestamp="20240913 07:25:53.660" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-1082394460"
}</msg>
<status status="PASS" starttime="20240913 07:25:53.157" endtime="20240913 07:25:53.660"/>
</kw>
<msg timestamp="20240913 07:25:53.660" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket-ozone-test-1082394460"
}</msg>
<status status="PASS" starttime="20240913 07:25:53.156" endtime="20240913 07:25:53.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:53.660" endtime="20240913 07:25:53.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:53.660" endtime="20240913 07:25:53.661"/>
</kw>
<msg timestamp="20240913 07:25:53.661" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20240913 07:25:53.156" endtime="20240913 07:25:53.661"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240913 07:25:53.661" endtime="20240913 07:25:53.661"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:44.627" endtime="20240913 07:25:53.661"/>
</test>
<test id="s1-s7-t6" name="Create key using S3 API" line="60">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:53.665" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20240913 07:25:53.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:53.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:53.663" endtime="20240913 07:25:53.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:53.668" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:53.668" endtime="20240913 07:25:53.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:53.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:53.669" endtime="20240913 07:25:53.669"/>
</kw>
<status status="PASS" starttime="20240913 07:25:53.663" endtime="20240913 07:25:53.669"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:53.672" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:54.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:54.299" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20240913 07:25:53.670" endtime="20240913 07:25:54.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:54.301" level="INFO">{
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20240913 07:25:54.300" endtime="20240913 07:25:54.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:54.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:54.301" endtime="20240913 07:25:54.301"/>
</kw>
<msg timestamp="20240913 07:25:54.302" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20240913 07:25:53.670" endtime="20240913 07:25:54.302"/>
</kw>
<msg timestamp="20240913 07:25:54.302" level="INFO">${output} = {
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\""
}</msg>
<status status="PASS" starttime="20240913 07:25:53.669" endtime="20240913 07:25:54.302"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:54.302" endtime="20240913 07:25:54.302"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:54.305" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:54.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:54.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:54.303" endtime="20240913 07:25:54.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:54.310" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:54.309" endtime="20240913 07:25:54.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:54.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:54.310" endtime="20240913 07:25:54.310"/>
</kw>
<status status="PASS" starttime="20240913 07:25:54.302" endtime="20240913 07:25:54.310"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:53.662" endtime="20240913 07:25:54.310"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20240913 07:25:26.697" endtime="20240913 07:25:54.312"/>
</suite>
<suite id="s1-s8" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-new1" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:25:55.172" endtime="20240913 07:25:55.172"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:55.176" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:55.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:55.180" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:25:55.174" endtime="20240913 07:25:55.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:55.181" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:25:55.180" endtime="20240913 07:25:55.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:55.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:55.181" endtime="20240913 07:25:55.181"/>
</kw>
<status status="PASS" starttime="20240913 07:25:55.173" endtime="20240913 07:25:55.182"/>
</kw>
<msg timestamp="20240913 07:25:55.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:55.173" endtime="20240913 07:25:55.182"/>
</kw>
<msg timestamp="20240913 07:25:55.182" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:25:55.173" endtime="20240913 07:25:55.182"/>
</kw>
<msg timestamp="20240913 07:25:55.182" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:55.172" endtime="20240913 07:25:55.182"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:25:55.183" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:55.182" endtime="20240913 07:25:55.183"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:55.186" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:55.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:55.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:55.184" endtime="20240913 07:25:55.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:55.203" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:55.203" endtime="20240913 07:25:55.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:55.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:55.203" endtime="20240913 07:25:55.204"/>
</kw>
<status status="PASS" starttime="20240913 07:25:55.184" endtime="20240913 07:25:55.204"/>
</kw>
<msg timestamp="20240913 07:25:55.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:55.184" endtime="20240913 07:25:55.204"/>
</kw>
<status status="PASS" starttime="20240913 07:25:55.183" endtime="20240913 07:25:55.204"/>
</kw>
<status status="PASS" starttime="20240913 07:25:55.183" endtime="20240913 07:25:55.204"/>
</kw>
<status status="PASS" starttime="20240913 07:25:55.172" endtime="20240913 07:25:55.204"/>
</kw>
<status status="PASS" starttime="20240913 07:25:55.171" endtime="20240913 07:25:55.204"/>
</kw>
<test id="s1-s8-t1" name="Read data from previously created key" line="29">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20240913 07:25:55.206" level="INFO">${random} = 92550</msg>
<status status="PASS" starttime="20240913 07:25:55.205" endtime="20240913 07:25:55.206"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:55.209" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-92550 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:59.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:59.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:55.207" endtime="20240913 07:25:59.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:59.466" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:59.465" endtime="20240913 07:25:59.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:59.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:59.466" endtime="20240913 07:25:59.466"/>
</kw>
<status status="PASS" starttime="20240913 07:25:55.207" endtime="20240913 07:25:59.466"/>
</kw>
<msg timestamp="20240913 07:25:59.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:55.206" endtime="20240913 07:25:59.467"/>
</kw>
<msg timestamp="20240913 07:25:59.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:55.206" endtime="20240913 07:25:59.467"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:59.467" endtime="20240913 07:25:59.467"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:59.470" level="INFO">Running command 'cat /tmp/key-92550 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:59.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:59.474" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:25:59.468" endtime="20240913 07:25:59.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:59.475" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:25:59.474" endtime="20240913 07:25:59.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:59.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:59.475" endtime="20240913 07:25:59.475"/>
</kw>
<msg timestamp="20240913 07:25:59.476" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:25:59.467" endtime="20240913 07:25:59.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:25:59.476" endtime="20240913 07:25:59.476"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:59.479" level="INFO">Running command 'rm /tmp/key-92550 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:59.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:59.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:59.477" endtime="20240913 07:25:59.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:59.483" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:59.483" endtime="20240913 07:25:59.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:59.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:59.484" endtime="20240913 07:25:59.484"/>
</kw>
<status status="PASS" starttime="20240913 07:25:59.476" endtime="20240913 07:25:59.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:55.205" endtime="20240913 07:25:59.484"/>
</test>
<test id="s1-s8-t2" name="Read key created with Ozone Shell using S3 API" line="37">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:25:59.486" endtime="20240913 07:25:59.487"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:59.490" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:59.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:59.494" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:25:59.488" endtime="20240913 07:25:59.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:59.494" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:25:59.494" endtime="20240913 07:25:59.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:59.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:59.495" endtime="20240913 07:25:59.495"/>
</kw>
<status status="PASS" starttime="20240913 07:25:59.488" endtime="20240913 07:25:59.495"/>
</kw>
<msg timestamp="20240913 07:25:59.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:59.487" endtime="20240913 07:25:59.495"/>
</kw>
<msg timestamp="20240913 07:25:59.495" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:25:59.487" endtime="20240913 07:25:59.495"/>
</kw>
<msg timestamp="20240913 07:25:59.496" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:59.487" endtime="20240913 07:25:59.496"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:25:59.496" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:25:59.496" endtime="20240913 07:25:59.496"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:59.500" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:25:59.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:25:59.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:25:59.498" endtime="20240913 07:25:59.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:25:59.515" level="INFO"/>
<status status="PASS" starttime="20240913 07:25:59.514" endtime="20240913 07:25:59.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:25:59.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:25:59.515" endtime="20240913 07:25:59.515"/>
</kw>
<status status="PASS" starttime="20240913 07:25:59.497" endtime="20240913 07:25:59.516"/>
</kw>
<msg timestamp="20240913 07:25:59.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:25:59.497" endtime="20240913 07:25:59.516"/>
</kw>
<status status="PASS" starttime="20240913 07:25:59.497" endtime="20240913 07:25:59.516"/>
</kw>
<status status="PASS" starttime="20240913 07:25:59.496" endtime="20240913 07:25:59.516"/>
</kw>
<status status="PASS" starttime="20240913 07:25:59.486" endtime="20240913 07:25:59.516"/>
</kw>
<status status="PASS" starttime="20240913 07:25:59.486" endtime="20240913 07:25:59.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:25:59.519" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:01.702" level="INFO">${rc} = 255</msg>
<msg timestamp="20240913 07:26:01.702" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:25:59.517" endtime="20240913 07:26:01.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:01.703" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:26:01.702" endtime="20240913 07:26:01.703"/>
</kw>
<msg timestamp="20240913 07:26:01.703" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:25:59.517" endtime="20240913 07:26:01.703"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:26:01.704" endtime="20240913 07:26:01.704"/>
</kw>
<msg timestamp="20240913 07:26:01.704" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240913 07:26:01.703" endtime="20240913 07:26:01.704"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:01.708" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:04.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:04.325" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:26:01.705" endtime="20240913 07:26:04.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:04.326" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:26:04.325" endtime="20240913 07:26:04.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:04.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:04.326" endtime="20240913 07:26:04.326"/>
</kw>
<status status="PASS" starttime="20240913 07:26:01.705" endtime="20240913 07:26:04.327"/>
</kw>
<msg timestamp="20240913 07:26:04.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:01.705" endtime="20240913 07:26:04.327"/>
</kw>
<status status="PASS" starttime="20240913 07:26:01.704" endtime="20240913 07:26:04.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:04.330" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:06.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:06.555" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=af83d72b35211a117354288cbf9b16c340dab9282eab33d5f39e2e2afdfc1396</msg>
<status status="PASS" starttime="20240913 07:26:04.328" endtime="20240913 07:26:06.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:06.556" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=af83d72b35211a117354288cbf9b16c340dab9282eab33d5f39e2e2afdfc1396</msg>
<status status="PASS" starttime="20240913 07:26:06.556" endtime="20240913 07:26:06.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:06.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:06.557" endtime="20240913 07:26:06.558"/>
</kw>
<status status="PASS" starttime="20240913 07:26:04.328" endtime="20240913 07:26:06.558"/>
</kw>
<msg timestamp="20240913 07:26:06.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:04.327" endtime="20240913 07:26:06.558"/>
</kw>
<msg timestamp="20240913 07:26:06.558" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=af83d72b35211a117354288cbf9b16c340dab9282eab33d5f39e2e2afdfc1396</msg>
<status status="PASS" starttime="20240913 07:26:04.327" endtime="20240913 07:26:06.558"/>
</kw>
<status status="PASS" starttime="20240913 07:26:01.704" endtime="20240913 07:26:06.558"/>
</branch>
<status status="PASS" starttime="20240913 07:26:01.704" endtime="20240913 07:26:06.558"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:26:06.559" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:26:06.558" endtime="20240913 07:26:06.559"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240913 07:26:06.559" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:26:06.559" endtime="20240913 07:26:06.560"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:26:06.560" level="INFO">${secret} = ['af83d72b35211a117354288cbf9b16c340dab9282eab33d5f39e2e2afdfc1396']</msg>
<status status="PASS" starttime="20240913 07:26:06.560" endtime="20240913 07:26:06.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:26:06.561" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:26:06.560" endtime="20240913 07:26:06.561"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:26:06.562" level="INFO">${secret} = af83d72b35211a117354288cbf9b16c340dab9282eab33d5f39e2e2afdfc1396</msg>
<status status="PASS" starttime="20240913 07:26:06.561" endtime="20240913 07:26:06.562"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:06.566" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:06.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:06.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:06.564" endtime="20240913 07:26:06.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:06.972" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:06.972" endtime="20240913 07:26:06.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:06.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:06.973" endtime="20240913 07:26:06.973"/>
</kw>
<status status="PASS" starttime="20240913 07:26:06.563" endtime="20240913 07:26:06.973"/>
</kw>
<msg timestamp="20240913 07:26:06.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:06.563" endtime="20240913 07:26:06.973"/>
</kw>
<status status="PASS" starttime="20240913 07:26:06.562" endtime="20240913 07:26:06.973"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:06.977" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:07.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:07.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:06.975" endtime="20240913 07:26:07.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:07.375" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:07.374" endtime="20240913 07:26:07.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:07.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:07.375" endtime="20240913 07:26:07.375"/>
</kw>
<status status="PASS" starttime="20240913 07:26:06.974" endtime="20240913 07:26:07.375"/>
</kw>
<msg timestamp="20240913 07:26:07.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:06.974" endtime="20240913 07:26:07.376"/>
</kw>
<status status="PASS" starttime="20240913 07:26:06.974" endtime="20240913 07:26:07.376"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:07.379" level="INFO">Running command 'aws configure set aws_secret_access_key af83d72b35211a117354288cbf9b16c340dab9282eab33d5f39e2e2afdfc1396 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:07.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:07.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:07.377" endtime="20240913 07:26:07.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:07.771" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:07.770" endtime="20240913 07:26:07.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:07.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:07.771" endtime="20240913 07:26:07.772"/>
</kw>
<status status="PASS" starttime="20240913 07:26:07.377" endtime="20240913 07:26:07.772"/>
</kw>
<msg timestamp="20240913 07:26:07.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:07.376" endtime="20240913 07:26:07.772"/>
</kw>
<status status="PASS" starttime="20240913 07:26:07.376" endtime="20240913 07:26:07.772"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:07.776" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:08.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:08.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:07.773" endtime="20240913 07:26:08.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:08.168" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:08.168" endtime="20240913 07:26:08.168"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:08.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:08.168" endtime="20240913 07:26:08.169"/>
</kw>
<status status="PASS" starttime="20240913 07:26:07.773" endtime="20240913 07:26:08.169"/>
</kw>
<msg timestamp="20240913 07:26:08.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:07.773" endtime="20240913 07:26:08.169"/>
</kw>
<status status="PASS" starttime="20240913 07:26:07.772" endtime="20240913 07:26:08.169"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:08.173" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:08.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:08.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:08.171" endtime="20240913 07:26:08.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:08.559" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:08.559" endtime="20240913 07:26:08.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:08.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:08.560" endtime="20240913 07:26:08.560"/>
</kw>
<status status="PASS" starttime="20240913 07:26:08.170" endtime="20240913 07:26:08.560"/>
</kw>
<msg timestamp="20240913 07:26:08.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:08.170" endtime="20240913 07:26:08.561"/>
</kw>
<status status="PASS" starttime="20240913 07:26:08.169" endtime="20240913 07:26:08.561"/>
</kw>
<status status="PASS" starttime="20240913 07:25:59.516" endtime="20240913 07:26:08.561"/>
</kw>
<status status="PASS" starttime="20240913 07:25:59.516" endtime="20240913 07:26:08.561"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240913 07:26:08.561" endtime="20240913 07:26:08.561"/>
</kw>
<status status="PASS" starttime="20240913 07:25:59.485" endtime="20240913 07:26:08.561"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:08.565" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:09.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:09.154" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:25:44 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240913 07:26:08.562" endtime="20240913 07:26:09.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:09.155" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:25:44 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 13 Sep 2024 07:26:09 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240913 07:26:09.155" endtime="20240913 07:26:09.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:09.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:09.155" endtime="20240913 07:26:09.156"/>
</kw>
<msg timestamp="20240913 07:26:09.156" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:25:44 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240913 07:26:08.562" endtime="20240913 07:26:09.156"/>
</kw>
<msg timestamp="20240913 07:26:09.156" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:25:44 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20240913 07:26:08.561" endtime="20240913 07:26:09.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:26:09.156" endtime="20240913 07:26:09.157"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:09.159" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:09.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:09.163" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:26:09.157" endtime="20240913 07:26:09.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:09.164" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:26:09.164" endtime="20240913 07:26:09.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:09.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:09.164" endtime="20240913 07:26:09.165"/>
</kw>
<msg timestamp="20240913 07:26:09.165" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20240913 07:26:09.157" endtime="20240913 07:26:09.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:26:09.165" endtime="20240913 07:26:09.166"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:09.168" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:09.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:09.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:09.166" endtime="20240913 07:26:09.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:09.173" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:09.172" endtime="20240913 07:26:09.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:09.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:09.173" endtime="20240913 07:26:09.173"/>
</kw>
<status status="PASS" starttime="20240913 07:26:09.166" endtime="20240913 07:26:09.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:25:59.485" endtime="20240913 07:26:09.174"/>
</test>
<test id="s1-s8-t3" name="Read key created with S3 API using S3 API" line="45">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:26:09.176" endtime="20240913 07:26:09.177"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:09.181" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:09.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:09.185" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:26:09.178" endtime="20240913 07:26:09.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:09.186" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:26:09.186" endtime="20240913 07:26:09.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:09.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:09.187" endtime="20240913 07:26:09.187"/>
</kw>
<status status="PASS" starttime="20240913 07:26:09.178" endtime="20240913 07:26:09.187"/>
</kw>
<msg timestamp="20240913 07:26:09.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:09.178" endtime="20240913 07:26:09.187"/>
</kw>
<msg timestamp="20240913 07:26:09.188" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:26:09.177" endtime="20240913 07:26:09.188"/>
</kw>
<msg timestamp="20240913 07:26:09.188" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:26:09.177" endtime="20240913 07:26:09.188"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:26:09.188" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:26:09.188" endtime="20240913 07:26:09.188"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:09.192" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:09.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:09.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:09.190" endtime="20240913 07:26:09.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:09.210" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:09.209" endtime="20240913 07:26:09.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:09.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:09.210" endtime="20240913 07:26:09.211"/>
</kw>
<status status="PASS" starttime="20240913 07:26:09.189" endtime="20240913 07:26:09.211"/>
</kw>
<msg timestamp="20240913 07:26:09.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:09.189" endtime="20240913 07:26:09.211"/>
</kw>
<status status="PASS" starttime="20240913 07:26:09.189" endtime="20240913 07:26:09.211"/>
</kw>
<status status="PASS" starttime="20240913 07:26:09.188" endtime="20240913 07:26:09.211"/>
</kw>
<status status="PASS" starttime="20240913 07:26:09.176" endtime="20240913 07:26:09.211"/>
</kw>
<status status="PASS" starttime="20240913 07:26:09.175" endtime="20240913 07:26:09.211"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:09.215" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:11.348" level="INFO">${rc} = 255</msg>
<msg timestamp="20240913 07:26:11.348" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:26:09.213" endtime="20240913 07:26:11.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:11.349" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:26:11.349" endtime="20240913 07:26:11.350"/>
</kw>
<msg timestamp="20240913 07:26:11.350" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20240913 07:26:09.212" endtime="20240913 07:26:11.350"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:26:11.350" endtime="20240913 07:26:11.351"/>
</kw>
<msg timestamp="20240913 07:26:11.351" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20240913 07:26:11.350" endtime="20240913 07:26:11.351"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:11.354" level="INFO">Running command 'ozone s3 revokesecret -y --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:13.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:13.529" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:26:11.352" endtime="20240913 07:26:13.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:13.530" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20240913 07:26:13.529" endtime="20240913 07:26:13.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:13.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:13.530" endtime="20240913 07:26:13.531"/>
</kw>
<status status="PASS" starttime="20240913 07:26:11.352" endtime="20240913 07:26:13.531"/>
</kw>
<msg timestamp="20240913 07:26:13.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:11.352" endtime="20240913 07:26:13.531"/>
</kw>
<status status="PASS" starttime="20240913 07:26:11.351" endtime="20240913 07:26:13.531"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:13.535" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:15.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:15.672" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=feb2f9833556e2300444b3ab74abeabad6a247f5e2f728fd70ae72f0d870a997</msg>
<status status="PASS" starttime="20240913 07:26:13.532" endtime="20240913 07:26:15.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:15.673" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=feb2f9833556e2300444b3ab74abeabad6a247f5e2f728fd70ae72f0d870a997</msg>
<status status="PASS" starttime="20240913 07:26:15.673" endtime="20240913 07:26:15.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:15.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:15.673" endtime="20240913 07:26:15.674"/>
</kw>
<status status="PASS" starttime="20240913 07:26:13.532" endtime="20240913 07:26:15.674"/>
</kw>
<msg timestamp="20240913 07:26:15.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:13.532" endtime="20240913 07:26:15.674"/>
</kw>
<msg timestamp="20240913 07:26:15.674" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=feb2f9833556e2300444b3ab74abeabad6a247f5e2f728fd70ae72f0d870a997</msg>
<status status="PASS" starttime="20240913 07:26:13.531" endtime="20240913 07:26:15.674"/>
</kw>
<status status="PASS" starttime="20240913 07:26:11.351" endtime="20240913 07:26:15.674"/>
</branch>
<status status="PASS" starttime="20240913 07:26:11.351" endtime="20240913 07:26:15.674"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:26:15.675" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:26:15.674" endtime="20240913 07:26:15.675"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240913 07:26:15.675" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240913 07:26:15.675" endtime="20240913 07:26:15.675"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240913 07:26:15.676" level="INFO">${secret} = ['feb2f9833556e2300444b3ab74abeabad6a247f5e2f728fd70ae72f0d870a997']</msg>
<status status="PASS" starttime="20240913 07:26:15.675" endtime="20240913 07:26:15.676"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:26:15.677" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:26:15.676" endtime="20240913 07:26:15.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240913 07:26:15.678" level="INFO">${secret} = feb2f9833556e2300444b3ab74abeabad6a247f5e2f728fd70ae72f0d870a997</msg>
<status status="PASS" starttime="20240913 07:26:15.677" endtime="20240913 07:26:15.678"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:15.681" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:16.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:16.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:15.679" endtime="20240913 07:26:16.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:16.058" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:16.057" endtime="20240913 07:26:16.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:16.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:16.058" endtime="20240913 07:26:16.058"/>
</kw>
<status status="PASS" starttime="20240913 07:26:15.679" endtime="20240913 07:26:16.058"/>
</kw>
<msg timestamp="20240913 07:26:16.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:15.678" endtime="20240913 07:26:16.059"/>
</kw>
<status status="PASS" starttime="20240913 07:26:15.678" endtime="20240913 07:26:16.059"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:16.062" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:16.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:16.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:16.060" endtime="20240913 07:26:16.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:16.448" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:16.448" endtime="20240913 07:26:16.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:16.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:16.449" endtime="20240913 07:26:16.449"/>
</kw>
<status status="PASS" starttime="20240913 07:26:16.060" endtime="20240913 07:26:16.449"/>
</kw>
<msg timestamp="20240913 07:26:16.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:16.059" endtime="20240913 07:26:16.449"/>
</kw>
<status status="PASS" starttime="20240913 07:26:16.059" endtime="20240913 07:26:16.449"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:16.453" level="INFO">Running command 'aws configure set aws_secret_access_key feb2f9833556e2300444b3ab74abeabad6a247f5e2f728fd70ae72f0d870a997 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:16.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:16.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:16.451" endtime="20240913 07:26:16.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:16.841" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:16.841" endtime="20240913 07:26:16.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:16.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:16.841" endtime="20240913 07:26:16.842"/>
</kw>
<status status="PASS" starttime="20240913 07:26:16.450" endtime="20240913 07:26:16.842"/>
</kw>
<msg timestamp="20240913 07:26:16.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:16.450" endtime="20240913 07:26:16.842"/>
</kw>
<status status="PASS" starttime="20240913 07:26:16.450" endtime="20240913 07:26:16.842"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:16.846" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:17.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:17.242" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:16.843" endtime="20240913 07:26:17.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:17.243" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:17.243" endtime="20240913 07:26:17.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:17.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:17.244" endtime="20240913 07:26:17.244"/>
</kw>
<status status="PASS" starttime="20240913 07:26:16.843" endtime="20240913 07:26:17.244"/>
</kw>
<msg timestamp="20240913 07:26:17.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:16.843" endtime="20240913 07:26:17.244"/>
</kw>
<status status="PASS" starttime="20240913 07:26:16.842" endtime="20240913 07:26:17.244"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:17.248" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:17.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:17.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:17.246" endtime="20240913 07:26:17.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:17.643" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:17.642" endtime="20240913 07:26:17.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:17.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:17.643" endtime="20240913 07:26:17.643"/>
</kw>
<status status="PASS" starttime="20240913 07:26:17.245" endtime="20240913 07:26:17.644"/>
</kw>
<msg timestamp="20240913 07:26:17.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:17.245" endtime="20240913 07:26:17.644"/>
</kw>
<status status="PASS" starttime="20240913 07:26:17.245" endtime="20240913 07:26:17.644"/>
</kw>
<status status="PASS" starttime="20240913 07:26:09.212" endtime="20240913 07:26:17.644"/>
</kw>
<status status="PASS" starttime="20240913 07:26:09.211" endtime="20240913 07:26:17.644"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240913 07:26:17.644" endtime="20240913 07:26:17.644"/>
</kw>
<status status="PASS" starttime="20240913 07:26:09.175" endtime="20240913 07:26:17.645"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:17.648" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:18.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:18.128" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:25:54 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240913 07:26:17.646" endtime="20240913 07:26:18.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:18.129" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:25:54 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 13 Sep 2024 07:26:18 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20240913 07:26:18.128" endtime="20240913 07:26:18.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:18.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:18.129" endtime="20240913 07:26:18.129"/>
</kw>
<msg timestamp="20240913 07:26:18.130" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:25:54 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240913 07:26:17.645" endtime="20240913 07:26:18.130"/>
</kw>
<msg timestamp="20240913 07:26:18.130" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 13 Sep 2024 07:25:54 GMT",
    "ContentLength": 31,
    "ETag": "\"4e7ca0568858e41e7f27cf0e32576b3f\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20240913 07:26:17.645" endtime="20240913 07:26:18.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:26:18.130" endtime="20240913 07:26:18.130"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:18.133" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:18.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:18.137" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20240913 07:26:18.131" endtime="20240913 07:26:18.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:18.138" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20240913 07:26:18.137" endtime="20240913 07:26:18.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:18.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:18.138" endtime="20240913 07:26:18.138"/>
</kw>
<msg timestamp="20240913 07:26:18.139" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20240913 07:26:18.130" endtime="20240913 07:26:18.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240913 07:26:18.139" endtime="20240913 07:26:18.139"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:18.142" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:18.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:18.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:18.140" endtime="20240913 07:26:18.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:18.148" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:18.147" endtime="20240913 07:26:18.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:18.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:18.148" endtime="20240913 07:26:18.149"/>
</kw>
<status status="PASS" starttime="20240913 07:26:18.139" endtime="20240913 07:26:18.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20240913 07:26:09.174" endtime="20240913 07:26:18.149"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20240913 07:25:55.103" endtime="20240913 07:26:18.151"/>
</suite>
<suite id="s1-s9" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s9-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:26:18.890" endtime="20240913 07:26:18.890"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:18.894" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:18.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:18.898" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20240913 07:26:18.892" endtime="20240913 07:26:18.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:18.898" level="INFO">scm</msg>
<status status="PASS" starttime="20240913 07:26:18.898" endtime="20240913 07:26:18.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:18.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:18.898" endtime="20240913 07:26:18.899"/>
</kw>
<status status="PASS" starttime="20240913 07:26:18.891" endtime="20240913 07:26:18.899"/>
</kw>
<msg timestamp="20240913 07:26:18.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:18.891" endtime="20240913 07:26:18.899"/>
</kw>
<msg timestamp="20240913 07:26:18.899" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20240913 07:26:18.891" endtime="20240913 07:26:18.899"/>
</kw>
<msg timestamp="20240913 07:26:18.899" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:26:18.890" endtime="20240913 07:26:18.900"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240913 07:26:18.900" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240913 07:26:18.900" endtime="20240913 07:26:18.900"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:18.903" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:26:18.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20240913 07:26:18.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240913 07:26:18.902" endtime="20240913 07:26:18.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:26:18.920" level="INFO"/>
<status status="PASS" starttime="20240913 07:26:18.920" endtime="20240913 07:26:18.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:26:18.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240913 07:26:18.921" endtime="20240913 07:26:18.921"/>
</kw>
<status status="PASS" starttime="20240913 07:26:18.901" endtime="20240913 07:26:18.921"/>
</kw>
<msg timestamp="20240913 07:26:18.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240913 07:26:18.901" endtime="20240913 07:26:18.921"/>
</kw>
<status status="PASS" starttime="20240913 07:26:18.900" endtime="20240913 07:26:18.921"/>
</kw>
<status status="PASS" starttime="20240913 07:26:18.900" endtime="20240913 07:26:18.921"/>
</kw>
<status status="PASS" starttime="20240913 07:26:18.890" endtime="20240913 07:26:18.921"/>
</kw>
<status status="PASS" starttime="20240913 07:26:18.889" endtime="20240913 07:26:18.922"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240913 07:26:18.922" endtime="20240913 07:26:18.922"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240913 07:26:18.925" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20240913 07:28:21.464" level="INFO">${rc} = 255</msg>
<msg timestamp="20240913 07:28:21.464" level="INFO">${output} = java.io.IOException: After waiting for 120 seconds, OM database flushed index 36 which is less than the minimum required index 109.</msg>
<status status="PASS" starttime="20240913 07:26:18.923" endtime="20240913 07:28:21.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240913 07:28:21.465" level="INFO">java.io.IOException: After waiting for 120 seconds, OM database flushed index 36 which is less than the minimum required index 109.</msg>
<status status="PASS" starttime="20240913 07:28:21.465" endtime="20240913 07:28:21.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240913 07:28:21.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20240913 07:28:21.466" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20240913 07:28:21.466" endtime="20240913 07:28:21.466"/>
</kw>
<status status="FAIL" starttime="20240913 07:26:18.923" endtime="20240913 07:28:21.466"/>
</kw>
<msg timestamp="20240913 07:28:21.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20240913 07:26:18.923" endtime="20240913 07:28:21.466"/>
</kw>
<status status="FAIL" starttime="20240913 07:26:18.922" endtime="20240913 07:28:21.467"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20240913 07:28:21.467" endtime="20240913 07:28:21.467"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20240913 07:26:18.889" endtime="20240913 07:28:21.467">255 != 0</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20240913 07:26:18.848" endtime="20240913 07:28:21.468"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="290848"/>
</suite>
<statistics>
<total>
<stat pass="28" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="28" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="1.4.0-1.5.0-SNAPSHOT-1-original-check-finalization">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-check-finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="1.4.0-1.5.0-SNAPSHOT-1-original-generate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-generate-old1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="1.4.0-1.5.0-SNAPSHOT-1-original-validate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-validate-old1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="1.4.0-1.5.0-SNAPSHOT-1-original-prepare">upgrade.1.4.0-1.5.0-SNAPSHOT-1-original-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-old1</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-old1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-old1</stat>
<stat pass="6" fail="0" skip="0" id="s1-s7" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-new1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-generate-new1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-new1">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-validate-new1</stat>
<stat pass="0" fail="1" skip="0" id="s1-s9" name="1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-prepare">upgrade.1.4.0-1.5.0-SNAPSHOT-2-pre-finalized-prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
