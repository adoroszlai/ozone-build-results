<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.6.8 on linux)" generated="20240910 18:10:43.304" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-fcq" source="/opt/hadoop/smoketest/fcq/s3_om_fcq.robot">
<test id="s1-t1" name="Test setup headers" line="64">
<kw name="Setup headers">
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:09:58.334" endtime="20240910 18:09:58.335"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:09:58.338" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:09:58.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:09:58.341" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20240910 18:09:58.336" endtime="20240910 18:09:58.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:09:58.342" level="INFO">s3g</msg>
<status status="PASS" starttime="20240910 18:09:58.341" endtime="20240910 18:09:58.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:09:58.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:09:58.342" endtime="20240910 18:09:58.342"/>
</kw>
<status status="PASS" starttime="20240910 18:09:58.336" endtime="20240910 18:09:58.342"/>
</kw>
<msg timestamp="20240910 18:09:58.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:09:58.335" endtime="20240910 18:09:58.343"/>
</kw>
<msg timestamp="20240910 18:09:58.343" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20240910 18:09:58.335" endtime="20240910 18:09:58.343"/>
</kw>
<msg timestamp="20240910 18:09:58.343" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:09:58.335" endtime="20240910 18:09:58.343"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20240910 18:09:58.343" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:09:58.343" endtime="20240910 18:09:58.343"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:09:58.346" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:09:58.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:09:58.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:09:58.345" endtime="20240910 18:09:58.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:09:58.404" level="INFO"/>
<status status="PASS" starttime="20240910 18:09:58.404" endtime="20240910 18:09:58.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:09:58.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:09:58.405" endtime="20240910 18:09:58.405"/>
</kw>
<status status="PASS" starttime="20240910 18:09:58.344" endtime="20240910 18:09:58.405"/>
</kw>
<msg timestamp="20240910 18:09:58.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:09:58.344" endtime="20240910 18:09:58.405"/>
</kw>
<status status="PASS" starttime="20240910 18:09:58.344" endtime="20240910 18:09:58.405"/>
</kw>
<status status="PASS" starttime="20240910 18:09:58.343" endtime="20240910 18:09:58.405"/>
</kw>
<status status="PASS" starttime="20240910 18:09:58.334" endtime="20240910 18:09:58.405"/>
</kw>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:09:58.408" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:01.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:01.712" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b</msg>
<status status="PASS" starttime="20240910 18:09:58.406" endtime="20240910 18:10:01.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:01.713" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b</msg>
<status status="PASS" starttime="20240910 18:10:01.712" endtime="20240910 18:10:01.713"/>
</kw>
<msg timestamp="20240910 18:10:01.713" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b</msg>
<status status="PASS" starttime="20240910 18:09:58.406" endtime="20240910 18:10:01.713"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20240910 18:10:01.714" level="FAIL">'awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20240910 18:10:01.713" endtime="20240910 18:10:01.714"/>
</kw>
<msg timestamp="20240910 18:10:01.714" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20240910 18:10:01.713" endtime="20240910 18:10:01.714"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240910 18:10:01.715" endtime="20240910 18:10:01.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20240910 18:10:01.715" endtime="20240910 18:10:01.715"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:10:01.714" endtime="20240910 18:10:01.715"/>
</branch>
<status status="PASS" starttime="20240910 18:10:01.714" endtime="20240910 18:10:01.715"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240910 18:10:01.716" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240910 18:10:01.716" endtime="20240910 18:10:01.716"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20240910 18:10:01.717" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20240910 18:10:01.716" endtime="20240910 18:10:01.717"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240910 18:10:01.718" level="INFO">${secret} = ['0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b']</msg>
<status status="PASS" starttime="20240910 18:10:01.717" endtime="20240910 18:10:01.718"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:10:01.719" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:10:01.718" endtime="20240910 18:10:01.719"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:10:01.720" level="INFO">${secret} = 0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b</msg>
<status status="PASS" starttime="20240910 18:10:01.719" endtime="20240910 18:10:01.720"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:01.726" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:02.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:02.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:10:01.721" endtime="20240910 18:10:02.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:02.118" level="INFO"/>
<status status="PASS" starttime="20240910 18:10:02.117" endtime="20240910 18:10:02.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:02.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:02.118" endtime="20240910 18:10:02.118"/>
</kw>
<status status="PASS" starttime="20240910 18:10:01.721" endtime="20240910 18:10:02.119"/>
</kw>
<msg timestamp="20240910 18:10:02.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:01.721" endtime="20240910 18:10:02.119"/>
</kw>
<status status="PASS" starttime="20240910 18:10:01.720" endtime="20240910 18:10:02.119"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:02.122" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:02.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:02.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:10:02.120" endtime="20240910 18:10:02.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:02.482" level="INFO"/>
<status status="PASS" starttime="20240910 18:10:02.481" endtime="20240910 18:10:02.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:02.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:02.482" endtime="20240910 18:10:02.482"/>
</kw>
<status status="PASS" starttime="20240910 18:10:02.120" endtime="20240910 18:10:02.483"/>
</kw>
<msg timestamp="20240910 18:10:02.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:02.119" endtime="20240910 18:10:02.483"/>
</kw>
<status status="PASS" starttime="20240910 18:10:02.119" endtime="20240910 18:10:02.483"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:02.486" level="INFO">Running command 'aws configure set aws_secret_access_key 0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:02.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:02.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:10:02.484" endtime="20240910 18:10:02.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:02.851" level="INFO"/>
<status status="PASS" starttime="20240910 18:10:02.851" endtime="20240910 18:10:02.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:02.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:02.851" endtime="20240910 18:10:02.852"/>
</kw>
<status status="PASS" starttime="20240910 18:10:02.484" endtime="20240910 18:10:02.852"/>
</kw>
<msg timestamp="20240910 18:10:02.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:02.483" endtime="20240910 18:10:02.852"/>
</kw>
<status status="PASS" starttime="20240910 18:10:02.483" endtime="20240910 18:10:02.852"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:02.855" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:03.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:03.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:10:02.853" endtime="20240910 18:10:03.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:03.212" level="INFO"/>
<status status="PASS" starttime="20240910 18:10:03.212" endtime="20240910 18:10:03.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:03.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:03.212" endtime="20240910 18:10:03.212"/>
</kw>
<status status="PASS" starttime="20240910 18:10:02.853" endtime="20240910 18:10:03.213"/>
</kw>
<msg timestamp="20240910 18:10:03.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:02.853" endtime="20240910 18:10:03.213"/>
</kw>
<status status="PASS" starttime="20240910 18:10:02.852" endtime="20240910 18:10:03.213"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:03.216" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:03.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:03.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:10:03.214" endtime="20240910 18:10:03.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:03.578" level="INFO"/>
<status status="PASS" starttime="20240910 18:10:03.577" endtime="20240910 18:10:03.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:03.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:03.578" endtime="20240910 18:10:03.578"/>
</kw>
<status status="PASS" starttime="20240910 18:10:03.214" endtime="20240910 18:10:03.578"/>
</kw>
<msg timestamp="20240910 18:10:03.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:03.213" endtime="20240910 18:10:03.578"/>
</kw>
<status status="PASS" starttime="20240910 18:10:03.213" endtime="20240910 18:10:03.578"/>
</kw>
<status status="PASS" starttime="20240910 18:09:58.405" endtime="20240910 18:10:03.579"/>
</kw>
<status status="PASS" starttime="20240910 18:09:58.334" endtime="20240910 18:10:03.579"/>
</kw>
<status status="PASS" starttime="20240910 18:09:58.333" endtime="20240910 18:10:03.579"/>
</test>
<test id="s1-t2" name="Test setup credentials" line="67">
<kw name="Setup aws credentials">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:03.583" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:03.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:03.941" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:10:03.581" endtime="20240910 18:10:03.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:03.942" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:10:03.941" endtime="20240910 18:10:03.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:03.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:03.942" endtime="20240910 18:10:03.942"/>
</kw>
<status status="PASS" starttime="20240910 18:10:03.580" endtime="20240910 18:10:03.942"/>
</kw>
<msg timestamp="20240910 18:10:03.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:03.580" endtime="20240910 18:10:03.942"/>
</kw>
<msg timestamp="20240910 18:10:03.942" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:10:03.580" endtime="20240910 18:10:03.942"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:03.945" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:04.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:04.300" level="INFO">${output} = 0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b</msg>
<status status="PASS" starttime="20240910 18:10:03.944" endtime="20240910 18:10:04.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:04.301" level="INFO">0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b</msg>
<status status="PASS" starttime="20240910 18:10:04.300" endtime="20240910 18:10:04.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:04.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:04.301" endtime="20240910 18:10:04.301"/>
</kw>
<status status="PASS" starttime="20240910 18:10:03.943" endtime="20240910 18:10:04.301"/>
</kw>
<msg timestamp="20240910 18:10:04.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:03.943" endtime="20240910 18:10:04.302"/>
</kw>
<msg timestamp="20240910 18:10:04.302" level="INFO">${secret} = 0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b</msg>
<status status="PASS" starttime="20240910 18:10:03.943" endtime="20240910 18:10:04.302"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20240910 18:10:04.302" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value '0784d4cc0f86dbe2d29075a20fd5e45eed130e46bdb68233af23b716b34dfe9b'.</msg>
<status status="PASS" starttime="20240910 18:10:04.302" endtime="20240910 18:10:04.302"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20240910 18:10:04.302" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/s3g@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20240910 18:10:04.302" endtime="20240910 18:10:04.302"/>
</kw>
<status status="PASS" starttime="20240910 18:10:03.580" endtime="20240910 18:10:04.302"/>
</kw>
<status status="PASS" starttime="20240910 18:10:03.579" endtime="20240910 18:10:04.303"/>
</test>
<test id="s1-t3" name="Test create bucket 1" line="70">
<kw name="Setup bucket1">
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket bucket1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:04.307" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:05.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:05.917" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20240910 18:10:04.305" endtime="20240910 18:10:05.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:05.918" level="INFO">{
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20240910 18:10:05.918" endtime="20240910 18:10:05.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:05.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:05.918" endtime="20240910 18:10:05.918"/>
</kw>
<status status="PASS" starttime="20240910 18:10:04.305" endtime="20240910 18:10:05.919"/>
</kw>
<msg timestamp="20240910 18:10:05.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:04.305" endtime="20240910 18:10:05.919"/>
</kw>
<msg timestamp="20240910 18:10:05.919" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket1"
}</msg>
<status status="PASS" starttime="20240910 18:10:04.304" endtime="20240910 18:10:05.919"/>
</kw>
<status status="PASS" starttime="20240910 18:10:04.304" endtime="20240910 18:10:05.919"/>
</kw>
<status status="PASS" starttime="20240910 18:10:04.303" endtime="20240910 18:10:05.919"/>
</kw>
<status status="PASS" starttime="20240910 18:10:04.303" endtime="20240910 18:10:05.919"/>
</test>
<test id="s1-t4" name="Test OM JMX endpoint" line="73">
<kw name="Verify endpoint is up">
<arg>${OM_JMX_ENDPOINT}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20240910 18:10:05.921" endtime="20240910 18:10:05.921"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:05.924" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:05.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:05.928" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20240910 18:10:05.923" endtime="20240910 18:10:05.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:05.929" level="INFO">s3g</msg>
<status status="PASS" starttime="20240910 18:10:05.928" endtime="20240910 18:10:05.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:05.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:05.929" endtime="20240910 18:10:05.929"/>
</kw>
<status status="PASS" starttime="20240910 18:10:05.922" endtime="20240910 18:10:05.929"/>
</kw>
<msg timestamp="20240910 18:10:05.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:05.922" endtime="20240910 18:10:05.929"/>
</kw>
<msg timestamp="20240910 18:10:05.929" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20240910 18:10:05.922" endtime="20240910 18:10:05.930"/>
</kw>
<msg timestamp="20240910 18:10:05.930" level="INFO">${principal} = HTTP/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20240910 18:10:05.922" endtime="20240910 18:10:05.930"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:05.933" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:06.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:06.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20240910 18:10:05.931" endtime="20240910 18:10:06.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:06.072" level="INFO"/>
<status status="PASS" starttime="20240910 18:10:06.071" endtime="20240910 18:10:06.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:06.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:06.072" endtime="20240910 18:10:06.073"/>
</kw>
<status status="PASS" starttime="20240910 18:10:05.931" endtime="20240910 18:10:06.073"/>
</kw>
<msg timestamp="20240910 18:10:06.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:05.931" endtime="20240910 18:10:06.073"/>
</kw>
<status status="PASS" starttime="20240910 18:10:05.930" endtime="20240910 18:10:06.073"/>
</kw>
<status status="PASS" starttime="20240910 18:10:05.930" endtime="20240910 18:10:06.073"/>
</kw>
<status status="PASS" starttime="20240910 18:10:05.921" endtime="20240910 18:10:06.073"/>
</kw>
<status status="PASS" starttime="20240910 18:10:05.921" endtime="20240910 18:10:06.073"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v -s -I ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:06.077" level="INFO">Running command 'curl --negotiate -u : -v -s -I http://om:9874/jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:06.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:06.382" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
*   Trying 172.18.0.5...
* TCP_NODELAY set
* Connected to om (172.18.0.5) port 9874 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; Host: o...</msg>
<status status="PASS" starttime="20240910 18:10:06.075" endtime="20240910 18:10:06.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:06.383" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
*   Trying 172.18.0.5...
* TCP_NODELAY set
* Connected to om (172.18.0.5) port 9874 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; Host: om:9874
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 404
&lt; 
* Connection #0 to host om left intact
* Issue another request to this URL: 'http://om:9874/jmx'
* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
* Found bundle for host om: 0x55ce4ed6c870 [can pipeline]
* Re-using existing connection! (#0) with host om
* Connected to om (172.18.0.5) port 9874 (#0)
* Server auth using Negotiate with user ''
&gt; HEAD /jmx HTTP/1.1
&gt; Host: om:9874
&gt; Authorization: Negotiate YIICjgYGKwYBBQUCoIICgjCCAn6gDTALBgkqhkiG9xIBAgKiggJrBIICZ2CCAmMGCSqGSIb3EgECAgEAboICUjCCAk6gAwIBBaEDAgEOogcDBQAgAAAAo4IBYmGCAV4wggFaoAMCAQWhDRsLRVhBTVBMRS5DT02iFTAToAMCAQOhDDAKGwRIVFRQGwJvbaOCASswggEnoAMCARKhAwIBAaKCARkEggEVAD1rG1vSAbjhBpUOnX6sTo61jhVAtePK+oAOJd2+STXQEgK9WVhYF94A9x7LU96ozOZPaG7G96n8ySKmoqOzT56Ler+9W4l1YjMXaoow6pcyKNlPMMyme6ZhN6W2zbtfZABDx1ZW56vbmlU/zc5/7QS/rIaGw2bebpqSgfh0TkWaT9PzvOLOXFvrNhA/1TzmE0KPU5m0G7Vj81oJu18s5W34d6k2SZLrpe3eBGPBcctJyN1ezTGKk1RwLhHpxUpC+kOeAEh8i9nsTAwEvb/cLrspVaEFHjLBCxNwAt4uX9p3PXdqwZdb5nierot/lxyR4iS0FA5qztEQDgdjtMt+/LKeTVdVDhLw2OE3YXLAO3uNuHZt/6SB0jCBz6ADAgESooHHBIHEQ12RkZjH3Zgdg6YNTonxrHzerlwWmqh3Ducal9xlZF6X3sYyOuBM24uVqq//+sSXVi7r16gRNK8FiVzPFdx7S0QXXvM3yiDBTfG+jqvjU7azS34KyakVDLfG7I8/GR9ZSpewPjr/25821ynjOZnNLeLcHYAtQYeiNNOQVEH414pw1YlKO0TPOYD6BTQQjU4BPghqHbXe8mydrMQNdgnStNJAjngFa3niIQtlD7ehbUWXD+xORD3iXjywGWZ1pk1mbIzTmg==
&gt; User-Agent: curl/7.61.1
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 10 Sep 2024 18:10:06 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Tue, 10 Sep 2024 18:10:06 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/json; charset=utf8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQlpIpCmXCyuVICWezZuG40Y0uXPpQan/j7ssB5a/fU715gZLIIF/982Boksjqb2JH9bLU3hWLJjqJ8krVJOEAX7P+Q==
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1726027806172&amp;s=CuJP8wZE41SlAvnSD8zfO0rYxAmVU0T+DwFyeDLpbuw="; Path=/; HttpOnly
&lt; Access-Control-Allow-Methods: GET
&lt; Access-Control-Allow-Origin: *
&lt; Content-Length: 386215
&lt; 
* Closing connection 0
HTTP/1.1 401 Authentication required
Pragma: no-cache
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 404

HTTP/1.1 200 OK
Date: Tue, 10 Sep 2024 18:10:06 GMT
Cache-Control: no-cache
Expires: Tue, 10 Sep 2024 18:10:06 GMT
Pragma: no-cache
Content-Type: application/json; charset=utf8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
WWW-Authenticate: Negotiate oYGFMIGCoAMKAQChCwYJKoZIhvcSAQICom4EbGBqBgkqhkiG9xIBAgICAG9bMFmgAwIBBaEDAgEPok0wS6ADAgESokQEQlpIpCmXCyuVICWezZuG40Y0uXPpQan/j7ssB5a/fU715gZLIIF/982Boksjqb2JH9bLU3hWLJjqJ8krVJOEAX7P+Q==
Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1726027806172&amp;s=CuJP8wZE41SlAvnSD8zfO0rYxAmVU0T+DwFyeDLpbuw="; Path=/; HttpOnly
Access-Control-Allow-Methods: GET
Access-Control-Allow-Origin: *
Content-Length: 386215
</msg>
<status status="PASS" starttime="20240910 18:10:06.382" endtime="20240910 18:10:06.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:06.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:06.383" endtime="20240910 18:10:06.383"/>
</kw>
<status status="PASS" starttime="20240910 18:10:06.074" endtime="20240910 18:10:06.384"/>
</kw>
<msg timestamp="20240910 18:10:06.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:06.074" endtime="20240910 18:10:06.384"/>
</kw>
<msg timestamp="20240910 18:10:06.384" level="INFO">${result} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
*   Trying 172.18.0.5...
* TCP_NODELAY set
* Connected to om (172.18.0.5) port 9874 (#0)
&gt; HEAD /jmx HTTP/1.1
&gt; Host: o...</msg>
<status status="PASS" starttime="20240910 18:10:06.074" endtime="20240910 18:10:06.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200 OK</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:10:06.384" endtime="20240910 18:10:06.385"/>
</kw>
<status status="PASS" starttime="20240910 18:10:05.920" endtime="20240910 18:10:06.385"/>
</kw>
<status status="PASS" starttime="20240910 18:10:05.920" endtime="20240910 18:10:06.385"/>
</test>
<test id="s1-t5" name="Test metrics are registered" line="76">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${OM_JMX_ENDPOINT} | grep ${DECAY_RPC_SCHEDULER_METRICS_NAME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:06.391" level="INFO">Running command 'curl --negotiate -u : -LSs http://om:9874/jmx | grep DecayRpcSchedulerMetrics2.ipc.9862 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:06.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:06.473" level="INFO">${output} =     "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20240910 18:10:06.388" endtime="20240910 18:10:06.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:06.474" level="INFO">    "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20240910 18:10:06.473" endtime="20240910 18:10:06.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:06.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:06.474" endtime="20240910 18:10:06.475"/>
</kw>
<status status="PASS" starttime="20240910 18:10:06.387" endtime="20240910 18:10:06.475"/>
</kw>
<msg timestamp="20240910 18:10:06.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:06.387" endtime="20240910 18:10:06.475"/>
</kw>
<msg timestamp="20240910 18:10:06.475" level="INFO">${result} =     "name" : "Hadoop:service=OzoneManager,name=DecayRpcSchedulerMetrics2.ipc.9862",
    "modelerType" : "DecayRpcSchedulerMetrics2.ipc.9862",</msg>
<status status="PASS" starttime="20240910 18:10:06.386" endtime="20240910 18:10:06.475"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DECAY_RPC_SCHEDULER_METRICS_NAME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:10:06.475" endtime="20240910 18:10:06.476"/>
</kw>
<status status="PASS" starttime="20240910 18:10:06.386" endtime="20240910 18:10:06.476"/>
</test>
<test id="s1-t6" name="Run freon s3kg" line="80">
<kw name="Freon s3kg">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3kg -e ${S3_ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:06.483" level="INFO">Running command 'ozone freon s3kg -e http://s3g:9878 -t 10 -n 1000 -p s3bg  2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:36.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:36.111" level="INFO">${output} = 2024-09-10 18:10:08,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:10:08,268 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240910 18:10:06.481" endtime="20240910 18:10:36.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:36.112" level="INFO">2024-09-10 18:10:08,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:10:08,268 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2024-09-10 18:10:08,268 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2024-09-10 18:10:08,320 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg and number-of-tests 1000
2024-09-10 18:10:08,349 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-09-10 18:10:09,349 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-09-10 18:10:10,351 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-09-10 18:10:11,352 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1000)
2024-09-10 18:10:12,353 [Thread-5] INFO freon.ProgressBar: Progress: 2.30 % (23 out of 1000)
2024-09-10 18:10:13,353 [Thread-5] INFO freon.ProgressBar: Progress: 4.80 % (48 out of 1000)
2024-09-10 18:10:14,356 [Thread-5] INFO freon.ProgressBar: Progress: 7.30 % (73 out of 1000)
2024-09-10 18:10:15,357 [Thread-5] INFO freon.ProgressBar: Progress: 9.90 % (99 out of 1000)
2024-09-10 18:10:16,359 [Thread-5] INFO freon.ProgressBar: Progress: 12.60 % (126 out of 1000)
2024-09-10 18:10:17,360 [Thread-5] INFO freon.ProgressBar: Progress: 15.40 % (154 out of 1000)
2024-09-10 18:10:18,368 [Thread-5] INFO freon.ProgressBar: Progress: 19.10 % (191 out of 1000)
2024-09-10 18:10:19,375 [Thread-5] INFO freon.ProgressBar: Progress: 22.80 % (228 out of 1000)
2024-09-10 18:10:20,381 [Thread-5] INFO freon.ProgressBar: Progress: 26.50 % (265 out of 1000)
2024-09-10 18:10:21,384 [Thread-5] INFO freon.ProgressBar: Progress: 30.20 % (302 out of 1000)
2024-09-10 18:10:22,385 [Thread-5] INFO freon.ProgressBar: Progress: 34.10 % (341 out of 1000)
2024-09-10 18:10:23,386 [Thread-5] INFO freon.ProgressBar: Progress: 38.70 % (387 out of 1000)
2024-09-10 18:10:24,387 [Thread-5] INFO freon.ProgressBar: Progress: 43.40 % (434 out of 1000)
2024-09-10 18:10:25,388 [Thread-5] INFO freon.ProgressBar: Progress: 48.50 % (485 out of 1000)
2024-09-10 18:10:26,393 [Thread-5] INFO freon.ProgressBar: Progress: 52.60 % (526 out of 1000)
2024-09-10 18:10:27,394 [Thread-5] INFO freon.ProgressBar: Progress: 57.70 % (577 out of 1000)
2024-09-10 18:10:28,395 [Thread-5] INFO freon.ProgressBar: Progress: 62.50 % (625 out of 1000)
2024-09-10 18:10:29,395 [Thread-5] INFO freon.ProgressBar: Progress: 66.30 % (663 out of 1000)
2024-09-10 18:10:30,398 [Thread-5] INFO freon.ProgressBar: Progress: 71.90 % (719 out of 1000)
2024-09-10 18:10:31,399 [Thread-5] INFO freon.ProgressBar: Progress: 77.10 % (771 out of 1000)
2024-09-10 18:10:32,403 [Thread-5] INFO freon.ProgressBar: Progress: 81.60 % (816 out of 1000)
2024-09-10 18:10:33,404 [Thread-5] INFO freon.ProgressBar: Progress: 87.70 % (877 out of 1000)
2024-09-10 18:10:34,405 [Thread-5] INFO freon.ProgressBar: Progress: 93.40 % (934 out of 1000)
2024-09-10 18:10:35,406 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1000 out of 1000)
2024-09-10 18:10:36,065 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1000, min=67.12447, max=2682.466803, mean=251.87401103098534, stddev=230.5723533480857, median=214.587823, p75=281.408389, p95=439.818501, p98=544.850858, p99=634.998191, p999=2557.278835, mean_rate=36.90734936013116, m1=21.10732696041212, m5=14.341523361329521, m15=13.059346967761867, rate_unit=events/second, duration_unit=milliseconds
2024-09-10 18:10:36,066 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 28
2024-09-10 18:10:36,066 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2024-09-10 18:10:36,066 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1000</msg>
<status status="PASS" starttime="20240910 18:10:36.111" endtime="20240910 18:10:36.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:36.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:36.112" endtime="20240910 18:10:36.112"/>
</kw>
<status status="PASS" starttime="20240910 18:10:06.480" endtime="20240910 18:10:36.113"/>
</kw>
<msg timestamp="20240910 18:10:36.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:06.480" endtime="20240910 18:10:36.113"/>
</kw>
<msg timestamp="20240910 18:10:36.113" level="INFO">${result} = 2024-09-10 18:10:08,180 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2024-09-10 18:10:08,268 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20240910 18:10:06.479" endtime="20240910 18:10:36.113"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:10:36.113" endtime="20240910 18:10:36.113"/>
</kw>
<status status="PASS" starttime="20240910 18:10:06.477" endtime="20240910 18:10:36.113"/>
</kw>
<status status="PASS" starttime="20240910 18:10:06.477" endtime="20240910 18:10:36.113"/>
</test>
<test id="s1-t7" name="Test caller from metrics" line="83">
<kw name="Check metrics caller">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${OM_JMX_ENDPOINT} | sed -n '/${DECAY_RPC_SCHEDULER_METRICS_NAME}/,/}/p' | grep 'Caller('</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20240910 18:10:36.118" level="INFO">Running command 'curl --negotiate -u : -LSs http://om:9874/jmx | sed -n '/DecayRpcSchedulerMetrics2.ipc.9862/,/}/p' | grep 'Caller(' 2&gt;&amp;1'.</msg>
<msg timestamp="20240910 18:10:36.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20240910 18:10:36.205" level="INFO">${output} =     "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20240910 18:10:36.116" endtime="20240910 18:10:36.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:10:36.206" level="INFO">    "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20240910 18:10:36.206" endtime="20240910 18:10:36.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20240910 18:10:36.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240910 18:10:36.207" endtime="20240910 18:10:36.207"/>
</kw>
<status status="PASS" starttime="20240910 18:10:36.116" endtime="20240910 18:10:36.207"/>
</kw>
<msg timestamp="20240910 18:10:36.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:10:36.115" endtime="20240910 18:10:36.207"/>
</kw>
<msg timestamp="20240910 18:10:36.207" level="INFO">${result} =     "Caller(testuser/s3g@EXAMPLE.COM).Volume" : 4002,
    "Caller(testuser/s3g@EXAMPLE.COM).Priority" : 3,</msg>
<status status="PASS" starttime="20240910 18:10:36.115" endtime="20240910 18:10:36.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${TEST_USER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240910 18:10:36.207" endtime="20240910 18:10:36.208"/>
</kw>
<status status="PASS" starttime="20240910 18:10:36.114" endtime="20240910 18:10:36.208"/>
</kw>
<status status="PASS" starttime="20240910 18:10:36.114" endtime="20240910 18:10:36.208"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20240910 18:09:58.272" endtime="20240910 18:10:36.209"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" skip="0" id="s1" name="ozonesecure-fcq">ozonesecure-fcq</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
